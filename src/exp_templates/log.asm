GAS LISTING /tmp/cceISX6N.s 			page 1


   1              		.file	"compiler.cpp"
   2              		.intel_syntax noprefix
   3              		.text
   4              	.Ltext0:
   5              		.section	.text._ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES
   6              		.align 2
   7              		.p2align 4,,15
   8              		.weak	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Si
   9              		.type	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Si
  10              	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7SigmoidE4
  11              	.LFB2182:
  12              		.file 1 "compiler.h"
   1:compiler.h    **** /*
   2:compiler.h    ****  * compiler.h
   3:compiler.h    ****  *
   4:compiler.h    ****  *  Created on: Jul 20, 2014
   5:compiler.h    ****  *      Author: Adam Kosiorek
   6:compiler.h    ****  */
   7:compiler.h    **** 
   8:compiler.h    **** #ifndef COMPILER_H_
   9:compiler.h    **** #define COMPILER_H_
  10:compiler.h    **** 
  11:compiler.h    **** #include <cmath>
  12:compiler.h    **** 
  13:compiler.h    **** template<class Exp1, class Exp2, class Op>
  14:compiler.h    **** class BinaryExpr {
  15:compiler.h    **** 	Exp1 exp1_;
  16:compiler.h    **** 	Exp2 exp2_;
  17:compiler.h    **** 	Op op_;
  18:compiler.h    **** public:
  19:compiler.h    **** 	BinaryExpr(Exp1 exp1, Exp2 exp2) : exp1_(exp1), exp2_(exp2) {};
  20:compiler.h    **** 	double eval() const { return op_(exp1_.eval(), exp2_.eval()); };
  21:compiler.h    **** };
  22:compiler.h    **** 
  23:compiler.h    **** template<class Exp, class Op>
  24:compiler.h    **** class UnaryExpr {
  25:compiler.h    **** 	Exp exp_;
  26:compiler.h    **** 	Op op_;
  27:compiler.h    **** public:
  28:compiler.h    **** 	UnaryExpr(Exp exp) : exp_(exp) {};
  29:compiler.h    **** 	double eval() const { return op_(exp_.eval()); };
  13              		.loc 1 29 0
  14              		.cfi_startproc
  15              	.LVL0:
  16 0000 4883EC08 		sub	rsp, 8
  17              		.cfi_def_cfa_offset 16
  18              	.LBB505:
  19              	.LBB506:
  20              	.LBB507:
  21              	.LBB508:
  22              	.LBB509:
  23              	.LBB510:
  30:compiler.h    **** };
  31:compiler.h    **** 
  32:compiler.h    **** class Variable {
  33:compiler.h    **** 	double& v_;
  34:compiler.h    **** public:
GAS LISTING /tmp/cceISX6N.s 			page 2


  35:compiler.h    **** 	Variable(double& v) : v_(v) {};
  36:compiler.h    **** 	double eval() const { return v_; };
  24              		.loc 1 36 0
  25 0004 488B07   		mov	rax, QWORD PTR [rdi]
  26              	.LBE510:
  27              	.LBE509:
  28              	.LBB511:
  29              	.LBB512:
  37:compiler.h    **** };
  38:compiler.h    **** 
  39:compiler.h    **** class Constant {
  40:compiler.h    **** 	double c_;
  41:compiler.h    **** public:
  42:compiler.h    **** 	Constant(const double c) : c_(c) {};
  43:compiler.h    **** 	double eval() const { return c_; };
  44:compiler.h    **** };
  45:compiler.h    **** 
  46:compiler.h    **** struct Sum {
  47:compiler.h    **** 	double operator() (double a, double b) const {
  48:compiler.h    **** 		return a + b;
  49:compiler.h    **** 	}
  50:compiler.h    **** };
  51:compiler.h    **** 
  52:compiler.h    **** struct Difference {
  53:compiler.h    **** 	double operator() (double a, double b) const {
  54:compiler.h    **** 		return a - b;
  55:compiler.h    **** 	}
  56:compiler.h    **** };
  57:compiler.h    **** 
  58:compiler.h    **** struct Product {
  59:compiler.h    **** 	double operator() (double a, double b) const {
  60:compiler.h    **** 		return a * b;
  30              		.loc 1 60 0
  31 0007 F20F1047 		movsd	xmm0, QWORD PTR [rdi+8]
  31      08
  32              	.LBE512:
  33              	.LBE511:
  34              	.LBE508:
  35              	.LBE507:
  36              	.LBE506:
  37              	.LBE505:
  38              	.LBB524:
  39              	.LBB525:
  61:compiler.h    **** 	}
  62:compiler.h    **** };
  63:compiler.h    **** 
  64:compiler.h    **** struct Quotient {
  65:compiler.h    **** 	double operator() (double a, double b) const {
  66:compiler.h    **** 		return a / b;
  67:compiler.h    **** 	}
  68:compiler.h    **** };
  69:compiler.h    **** 
  70:compiler.h    **** struct Sigmoid {
  71:compiler.h    **** 	double operator() (double x) const {
  72:compiler.h    **** 		return 1 / (1 + exp(-x));
  40              		.loc 1 72 0
  41 000c F20F100D 		movsd	xmm1, QWORD PTR .LC0[rip]
GAS LISTING /tmp/cceISX6N.s 			page 3


  41      00000000 
  42              	.LBE525:
  43              	.LBE524:
  44              	.LBB528:
  45              	.LBB521:
  46              	.LBB518:
  47              	.LBB515:
  48              	.LBB514:
  49              	.LBB513:
  60:compiler.h    **** 	}
  50              		.loc 1 60 0
  51 0014 F20F5900 		mulsd	xmm0, QWORD PTR [rax]
  52              	.LBE513:
  53              	.LBE514:
  54              	.LBE515:
  55              	.LBB516:
  56              	.LBB517:
  48:compiler.h    **** 	}
  57              		.loc 1 48 0
  58 0018 F20F5847 		addsd	xmm0, QWORD PTR [rdi+24]
  58      18
  59              	.LBE517:
  60              	.LBE516:
  61              	.LBE518:
  62              	.LBB519:
  63              	.LBB520:
  60:compiler.h    **** 	}
  64              		.loc 1 60 0
  65 001d F20F5947 		mulsd	xmm0, QWORD PTR [rdi+40]
  65      28
  66              	.LBE520:
  67              	.LBE519:
  68              	.LBE521:
  69              	.LBB522:
  70              	.LBB523:
  48:compiler.h    **** 	}
  71              		.loc 1 48 0
  72 0022 F20F5847 		addsd	xmm0, QWORD PTR [rdi+56]
  72      38
  73              	.LBE523:
  74              	.LBE522:
  75              	.LBE528:
  76              	.LBB529:
  77              	.LBB526:
  78              		.loc 1 72 0
  79 0027 660F57C1 		xorpd	xmm0, xmm1
  80 002b E8000000 		call	exp
  80      00
  81              	.LVL1:
  82 0030 F20F100D 		movsd	xmm1, QWORD PTR .LC1[rip]
  82      00000000 
  83              	.LBE526:
  84              	.LBE529:
  29:compiler.h    **** };
  85              		.loc 1 29 0
  86 0038 4883C408 		add	rsp, 8
  87              		.cfi_def_cfa_offset 8
GAS LISTING /tmp/cceISX6N.s 			page 4


  88              	.LBB530:
  89              	.LBB527:
  90              		.loc 1 72 0
  91 003c F20F58C1 		addsd	xmm0, xmm1
  92 0040 F20F5EC8 		divsd	xmm1, xmm0
  93 0044 660F28C1 		movapd	xmm0, xmm1
  94              	.LBE527:
  95              	.LBE530:
  29:compiler.h    **** };
  96              		.loc 1 29 0
  97 0048 C3       		ret
  98              		.cfi_endproc
  99              	.LFE2182:
 100              		.size	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Si
 101              		.section	.text.unlikely,"ax",@progbits
 102              		.type	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.part.5, @function
 103              	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.part.5:
 104              	.LFB2369:
 105              		.file 2 "/usr/include/c++/4.8/ostream"
   1:/usr/include/c++/4.8/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/4.8/ostream **** 
   3:/usr/include/c++/4.8/ostream **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/ostream **** //
   5:/usr/include/c++/4.8/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/ostream **** // any later version.
  10:/usr/include/c++/4.8/ostream **** 
  11:/usr/include/c++/4.8/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/ostream **** 
  16:/usr/include/c++/4.8/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/ostream **** 
  20:/usr/include/c++/4.8/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/ostream **** 
  25:/usr/include/c++/4.8/ostream **** /** @file include/ostream
  26:/usr/include/c++/4.8/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/4.8/ostream ****  */
  28:/usr/include/c++/4.8/ostream **** 
  29:/usr/include/c++/4.8/ostream **** //
  30:/usr/include/c++/4.8/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/4.8/ostream **** //
  32:/usr/include/c++/4.8/ostream **** 
  33:/usr/include/c++/4.8/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/4.8/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/4.8/ostream **** 
  36:/usr/include/c++/4.8/ostream **** #pragma GCC system_header
  37:/usr/include/c++/4.8/ostream **** 
  38:/usr/include/c++/4.8/ostream **** #include <ios>
GAS LISTING /tmp/cceISX6N.s 			page 5


  39:/usr/include/c++/4.8/ostream **** #include <bits/ostream_insert.h>
  40:/usr/include/c++/4.8/ostream **** 
  41:/usr/include/c++/4.8/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/4.8/ostream **** {
  43:/usr/include/c++/4.8/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/4.8/ostream **** 
  45:/usr/include/c++/4.8/ostream ****   /**
  46:/usr/include/c++/4.8/ostream ****    *  @brief  Template class basic_ostream.
  47:/usr/include/c++/4.8/ostream ****    *  @ingroup io
  48:/usr/include/c++/4.8/ostream ****    *
  49:/usr/include/c++/4.8/ostream ****    *  @tparam _CharT  Type of character stream.
  50:/usr/include/c++/4.8/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  51:/usr/include/c++/4.8/ostream ****    *                   char_traits<_CharT>.
  52:/usr/include/c++/4.8/ostream ****    *
  53:/usr/include/c++/4.8/ostream ****    *  This is the base class for all output streams.  It provides text
  54:/usr/include/c++/4.8/ostream ****    *  formatting of all builtin types, and communicates with any class
  55:/usr/include/c++/4.8/ostream ****    *  derived from basic_streambuf to do the actual output.
  56:/usr/include/c++/4.8/ostream ****   */
  57:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
  58:/usr/include/c++/4.8/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  59:/usr/include/c++/4.8/ostream ****     {
  60:/usr/include/c++/4.8/ostream ****     public:
  61:/usr/include/c++/4.8/ostream ****       // Types (inherited from basic_ios):
  62:/usr/include/c++/4.8/ostream ****       typedef _CharT			 		char_type;
  63:/usr/include/c++/4.8/ostream ****       typedef typename _Traits::int_type 		int_type;
  64:/usr/include/c++/4.8/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  65:/usr/include/c++/4.8/ostream ****       typedef typename _Traits::off_type 		off_type;
  66:/usr/include/c++/4.8/ostream ****       typedef _Traits			 		traits_type;
  67:/usr/include/c++/4.8/ostream **** 
  68:/usr/include/c++/4.8/ostream ****       // Non-standard Types:
  69:/usr/include/c++/4.8/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  70:/usr/include/c++/4.8/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  71:/usr/include/c++/4.8/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  72:/usr/include/c++/4.8/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  73:/usr/include/c++/4.8/ostream ****       							__num_put_type;
  74:/usr/include/c++/4.8/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  75:/usr/include/c++/4.8/ostream **** 
  76:/usr/include/c++/4.8/ostream ****       /**
  77:/usr/include/c++/4.8/ostream ****        *  @brief  Base constructor.
  78:/usr/include/c++/4.8/ostream ****        *
  79:/usr/include/c++/4.8/ostream ****        *  This ctor is almost never called by the user directly, rather from
  80:/usr/include/c++/4.8/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  81:/usr/include/c++/4.8/ostream ****        *  their own stream buffer.
  82:/usr/include/c++/4.8/ostream ****       */
  83:/usr/include/c++/4.8/ostream ****       explicit
  84:/usr/include/c++/4.8/ostream ****       basic_ostream(__streambuf_type* __sb)
  85:/usr/include/c++/4.8/ostream ****       { this->init(__sb); }
  86:/usr/include/c++/4.8/ostream **** 
  87:/usr/include/c++/4.8/ostream ****       /**
  88:/usr/include/c++/4.8/ostream ****        *  @brief  Base destructor.
  89:/usr/include/c++/4.8/ostream ****        *
  90:/usr/include/c++/4.8/ostream ****        *  This does very little apart from providing a virtual base dtor.
  91:/usr/include/c++/4.8/ostream ****       */
  92:/usr/include/c++/4.8/ostream ****       virtual
  93:/usr/include/c++/4.8/ostream ****       ~basic_ostream() { }
  94:/usr/include/c++/4.8/ostream **** 
  95:/usr/include/c++/4.8/ostream ****       /// Safe prefix/suffix operations.
GAS LISTING /tmp/cceISX6N.s 			page 6


  96:/usr/include/c++/4.8/ostream ****       class sentry;
  97:/usr/include/c++/4.8/ostream ****       friend class sentry;
  98:/usr/include/c++/4.8/ostream **** 
  99:/usr/include/c++/4.8/ostream ****       //@{
 100:/usr/include/c++/4.8/ostream ****       /**
 101:/usr/include/c++/4.8/ostream ****        *  @brief  Interface for manipulators.
 102:/usr/include/c++/4.8/ostream ****        *
 103:/usr/include/c++/4.8/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 104:/usr/include/c++/4.8/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 105:/usr/include/c++/4.8/ostream ****        *  information, see the iomanip header.
 106:/usr/include/c++/4.8/ostream ****       */
 107:/usr/include/c++/4.8/ostream ****       __ostream_type&
 108:/usr/include/c++/4.8/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 109:/usr/include/c++/4.8/ostream ****       {
 110:/usr/include/c++/4.8/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 111:/usr/include/c++/4.8/ostream **** 	// DR 60. What is a formatted input function?
 112:/usr/include/c++/4.8/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 113:/usr/include/c++/4.8/ostream **** 	return __pf(*this);
 114:/usr/include/c++/4.8/ostream ****       }
 115:/usr/include/c++/4.8/ostream **** 
 116:/usr/include/c++/4.8/ostream ****       __ostream_type&
 117:/usr/include/c++/4.8/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 118:/usr/include/c++/4.8/ostream ****       {
 119:/usr/include/c++/4.8/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 120:/usr/include/c++/4.8/ostream **** 	// DR 60. What is a formatted input function?
 121:/usr/include/c++/4.8/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 122:/usr/include/c++/4.8/ostream **** 	__pf(*this);
 123:/usr/include/c++/4.8/ostream **** 	return *this;
 124:/usr/include/c++/4.8/ostream ****       }
 125:/usr/include/c++/4.8/ostream **** 
 126:/usr/include/c++/4.8/ostream ****       __ostream_type&
 127:/usr/include/c++/4.8/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 128:/usr/include/c++/4.8/ostream ****       {
 129:/usr/include/c++/4.8/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 130:/usr/include/c++/4.8/ostream **** 	// DR 60. What is a formatted input function?
 131:/usr/include/c++/4.8/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 132:/usr/include/c++/4.8/ostream **** 	__pf(*this);
 133:/usr/include/c++/4.8/ostream **** 	return *this;
 134:/usr/include/c++/4.8/ostream ****       }
 135:/usr/include/c++/4.8/ostream ****       //@}
 136:/usr/include/c++/4.8/ostream **** 
 137:/usr/include/c++/4.8/ostream ****       //@{
 138:/usr/include/c++/4.8/ostream ****       /**
 139:/usr/include/c++/4.8/ostream ****        *  @name Inserters
 140:/usr/include/c++/4.8/ostream ****        *
 141:/usr/include/c++/4.8/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 142:/usr/include/c++/4.8/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 143:/usr/include/c++/4.8/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 144:/usr/include/c++/4.8/ostream ****        *  This can have several effects, concluding with the setting of a
 145:/usr/include/c++/4.8/ostream ****        *  status flag; see the sentry documentation for more.
 146:/usr/include/c++/4.8/ostream ****        *
 147:/usr/include/c++/4.8/ostream ****        *  If the sentry status is good, the function tries to generate
 148:/usr/include/c++/4.8/ostream ****        *  whatever data is appropriate for the type of the argument.
 149:/usr/include/c++/4.8/ostream ****        *
 150:/usr/include/c++/4.8/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 151:/usr/include/c++/4.8/ostream ****        *  will be turned on in the stream's error state without causing an
 152:/usr/include/c++/4.8/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
GAS LISTING /tmp/cceISX6N.s 			page 7


 153:/usr/include/c++/4.8/ostream ****        *  be rethrown.
 154:/usr/include/c++/4.8/ostream ****       */
 155:/usr/include/c++/4.8/ostream **** 
 156:/usr/include/c++/4.8/ostream ****       //@{
 157:/usr/include/c++/4.8/ostream ****       /**
 158:/usr/include/c++/4.8/ostream ****        *  @brief Integer arithmetic inserters
 159:/usr/include/c++/4.8/ostream ****        *  @param  __n A variable of builtin integral type.
 160:/usr/include/c++/4.8/ostream ****        *  @return  @c *this if successful
 161:/usr/include/c++/4.8/ostream ****        *
 162:/usr/include/c++/4.8/ostream ****        *  These functions use the stream's current locale (specifically, the
 163:/usr/include/c++/4.8/ostream ****        *  @c num_get facet) to perform numeric formatting.
 164:/usr/include/c++/4.8/ostream ****       */
 165:/usr/include/c++/4.8/ostream ****       __ostream_type&
 166:/usr/include/c++/4.8/ostream ****       operator<<(long __n)
 167:/usr/include/c++/4.8/ostream ****       { return _M_insert(__n); }
 168:/usr/include/c++/4.8/ostream **** 
 169:/usr/include/c++/4.8/ostream ****       __ostream_type&
 170:/usr/include/c++/4.8/ostream ****       operator<<(unsigned long __n)
 171:/usr/include/c++/4.8/ostream ****       { return _M_insert(__n); }
 172:/usr/include/c++/4.8/ostream **** 
 173:/usr/include/c++/4.8/ostream ****       __ostream_type&
 174:/usr/include/c++/4.8/ostream ****       operator<<(bool __n)
 175:/usr/include/c++/4.8/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/4.8/ostream **** 
 177:/usr/include/c++/4.8/ostream ****       __ostream_type&
 178:/usr/include/c++/4.8/ostream ****       operator<<(short __n);
 179:/usr/include/c++/4.8/ostream **** 
 180:/usr/include/c++/4.8/ostream ****       __ostream_type&
 181:/usr/include/c++/4.8/ostream ****       operator<<(unsigned short __n)
 182:/usr/include/c++/4.8/ostream ****       {
 183:/usr/include/c++/4.8/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 184:/usr/include/c++/4.8/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 185:/usr/include/c++/4.8/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 186:/usr/include/c++/4.8/ostream ****       }
 187:/usr/include/c++/4.8/ostream **** 
 188:/usr/include/c++/4.8/ostream ****       __ostream_type&
 189:/usr/include/c++/4.8/ostream ****       operator<<(int __n);
 190:/usr/include/c++/4.8/ostream **** 
 191:/usr/include/c++/4.8/ostream ****       __ostream_type&
 192:/usr/include/c++/4.8/ostream ****       operator<<(unsigned int __n)
 193:/usr/include/c++/4.8/ostream ****       {
 194:/usr/include/c++/4.8/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 195:/usr/include/c++/4.8/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 196:/usr/include/c++/4.8/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 197:/usr/include/c++/4.8/ostream ****       }
 198:/usr/include/c++/4.8/ostream **** 
 199:/usr/include/c++/4.8/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 200:/usr/include/c++/4.8/ostream ****       __ostream_type&
 201:/usr/include/c++/4.8/ostream ****       operator<<(long long __n)
 202:/usr/include/c++/4.8/ostream ****       { return _M_insert(__n); }
 203:/usr/include/c++/4.8/ostream **** 
 204:/usr/include/c++/4.8/ostream ****       __ostream_type&
 205:/usr/include/c++/4.8/ostream ****       operator<<(unsigned long long __n)
 206:/usr/include/c++/4.8/ostream ****       { return _M_insert(__n); }
 207:/usr/include/c++/4.8/ostream **** #endif
 208:/usr/include/c++/4.8/ostream ****       //@}
 209:/usr/include/c++/4.8/ostream **** 
GAS LISTING /tmp/cceISX6N.s 			page 8


 210:/usr/include/c++/4.8/ostream ****       //@{
 211:/usr/include/c++/4.8/ostream ****       /**
 212:/usr/include/c++/4.8/ostream ****        *  @brief  Floating point arithmetic inserters
 213:/usr/include/c++/4.8/ostream ****        *  @param  __f A variable of builtin floating point type.
 214:/usr/include/c++/4.8/ostream ****        *  @return  @c *this if successful
 215:/usr/include/c++/4.8/ostream ****        *
 216:/usr/include/c++/4.8/ostream ****        *  These functions use the stream's current locale (specifically, the
 217:/usr/include/c++/4.8/ostream ****        *  @c num_get facet) to perform numeric formatting.
 218:/usr/include/c++/4.8/ostream ****       */
 219:/usr/include/c++/4.8/ostream ****       __ostream_type&
 220:/usr/include/c++/4.8/ostream ****       operator<<(double __f)
 221:/usr/include/c++/4.8/ostream ****       { return _M_insert(__f); }
 222:/usr/include/c++/4.8/ostream **** 
 223:/usr/include/c++/4.8/ostream ****       __ostream_type&
 224:/usr/include/c++/4.8/ostream ****       operator<<(float __f)
 225:/usr/include/c++/4.8/ostream ****       {
 226:/usr/include/c++/4.8/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 227:/usr/include/c++/4.8/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 228:/usr/include/c++/4.8/ostream **** 	return _M_insert(static_cast<double>(__f));
 229:/usr/include/c++/4.8/ostream ****       }
 230:/usr/include/c++/4.8/ostream **** 
 231:/usr/include/c++/4.8/ostream ****       __ostream_type&
 232:/usr/include/c++/4.8/ostream ****       operator<<(long double __f)
 233:/usr/include/c++/4.8/ostream ****       { return _M_insert(__f); }
 234:/usr/include/c++/4.8/ostream ****       //@}
 235:/usr/include/c++/4.8/ostream **** 
 236:/usr/include/c++/4.8/ostream ****       /**
 237:/usr/include/c++/4.8/ostream ****        *  @brief  Pointer arithmetic inserters
 238:/usr/include/c++/4.8/ostream ****        *  @param  __p A variable of pointer type.
 239:/usr/include/c++/4.8/ostream ****        *  @return  @c *this if successful
 240:/usr/include/c++/4.8/ostream ****        *
 241:/usr/include/c++/4.8/ostream ****        *  These functions use the stream's current locale (specifically, the
 242:/usr/include/c++/4.8/ostream ****        *  @c num_get facet) to perform numeric formatting.
 243:/usr/include/c++/4.8/ostream ****       */
 244:/usr/include/c++/4.8/ostream ****       __ostream_type&
 245:/usr/include/c++/4.8/ostream ****       operator<<(const void* __p)
 246:/usr/include/c++/4.8/ostream ****       { return _M_insert(__p); }
 247:/usr/include/c++/4.8/ostream **** 
 248:/usr/include/c++/4.8/ostream ****       /**
 249:/usr/include/c++/4.8/ostream ****        *  @brief  Extracting from another streambuf.
 250:/usr/include/c++/4.8/ostream ****        *  @param  __sb  A pointer to a streambuf
 251:/usr/include/c++/4.8/ostream ****        *
 252:/usr/include/c++/4.8/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 253:/usr/include/c++/4.8/ostream ****        *  in that it also constructs a sentry object and has the same error
 254:/usr/include/c++/4.8/ostream ****        *  handling behavior.
 255:/usr/include/c++/4.8/ostream ****        *
 256:/usr/include/c++/4.8/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 257:/usr/include/c++/4.8/ostream ****        *
 258:/usr/include/c++/4.8/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 259:/usr/include/c++/4.8/ostream ****        *  until one of the following occurs:
 260:/usr/include/c++/4.8/ostream ****        *
 261:/usr/include/c++/4.8/ostream ****        *  - the input stream reaches end-of-file,
 262:/usr/include/c++/4.8/ostream ****        *  - insertion into the output sequence fails (in this case, the
 263:/usr/include/c++/4.8/ostream ****        *    character that would have been inserted is not extracted), or
 264:/usr/include/c++/4.8/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 265:/usr/include/c++/4.8/ostream ****        *    sets failbit in the error state
 266:/usr/include/c++/4.8/ostream ****        *
GAS LISTING /tmp/cceISX6N.s 			page 9


 267:/usr/include/c++/4.8/ostream ****        *  If the function inserts no characters, failbit is set.
 268:/usr/include/c++/4.8/ostream ****       */
 269:/usr/include/c++/4.8/ostream ****       __ostream_type&
 270:/usr/include/c++/4.8/ostream ****       operator<<(__streambuf_type* __sb);
 271:/usr/include/c++/4.8/ostream ****       //@}
 272:/usr/include/c++/4.8/ostream **** 
 273:/usr/include/c++/4.8/ostream ****       //@{
 274:/usr/include/c++/4.8/ostream ****       /**
 275:/usr/include/c++/4.8/ostream ****        *  @name Unformatted Output Functions
 276:/usr/include/c++/4.8/ostream ****        *
 277:/usr/include/c++/4.8/ostream ****        *  All the unformatted output functions have some common behavior.
 278:/usr/include/c++/4.8/ostream ****        *  Each starts by constructing a temporary object of type
 279:/usr/include/c++/4.8/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 280:/usr/include/c++/4.8/ostream ****        *  with the setting of a status flag; see the sentry documentation
 281:/usr/include/c++/4.8/ostream ****        *  for more.
 282:/usr/include/c++/4.8/ostream ****        *
 283:/usr/include/c++/4.8/ostream ****        *  If the sentry status is good, the function tries to generate
 284:/usr/include/c++/4.8/ostream ****        *  whatever data is appropriate for the type of the argument.
 285:/usr/include/c++/4.8/ostream ****        *
 286:/usr/include/c++/4.8/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 287:/usr/include/c++/4.8/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 288:/usr/include/c++/4.8/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 289:/usr/include/c++/4.8/ostream ****        *  without completing its actions.
 290:/usr/include/c++/4.8/ostream ****       */
 291:/usr/include/c++/4.8/ostream **** 
 292:/usr/include/c++/4.8/ostream ****       /**
 293:/usr/include/c++/4.8/ostream ****        *  @brief  Simple insertion.
 294:/usr/include/c++/4.8/ostream ****        *  @param  __c  The character to insert.
 295:/usr/include/c++/4.8/ostream ****        *  @return  *this
 296:/usr/include/c++/4.8/ostream ****        *
 297:/usr/include/c++/4.8/ostream ****        *  Tries to insert @p __c.
 298:/usr/include/c++/4.8/ostream ****        *
 299:/usr/include/c++/4.8/ostream ****        *  @note  This function is not overloaded on signed char and
 300:/usr/include/c++/4.8/ostream ****        *         unsigned char.
 301:/usr/include/c++/4.8/ostream ****       */
 302:/usr/include/c++/4.8/ostream ****       __ostream_type&
 303:/usr/include/c++/4.8/ostream ****       put(char_type __c);
 304:/usr/include/c++/4.8/ostream **** 
 305:/usr/include/c++/4.8/ostream ****       /**
 306:/usr/include/c++/4.8/ostream ****        *  @brief  Core write functionality, without sentry.
 307:/usr/include/c++/4.8/ostream ****        *  @param  __s  The array to insert.
 308:/usr/include/c++/4.8/ostream ****        *  @param  __n  Maximum number of characters to insert.
 309:/usr/include/c++/4.8/ostream ****       */
 310:/usr/include/c++/4.8/ostream ****       void
 311:/usr/include/c++/4.8/ostream ****       _M_write(const char_type* __s, streamsize __n)
 312:/usr/include/c++/4.8/ostream ****       {
 313:/usr/include/c++/4.8/ostream **** 	const streamsize __put = this->rdbuf()->sputn(__s, __n);
 314:/usr/include/c++/4.8/ostream **** 	if (__put != __n)
 315:/usr/include/c++/4.8/ostream **** 	  this->setstate(ios_base::badbit);
 316:/usr/include/c++/4.8/ostream ****       }
 317:/usr/include/c++/4.8/ostream **** 
 318:/usr/include/c++/4.8/ostream ****       /**
 319:/usr/include/c++/4.8/ostream ****        *  @brief  Character string insertion.
 320:/usr/include/c++/4.8/ostream ****        *  @param  __s  The array to insert.
 321:/usr/include/c++/4.8/ostream ****        *  @param  __n  Maximum number of characters to insert.
 322:/usr/include/c++/4.8/ostream ****        *  @return  *this
 323:/usr/include/c++/4.8/ostream ****        *
GAS LISTING /tmp/cceISX6N.s 			page 10


 324:/usr/include/c++/4.8/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
 325:/usr/include/c++/4.8/ostream ****        *  one of the following happens:
 326:/usr/include/c++/4.8/ostream ****        *
 327:/usr/include/c++/4.8/ostream ****        *  - @p __n characters are inserted
 328:/usr/include/c++/4.8/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 329:/usr/include/c++/4.8/ostream ****        *    will be set in the stream's error state)
 330:/usr/include/c++/4.8/ostream ****        *
 331:/usr/include/c++/4.8/ostream ****        *  @note  This function is not overloaded on signed char and
 332:/usr/include/c++/4.8/ostream ****        *         unsigned char.
 333:/usr/include/c++/4.8/ostream ****       */
 334:/usr/include/c++/4.8/ostream ****       __ostream_type&
 335:/usr/include/c++/4.8/ostream ****       write(const char_type* __s, streamsize __n);
 336:/usr/include/c++/4.8/ostream ****       //@}
 337:/usr/include/c++/4.8/ostream **** 
 338:/usr/include/c++/4.8/ostream ****       /**
 339:/usr/include/c++/4.8/ostream ****        *  @brief  Synchronizing the stream buffer.
 340:/usr/include/c++/4.8/ostream ****        *  @return  *this
 341:/usr/include/c++/4.8/ostream ****        *
 342:/usr/include/c++/4.8/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 343:/usr/include/c++/4.8/ostream ****        *
 344:/usr/include/c++/4.8/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 345:/usr/include/c++/4.8/ostream ****        *  sets badbit.
 346:/usr/include/c++/4.8/ostream ****       */
 347:/usr/include/c++/4.8/ostream ****       __ostream_type&
 348:/usr/include/c++/4.8/ostream ****       flush();
 349:/usr/include/c++/4.8/ostream **** 
 350:/usr/include/c++/4.8/ostream ****       /**
 351:/usr/include/c++/4.8/ostream ****        *  @brief  Getting the current write position.
 352:/usr/include/c++/4.8/ostream ****        *  @return  A file position object.
 353:/usr/include/c++/4.8/ostream ****        *
 354:/usr/include/c++/4.8/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 355:/usr/include/c++/4.8/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 356:/usr/include/c++/4.8/ostream ****       */
 357:/usr/include/c++/4.8/ostream ****       pos_type
 358:/usr/include/c++/4.8/ostream ****       tellp();
 359:/usr/include/c++/4.8/ostream **** 
 360:/usr/include/c++/4.8/ostream ****       /**
 361:/usr/include/c++/4.8/ostream ****        *  @brief  Changing the current write position.
 362:/usr/include/c++/4.8/ostream ****        *  @param  __pos  A file position object.
 363:/usr/include/c++/4.8/ostream ****        *  @return  *this
 364:/usr/include/c++/4.8/ostream ****        *
 365:/usr/include/c++/4.8/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 366:/usr/include/c++/4.8/ostream ****        *  that function fails, sets failbit.
 367:/usr/include/c++/4.8/ostream ****       */
 368:/usr/include/c++/4.8/ostream ****       __ostream_type&
 369:/usr/include/c++/4.8/ostream ****       seekp(pos_type);
 370:/usr/include/c++/4.8/ostream **** 
 371:/usr/include/c++/4.8/ostream ****       /**
 372:/usr/include/c++/4.8/ostream ****        *  @brief  Changing the current write position.
 373:/usr/include/c++/4.8/ostream ****        *  @param  __off  A file offset object.
 374:/usr/include/c++/4.8/ostream ****        *  @param  __dir  The direction in which to seek.
 375:/usr/include/c++/4.8/ostream ****        *  @return  *this
 376:/usr/include/c++/4.8/ostream ****        *
 377:/usr/include/c++/4.8/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 378:/usr/include/c++/4.8/ostream ****        *  If that function fails, sets failbit.
 379:/usr/include/c++/4.8/ostream ****       */
 380:/usr/include/c++/4.8/ostream ****        __ostream_type&
GAS LISTING /tmp/cceISX6N.s 			page 11


 381:/usr/include/c++/4.8/ostream ****       seekp(off_type, ios_base::seekdir);
 382:/usr/include/c++/4.8/ostream **** 
 383:/usr/include/c++/4.8/ostream ****     protected:
 384:/usr/include/c++/4.8/ostream ****       basic_ostream()
 385:/usr/include/c++/4.8/ostream ****       { this->init(0); }
 386:/usr/include/c++/4.8/ostream **** 
 387:/usr/include/c++/4.8/ostream ****       template<typename _ValueT>
 388:/usr/include/c++/4.8/ostream **** 	__ostream_type&
 389:/usr/include/c++/4.8/ostream **** 	_M_insert(_ValueT __v);
 390:/usr/include/c++/4.8/ostream ****     };
 391:/usr/include/c++/4.8/ostream **** 
 392:/usr/include/c++/4.8/ostream ****   /**
 393:/usr/include/c++/4.8/ostream ****    *  @brief  Performs setup work for output streams.
 394:/usr/include/c++/4.8/ostream ****    *
 395:/usr/include/c++/4.8/ostream ****    *  Objects of this class are created before all of the standard
 396:/usr/include/c++/4.8/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 397:/usr/include/c++/4.8/ostream ****    *  suffix operations</em>.
 398:/usr/include/c++/4.8/ostream ****   */
 399:/usr/include/c++/4.8/ostream ****   template <typename _CharT, typename _Traits>
 400:/usr/include/c++/4.8/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 401:/usr/include/c++/4.8/ostream ****     {
 402:/usr/include/c++/4.8/ostream ****       // Data Members.
 403:/usr/include/c++/4.8/ostream ****       bool 				_M_ok;
 404:/usr/include/c++/4.8/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 405:/usr/include/c++/4.8/ostream **** 
 406:/usr/include/c++/4.8/ostream ****     public:
 407:/usr/include/c++/4.8/ostream ****       /**
 408:/usr/include/c++/4.8/ostream ****        *  @brief  The constructor performs preparatory work.
 409:/usr/include/c++/4.8/ostream ****        *  @param  __os  The output stream to guard.
 410:/usr/include/c++/4.8/ostream ****        *
 411:/usr/include/c++/4.8/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 412:/usr/include/c++/4.8/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 413:/usr/include/c++/4.8/ostream ****        *  is called to synchronize the output sequences.
 414:/usr/include/c++/4.8/ostream ****        *
 415:/usr/include/c++/4.8/ostream ****        *  If the stream state is still good, then the sentry state becomes
 416:/usr/include/c++/4.8/ostream ****        *  true (@a okay).
 417:/usr/include/c++/4.8/ostream ****       */
 418:/usr/include/c++/4.8/ostream ****       explicit
 419:/usr/include/c++/4.8/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 420:/usr/include/c++/4.8/ostream **** 
 421:/usr/include/c++/4.8/ostream ****       /**
 422:/usr/include/c++/4.8/ostream ****        *  @brief  Possibly flushes the stream.
 423:/usr/include/c++/4.8/ostream ****        *
 424:/usr/include/c++/4.8/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 425:/usr/include/c++/4.8/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 426:/usr/include/c++/4.8/ostream ****        *  @c flush() on the output stream.
 427:/usr/include/c++/4.8/ostream ****       */
 428:/usr/include/c++/4.8/ostream ****       ~sentry()
 429:/usr/include/c++/4.8/ostream ****       {
 430:/usr/include/c++/4.8/ostream **** 	// XXX MT
 431:/usr/include/c++/4.8/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 432:/usr/include/c++/4.8/ostream **** 	  {
 433:/usr/include/c++/4.8/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 434:/usr/include/c++/4.8/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 435:/usr/include/c++/4.8/ostream **** 	      _M_os.setstate(ios_base::badbit);
 436:/usr/include/c++/4.8/ostream **** 	  }
 437:/usr/include/c++/4.8/ostream ****       }
GAS LISTING /tmp/cceISX6N.s 			page 12


 438:/usr/include/c++/4.8/ostream **** 
 439:/usr/include/c++/4.8/ostream ****       /**
 440:/usr/include/c++/4.8/ostream ****        *  @brief  Quick status checking.
 441:/usr/include/c++/4.8/ostream ****        *  @return  The sentry state.
 442:/usr/include/c++/4.8/ostream ****        *
 443:/usr/include/c++/4.8/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 444:/usr/include/c++/4.8/ostream ****        *  return value is that of the sentry state (true == okay).
 445:/usr/include/c++/4.8/ostream ****       */
 446:/usr/include/c++/4.8/ostream **** #if __cplusplus >= 201103L
 447:/usr/include/c++/4.8/ostream ****       explicit
 448:/usr/include/c++/4.8/ostream **** #endif
 449:/usr/include/c++/4.8/ostream ****       operator bool() const
 450:/usr/include/c++/4.8/ostream ****       { return _M_ok; }
 451:/usr/include/c++/4.8/ostream ****     };
 452:/usr/include/c++/4.8/ostream **** 
 453:/usr/include/c++/4.8/ostream ****   //@{
 454:/usr/include/c++/4.8/ostream ****   /**
 455:/usr/include/c++/4.8/ostream ****    *  @brief  Character inserters
 456:/usr/include/c++/4.8/ostream ****    *  @param  __out  An output stream.
 457:/usr/include/c++/4.8/ostream ****    *  @param  __c  A character.
 458:/usr/include/c++/4.8/ostream ****    *  @return  out
 459:/usr/include/c++/4.8/ostream ****    *
 460:/usr/include/c++/4.8/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 461:/usr/include/c++/4.8/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 462:/usr/include/c++/4.8/ostream ****    *  status, this function inserts a single character and any required
 463:/usr/include/c++/4.8/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 464:/usr/include/c++/4.8/ostream ****    *  called.
 465:/usr/include/c++/4.8/ostream ****    *
 466:/usr/include/c++/4.8/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 467:/usr/include/c++/4.8/ostream ****    *  @c char, the character is widened before insertion.
 468:/usr/include/c++/4.8/ostream ****   */
 469:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 470:/usr/include/c++/4.8/ostream ****     inline basic_ostream<_CharT, _Traits>&
 471:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 472:/usr/include/c++/4.8/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 473:/usr/include/c++/4.8/ostream **** 
 474:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 475:/usr/include/c++/4.8/ostream ****     inline basic_ostream<_CharT, _Traits>&
 476:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 477:/usr/include/c++/4.8/ostream ****     { return (__out << __out.widen(__c)); }
 478:/usr/include/c++/4.8/ostream **** 
 479:/usr/include/c++/4.8/ostream ****   // Specialization
 480:/usr/include/c++/4.8/ostream ****   template <class _Traits>
 481:/usr/include/c++/4.8/ostream ****     inline basic_ostream<char, _Traits>&
 482:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 483:/usr/include/c++/4.8/ostream ****     { return __ostream_insert(__out, &__c, 1); }
 484:/usr/include/c++/4.8/ostream **** 
 485:/usr/include/c++/4.8/ostream ****   // Signed and unsigned
 486:/usr/include/c++/4.8/ostream ****   template<class _Traits>
 487:/usr/include/c++/4.8/ostream ****     inline basic_ostream<char, _Traits>&
 488:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 489:/usr/include/c++/4.8/ostream ****     { return (__out << static_cast<char>(__c)); }
 490:/usr/include/c++/4.8/ostream **** 
 491:/usr/include/c++/4.8/ostream ****   template<class _Traits>
 492:/usr/include/c++/4.8/ostream ****     inline basic_ostream<char, _Traits>&
 493:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 494:/usr/include/c++/4.8/ostream ****     { return (__out << static_cast<char>(__c)); }
GAS LISTING /tmp/cceISX6N.s 			page 13


 495:/usr/include/c++/4.8/ostream ****   //@}
 496:/usr/include/c++/4.8/ostream **** 
 497:/usr/include/c++/4.8/ostream ****   //@{
 498:/usr/include/c++/4.8/ostream ****   /**
 499:/usr/include/c++/4.8/ostream ****    *  @brief  String inserters
 500:/usr/include/c++/4.8/ostream ****    *  @param  __out  An output stream.
 501:/usr/include/c++/4.8/ostream ****    *  @param  __s  A character string.
 502:/usr/include/c++/4.8/ostream ****    *  @return  out
 503:/usr/include/c++/4.8/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 504:/usr/include/c++/4.8/ostream ****    *
 505:/usr/include/c++/4.8/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 506:/usr/include/c++/4.8/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 507:/usr/include/c++/4.8/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 508:/usr/include/c++/4.8/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 509:/usr/include/c++/4.8/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 510:/usr/include/c++/4.8/ostream ****   */
 511:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 512:/usr/include/c++/4.8/ostream ****     inline basic_ostream<_CharT, _Traits>&
 513:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 514:/usr/include/c++/4.8/ostream ****     {
 515:/usr/include/c++/4.8/ostream ****       if (!__s)
 516:/usr/include/c++/4.8/ostream **** 	__out.setstate(ios_base::badbit);
 517:/usr/include/c++/4.8/ostream ****       else
 518:/usr/include/c++/4.8/ostream **** 	__ostream_insert(__out, __s,
 519:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 520:/usr/include/c++/4.8/ostream ****       return __out;
 521:/usr/include/c++/4.8/ostream ****     }
 522:/usr/include/c++/4.8/ostream **** 
 523:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 524:/usr/include/c++/4.8/ostream ****     basic_ostream<_CharT, _Traits> &
 525:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 526:/usr/include/c++/4.8/ostream **** 
 527:/usr/include/c++/4.8/ostream ****   // Partial specializations
 528:/usr/include/c++/4.8/ostream ****   template<class _Traits>
 529:/usr/include/c++/4.8/ostream ****     inline basic_ostream<char, _Traits>&
 530:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 106              		.loc 2 530 0
 107              		.cfi_startproc
 108              	.LVL2:
 109 0000 50       		push	rax
 110              		.cfi_def_cfa_offset 16
 531:/usr/include/c++/4.8/ostream ****     {
 532:/usr/include/c++/4.8/ostream ****       if (!__s)
 533:/usr/include/c++/4.8/ostream **** 	__out.setstate(ios_base::badbit);
 111              		.loc 2 533 0
 112 0001 488B07   		mov	rax, QWORD PTR [rdi]
 113 0004 480378E8 		add	rdi, QWORD PTR [rax-24]
 114              	.LVL3:
 115              	.LBB531:
 116              	.LBB532:
 117              	.LBB533:
 118              	.LBB534:
 119              		.file 3 "/usr/include/c++/4.8/bits/ios_base.h"
   1:/usr/include/c++/4.8/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/4.8/bits/ios_base.h **** 
   3:/usr/include/c++/4.8/bits/ios_base.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/ios_base.h **** //
GAS LISTING /tmp/cceISX6N.s 			page 14


   5:/usr/include/c++/4.8/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/ios_base.h **** // any later version.
  10:/usr/include/c++/4.8/bits/ios_base.h **** 
  11:/usr/include/c++/4.8/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/ios_base.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/ios_base.h **** 
  16:/usr/include/c++/4.8/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/ios_base.h **** 
  20:/usr/include/c++/4.8/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/ios_base.h **** 
  25:/usr/include/c++/4.8/bits/ios_base.h **** /** @file bits/ios_base.h
  26:/usr/include/c++/4.8/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/4.8/bits/ios_base.h ****  */
  29:/usr/include/c++/4.8/bits/ios_base.h **** 
  30:/usr/include/c++/4.8/bits/ios_base.h **** //
  31:/usr/include/c++/4.8/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  32:/usr/include/c++/4.8/bits/ios_base.h **** //
  33:/usr/include/c++/4.8/bits/ios_base.h **** 
  34:/usr/include/c++/4.8/bits/ios_base.h **** #ifndef _IOS_BASE_H
  35:/usr/include/c++/4.8/bits/ios_base.h **** #define _IOS_BASE_H 1
  36:/usr/include/c++/4.8/bits/ios_base.h **** 
  37:/usr/include/c++/4.8/bits/ios_base.h **** #pragma GCC system_header
  38:/usr/include/c++/4.8/bits/ios_base.h **** 
  39:/usr/include/c++/4.8/bits/ios_base.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/4.8/bits/ios_base.h **** #include <bits/localefwd.h>
  41:/usr/include/c++/4.8/bits/ios_base.h **** #include <bits/locale_classes.h>
  42:/usr/include/c++/4.8/bits/ios_base.h **** 
  43:/usr/include/c++/4.8/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/include/c++/4.8/bits/ios_base.h **** {
  45:/usr/include/c++/4.8/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/include/c++/4.8/bits/ios_base.h **** 
  47:/usr/include/c++/4.8/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  48:/usr/include/c++/4.8/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  49:/usr/include/c++/4.8/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that
  50:/usr/include/c++/4.8/bits/ios_base.h ****   // expressions involving them are no longer compile-time constants.
  51:/usr/include/c++/4.8/bits/ios_base.h ****   enum _Ios_Fmtflags 
  52:/usr/include/c++/4.8/bits/ios_base.h ****     { 
  53:/usr/include/c++/4.8/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  54:/usr/include/c++/4.8/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  55:/usr/include/c++/4.8/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  56:/usr/include/c++/4.8/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  57:/usr/include/c++/4.8/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  58:/usr/include/c++/4.8/bits/ios_base.h ****       _S_left 		= 1L << 5,
  59:/usr/include/c++/4.8/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  60:/usr/include/c++/4.8/bits/ios_base.h ****       _S_right 		= 1L << 7,
  61:/usr/include/c++/4.8/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
GAS LISTING /tmp/cceISX6N.s 			page 15


  62:/usr/include/c++/4.8/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  63:/usr/include/c++/4.8/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  64:/usr/include/c++/4.8/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  65:/usr/include/c++/4.8/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  66:/usr/include/c++/4.8/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  67:/usr/include/c++/4.8/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  68:/usr/include/c++/4.8/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  69:/usr/include/c++/4.8/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
  70:/usr/include/c++/4.8/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  71:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16 
  72:/usr/include/c++/4.8/bits/ios_base.h ****     };
  73:/usr/include/c++/4.8/bits/ios_base.h **** 
  74:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  75:/usr/include/c++/4.8/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  76:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
  77:/usr/include/c++/4.8/bits/ios_base.h **** 
  78:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  79:/usr/include/c++/4.8/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  80:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
  81:/usr/include/c++/4.8/bits/ios_base.h **** 
  82:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  83:/usr/include/c++/4.8/bits/ios_base.h ****   operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b)
  84:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }
  85:/usr/include/c++/4.8/bits/ios_base.h **** 
  86:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Fmtflags
  87:/usr/include/c++/4.8/bits/ios_base.h ****   operator~(_Ios_Fmtflags __a)
  88:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Fmtflags(~static_cast<int>(__a)); }
  89:/usr/include/c++/4.8/bits/ios_base.h **** 
  90:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  91:/usr/include/c++/4.8/bits/ios_base.h ****   operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  92:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a | __b; }
  93:/usr/include/c++/4.8/bits/ios_base.h **** 
  94:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  95:/usr/include/c++/4.8/bits/ios_base.h ****   operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
  96:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a & __b; }
  97:/usr/include/c++/4.8/bits/ios_base.h **** 
  98:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Fmtflags&
  99:/usr/include/c++/4.8/bits/ios_base.h ****   operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b)
 100:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a ^ __b; }
 101:/usr/include/c++/4.8/bits/ios_base.h **** 
 102:/usr/include/c++/4.8/bits/ios_base.h **** 
 103:/usr/include/c++/4.8/bits/ios_base.h ****   enum _Ios_Openmode 
 104:/usr/include/c++/4.8/bits/ios_base.h ****     { 
 105:/usr/include/c++/4.8/bits/ios_base.h ****       _S_app 		= 1L << 0,
 106:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ate 		= 1L << 1,
 107:/usr/include/c++/4.8/bits/ios_base.h ****       _S_bin 		= 1L << 2,
 108:/usr/include/c++/4.8/bits/ios_base.h ****       _S_in 		= 1L << 3,
 109:/usr/include/c++/4.8/bits/ios_base.h ****       _S_out 		= 1L << 4,
 110:/usr/include/c++/4.8/bits/ios_base.h ****       _S_trunc 		= 1L << 5,
 111:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_openmode_end = 1L << 16 
 112:/usr/include/c++/4.8/bits/ios_base.h ****     };
 113:/usr/include/c++/4.8/bits/ios_base.h **** 
 114:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 115:/usr/include/c++/4.8/bits/ios_base.h ****   operator&(_Ios_Openmode __a, _Ios_Openmode __b)
 116:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }
 117:/usr/include/c++/4.8/bits/ios_base.h **** 
 118:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
GAS LISTING /tmp/cceISX6N.s 			page 16


 119:/usr/include/c++/4.8/bits/ios_base.h ****   operator|(_Ios_Openmode __a, _Ios_Openmode __b)
 120:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
 121:/usr/include/c++/4.8/bits/ios_base.h **** 
 122:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 123:/usr/include/c++/4.8/bits/ios_base.h ****   operator^(_Ios_Openmode __a, _Ios_Openmode __b)
 124:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) ^ static_cast<int>(__b)); }
 125:/usr/include/c++/4.8/bits/ios_base.h **** 
 126:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Openmode
 127:/usr/include/c++/4.8/bits/ios_base.h ****   operator~(_Ios_Openmode __a)
 128:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Openmode(~static_cast<int>(__a)); }
 129:/usr/include/c++/4.8/bits/ios_base.h **** 
 130:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Openmode&
 131:/usr/include/c++/4.8/bits/ios_base.h ****   operator|=(_Ios_Openmode& __a, _Ios_Openmode __b)
 132:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a | __b; }
 133:/usr/include/c++/4.8/bits/ios_base.h **** 
 134:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Openmode&
 135:/usr/include/c++/4.8/bits/ios_base.h ****   operator&=(_Ios_Openmode& __a, _Ios_Openmode __b)
 136:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a & __b; }
 137:/usr/include/c++/4.8/bits/ios_base.h **** 
 138:/usr/include/c++/4.8/bits/ios_base.h ****   inline const _Ios_Openmode&
 139:/usr/include/c++/4.8/bits/ios_base.h ****   operator^=(_Ios_Openmode& __a, _Ios_Openmode __b)
 140:/usr/include/c++/4.8/bits/ios_base.h ****   { return __a = __a ^ __b; }
 141:/usr/include/c++/4.8/bits/ios_base.h **** 
 142:/usr/include/c++/4.8/bits/ios_base.h **** 
 143:/usr/include/c++/4.8/bits/ios_base.h ****   enum _Ios_Iostate
 144:/usr/include/c++/4.8/bits/ios_base.h ****     { 
 145:/usr/include/c++/4.8/bits/ios_base.h ****       _S_goodbit 		= 0,
 146:/usr/include/c++/4.8/bits/ios_base.h ****       _S_badbit 		= 1L << 0,
 147:/usr/include/c++/4.8/bits/ios_base.h ****       _S_eofbit 		= 1L << 1,
 148:/usr/include/c++/4.8/bits/ios_base.h ****       _S_failbit		= 1L << 2,
 149:/usr/include/c++/4.8/bits/ios_base.h ****       _S_ios_iostate_end = 1L << 16 
 150:/usr/include/c++/4.8/bits/ios_base.h ****     };
 151:/usr/include/c++/4.8/bits/ios_base.h **** 
 152:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 153:/usr/include/c++/4.8/bits/ios_base.h ****   operator&(_Ios_Iostate __a, _Ios_Iostate __b)
 154:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) & static_cast<int>(__b)); }
 155:/usr/include/c++/4.8/bits/ios_base.h **** 
 156:/usr/include/c++/4.8/bits/ios_base.h ****   inline _GLIBCXX_CONSTEXPR _Ios_Iostate
 157:/usr/include/c++/4.8/bits/ios_base.h ****   operator|(_Ios_Iostate __a, _Ios_Iostate __b)
 158:/usr/include/c++/4.8/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
 120              		.loc 3 158 0
 121 0008 8B7720   		mov	esi, DWORD PTR [rdi+32]
 122 000b 83CE01   		or	esi, 1
 123              	.LBE534:
 124              	.LBE533:
 125              		.file 4 "/usr/include/c++/4.8/bits/basic_ios.h"
   1:/usr/include/c++/4.8/bits/basic_ios.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/4.8/bits/basic_ios.h **** 
   3:/usr/include/c++/4.8/bits/basic_ios.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/basic_ios.h **** //
   5:/usr/include/c++/4.8/bits/basic_ios.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/basic_ios.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/basic_ios.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/basic_ios.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/basic_ios.h **** // any later version.
  10:/usr/include/c++/4.8/bits/basic_ios.h **** 
  11:/usr/include/c++/4.8/bits/basic_ios.h **** // This library is distributed in the hope that it will be useful,
GAS LISTING /tmp/cceISX6N.s 			page 17


  12:/usr/include/c++/4.8/bits/basic_ios.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/basic_ios.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/basic_ios.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/basic_ios.h **** 
  16:/usr/include/c++/4.8/bits/basic_ios.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/basic_ios.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/basic_ios.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/basic_ios.h **** 
  20:/usr/include/c++/4.8/bits/basic_ios.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/basic_ios.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/basic_ios.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/basic_ios.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/basic_ios.h **** 
  25:/usr/include/c++/4.8/bits/basic_ios.h **** /** @file bits/basic_ios.h
  26:/usr/include/c++/4.8/bits/basic_ios.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/basic_ios.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/4.8/bits/basic_ios.h ****  */
  29:/usr/include/c++/4.8/bits/basic_ios.h **** 
  30:/usr/include/c++/4.8/bits/basic_ios.h **** #ifndef _BASIC_IOS_H
  31:/usr/include/c++/4.8/bits/basic_ios.h **** #define _BASIC_IOS_H 1
  32:/usr/include/c++/4.8/bits/basic_ios.h **** 
  33:/usr/include/c++/4.8/bits/basic_ios.h **** #pragma GCC system_header
  34:/usr/include/c++/4.8/bits/basic_ios.h **** 
  35:/usr/include/c++/4.8/bits/basic_ios.h **** #include <bits/localefwd.h>
  36:/usr/include/c++/4.8/bits/basic_ios.h **** #include <bits/locale_classes.h>
  37:/usr/include/c++/4.8/bits/basic_ios.h **** #include <bits/locale_facets.h>
  38:/usr/include/c++/4.8/bits/basic_ios.h **** #include <bits/streambuf_iterator.h>
  39:/usr/include/c++/4.8/bits/basic_ios.h **** 
  40:/usr/include/c++/4.8/bits/basic_ios.h **** namespace std _GLIBCXX_VISIBILITY(default)
  41:/usr/include/c++/4.8/bits/basic_ios.h **** {
  42:/usr/include/c++/4.8/bits/basic_ios.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/usr/include/c++/4.8/bits/basic_ios.h **** 
  44:/usr/include/c++/4.8/bits/basic_ios.h ****   template<typename _Facet>
  45:/usr/include/c++/4.8/bits/basic_ios.h ****     inline const _Facet&
  46:/usr/include/c++/4.8/bits/basic_ios.h ****     __check_facet(const _Facet* __f)
  47:/usr/include/c++/4.8/bits/basic_ios.h ****     {
  48:/usr/include/c++/4.8/bits/basic_ios.h ****       if (!__f)
  49:/usr/include/c++/4.8/bits/basic_ios.h **** 	__throw_bad_cast();
  50:/usr/include/c++/4.8/bits/basic_ios.h ****       return *__f;
  51:/usr/include/c++/4.8/bits/basic_ios.h ****     }
  52:/usr/include/c++/4.8/bits/basic_ios.h **** 
  53:/usr/include/c++/4.8/bits/basic_ios.h ****   /**
  54:/usr/include/c++/4.8/bits/basic_ios.h ****    *  @brief Template class basic_ios, virtual base class for all
  55:/usr/include/c++/4.8/bits/basic_ios.h ****    *  stream classes. 
  56:/usr/include/c++/4.8/bits/basic_ios.h ****    *  @ingroup io
  57:/usr/include/c++/4.8/bits/basic_ios.h ****    *
  58:/usr/include/c++/4.8/bits/basic_ios.h ****    *  @tparam _CharT  Type of character stream.
  59:/usr/include/c++/4.8/bits/basic_ios.h ****    *  @tparam _Traits  Traits for character type, defaults to
  60:/usr/include/c++/4.8/bits/basic_ios.h ****    *                   char_traits<_CharT>.
  61:/usr/include/c++/4.8/bits/basic_ios.h ****    *
  62:/usr/include/c++/4.8/bits/basic_ios.h ****    *  Most of the member functions called dispatched on stream objects
  63:/usr/include/c++/4.8/bits/basic_ios.h ****    *  (e.g., @c std::cout.foo(bar);) are consolidated in this class.
  64:/usr/include/c++/4.8/bits/basic_ios.h ****   */
  65:/usr/include/c++/4.8/bits/basic_ios.h ****   template<typename _CharT, typename _Traits>
  66:/usr/include/c++/4.8/bits/basic_ios.h ****     class basic_ios : public ios_base
  67:/usr/include/c++/4.8/bits/basic_ios.h ****     {
  68:/usr/include/c++/4.8/bits/basic_ios.h ****     public:
GAS LISTING /tmp/cceISX6N.s 			page 18


  69:/usr/include/c++/4.8/bits/basic_ios.h ****       //@{
  70:/usr/include/c++/4.8/bits/basic_ios.h ****       /**
  71:/usr/include/c++/4.8/bits/basic_ios.h ****        *  These are standard types.  They permit a standardized way of
  72:/usr/include/c++/4.8/bits/basic_ios.h ****        *  referring to names of (or names dependent on) the template
  73:/usr/include/c++/4.8/bits/basic_ios.h ****        *  parameters, which are specific to the implementation.
  74:/usr/include/c++/4.8/bits/basic_ios.h ****       */
  75:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef _CharT                                 char_type;
  76:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef typename _Traits::int_type             int_type;
  77:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef typename _Traits::pos_type             pos_type;
  78:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef typename _Traits::off_type             off_type;
  79:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef _Traits                                traits_type;
  80:/usr/include/c++/4.8/bits/basic_ios.h ****       //@}
  81:/usr/include/c++/4.8/bits/basic_ios.h **** 
  82:/usr/include/c++/4.8/bits/basic_ios.h ****       //@{
  83:/usr/include/c++/4.8/bits/basic_ios.h ****       /**
  84:/usr/include/c++/4.8/bits/basic_ios.h ****        *  These are non-standard types.
  85:/usr/include/c++/4.8/bits/basic_ios.h ****       */
  86:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef ctype<_CharT>                          __ctype_type;
  87:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  88:/usr/include/c++/4.8/bits/basic_ios.h **** 						     __num_put_type;
  89:/usr/include/c++/4.8/bits/basic_ios.h ****       typedef num_get<_CharT, istreambuf_iterator<_CharT, _Traits> >
  90:/usr/include/c++/4.8/bits/basic_ios.h **** 						     __num_get_type;
  91:/usr/include/c++/4.8/bits/basic_ios.h ****       //@}
  92:/usr/include/c++/4.8/bits/basic_ios.h **** 
  93:/usr/include/c++/4.8/bits/basic_ios.h ****       // Data members:
  94:/usr/include/c++/4.8/bits/basic_ios.h ****     protected:
  95:/usr/include/c++/4.8/bits/basic_ios.h ****       basic_ostream<_CharT, _Traits>*                _M_tie;
  96:/usr/include/c++/4.8/bits/basic_ios.h ****       mutable char_type                              _M_fill;
  97:/usr/include/c++/4.8/bits/basic_ios.h ****       mutable bool                                   _M_fill_init;
  98:/usr/include/c++/4.8/bits/basic_ios.h ****       basic_streambuf<_CharT, _Traits>*              _M_streambuf;
  99:/usr/include/c++/4.8/bits/basic_ios.h **** 
 100:/usr/include/c++/4.8/bits/basic_ios.h ****       // Cached use_facet<ctype>, which is based on the current locale info.
 101:/usr/include/c++/4.8/bits/basic_ios.h ****       const __ctype_type*                            _M_ctype;
 102:/usr/include/c++/4.8/bits/basic_ios.h ****       // For ostream.
 103:/usr/include/c++/4.8/bits/basic_ios.h ****       const __num_put_type*                          _M_num_put;
 104:/usr/include/c++/4.8/bits/basic_ios.h ****       // For istream.
 105:/usr/include/c++/4.8/bits/basic_ios.h ****       const __num_get_type*                          _M_num_get;
 106:/usr/include/c++/4.8/bits/basic_ios.h **** 
 107:/usr/include/c++/4.8/bits/basic_ios.h ****     public:
 108:/usr/include/c++/4.8/bits/basic_ios.h ****       //@{
 109:/usr/include/c++/4.8/bits/basic_ios.h ****       /**
 110:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @brief  The quick-and-easy status check.
 111:/usr/include/c++/4.8/bits/basic_ios.h ****        *
 112:/usr/include/c++/4.8/bits/basic_ios.h ****        *  This allows you to write constructs such as
 113:/usr/include/c++/4.8/bits/basic_ios.h ****        *  <code>if (!a_stream) ...</code> and <code>while (a_stream) ...</code>
 114:/usr/include/c++/4.8/bits/basic_ios.h ****       */
 115:/usr/include/c++/4.8/bits/basic_ios.h ****       operator void*() const
 116:/usr/include/c++/4.8/bits/basic_ios.h ****       { return this->fail() ? 0 : const_cast<basic_ios*>(this); }
 117:/usr/include/c++/4.8/bits/basic_ios.h **** 
 118:/usr/include/c++/4.8/bits/basic_ios.h ****       bool
 119:/usr/include/c++/4.8/bits/basic_ios.h ****       operator!() const
 120:/usr/include/c++/4.8/bits/basic_ios.h ****       { return this->fail(); }
 121:/usr/include/c++/4.8/bits/basic_ios.h ****       //@}
 122:/usr/include/c++/4.8/bits/basic_ios.h **** 
 123:/usr/include/c++/4.8/bits/basic_ios.h ****       /**
 124:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @brief  Returns the error state of the stream buffer.
 125:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @return  A bit pattern (well, isn't everything?)
GAS LISTING /tmp/cceISX6N.s 			page 19


 126:/usr/include/c++/4.8/bits/basic_ios.h ****        *
 127:/usr/include/c++/4.8/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 128:/usr/include/c++/4.8/bits/basic_ios.h ****        *  users will call one of the interpreting wrappers, e.g., good().
 129:/usr/include/c++/4.8/bits/basic_ios.h ****       */
 130:/usr/include/c++/4.8/bits/basic_ios.h ****       iostate
 131:/usr/include/c++/4.8/bits/basic_ios.h ****       rdstate() const
 132:/usr/include/c++/4.8/bits/basic_ios.h ****       { return _M_streambuf_state; }
 133:/usr/include/c++/4.8/bits/basic_ios.h **** 
 134:/usr/include/c++/4.8/bits/basic_ios.h ****       /**
 135:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @brief  [Re]sets the error state.
 136:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @param  __state  The new state flag(s) to set.
 137:/usr/include/c++/4.8/bits/basic_ios.h ****        *
 138:/usr/include/c++/4.8/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.  Most
 139:/usr/include/c++/4.8/bits/basic_ios.h ****        *  users will not need to pass an argument.
 140:/usr/include/c++/4.8/bits/basic_ios.h ****       */
 141:/usr/include/c++/4.8/bits/basic_ios.h ****       void
 142:/usr/include/c++/4.8/bits/basic_ios.h ****       clear(iostate __state = goodbit);
 143:/usr/include/c++/4.8/bits/basic_ios.h **** 
 144:/usr/include/c++/4.8/bits/basic_ios.h ****       /**
 145:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @brief  Sets additional flags in the error state.
 146:/usr/include/c++/4.8/bits/basic_ios.h ****        *  @param  __state  The additional state flag(s) to set.
 147:/usr/include/c++/4.8/bits/basic_ios.h ****        *
 148:/usr/include/c++/4.8/bits/basic_ios.h ****        *  See std::ios_base::iostate for the possible bit values.
 149:/usr/include/c++/4.8/bits/basic_ios.h ****       */
 150:/usr/include/c++/4.8/bits/basic_ios.h ****       void
 151:/usr/include/c++/4.8/bits/basic_ios.h ****       setstate(iostate __state)
 152:/usr/include/c++/4.8/bits/basic_ios.h ****       { this->clear(this->rdstate() | __state); }
 126              		.loc 4 152 0
 127 000e E8000000 		call	_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate
 127      00
 128              	.LVL4:
 129              	.LBE532:
 130              	.LBE531:
 534:/usr/include/c++/4.8/ostream ****       else
 535:/usr/include/c++/4.8/ostream **** 	__ostream_insert(__out, __s,
 536:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 537:/usr/include/c++/4.8/ostream ****       return __out;
 538:/usr/include/c++/4.8/ostream ****     }
 131              		.loc 2 538 0
 132 0013 5A       		pop	rdx
 133              		.cfi_def_cfa_offset 8
 134 0014 C3       		ret
 135              		.cfi_endproc
 136              	.LFE2369:
 137              		.size	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.part.5, .-_ZStlsISt11char_traitsIcEE
 138              		.section	.rodata.str1.1,"aMS",@progbits,1
 139              	.LC2:
 140 0000 3A2000   		.string	": "
 141              	.LC4:
 142 0003 206D732E 		.string	" ms. Result = "
 142      20526573 
 142      756C7420 
 142      3D2000
 143              		.section	.text._Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Vari
 144              		.p2align 4,,15
 145              		.weak	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Cons
 146              		.type	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Cons
GAS LISTING /tmp/cceISX6N.s 			page 20


 147              	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Constant7Pr
 148              	.LFB2219:
 149              		.file 5 "utils.h"
   1:utils.h       **** /*
   2:utils.h       ****  * utils.h
   3:utils.h       ****  *
   4:utils.h       ****  *  Created on: Jul 20, 2014
   5:utils.h       ****  *      Author: Adam Kosiorek
   6:utils.h       ****  */
   7:utils.h       **** 
   8:utils.h       **** #ifndef UTILS_H_
   9:utils.h       **** #define UTILS_H_
  10:utils.h       **** 
  11:utils.h       **** #include <chrono>
  12:utils.h       **** #include <iostream>
  13:utils.h       **** using namespace std;
  14:utils.h       **** 
  15:utils.h       **** template<int N = 1, class Fun, class... Args>
  16:utils.h       **** void timeExec(string name, Fun fun, Args... args) {
 150              		.loc 5 16 0
 151              		.cfi_startproc
 152              	.LVL5:
 153 0000 4155     		push	r13
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 13, -16
 156 0002 4154     		push	r12
 157              		.cfi_def_cfa_offset 24
 158              		.cfi_offset 12, -24
 159 0004 4989FC   		mov	r12, rdi
 160 0007 55       		push	rbp
 161              		.cfi_def_cfa_offset 32
 162              		.cfi_offset 6, -32
 163              	.LBB602:
  17:utils.h       **** 
  18:utils.h       **** 	auto start = chrono::steady_clock::now();
 164              		.loc 5 18 0
 165 0008 BD102700 		mov	ebp, 10000
 165      00
 166              	.LBE602:
  16:utils.h       **** 
 167              		.loc 5 16 0
 168 000d 53       		push	rbx
 169              		.cfi_def_cfa_offset 40
 170              		.cfi_offset 3, -40
 171 000e 4889F3   		mov	rbx, rsi
 172 0011 4883EC18 		sub	rsp, 24
 173              		.cfi_def_cfa_offset 64
 174              	.LBB690:
 175              		.loc 5 18 0
 176 0015 E8000000 		call	_ZNSt6chrono3_V212steady_clock3nowEv
 176      00
 177              	.LVL6:
 178 001a 4989C5   		mov	r13, rax
 179              	.LVL7:
 180 001d 0F1F00   		.p2align 4,,10
 181              		.p2align 3
 182              	.L9:
GAS LISTING /tmp/cceISX6N.s 			page 21


 183              	.LBB603:
 184              	.LBB604:
 185              	.LBB605:
 186              	.LBB606:
 187              	.LBB607:
 188              	.LBB608:
 189              		.file 6 "/usr/include/c++/4.8/functional"
   1:/usr/include/c++/4.8/functional **** // <functional> -*- C++ -*-
   2:/usr/include/c++/4.8/functional **** 
   3:/usr/include/c++/4.8/functional **** // Copyright (C) 2001-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/functional **** //
   5:/usr/include/c++/4.8/functional **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/functional **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/functional **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/functional **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/functional **** // any later version.
  10:/usr/include/c++/4.8/functional **** 
  11:/usr/include/c++/4.8/functional **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/functional **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/functional **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/functional **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/functional **** 
  16:/usr/include/c++/4.8/functional **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/functional **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/functional **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/functional **** 
  20:/usr/include/c++/4.8/functional **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/functional **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/functional **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/functional **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/functional **** 
  25:/usr/include/c++/4.8/functional **** /*
  26:/usr/include/c++/4.8/functional ****  * Copyright (c) 1997
  27:/usr/include/c++/4.8/functional ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/4.8/functional ****  *
  29:/usr/include/c++/4.8/functional ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/4.8/functional ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/4.8/functional ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/4.8/functional ****  * that both that copyright notice and this permission notice appear
  33:/usr/include/c++/4.8/functional ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/4.8/functional ****  * representations about the suitability of this software for any
  35:/usr/include/c++/4.8/functional ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/4.8/functional ****  *
  37:/usr/include/c++/4.8/functional ****  */
  38:/usr/include/c++/4.8/functional **** 
  39:/usr/include/c++/4.8/functional **** /** @file include/functional
  40:/usr/include/c++/4.8/functional ****  *  This is a Standard C++ Library header.
  41:/usr/include/c++/4.8/functional ****  */
  42:/usr/include/c++/4.8/functional **** 
  43:/usr/include/c++/4.8/functional **** #ifndef _GLIBCXX_FUNCTIONAL
  44:/usr/include/c++/4.8/functional **** #define _GLIBCXX_FUNCTIONAL 1
  45:/usr/include/c++/4.8/functional **** 
  46:/usr/include/c++/4.8/functional **** #pragma GCC system_header
  47:/usr/include/c++/4.8/functional **** 
  48:/usr/include/c++/4.8/functional **** #include <bits/c++config.h>
  49:/usr/include/c++/4.8/functional **** #include <bits/stl_function.h>
  50:/usr/include/c++/4.8/functional **** 
GAS LISTING /tmp/cceISX6N.s 			page 22


  51:/usr/include/c++/4.8/functional **** #if __cplusplus >= 201103L
  52:/usr/include/c++/4.8/functional **** 
  53:/usr/include/c++/4.8/functional **** #include <typeinfo>
  54:/usr/include/c++/4.8/functional **** #include <new>
  55:/usr/include/c++/4.8/functional **** #include <tuple>
  56:/usr/include/c++/4.8/functional **** #include <type_traits>
  57:/usr/include/c++/4.8/functional **** #include <bits/functexcept.h>
  58:/usr/include/c++/4.8/functional **** #include <bits/functional_hash.h>
  59:/usr/include/c++/4.8/functional **** 
  60:/usr/include/c++/4.8/functional **** namespace std _GLIBCXX_VISIBILITY(default)
  61:/usr/include/c++/4.8/functional **** {
  62:/usr/include/c++/4.8/functional **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  63:/usr/include/c++/4.8/functional **** 
  64:/usr/include/c++/4.8/functional ****   template<typename _MemberPointer>
  65:/usr/include/c++/4.8/functional ****     class _Mem_fn;
  66:/usr/include/c++/4.8/functional ****   template<typename _Tp, typename _Class>
  67:/usr/include/c++/4.8/functional ****     _Mem_fn<_Tp _Class::*>
  68:/usr/include/c++/4.8/functional ****     mem_fn(_Tp _Class::*) noexcept;
  69:/usr/include/c++/4.8/functional **** 
  70:/usr/include/c++/4.8/functional **** _GLIBCXX_HAS_NESTED_TYPE(result_type)
  71:/usr/include/c++/4.8/functional **** 
  72:/usr/include/c++/4.8/functional ****   /// If we have found a result_type, extract it.
  73:/usr/include/c++/4.8/functional ****   template<bool _Has_result_type, typename _Functor>
  74:/usr/include/c++/4.8/functional ****     struct _Maybe_get_result_type
  75:/usr/include/c++/4.8/functional ****     { };
  76:/usr/include/c++/4.8/functional **** 
  77:/usr/include/c++/4.8/functional ****   template<typename _Functor>
  78:/usr/include/c++/4.8/functional ****     struct _Maybe_get_result_type<true, _Functor>
  79:/usr/include/c++/4.8/functional ****     { typedef typename _Functor::result_type result_type; };
  80:/usr/include/c++/4.8/functional **** 
  81:/usr/include/c++/4.8/functional ****   /**
  82:/usr/include/c++/4.8/functional ****    *  Base class for any function object that has a weak result type, as
  83:/usr/include/c++/4.8/functional ****    *  defined in 3.3/3 of TR1.
  84:/usr/include/c++/4.8/functional ****   */
  85:/usr/include/c++/4.8/functional ****   template<typename _Functor>
  86:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl
  87:/usr/include/c++/4.8/functional ****     : _Maybe_get_result_type<__has_result_type<_Functor>::value, _Functor>
  88:/usr/include/c++/4.8/functional ****     { };
  89:/usr/include/c++/4.8/functional **** 
  90:/usr/include/c++/4.8/functional ****   /// Retrieve the result type for a function type.
  91:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
  92:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...)>
  93:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
  94:/usr/include/c++/4.8/functional **** 
  95:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
  96:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......)>
  97:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
  98:/usr/include/c++/4.8/functional **** 
  99:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 100:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) const>
 101:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 102:/usr/include/c++/4.8/functional **** 
 103:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 104:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) const>
 105:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 106:/usr/include/c++/4.8/functional **** 
 107:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
GAS LISTING /tmp/cceISX6N.s 			page 23


 108:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) volatile>
 109:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 110:/usr/include/c++/4.8/functional **** 
 111:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 112:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) volatile>
 113:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 114:/usr/include/c++/4.8/functional **** 
 115:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 116:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes...) const volatile>
 117:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 118:/usr/include/c++/4.8/functional **** 
 119:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 120:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(_ArgTypes......) const volatile>
 121:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 122:/usr/include/c++/4.8/functional **** 
 123:/usr/include/c++/4.8/functional ****   /// Retrieve the result type for a function reference.
 124:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 125:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(&)(_ArgTypes...)>
 126:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 127:/usr/include/c++/4.8/functional **** 
 128:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 129:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(&)(_ArgTypes......)>
 130:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 131:/usr/include/c++/4.8/functional **** 
 132:/usr/include/c++/4.8/functional ****   /// Retrieve the result type for a function pointer.
 133:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 134:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(*)(_ArgTypes...)>
 135:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 136:/usr/include/c++/4.8/functional **** 
 137:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 138:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res(*)(_ArgTypes......)>
 139:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 140:/usr/include/c++/4.8/functional **** 
 141:/usr/include/c++/4.8/functional ****   /// Retrieve result type for a member function pointer.
 142:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 143:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...)>
 144:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 145:/usr/include/c++/4.8/functional **** 
 146:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 147:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......)>
 148:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 149:/usr/include/c++/4.8/functional **** 
 150:/usr/include/c++/4.8/functional ****   /// Retrieve result type for a const member function pointer.
 151:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 152:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...) const>
 153:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 154:/usr/include/c++/4.8/functional **** 
 155:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 156:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......) const>
 157:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 158:/usr/include/c++/4.8/functional **** 
 159:/usr/include/c++/4.8/functional ****   /// Retrieve result type for a volatile member function pointer.
 160:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 161:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...) volatile>
 162:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 163:/usr/include/c++/4.8/functional **** 
 164:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
GAS LISTING /tmp/cceISX6N.s 			page 24


 165:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......) volatile>
 166:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 167:/usr/include/c++/4.8/functional **** 
 168:/usr/include/c++/4.8/functional ****   /// Retrieve result type for a const volatile member function pointer.
 169:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 170:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes...)
 171:/usr/include/c++/4.8/functional **** 				  const volatile>
 172:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 173:/usr/include/c++/4.8/functional **** 
 174:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 175:/usr/include/c++/4.8/functional ****     struct _Weak_result_type_impl<_Res (_Class::*)(_ArgTypes......)
 176:/usr/include/c++/4.8/functional **** 				  const volatile>
 177:/usr/include/c++/4.8/functional ****     { typedef _Res result_type; };
 178:/usr/include/c++/4.8/functional **** 
 179:/usr/include/c++/4.8/functional ****   /**
 180:/usr/include/c++/4.8/functional ****    *  Strip top-level cv-qualifiers from the function object and let
 181:/usr/include/c++/4.8/functional ****    *  _Weak_result_type_impl perform the real work.
 182:/usr/include/c++/4.8/functional ****   */
 183:/usr/include/c++/4.8/functional ****   template<typename _Functor>
 184:/usr/include/c++/4.8/functional ****     struct _Weak_result_type
 185:/usr/include/c++/4.8/functional ****     : _Weak_result_type_impl<typename remove_cv<_Functor>::type>
 186:/usr/include/c++/4.8/functional ****     { };
 187:/usr/include/c++/4.8/functional **** 
 188:/usr/include/c++/4.8/functional ****   /// Determines if the type _Tp derives from unary_function.
 189:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 190:/usr/include/c++/4.8/functional ****     struct _Derives_from_unary_function : __sfinae_types
 191:/usr/include/c++/4.8/functional ****     {
 192:/usr/include/c++/4.8/functional ****     private:
 193:/usr/include/c++/4.8/functional ****       template<typename _T1, typename _Res>
 194:/usr/include/c++/4.8/functional **** 	static __one __test(const volatile unary_function<_T1, _Res>*);
 195:/usr/include/c++/4.8/functional **** 
 196:/usr/include/c++/4.8/functional ****       // It's tempting to change "..." to const volatile void*, but
 197:/usr/include/c++/4.8/functional ****       // that fails when _Tp is a function type.
 198:/usr/include/c++/4.8/functional ****       static __two __test(...);
 199:/usr/include/c++/4.8/functional **** 
 200:/usr/include/c++/4.8/functional ****     public:
 201:/usr/include/c++/4.8/functional ****       static const bool value = sizeof(__test((_Tp*)0)) == 1;
 202:/usr/include/c++/4.8/functional ****     };
 203:/usr/include/c++/4.8/functional **** 
 204:/usr/include/c++/4.8/functional ****   /// Determines if the type _Tp derives from binary_function.
 205:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 206:/usr/include/c++/4.8/functional ****     struct _Derives_from_binary_function : __sfinae_types
 207:/usr/include/c++/4.8/functional ****     {
 208:/usr/include/c++/4.8/functional ****     private:
 209:/usr/include/c++/4.8/functional ****       template<typename _T1, typename _T2, typename _Res>
 210:/usr/include/c++/4.8/functional **** 	static __one __test(const volatile binary_function<_T1, _T2, _Res>*);
 211:/usr/include/c++/4.8/functional **** 
 212:/usr/include/c++/4.8/functional ****       // It's tempting to change "..." to const volatile void*, but
 213:/usr/include/c++/4.8/functional ****       // that fails when _Tp is a function type.
 214:/usr/include/c++/4.8/functional ****       static __two __test(...);
 215:/usr/include/c++/4.8/functional **** 
 216:/usr/include/c++/4.8/functional ****     public:
 217:/usr/include/c++/4.8/functional ****       static const bool value = sizeof(__test((_Tp*)0)) == 1;
 218:/usr/include/c++/4.8/functional ****     };
 219:/usr/include/c++/4.8/functional **** 
 220:/usr/include/c++/4.8/functional ****   /**
 221:/usr/include/c++/4.8/functional ****    * Invoke a function object, which may be either a member pointer or a
GAS LISTING /tmp/cceISX6N.s 			page 25


 222:/usr/include/c++/4.8/functional ****    * function object. The first parameter will tell which.
 223:/usr/include/c++/4.8/functional ****    */
 224:/usr/include/c++/4.8/functional ****   template<typename _Functor, typename... _Args>
 225:/usr/include/c++/4.8/functional ****     inline
 226:/usr/include/c++/4.8/functional ****     typename enable_if<
 227:/usr/include/c++/4.8/functional **** 	     (!is_member_pointer<_Functor>::value
 228:/usr/include/c++/4.8/functional **** 	      && !is_function<_Functor>::value
 229:/usr/include/c++/4.8/functional **** 	      && !is_function<typename remove_pointer<_Functor>::type>::value),
 230:/usr/include/c++/4.8/functional **** 	     typename result_of<_Functor&(_Args&&...)>::type
 231:/usr/include/c++/4.8/functional **** 	   >::type
 232:/usr/include/c++/4.8/functional ****     __invoke(_Functor& __f, _Args&&... __args)
 233:/usr/include/c++/4.8/functional ****     {
 234:/usr/include/c++/4.8/functional ****       return __f(std::forward<_Args>(__args)...);
 235:/usr/include/c++/4.8/functional ****     }
 236:/usr/include/c++/4.8/functional **** 
 237:/usr/include/c++/4.8/functional ****   template<typename _Functor, typename... _Args>
 238:/usr/include/c++/4.8/functional ****     inline
 239:/usr/include/c++/4.8/functional ****     typename enable_if<
 240:/usr/include/c++/4.8/functional ****              (is_member_pointer<_Functor>::value
 241:/usr/include/c++/4.8/functional ****               && !is_function<_Functor>::value
 242:/usr/include/c++/4.8/functional ****               && !is_function<typename remove_pointer<_Functor>::type>::value),
 243:/usr/include/c++/4.8/functional ****              typename result_of<_Functor(_Args&&...)>::type
 244:/usr/include/c++/4.8/functional ****            >::type
 245:/usr/include/c++/4.8/functional ****     __invoke(_Functor& __f, _Args&&... __args)
 246:/usr/include/c++/4.8/functional ****     {
 247:/usr/include/c++/4.8/functional ****       return std::mem_fn(__f)(std::forward<_Args>(__args)...);
 248:/usr/include/c++/4.8/functional ****     }
 249:/usr/include/c++/4.8/functional **** 
 250:/usr/include/c++/4.8/functional ****   // To pick up function references (that will become function pointers)
 251:/usr/include/c++/4.8/functional ****   template<typename _Functor, typename... _Args>
 252:/usr/include/c++/4.8/functional ****     inline
 253:/usr/include/c++/4.8/functional ****     typename enable_if<
 254:/usr/include/c++/4.8/functional **** 	     (is_pointer<_Functor>::value
 255:/usr/include/c++/4.8/functional **** 	      && is_function<typename remove_pointer<_Functor>::type>::value),
 256:/usr/include/c++/4.8/functional **** 	     typename result_of<_Functor(_Args&&...)>::type
 257:/usr/include/c++/4.8/functional **** 	   >::type
 258:/usr/include/c++/4.8/functional ****     __invoke(_Functor __f, _Args&&... __args)
 259:/usr/include/c++/4.8/functional ****     {
 260:/usr/include/c++/4.8/functional ****       return __f(std::forward<_Args>(__args)...);
 261:/usr/include/c++/4.8/functional ****     }
 262:/usr/include/c++/4.8/functional **** 
 263:/usr/include/c++/4.8/functional ****   /**
 264:/usr/include/c++/4.8/functional ****    *  Knowing which of unary_function and binary_function _Tp derives
 265:/usr/include/c++/4.8/functional ****    *  from, derives from the same and ensures that reference_wrapper
 266:/usr/include/c++/4.8/functional ****    *  will have a weak result type. See cases below.
 267:/usr/include/c++/4.8/functional ****    */
 268:/usr/include/c++/4.8/functional ****   template<bool _Unary, bool _Binary, typename _Tp>
 269:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base_impl;
 270:/usr/include/c++/4.8/functional **** 
 271:/usr/include/c++/4.8/functional ****   // None of the nested argument types.
 272:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 273:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base_impl<false, false, _Tp>
 274:/usr/include/c++/4.8/functional ****     : _Weak_result_type<_Tp>
 275:/usr/include/c++/4.8/functional ****     { };
 276:/usr/include/c++/4.8/functional **** 
 277:/usr/include/c++/4.8/functional ****   // Nested argument_type only.
 278:/usr/include/c++/4.8/functional ****   template<typename _Tp>
GAS LISTING /tmp/cceISX6N.s 			page 26


 279:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base_impl<true, false, _Tp>
 280:/usr/include/c++/4.8/functional ****     : _Weak_result_type<_Tp>
 281:/usr/include/c++/4.8/functional ****     {
 282:/usr/include/c++/4.8/functional ****       typedef typename _Tp::argument_type argument_type;
 283:/usr/include/c++/4.8/functional ****     };
 284:/usr/include/c++/4.8/functional **** 
 285:/usr/include/c++/4.8/functional ****   // Nested first_argument_type and second_argument_type only.
 286:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 287:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base_impl<false, true, _Tp>
 288:/usr/include/c++/4.8/functional ****     : _Weak_result_type<_Tp>
 289:/usr/include/c++/4.8/functional ****     {
 290:/usr/include/c++/4.8/functional ****       typedef typename _Tp::first_argument_type first_argument_type;
 291:/usr/include/c++/4.8/functional ****       typedef typename _Tp::second_argument_type second_argument_type;
 292:/usr/include/c++/4.8/functional ****     };
 293:/usr/include/c++/4.8/functional **** 
 294:/usr/include/c++/4.8/functional ****   // All the nested argument types.
 295:/usr/include/c++/4.8/functional ****    template<typename _Tp>
 296:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base_impl<true, true, _Tp>
 297:/usr/include/c++/4.8/functional ****     : _Weak_result_type<_Tp>
 298:/usr/include/c++/4.8/functional ****     {
 299:/usr/include/c++/4.8/functional ****       typedef typename _Tp::argument_type argument_type;
 300:/usr/include/c++/4.8/functional ****       typedef typename _Tp::first_argument_type first_argument_type;
 301:/usr/include/c++/4.8/functional ****       typedef typename _Tp::second_argument_type second_argument_type;
 302:/usr/include/c++/4.8/functional ****     };
 303:/usr/include/c++/4.8/functional **** 
 304:/usr/include/c++/4.8/functional ****   _GLIBCXX_HAS_NESTED_TYPE(argument_type)
 305:/usr/include/c++/4.8/functional ****   _GLIBCXX_HAS_NESTED_TYPE(first_argument_type)
 306:/usr/include/c++/4.8/functional ****   _GLIBCXX_HAS_NESTED_TYPE(second_argument_type)
 307:/usr/include/c++/4.8/functional **** 
 308:/usr/include/c++/4.8/functional ****   /**
 309:/usr/include/c++/4.8/functional ****    *  Derives from unary_function or binary_function when it
 310:/usr/include/c++/4.8/functional ****    *  can. Specializations handle all of the easy cases. The primary
 311:/usr/include/c++/4.8/functional ****    *  template determines what to do with a class type, which may
 312:/usr/include/c++/4.8/functional ****    *  derive from both unary_function and binary_function.
 313:/usr/include/c++/4.8/functional ****   */
 314:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 315:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base
 316:/usr/include/c++/4.8/functional ****     : _Reference_wrapper_base_impl<
 317:/usr/include/c++/4.8/functional ****       __has_argument_type<_Tp>::value,
 318:/usr/include/c++/4.8/functional ****       __has_first_argument_type<_Tp>::value
 319:/usr/include/c++/4.8/functional ****       && __has_second_argument_type<_Tp>::value,
 320:/usr/include/c++/4.8/functional ****       _Tp>
 321:/usr/include/c++/4.8/functional ****     { };
 322:/usr/include/c++/4.8/functional **** 
 323:/usr/include/c++/4.8/functional ****   // - a function type (unary)
 324:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 325:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1)>
 326:/usr/include/c++/4.8/functional ****     : unary_function<_T1, _Res>
 327:/usr/include/c++/4.8/functional ****     { };
 328:/usr/include/c++/4.8/functional **** 
 329:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 330:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1) const>
 331:/usr/include/c++/4.8/functional ****     : unary_function<_T1, _Res>
 332:/usr/include/c++/4.8/functional ****     { };
 333:/usr/include/c++/4.8/functional **** 
 334:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 335:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1) volatile>
GAS LISTING /tmp/cceISX6N.s 			page 27


 336:/usr/include/c++/4.8/functional ****     : unary_function<_T1, _Res>
 337:/usr/include/c++/4.8/functional ****     { };
 338:/usr/include/c++/4.8/functional **** 
 339:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 340:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1) const volatile>
 341:/usr/include/c++/4.8/functional ****     : unary_function<_T1, _Res>
 342:/usr/include/c++/4.8/functional ****     { };
 343:/usr/include/c++/4.8/functional **** 
 344:/usr/include/c++/4.8/functional ****   // - a function type (binary)
 345:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 346:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2)>
 347:/usr/include/c++/4.8/functional ****     : binary_function<_T1, _T2, _Res>
 348:/usr/include/c++/4.8/functional ****     { };
 349:/usr/include/c++/4.8/functional **** 
 350:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 351:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) const>
 352:/usr/include/c++/4.8/functional ****     : binary_function<_T1, _T2, _Res>
 353:/usr/include/c++/4.8/functional ****     { };
 354:/usr/include/c++/4.8/functional **** 
 355:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 356:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) volatile>
 357:/usr/include/c++/4.8/functional ****     : binary_function<_T1, _T2, _Res>
 358:/usr/include/c++/4.8/functional ****     { };
 359:/usr/include/c++/4.8/functional **** 
 360:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 361:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(_T1, _T2) const volatile>
 362:/usr/include/c++/4.8/functional ****     : binary_function<_T1, _T2, _Res>
 363:/usr/include/c++/4.8/functional ****     { };
 364:/usr/include/c++/4.8/functional **** 
 365:/usr/include/c++/4.8/functional ****   // - a function pointer type (unary)
 366:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 367:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(*)(_T1)>
 368:/usr/include/c++/4.8/functional ****     : unary_function<_T1, _Res>
 369:/usr/include/c++/4.8/functional ****     { };
 370:/usr/include/c++/4.8/functional **** 
 371:/usr/include/c++/4.8/functional ****   // - a function pointer type (binary)
 372:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 373:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res(*)(_T1, _T2)>
 374:/usr/include/c++/4.8/functional ****     : binary_function<_T1, _T2, _Res>
 375:/usr/include/c++/4.8/functional ****     { };
 376:/usr/include/c++/4.8/functional **** 
 377:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (unary, no qualifiers)
 378:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 379:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)()>
 380:/usr/include/c++/4.8/functional ****     : unary_function<_T1*, _Res>
 381:/usr/include/c++/4.8/functional ****     { };
 382:/usr/include/c++/4.8/functional **** 
 383:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (binary, no qualifiers)
 384:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 385:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2)>
 386:/usr/include/c++/4.8/functional ****     : binary_function<_T1*, _T2, _Res>
 387:/usr/include/c++/4.8/functional ****     { };
 388:/usr/include/c++/4.8/functional **** 
 389:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (unary, const)
 390:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 391:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() const>
 392:/usr/include/c++/4.8/functional ****     : unary_function<const _T1*, _Res>
GAS LISTING /tmp/cceISX6N.s 			page 28


 393:/usr/include/c++/4.8/functional ****     { };
 394:/usr/include/c++/4.8/functional **** 
 395:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (binary, const)
 396:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 397:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) const>
 398:/usr/include/c++/4.8/functional ****     : binary_function<const _T1*, _T2, _Res>
 399:/usr/include/c++/4.8/functional ****     { };
 400:/usr/include/c++/4.8/functional **** 
 401:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (unary, volatile)
 402:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 403:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() volatile>
 404:/usr/include/c++/4.8/functional ****     : unary_function<volatile _T1*, _Res>
 405:/usr/include/c++/4.8/functional ****     { };
 406:/usr/include/c++/4.8/functional **** 
 407:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (binary, volatile)
 408:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 409:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) volatile>
 410:/usr/include/c++/4.8/functional ****     : binary_function<volatile _T1*, _T2, _Res>
 411:/usr/include/c++/4.8/functional ****     { };
 412:/usr/include/c++/4.8/functional **** 
 413:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (unary, const volatile)
 414:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 415:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)() const volatile>
 416:/usr/include/c++/4.8/functional ****     : unary_function<const volatile _T1*, _Res>
 417:/usr/include/c++/4.8/functional ****     { };
 418:/usr/include/c++/4.8/functional **** 
 419:/usr/include/c++/4.8/functional ****   // - a pointer to member function type (binary, const volatile)
 420:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 421:/usr/include/c++/4.8/functional ****     struct _Reference_wrapper_base<_Res (_T1::*)(_T2) const volatile>
 422:/usr/include/c++/4.8/functional ****     : binary_function<const volatile _T1*, _T2, _Res>
 423:/usr/include/c++/4.8/functional ****     { };
 424:/usr/include/c++/4.8/functional **** 
 425:/usr/include/c++/4.8/functional ****   /**
 426:/usr/include/c++/4.8/functional ****    *  @brief Primary class template for reference_wrapper.
 427:/usr/include/c++/4.8/functional ****    *  @ingroup functors
 428:/usr/include/c++/4.8/functional ****    *  @{
 429:/usr/include/c++/4.8/functional ****    */
 430:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 431:/usr/include/c++/4.8/functional ****     class reference_wrapper
 432:/usr/include/c++/4.8/functional ****     : public _Reference_wrapper_base<typename remove_cv<_Tp>::type>
 433:/usr/include/c++/4.8/functional ****     {
 434:/usr/include/c++/4.8/functional ****       _Tp* _M_data;
 435:/usr/include/c++/4.8/functional **** 
 436:/usr/include/c++/4.8/functional ****     public:
 437:/usr/include/c++/4.8/functional ****       typedef _Tp type;
 438:/usr/include/c++/4.8/functional **** 
 439:/usr/include/c++/4.8/functional ****       reference_wrapper(_Tp& __indata) noexcept
 440:/usr/include/c++/4.8/functional ****       : _M_data(std::__addressof(__indata))
 441:/usr/include/c++/4.8/functional ****       { }
 442:/usr/include/c++/4.8/functional **** 
 443:/usr/include/c++/4.8/functional ****       reference_wrapper(_Tp&&) = delete;
 444:/usr/include/c++/4.8/functional **** 
 445:/usr/include/c++/4.8/functional ****       reference_wrapper(const reference_wrapper<_Tp>& __inref) noexcept
 446:/usr/include/c++/4.8/functional ****       : _M_data(__inref._M_data)
 447:/usr/include/c++/4.8/functional ****       { }
 448:/usr/include/c++/4.8/functional **** 
 449:/usr/include/c++/4.8/functional ****       reference_wrapper&
GAS LISTING /tmp/cceISX6N.s 			page 29


 450:/usr/include/c++/4.8/functional ****       operator=(const reference_wrapper<_Tp>& __inref) noexcept
 451:/usr/include/c++/4.8/functional ****       {
 452:/usr/include/c++/4.8/functional **** 	_M_data = __inref._M_data;
 453:/usr/include/c++/4.8/functional **** 	return *this;
 454:/usr/include/c++/4.8/functional ****       }
 455:/usr/include/c++/4.8/functional **** 
 456:/usr/include/c++/4.8/functional ****       operator _Tp&() const noexcept
 457:/usr/include/c++/4.8/functional ****       { return this->get(); }
 458:/usr/include/c++/4.8/functional **** 
 459:/usr/include/c++/4.8/functional ****       _Tp&
 460:/usr/include/c++/4.8/functional ****       get() const noexcept
 461:/usr/include/c++/4.8/functional ****       { return *_M_data; }
 462:/usr/include/c++/4.8/functional **** 
 463:/usr/include/c++/4.8/functional ****       template<typename... _Args>
 464:/usr/include/c++/4.8/functional **** 	typename result_of<_Tp&(_Args&&...)>::type
 465:/usr/include/c++/4.8/functional **** 	operator()(_Args&&... __args) const
 466:/usr/include/c++/4.8/functional **** 	{
 467:/usr/include/c++/4.8/functional **** 	  return __invoke(get(), std::forward<_Args>(__args)...);
 468:/usr/include/c++/4.8/functional **** 	}
 469:/usr/include/c++/4.8/functional ****     };
 470:/usr/include/c++/4.8/functional **** 
 471:/usr/include/c++/4.8/functional **** 
 472:/usr/include/c++/4.8/functional ****   /// Denotes a reference should be taken to a variable.
 473:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 474:/usr/include/c++/4.8/functional ****     inline reference_wrapper<_Tp>
 475:/usr/include/c++/4.8/functional ****     ref(_Tp& __t) noexcept
 476:/usr/include/c++/4.8/functional ****     { return reference_wrapper<_Tp>(__t); }
 477:/usr/include/c++/4.8/functional **** 
 478:/usr/include/c++/4.8/functional ****   /// Denotes a const reference should be taken to a variable.
 479:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 480:/usr/include/c++/4.8/functional ****     inline reference_wrapper<const _Tp>
 481:/usr/include/c++/4.8/functional ****     cref(const _Tp& __t) noexcept
 482:/usr/include/c++/4.8/functional ****     { return reference_wrapper<const _Tp>(__t); }
 483:/usr/include/c++/4.8/functional **** 
 484:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 485:/usr/include/c++/4.8/functional ****     void ref(const _Tp&&) = delete;
 486:/usr/include/c++/4.8/functional **** 
 487:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 488:/usr/include/c++/4.8/functional ****     void cref(const _Tp&&) = delete;
 489:/usr/include/c++/4.8/functional **** 
 490:/usr/include/c++/4.8/functional ****   /// Partial specialization.
 491:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 492:/usr/include/c++/4.8/functional ****     inline reference_wrapper<_Tp>
 493:/usr/include/c++/4.8/functional ****     ref(reference_wrapper<_Tp> __t) noexcept
 494:/usr/include/c++/4.8/functional ****     { return ref(__t.get()); }
 495:/usr/include/c++/4.8/functional **** 
 496:/usr/include/c++/4.8/functional ****   /// Partial specialization.
 497:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 498:/usr/include/c++/4.8/functional ****     inline reference_wrapper<const _Tp>
 499:/usr/include/c++/4.8/functional ****     cref(reference_wrapper<_Tp> __t) noexcept
 500:/usr/include/c++/4.8/functional ****     { return cref(__t.get()); }
 501:/usr/include/c++/4.8/functional **** 
 502:/usr/include/c++/4.8/functional ****   // @} group functors
 503:/usr/include/c++/4.8/functional **** 
 504:/usr/include/c++/4.8/functional ****   template<typename... _Types>
 505:/usr/include/c++/4.8/functional ****     struct _Pack : integral_constant<size_t, sizeof...(_Types)>
 506:/usr/include/c++/4.8/functional ****     { };
GAS LISTING /tmp/cceISX6N.s 			page 30


 507:/usr/include/c++/4.8/functional **** 
 508:/usr/include/c++/4.8/functional ****   template<typename _From, typename _To, bool = _From::value == _To::value>
 509:/usr/include/c++/4.8/functional ****     struct _AllConvertible : false_type
 510:/usr/include/c++/4.8/functional ****     { };
 511:/usr/include/c++/4.8/functional **** 
 512:/usr/include/c++/4.8/functional ****   template<typename... _From, typename... _To>
 513:/usr/include/c++/4.8/functional ****     struct _AllConvertible<_Pack<_From...>, _Pack<_To...>, true>
 514:/usr/include/c++/4.8/functional ****     : __and_<is_convertible<_From, _To>...>
 515:/usr/include/c++/4.8/functional ****     { };
 516:/usr/include/c++/4.8/functional **** 
 517:/usr/include/c++/4.8/functional ****   template<typename _Tp1, typename _Tp2>
 518:/usr/include/c++/4.8/functional ****     using _NotSame = __not_<is_same<typename std::decay<_Tp1>::type,
 519:/usr/include/c++/4.8/functional **** 				    typename std::decay<_Tp2>::type>>;
 520:/usr/include/c++/4.8/functional **** 
 521:/usr/include/c++/4.8/functional ****   /**
 522:/usr/include/c++/4.8/functional ****    * Derives from @c unary_function or @c binary_function, or perhaps
 523:/usr/include/c++/4.8/functional ****    * nothing, depending on the number of arguments provided. The
 524:/usr/include/c++/4.8/functional ****    * primary template is the basis case, which derives nothing.
 525:/usr/include/c++/4.8/functional ****    */
 526:/usr/include/c++/4.8/functional ****   template<typename _Res, typename... _ArgTypes>
 527:/usr/include/c++/4.8/functional ****     struct _Maybe_unary_or_binary_function { };
 528:/usr/include/c++/4.8/functional **** 
 529:/usr/include/c++/4.8/functional ****   /// Derives from @c unary_function, as appropriate.
 530:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1>
 531:/usr/include/c++/4.8/functional ****     struct _Maybe_unary_or_binary_function<_Res, _T1>
 532:/usr/include/c++/4.8/functional ****     : std::unary_function<_T1, _Res> { };
 533:/usr/include/c++/4.8/functional **** 
 534:/usr/include/c++/4.8/functional ****   /// Derives from @c binary_function, as appropriate.
 535:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _T1, typename _T2>
 536:/usr/include/c++/4.8/functional ****     struct _Maybe_unary_or_binary_function<_Res, _T1, _T2>
 537:/usr/include/c++/4.8/functional ****     : std::binary_function<_T1, _T2, _Res> { };
 538:/usr/include/c++/4.8/functional **** 
 539:/usr/include/c++/4.8/functional ****   /// Implementation of @c mem_fn for member function pointers.
 540:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 541:/usr/include/c++/4.8/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...)>
 542:/usr/include/c++/4.8/functional ****     : public _Maybe_unary_or_binary_function<_Res, _Class*, _ArgTypes...>
 543:/usr/include/c++/4.8/functional ****     {
 544:/usr/include/c++/4.8/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...);
 545:/usr/include/c++/4.8/functional **** 
 546:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 547:/usr/include/c++/4.8/functional **** 	_Res
 548:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 549:/usr/include/c++/4.8/functional **** 		_Args&&... __args) const
 550:/usr/include/c++/4.8/functional **** 	{
 551:/usr/include/c++/4.8/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 552:/usr/include/c++/4.8/functional **** 	    (std::forward<_Args>(__args)...);
 553:/usr/include/c++/4.8/functional **** 	}
 554:/usr/include/c++/4.8/functional **** 
 555:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 556:/usr/include/c++/4.8/functional **** 	_Res
 557:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 558:/usr/include/c++/4.8/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 559:/usr/include/c++/4.8/functional **** 
 560:/usr/include/c++/4.8/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 561:/usr/include/c++/4.8/functional ****       template<typename... _Args>
 562:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs
 563:/usr/include/c++/4.8/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
GAS LISTING /tmp/cceISX6N.s 			page 31


 564:/usr/include/c++/4.8/functional **** 
 565:/usr/include/c++/4.8/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 566:/usr/include/c++/4.8/functional ****       // and require _Tp is not _Class, _Class& or _Class*
 567:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 568:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs2
 569:/usr/include/c++/4.8/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<_Class*, _Tp>,
 570:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 571:/usr/include/c++/4.8/functional **** 
 572:/usr/include/c++/4.8/functional ****       // Require each _Args to be convertible to corresponding _ArgTypes
 573:/usr/include/c++/4.8/functional ****       // and require _Tp is _Class or derived from _Class
 574:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 575:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs3
 576:/usr/include/c++/4.8/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 577:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 578:/usr/include/c++/4.8/functional **** 
 579:/usr/include/c++/4.8/functional ****     public:
 580:/usr/include/c++/4.8/functional ****       typedef _Res result_type;
 581:/usr/include/c++/4.8/functional **** 
 582:/usr/include/c++/4.8/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 583:/usr/include/c++/4.8/functional **** 
 584:/usr/include/c++/4.8/functional ****       // Handle objects
 585:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 586:/usr/include/c++/4.8/functional **** 	_Res
 587:/usr/include/c++/4.8/functional **** 	operator()(_Class& __object, _Args&&... __args) const
 588:/usr/include/c++/4.8/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 589:/usr/include/c++/4.8/functional **** 
 590:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 591:/usr/include/c++/4.8/functional **** 	_Res
 592:/usr/include/c++/4.8/functional **** 	operator()(_Class&& __object, _Args&&... __args) const
 593:/usr/include/c++/4.8/functional **** 	{
 594:/usr/include/c++/4.8/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 595:/usr/include/c++/4.8/functional **** 	}
 596:/usr/include/c++/4.8/functional **** 
 597:/usr/include/c++/4.8/functional ****       // Handle pointers
 598:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 599:/usr/include/c++/4.8/functional **** 	_Res
 600:/usr/include/c++/4.8/functional **** 	operator()(_Class* __object, _Args&&... __args) const
 601:/usr/include/c++/4.8/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 602:/usr/include/c++/4.8/functional **** 
 603:/usr/include/c++/4.8/functional ****       // Handle smart pointers, references and pointers to derived
 604:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 605:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 606:/usr/include/c++/4.8/functional **** 	_Res
 607:/usr/include/c++/4.8/functional **** 	operator()(_Tp&& __object, _Args&&... __args) const
 608:/usr/include/c++/4.8/functional **** 	{
 609:/usr/include/c++/4.8/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 610:/usr/include/c++/4.8/functional **** 	      std::forward<_Args>(__args)...);
 611:/usr/include/c++/4.8/functional **** 	}
 612:/usr/include/c++/4.8/functional **** 
 613:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 614:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 615:/usr/include/c++/4.8/functional **** 	_Res
 616:/usr/include/c++/4.8/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 617:/usr/include/c++/4.8/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 618:/usr/include/c++/4.8/functional **** 
 619:/usr/include/c++/4.8/functional ****     private:
 620:/usr/include/c++/4.8/functional ****       _Functor __pmf;
GAS LISTING /tmp/cceISX6N.s 			page 32


 621:/usr/include/c++/4.8/functional ****     };
 622:/usr/include/c++/4.8/functional **** 
 623:/usr/include/c++/4.8/functional ****   /// Implementation of @c mem_fn for const member function pointers.
 624:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 625:/usr/include/c++/4.8/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) const>
 626:/usr/include/c++/4.8/functional ****     : public _Maybe_unary_or_binary_function<_Res, const _Class*,
 627:/usr/include/c++/4.8/functional **** 					     _ArgTypes...>
 628:/usr/include/c++/4.8/functional ****     {
 629:/usr/include/c++/4.8/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) const;
 630:/usr/include/c++/4.8/functional **** 
 631:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 632:/usr/include/c++/4.8/functional **** 	_Res
 633:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 634:/usr/include/c++/4.8/functional **** 		_Args&&... __args) const
 635:/usr/include/c++/4.8/functional **** 	{
 636:/usr/include/c++/4.8/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 637:/usr/include/c++/4.8/functional **** 	    (std::forward<_Args>(__args)...);
 638:/usr/include/c++/4.8/functional **** 	}
 639:/usr/include/c++/4.8/functional **** 
 640:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 641:/usr/include/c++/4.8/functional **** 	_Res
 642:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 643:/usr/include/c++/4.8/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 190              		.loc 6 643 0
 191 0020 488B0B   		mov	rcx, QWORD PTR [rbx]
 192 0023 488B7B10 		mov	rdi, QWORD PTR [rbx+16]
 193 0027 48037B08 		add	rdi, QWORD PTR [rbx+8]
 194 002b F6C101   		test	cl, 1
 195 002e 7408     		je	.L7
 196 0030 488B07   		mov	rax, QWORD PTR [rdi]
 197 0033 488B4C08 		mov	rcx, QWORD PTR [rax-1+rcx]
 197      FF
 198              	.L7:
 199 0038 FFD1     		call	rcx
 200              	.LVL8:
 201              	.LBE608:
 202              	.LBE607:
 203              	.LBE606:
 204              	.LBE605:
 205              	.LBE604:
  19:utils.h       **** 
  20:utils.h       **** 	for(int i = 0; i < N; ++i) {
 206              		.loc 5 20 0
 207 003a 83ED01   		sub	ebp, 1
 208 003d 75E1     		jne	.L9
 209              	.LBE603:
  21:utils.h       **** 		fun(args...);
  22:utils.h       **** 	}
  23:utils.h       **** 
  24:utils.h       **** 	auto end = chrono::steady_clock::now();
 210              		.loc 5 24 0
 211 003f E8000000 		call	_ZNSt6chrono3_V212steady_clock3nowEv
 211      00
 212              	.LVL9:
 213 0044 4889C5   		mov	rbp, rax
 214              	.LVL10:
 215              	.LBB609:
GAS LISTING /tmp/cceISX6N.s 			page 33


 216              	.LBB610:
 217              	.LBB611:
 218              	.LBB612:
 219              	.LBB613:
 220              		.loc 6 643 0
 221 0047 488B03   		mov	rax, QWORD PTR [rbx]
 222 004a 488B7B10 		mov	rdi, QWORD PTR [rbx+16]
 223              	.LVL11:
 224              	.LBE613:
 225              	.LBE612:
 226              	.LBE611:
 227              	.LBE610:
 228              	.LBE609:
 229              	.LBB622:
 230              	.LBB623:
 231              	.LBB624:
 232              		.file 7 "/usr/include/c++/4.8/chrono"
   1:/usr/include/c++/4.8/chrono **** // <chrono> -*- C++ -*-
   2:/usr/include/c++/4.8/chrono **** 
   3:/usr/include/c++/4.8/chrono **** // Copyright (C) 2008-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/chrono **** //
   5:/usr/include/c++/4.8/chrono **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/chrono **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/chrono **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/chrono **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/chrono **** // any later version.
  10:/usr/include/c++/4.8/chrono **** 
  11:/usr/include/c++/4.8/chrono **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/chrono **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/chrono **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/chrono **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/chrono **** 
  16:/usr/include/c++/4.8/chrono **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/chrono **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/chrono **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/chrono **** 
  20:/usr/include/c++/4.8/chrono **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/chrono **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/chrono **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/chrono **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/chrono **** 
  25:/usr/include/c++/4.8/chrono **** /** @file include/chrono
  26:/usr/include/c++/4.8/chrono ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/4.8/chrono ****  */
  28:/usr/include/c++/4.8/chrono **** 
  29:/usr/include/c++/4.8/chrono **** #ifndef _GLIBCXX_CHRONO
  30:/usr/include/c++/4.8/chrono **** #define _GLIBCXX_CHRONO 1
  31:/usr/include/c++/4.8/chrono **** 
  32:/usr/include/c++/4.8/chrono **** #pragma GCC system_header
  33:/usr/include/c++/4.8/chrono **** 
  34:/usr/include/c++/4.8/chrono **** #if __cplusplus < 201103L
  35:/usr/include/c++/4.8/chrono **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/4.8/chrono **** #else
  37:/usr/include/c++/4.8/chrono **** 
  38:/usr/include/c++/4.8/chrono **** #include <ratio>
  39:/usr/include/c++/4.8/chrono **** #include <type_traits>
  40:/usr/include/c++/4.8/chrono **** #include <limits>
GAS LISTING /tmp/cceISX6N.s 			page 34


  41:/usr/include/c++/4.8/chrono **** #include <ctime>
  42:/usr/include/c++/4.8/chrono **** 
  43:/usr/include/c++/4.8/chrono **** #ifdef _GLIBCXX_USE_C99_STDINT_TR1
  44:/usr/include/c++/4.8/chrono **** 
  45:/usr/include/c++/4.8/chrono **** namespace std _GLIBCXX_VISIBILITY(default)
  46:/usr/include/c++/4.8/chrono **** {
  47:/usr/include/c++/4.8/chrono ****   /**
  48:/usr/include/c++/4.8/chrono ****    * @defgroup chrono Time
  49:/usr/include/c++/4.8/chrono ****    * @ingroup utilities
  50:/usr/include/c++/4.8/chrono ****    *
  51:/usr/include/c++/4.8/chrono ****    * Classes and functions for time.
  52:/usr/include/c++/4.8/chrono ****    * @{
  53:/usr/include/c++/4.8/chrono ****    */
  54:/usr/include/c++/4.8/chrono **** 
  55:/usr/include/c++/4.8/chrono ****   /** @namespace std::chrono
  56:/usr/include/c++/4.8/chrono ****    *  @brief ISO C++ 2011 entities sub-namespace for time and date.
  57:/usr/include/c++/4.8/chrono ****    */
  58:/usr/include/c++/4.8/chrono ****   namespace chrono
  59:/usr/include/c++/4.8/chrono ****   {
  60:/usr/include/c++/4.8/chrono ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  61:/usr/include/c++/4.8/chrono **** 
  62:/usr/include/c++/4.8/chrono ****     template<typename _Rep, typename _Period = ratio<1>>
  63:/usr/include/c++/4.8/chrono ****       struct duration;
  64:/usr/include/c++/4.8/chrono **** 
  65:/usr/include/c++/4.8/chrono ****     template<typename _Clock, typename _Dur = typename _Clock::duration>
  66:/usr/include/c++/4.8/chrono ****       struct time_point;
  67:/usr/include/c++/4.8/chrono **** 
  68:/usr/include/c++/4.8/chrono ****   _GLIBCXX_END_NAMESPACE_VERSION
  69:/usr/include/c++/4.8/chrono ****   }
  70:/usr/include/c++/4.8/chrono **** 
  71:/usr/include/c++/4.8/chrono **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  72:/usr/include/c++/4.8/chrono **** 
  73:/usr/include/c++/4.8/chrono ****   // 20.11.4.3 specialization of common_type (for duration, sfinae-friendly)
  74:/usr/include/c++/4.8/chrono ****   
  75:/usr/include/c++/4.8/chrono ****   template<typename _CT, typename _Period1, typename _Period2>
  76:/usr/include/c++/4.8/chrono ****     struct __duration_common_type_wrapper
  77:/usr/include/c++/4.8/chrono ****     {
  78:/usr/include/c++/4.8/chrono ****     private:
  79:/usr/include/c++/4.8/chrono ****       typedef __static_gcd<_Period1::num, _Period2::num> __gcd_num;
  80:/usr/include/c++/4.8/chrono ****       typedef __static_gcd<_Period1::den, _Period2::den> __gcd_den;
  81:/usr/include/c++/4.8/chrono ****       typedef typename _CT::type __cr;
  82:/usr/include/c++/4.8/chrono ****       typedef ratio<__gcd_num::value,
  83:/usr/include/c++/4.8/chrono ****         (_Period1::den / __gcd_den::value) * _Period2::den> __r;
  84:/usr/include/c++/4.8/chrono ****     public:
  85:/usr/include/c++/4.8/chrono ****       typedef __success_type<chrono::duration<__cr, __r>> type;
  86:/usr/include/c++/4.8/chrono ****     };
  87:/usr/include/c++/4.8/chrono **** 
  88:/usr/include/c++/4.8/chrono ****   template<typename _Period1, typename _Period2>
  89:/usr/include/c++/4.8/chrono ****     struct __duration_common_type_wrapper<__failure_type, _Period1, _Period2>
  90:/usr/include/c++/4.8/chrono ****     { typedef __failure_type type; };
  91:/usr/include/c++/4.8/chrono **** 
  92:/usr/include/c++/4.8/chrono ****   template<typename _Rep1, typename _Period1, typename _Rep2, typename _Period2>
  93:/usr/include/c++/4.8/chrono ****     struct common_type<chrono::duration<_Rep1, _Period1>,
  94:/usr/include/c++/4.8/chrono ****              chrono::duration<_Rep2, _Period2>>
  95:/usr/include/c++/4.8/chrono ****     : public __duration_common_type_wrapper<typename __member_type_wrapper<
  96:/usr/include/c++/4.8/chrono ****              common_type<_Rep1, _Rep2>>::type, _Period1, _Period2>::type
  97:/usr/include/c++/4.8/chrono ****     { };
GAS LISTING /tmp/cceISX6N.s 			page 35


  98:/usr/include/c++/4.8/chrono **** 
  99:/usr/include/c++/4.8/chrono ****   // 20.11.4.3 specialization of common_type (for time_point, sfinae-friendly)
 100:/usr/include/c++/4.8/chrono ****   
 101:/usr/include/c++/4.8/chrono ****   template<typename _CT, typename _Clock>
 102:/usr/include/c++/4.8/chrono ****     struct __timepoint_common_type_wrapper
 103:/usr/include/c++/4.8/chrono ****     {
 104:/usr/include/c++/4.8/chrono ****       typedef __success_type<chrono::time_point<_Clock, typename _CT::type>>
 105:/usr/include/c++/4.8/chrono ****         type;
 106:/usr/include/c++/4.8/chrono ****     };
 107:/usr/include/c++/4.8/chrono **** 
 108:/usr/include/c++/4.8/chrono ****   template<typename _Clock>
 109:/usr/include/c++/4.8/chrono ****     struct __timepoint_common_type_wrapper<__failure_type, _Clock>
 110:/usr/include/c++/4.8/chrono ****     { typedef __failure_type type; };
 111:/usr/include/c++/4.8/chrono **** 
 112:/usr/include/c++/4.8/chrono ****   template<typename _Clock, typename _Duration1, typename _Duration2>
 113:/usr/include/c++/4.8/chrono ****     struct common_type<chrono::time_point<_Clock, _Duration1>,
 114:/usr/include/c++/4.8/chrono ****              chrono::time_point<_Clock, _Duration2>>
 115:/usr/include/c++/4.8/chrono ****     : public __timepoint_common_type_wrapper<typename __member_type_wrapper<
 116:/usr/include/c++/4.8/chrono ****              common_type<_Duration1, _Duration2>>::type, _Clock>::type
 117:/usr/include/c++/4.8/chrono ****     { };
 118:/usr/include/c++/4.8/chrono **** 
 119:/usr/include/c++/4.8/chrono **** _GLIBCXX_END_NAMESPACE_VERSION
 120:/usr/include/c++/4.8/chrono **** 
 121:/usr/include/c++/4.8/chrono ****   namespace chrono
 122:/usr/include/c++/4.8/chrono ****   {
 123:/usr/include/c++/4.8/chrono ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
 124:/usr/include/c++/4.8/chrono **** 
 125:/usr/include/c++/4.8/chrono ****     // Primary template for duration_cast impl.
 126:/usr/include/c++/4.8/chrono ****     template<typename _ToDur, typename _CF, typename _CR,
 127:/usr/include/c++/4.8/chrono **** 	     bool _NumIsOne = false, bool _DenIsOne = false>
 128:/usr/include/c++/4.8/chrono ****       struct __duration_cast_impl
 129:/usr/include/c++/4.8/chrono ****       {
 130:/usr/include/c++/4.8/chrono **** 	template<typename _Rep, typename _Period>
 131:/usr/include/c++/4.8/chrono **** 	  static constexpr _ToDur
 132:/usr/include/c++/4.8/chrono **** 	  __cast(const duration<_Rep, _Period>& __d)
 133:/usr/include/c++/4.8/chrono **** 	  {
 134:/usr/include/c++/4.8/chrono **** 	    typedef typename _ToDur::rep			__to_rep;
 135:/usr/include/c++/4.8/chrono **** 	    return _ToDur(static_cast<__to_rep>(static_cast<_CR>(__d.count())
 136:/usr/include/c++/4.8/chrono **** 	      * static_cast<_CR>(_CF::num)
 137:/usr/include/c++/4.8/chrono **** 	      / static_cast<_CR>(_CF::den)));
 138:/usr/include/c++/4.8/chrono **** 	  }
 139:/usr/include/c++/4.8/chrono ****       };
 140:/usr/include/c++/4.8/chrono **** 
 141:/usr/include/c++/4.8/chrono ****     template<typename _ToDur, typename _CF, typename _CR>
 142:/usr/include/c++/4.8/chrono ****       struct __duration_cast_impl<_ToDur, _CF, _CR, true, true>
 143:/usr/include/c++/4.8/chrono ****       {
 144:/usr/include/c++/4.8/chrono **** 	template<typename _Rep, typename _Period>
 145:/usr/include/c++/4.8/chrono **** 	  static constexpr _ToDur
 146:/usr/include/c++/4.8/chrono **** 	  __cast(const duration<_Rep, _Period>& __d)
 147:/usr/include/c++/4.8/chrono **** 	  {
 148:/usr/include/c++/4.8/chrono **** 	    typedef typename _ToDur::rep			__to_rep;
 149:/usr/include/c++/4.8/chrono **** 	    return _ToDur(static_cast<__to_rep>(__d.count()));
 150:/usr/include/c++/4.8/chrono **** 	  }
 151:/usr/include/c++/4.8/chrono ****       };
 152:/usr/include/c++/4.8/chrono **** 
 153:/usr/include/c++/4.8/chrono ****     template<typename _ToDur, typename _CF, typename _CR>
 154:/usr/include/c++/4.8/chrono ****       struct __duration_cast_impl<_ToDur, _CF, _CR, true, false>
GAS LISTING /tmp/cceISX6N.s 			page 36


 155:/usr/include/c++/4.8/chrono ****       {
 156:/usr/include/c++/4.8/chrono **** 	template<typename _Rep, typename _Period>
 157:/usr/include/c++/4.8/chrono **** 	  static constexpr _ToDur
 158:/usr/include/c++/4.8/chrono **** 	  __cast(const duration<_Rep, _Period>& __d)
 159:/usr/include/c++/4.8/chrono **** 	  {
 160:/usr/include/c++/4.8/chrono **** 	    typedef typename _ToDur::rep			__to_rep;
 161:/usr/include/c++/4.8/chrono **** 	    return _ToDur(static_cast<__to_rep>(
 162:/usr/include/c++/4.8/chrono **** 	      static_cast<_CR>(__d.count()) / static_cast<_CR>(_CF::den)));
 163:/usr/include/c++/4.8/chrono **** 	  }
 164:/usr/include/c++/4.8/chrono ****       };
 165:/usr/include/c++/4.8/chrono **** 
 166:/usr/include/c++/4.8/chrono ****     template<typename _ToDur, typename _CF, typename _CR>
 167:/usr/include/c++/4.8/chrono ****       struct __duration_cast_impl<_ToDur, _CF, _CR, false, true>
 168:/usr/include/c++/4.8/chrono ****       {
 169:/usr/include/c++/4.8/chrono **** 	template<typename _Rep, typename _Period>
 170:/usr/include/c++/4.8/chrono **** 	  static constexpr _ToDur
 171:/usr/include/c++/4.8/chrono **** 	  __cast(const duration<_Rep, _Period>& __d)
 172:/usr/include/c++/4.8/chrono **** 	  {
 173:/usr/include/c++/4.8/chrono **** 	    typedef typename _ToDur::rep			__to_rep;
 174:/usr/include/c++/4.8/chrono **** 	    return _ToDur(static_cast<__to_rep>(
 175:/usr/include/c++/4.8/chrono **** 	      static_cast<_CR>(__d.count()) * static_cast<_CR>(_CF::num)));
 176:/usr/include/c++/4.8/chrono **** 	  }
 177:/usr/include/c++/4.8/chrono ****       };
 178:/usr/include/c++/4.8/chrono **** 
 179:/usr/include/c++/4.8/chrono ****     template<typename _Tp>
 180:/usr/include/c++/4.8/chrono ****       struct __is_duration
 181:/usr/include/c++/4.8/chrono ****       : std::false_type
 182:/usr/include/c++/4.8/chrono ****       { };
 183:/usr/include/c++/4.8/chrono **** 
 184:/usr/include/c++/4.8/chrono ****     template<typename _Rep, typename _Period>
 185:/usr/include/c++/4.8/chrono ****       struct __is_duration<duration<_Rep, _Period>>
 186:/usr/include/c++/4.8/chrono ****       : std::true_type
 187:/usr/include/c++/4.8/chrono ****       { };
 188:/usr/include/c++/4.8/chrono **** 
 189:/usr/include/c++/4.8/chrono ****     /// duration_cast
 190:/usr/include/c++/4.8/chrono ****     template<typename _ToDur, typename _Rep, typename _Period>
 191:/usr/include/c++/4.8/chrono ****       constexpr typename enable_if<__is_duration<_ToDur>::value,
 192:/usr/include/c++/4.8/chrono **** 				   _ToDur>::type
 193:/usr/include/c++/4.8/chrono ****       duration_cast(const duration<_Rep, _Period>& __d)
 194:/usr/include/c++/4.8/chrono ****       {
 195:/usr/include/c++/4.8/chrono **** 	typedef typename _ToDur::period				__to_period;
 196:/usr/include/c++/4.8/chrono **** 	typedef typename _ToDur::rep				__to_rep;
 197:/usr/include/c++/4.8/chrono **** 	typedef ratio_divide<_Period, __to_period> 		__cf;
 198:/usr/include/c++/4.8/chrono **** 	typedef typename common_type<__to_rep, _Rep, intmax_t>::type
 199:/usr/include/c++/4.8/chrono **** 	  							__cr;
 200:/usr/include/c++/4.8/chrono **** 	typedef  __duration_cast_impl<_ToDur, __cf, __cr,
 201:/usr/include/c++/4.8/chrono **** 				      __cf::num == 1, __cf::den == 1> __dc;
 202:/usr/include/c++/4.8/chrono **** 	return __dc::__cast(__d);
 203:/usr/include/c++/4.8/chrono ****       }
 204:/usr/include/c++/4.8/chrono **** 
 205:/usr/include/c++/4.8/chrono ****     /// treat_as_floating_point
 206:/usr/include/c++/4.8/chrono ****     template<typename _Rep>
 207:/usr/include/c++/4.8/chrono ****       struct treat_as_floating_point
 208:/usr/include/c++/4.8/chrono ****       : is_floating_point<_Rep>
 209:/usr/include/c++/4.8/chrono ****       { };
 210:/usr/include/c++/4.8/chrono **** 
 211:/usr/include/c++/4.8/chrono ****     /// duration_values
GAS LISTING /tmp/cceISX6N.s 			page 37


 212:/usr/include/c++/4.8/chrono ****     template<typename _Rep>
 213:/usr/include/c++/4.8/chrono ****       struct duration_values
 214:/usr/include/c++/4.8/chrono ****       {
 215:/usr/include/c++/4.8/chrono **** 	static constexpr _Rep
 216:/usr/include/c++/4.8/chrono **** 	zero()
 217:/usr/include/c++/4.8/chrono **** 	{ return _Rep(0); }
 218:/usr/include/c++/4.8/chrono **** 
 219:/usr/include/c++/4.8/chrono **** 	static constexpr _Rep
 220:/usr/include/c++/4.8/chrono **** 	max()
 221:/usr/include/c++/4.8/chrono **** 	{ return numeric_limits<_Rep>::max(); }
 222:/usr/include/c++/4.8/chrono **** 
 223:/usr/include/c++/4.8/chrono **** 	static constexpr _Rep
 224:/usr/include/c++/4.8/chrono **** 	min()
 225:/usr/include/c++/4.8/chrono **** 	{ return numeric_limits<_Rep>::lowest(); }
 226:/usr/include/c++/4.8/chrono ****       };
 227:/usr/include/c++/4.8/chrono **** 
 228:/usr/include/c++/4.8/chrono ****     template<typename _Tp>
 229:/usr/include/c++/4.8/chrono ****       struct __is_ratio
 230:/usr/include/c++/4.8/chrono ****       : std::false_type
 231:/usr/include/c++/4.8/chrono ****       { };
 232:/usr/include/c++/4.8/chrono **** 
 233:/usr/include/c++/4.8/chrono ****     template<intmax_t _Num, intmax_t _Den>
 234:/usr/include/c++/4.8/chrono ****       struct __is_ratio<ratio<_Num, _Den>>
 235:/usr/include/c++/4.8/chrono ****       : std::true_type
 236:/usr/include/c++/4.8/chrono ****       { };
 237:/usr/include/c++/4.8/chrono **** 
 238:/usr/include/c++/4.8/chrono ****     /// duration
 239:/usr/include/c++/4.8/chrono ****     template<typename _Rep, typename _Period>
 240:/usr/include/c++/4.8/chrono ****       struct duration
 241:/usr/include/c++/4.8/chrono ****       {
 242:/usr/include/c++/4.8/chrono **** 	typedef _Rep						rep;
 243:/usr/include/c++/4.8/chrono **** 	typedef _Period 					period;
 244:/usr/include/c++/4.8/chrono **** 
 245:/usr/include/c++/4.8/chrono **** 	static_assert(!__is_duration<_Rep>::value, "rep cannot be a duration");
 246:/usr/include/c++/4.8/chrono **** 	static_assert(__is_ratio<_Period>::value,
 247:/usr/include/c++/4.8/chrono **** 		      "period must be a specialization of ratio");
 248:/usr/include/c++/4.8/chrono **** 	static_assert(_Period::num > 0, "period must be positive");
 249:/usr/include/c++/4.8/chrono **** 
 250:/usr/include/c++/4.8/chrono **** 	// 20.11.5.1 construction / copy / destroy
 251:/usr/include/c++/4.8/chrono **** 	constexpr duration() = default;
 252:/usr/include/c++/4.8/chrono **** 
 253:/usr/include/c++/4.8/chrono **** 	// NB: Make constexpr implicit. This cannot be explicitly
 254:/usr/include/c++/4.8/chrono **** 	// constexpr, as any UDT that is not a literal type with a
 255:/usr/include/c++/4.8/chrono **** 	// constexpr copy constructor will be ill-formed.
 256:/usr/include/c++/4.8/chrono **** 	duration(const duration&) = default;
 257:/usr/include/c++/4.8/chrono **** 
 258:/usr/include/c++/4.8/chrono **** 	template<typename _Rep2, typename = typename
 259:/usr/include/c++/4.8/chrono **** 	       enable_if<is_convertible<_Rep2, rep>::value
 260:/usr/include/c++/4.8/chrono **** 			 && (treat_as_floating_point<rep>::value
 261:/usr/include/c++/4.8/chrono **** 			     || !treat_as_floating_point<_Rep2>::value)>::type>
 262:/usr/include/c++/4.8/chrono **** 	  constexpr explicit duration(const _Rep2& __rep)
 263:/usr/include/c++/4.8/chrono **** 	  : __r(static_cast<rep>(__rep)) { }
 264:/usr/include/c++/4.8/chrono **** 
 265:/usr/include/c++/4.8/chrono **** 	template<typename _Rep2, typename _Period2, typename = typename
 266:/usr/include/c++/4.8/chrono **** 	       enable_if<treat_as_floating_point<rep>::value
 267:/usr/include/c++/4.8/chrono **** 			 || (ratio_divide<_Period2, period>::den == 1
 268:/usr/include/c++/4.8/chrono **** 			     && !treat_as_floating_point<_Rep2>::value)>::type>
GAS LISTING /tmp/cceISX6N.s 			page 38


 269:/usr/include/c++/4.8/chrono **** 	  constexpr duration(const duration<_Rep2, _Period2>& __d)
 270:/usr/include/c++/4.8/chrono **** 	  : __r(duration_cast<duration>(__d).count()) { }
 271:/usr/include/c++/4.8/chrono **** 
 272:/usr/include/c++/4.8/chrono **** 	~duration() = default;
 273:/usr/include/c++/4.8/chrono **** 	duration& operator=(const duration&) = default;
 274:/usr/include/c++/4.8/chrono **** 
 275:/usr/include/c++/4.8/chrono **** 	// 20.11.5.2 observer
 276:/usr/include/c++/4.8/chrono **** 	constexpr rep
 277:/usr/include/c++/4.8/chrono **** 	count() const
 278:/usr/include/c++/4.8/chrono **** 	{ return __r; }
 279:/usr/include/c++/4.8/chrono **** 
 280:/usr/include/c++/4.8/chrono **** 	// 20.11.5.3 arithmetic
 281:/usr/include/c++/4.8/chrono **** 	constexpr duration
 282:/usr/include/c++/4.8/chrono **** 	operator+() const
 283:/usr/include/c++/4.8/chrono **** 	{ return *this; }
 284:/usr/include/c++/4.8/chrono **** 
 285:/usr/include/c++/4.8/chrono **** 	constexpr duration
 286:/usr/include/c++/4.8/chrono **** 	operator-() const
 287:/usr/include/c++/4.8/chrono **** 	{ return duration(-__r); }
 288:/usr/include/c++/4.8/chrono **** 
 289:/usr/include/c++/4.8/chrono **** 	duration&
 290:/usr/include/c++/4.8/chrono **** 	operator++()
 291:/usr/include/c++/4.8/chrono **** 	{
 292:/usr/include/c++/4.8/chrono **** 	  ++__r;
 293:/usr/include/c++/4.8/chrono **** 	  return *this;
 294:/usr/include/c++/4.8/chrono **** 	}
 295:/usr/include/c++/4.8/chrono **** 
 296:/usr/include/c++/4.8/chrono **** 	duration
 297:/usr/include/c++/4.8/chrono **** 	operator++(int)
 298:/usr/include/c++/4.8/chrono **** 	{ return duration(__r++); }
 299:/usr/include/c++/4.8/chrono **** 
 300:/usr/include/c++/4.8/chrono **** 	duration&
 301:/usr/include/c++/4.8/chrono **** 	operator--()
 302:/usr/include/c++/4.8/chrono **** 	{
 303:/usr/include/c++/4.8/chrono **** 	  --__r;
 304:/usr/include/c++/4.8/chrono **** 	  return *this;
 305:/usr/include/c++/4.8/chrono **** 	}
 306:/usr/include/c++/4.8/chrono **** 
 307:/usr/include/c++/4.8/chrono **** 	duration
 308:/usr/include/c++/4.8/chrono **** 	operator--(int)
 309:/usr/include/c++/4.8/chrono **** 	{ return duration(__r--); }
 310:/usr/include/c++/4.8/chrono **** 
 311:/usr/include/c++/4.8/chrono **** 	duration&
 312:/usr/include/c++/4.8/chrono **** 	operator+=(const duration& __d)
 313:/usr/include/c++/4.8/chrono **** 	{
 314:/usr/include/c++/4.8/chrono **** 	  __r += __d.count();
 315:/usr/include/c++/4.8/chrono **** 	  return *this;
 316:/usr/include/c++/4.8/chrono **** 	}
 317:/usr/include/c++/4.8/chrono **** 
 318:/usr/include/c++/4.8/chrono **** 	duration&
 319:/usr/include/c++/4.8/chrono **** 	operator-=(const duration& __d)
 320:/usr/include/c++/4.8/chrono **** 	{
 321:/usr/include/c++/4.8/chrono **** 	  __r -= __d.count();
 322:/usr/include/c++/4.8/chrono **** 	  return *this;
 323:/usr/include/c++/4.8/chrono **** 	}
 324:/usr/include/c++/4.8/chrono **** 
 325:/usr/include/c++/4.8/chrono **** 	duration&
GAS LISTING /tmp/cceISX6N.s 			page 39


 326:/usr/include/c++/4.8/chrono **** 	operator*=(const rep& __rhs)
 327:/usr/include/c++/4.8/chrono **** 	{
 328:/usr/include/c++/4.8/chrono **** 	  __r *= __rhs;
 329:/usr/include/c++/4.8/chrono **** 	  return *this;
 330:/usr/include/c++/4.8/chrono **** 	}
 331:/usr/include/c++/4.8/chrono **** 
 332:/usr/include/c++/4.8/chrono **** 	duration&
 333:/usr/include/c++/4.8/chrono **** 	operator/=(const rep& __rhs)
 334:/usr/include/c++/4.8/chrono **** 	{
 335:/usr/include/c++/4.8/chrono **** 	  __r /= __rhs;
 336:/usr/include/c++/4.8/chrono **** 	  return *this;
 337:/usr/include/c++/4.8/chrono **** 	}
 338:/usr/include/c++/4.8/chrono **** 
 339:/usr/include/c++/4.8/chrono **** 	// DR 934.
 340:/usr/include/c++/4.8/chrono **** 	template<typename _Rep2 = rep>
 341:/usr/include/c++/4.8/chrono **** 	  typename enable_if<!treat_as_floating_point<_Rep2>::value,
 342:/usr/include/c++/4.8/chrono **** 			     duration&>::type
 343:/usr/include/c++/4.8/chrono **** 	  operator%=(const rep& __rhs)
 344:/usr/include/c++/4.8/chrono **** 	  {
 345:/usr/include/c++/4.8/chrono **** 	    __r %= __rhs;
 346:/usr/include/c++/4.8/chrono **** 	    return *this;
 347:/usr/include/c++/4.8/chrono **** 	  }
 348:/usr/include/c++/4.8/chrono **** 
 349:/usr/include/c++/4.8/chrono **** 	template<typename _Rep2 = rep>
 350:/usr/include/c++/4.8/chrono **** 	  typename enable_if<!treat_as_floating_point<_Rep2>::value,
 351:/usr/include/c++/4.8/chrono **** 			     duration&>::type
 352:/usr/include/c++/4.8/chrono **** 	  operator%=(const duration& __d)
 353:/usr/include/c++/4.8/chrono **** 	  {
 354:/usr/include/c++/4.8/chrono **** 	    __r %= __d.count();
 355:/usr/include/c++/4.8/chrono **** 	    return *this;
 356:/usr/include/c++/4.8/chrono **** 	  }
 357:/usr/include/c++/4.8/chrono **** 
 358:/usr/include/c++/4.8/chrono **** 	// 20.11.5.4 special values
 359:/usr/include/c++/4.8/chrono **** 	static constexpr duration
 360:/usr/include/c++/4.8/chrono **** 	zero()
 361:/usr/include/c++/4.8/chrono **** 	{ return duration(duration_values<rep>::zero()); }
 362:/usr/include/c++/4.8/chrono **** 
 363:/usr/include/c++/4.8/chrono **** 	static constexpr duration
 364:/usr/include/c++/4.8/chrono **** 	min()
 365:/usr/include/c++/4.8/chrono **** 	{ return duration(duration_values<rep>::min()); }
 366:/usr/include/c++/4.8/chrono **** 
 367:/usr/include/c++/4.8/chrono **** 	static constexpr duration
 368:/usr/include/c++/4.8/chrono **** 	max()
 369:/usr/include/c++/4.8/chrono **** 	{ return duration(duration_values<rep>::max()); }
 370:/usr/include/c++/4.8/chrono **** 
 371:/usr/include/c++/4.8/chrono ****       private:
 372:/usr/include/c++/4.8/chrono **** 	rep __r;
 373:/usr/include/c++/4.8/chrono ****       };
 374:/usr/include/c++/4.8/chrono **** 
 375:/usr/include/c++/4.8/chrono ****     template<typename _Rep1, typename _Period1,
 376:/usr/include/c++/4.8/chrono **** 	     typename _Rep2, typename _Period2>
 377:/usr/include/c++/4.8/chrono ****       constexpr typename common_type<duration<_Rep1, _Period1>,
 378:/usr/include/c++/4.8/chrono **** 				     duration<_Rep2, _Period2>>::type
 379:/usr/include/c++/4.8/chrono ****       operator+(const duration<_Rep1, _Period1>& __lhs,
 380:/usr/include/c++/4.8/chrono **** 		const duration<_Rep2, _Period2>& __rhs)
 381:/usr/include/c++/4.8/chrono ****       {
 382:/usr/include/c++/4.8/chrono **** 	typedef duration<_Rep1, _Period1>			__dur1;
GAS LISTING /tmp/cceISX6N.s 			page 40


 383:/usr/include/c++/4.8/chrono **** 	typedef duration<_Rep2, _Period2>			__dur2;
 384:/usr/include/c++/4.8/chrono **** 	typedef typename common_type<__dur1,__dur2>::type	__cd;
 385:/usr/include/c++/4.8/chrono **** 	return __cd(__cd(__lhs).count() + __cd(__rhs).count());
 386:/usr/include/c++/4.8/chrono ****       }
 387:/usr/include/c++/4.8/chrono **** 
 388:/usr/include/c++/4.8/chrono ****     template<typename _Rep1, typename _Period1,
 389:/usr/include/c++/4.8/chrono **** 	     typename _Rep2, typename _Period2>
 390:/usr/include/c++/4.8/chrono ****       constexpr typename common_type<duration<_Rep1, _Period1>,
 391:/usr/include/c++/4.8/chrono **** 				     duration<_Rep2, _Period2>>::type
 392:/usr/include/c++/4.8/chrono ****       operator-(const duration<_Rep1, _Period1>& __lhs,
 393:/usr/include/c++/4.8/chrono **** 		const duration<_Rep2, _Period2>& __rhs)
 394:/usr/include/c++/4.8/chrono ****       {
 395:/usr/include/c++/4.8/chrono **** 	typedef duration<_Rep1, _Period1>			__dur1;
 396:/usr/include/c++/4.8/chrono **** 	typedef duration<_Rep2, _Period2>			__dur2;
 397:/usr/include/c++/4.8/chrono **** 	typedef typename common_type<__dur1,__dur2>::type	__cd;
 398:/usr/include/c++/4.8/chrono **** 	return __cd(__cd(__lhs).count() - __cd(__rhs).count());
 233              		.loc 7 398 0
 234 004e 4C29ED   		sub	rbp, r13
 235              	.LVL12:
 236 0051 48037B08 		add	rdi, QWORD PTR [rbx+8]
 237              	.LBE624:
 238              	.LBE623:
 239              	.LBE622:
 240              	.LBB625:
 241              	.LBB620:
 242              	.LBB618:
 243              	.LBB616:
 244              	.LBB614:
 245              		.loc 6 643 0
 246 0055 A801     		test	al, 1
 247 0057 7408     		je	.L11
 248 0059 488B17   		mov	rdx, QWORD PTR [rdi]
 249 005c 488B4402 		mov	rax, QWORD PTR [rdx-1+rax]
 249      FF
 250              	.L11:
 251 0061 FFD0     		call	rax
 252              	.LVL13:
 253              	.LBE614:
 254              	.LBE616:
 255              	.LBE618:
 256              	.LBE620:
 257              	.LBE625:
 258              	.LBB626:
 259              	.LBB627:
 260              	.LBB628:
 261              	.LBB629:
 262              	.LBB630:
 263              	.LBB631:
 264              	.LBB632:
 265              		.file 8 "/usr/include/c++/4.8/bits/basic_string.h"
   1:/usr/include/c++/4.8/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/4.8/bits/basic_string.h **** 
   3:/usr/include/c++/4.8/bits/basic_string.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/basic_string.h **** //
   5:/usr/include/c++/4.8/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/basic_string.h **** // terms of the GNU General Public License as published by the
GAS LISTING /tmp/cceISX6N.s 			page 41


   8:/usr/include/c++/4.8/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/4.8/bits/basic_string.h **** 
  11:/usr/include/c++/4.8/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/basic_string.h **** 
  16:/usr/include/c++/4.8/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/basic_string.h **** 
  20:/usr/include/c++/4.8/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/basic_string.h **** 
  25:/usr/include/c++/4.8/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/4.8/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/4.8/bits/basic_string.h ****  */
  29:/usr/include/c++/4.8/bits/basic_string.h **** 
  30:/usr/include/c++/4.8/bits/basic_string.h **** //
  31:/usr/include/c++/4.8/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/4.8/bits/basic_string.h **** //
  33:/usr/include/c++/4.8/bits/basic_string.h **** 
  34:/usr/include/c++/4.8/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/4.8/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/4.8/bits/basic_string.h **** 
  37:/usr/include/c++/4.8/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/4.8/bits/basic_string.h **** 
  39:/usr/include/c++/4.8/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/4.8/bits/basic_string.h **** #include <debug/debug.h>
  41:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
  42:/usr/include/c++/4.8/bits/basic_string.h **** #include <initializer_list>
  43:/usr/include/c++/4.8/bits/basic_string.h **** #endif
  44:/usr/include/c++/4.8/bits/basic_string.h **** 
  45:/usr/include/c++/4.8/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  46:/usr/include/c++/4.8/bits/basic_string.h **** {
  47:/usr/include/c++/4.8/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  48:/usr/include/c++/4.8/bits/basic_string.h **** 
  49:/usr/include/c++/4.8/bits/basic_string.h ****   /**
  50:/usr/include/c++/4.8/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  51:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  52:/usr/include/c++/4.8/bits/basic_string.h ****    *
  53:/usr/include/c++/4.8/bits/basic_string.h ****    *  @ingroup strings
  54:/usr/include/c++/4.8/bits/basic_string.h ****    *  @ingroup sequences
  55:/usr/include/c++/4.8/bits/basic_string.h ****    *
  56:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  57:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  58:/usr/include/c++/4.8/bits/basic_string.h ****    *                   char_traits<_CharT>.
  59:/usr/include/c++/4.8/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  60:/usr/include/c++/4.8/bits/basic_string.h ****    *
  61:/usr/include/c++/4.8/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  62:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  63:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  64:/usr/include/c++/4.8/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
GAS LISTING /tmp/cceISX6N.s 			page 42


  65:/usr/include/c++/4.8/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  66:/usr/include/c++/4.8/bits/basic_string.h ****    *
  67:/usr/include/c++/4.8/bits/basic_string.h ****    *  @doctodo
  68:/usr/include/c++/4.8/bits/basic_string.h ****    *
  69:/usr/include/c++/4.8/bits/basic_string.h ****    *
  70:/usr/include/c++/4.8/bits/basic_string.h ****    *  Documentation?  What's that?
  71:/usr/include/c++/4.8/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  72:/usr/include/c++/4.8/bits/basic_string.h ****    *
  73:/usr/include/c++/4.8/bits/basic_string.h ****    *  A string looks like this:
  74:/usr/include/c++/4.8/bits/basic_string.h ****    *
  75:/usr/include/c++/4.8/bits/basic_string.h ****    *  @code
  76:/usr/include/c++/4.8/bits/basic_string.h ****    *                                        [_Rep]
  77:/usr/include/c++/4.8/bits/basic_string.h ****    *                                        _M_length
  78:/usr/include/c++/4.8/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  79:/usr/include/c++/4.8/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  80:/usr/include/c++/4.8/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  81:/usr/include/c++/4.8/bits/basic_string.h ****    *  @endcode
  82:/usr/include/c++/4.8/bits/basic_string.h ****    *
  83:/usr/include/c++/4.8/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  84:/usr/include/c++/4.8/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  85:/usr/include/c++/4.8/bits/basic_string.h ****    *  pointer to the header.
  86:/usr/include/c++/4.8/bits/basic_string.h ****    *
  87:/usr/include/c++/4.8/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  88:/usr/include/c++/4.8/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  89:/usr/include/c++/4.8/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  90:/usr/include/c++/4.8/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  91:/usr/include/c++/4.8/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  92:/usr/include/c++/4.8/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  93:/usr/include/c++/4.8/bits/basic_string.h ****    *  object at the front.
  94:/usr/include/c++/4.8/bits/basic_string.h ****    *
  95:/usr/include/c++/4.8/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  96:/usr/include/c++/4.8/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  97:/usr/include/c++/4.8/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  98:/usr/include/c++/4.8/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  99:/usr/include/c++/4.8/bits/basic_string.h ****    *  string length.)
 100:/usr/include/c++/4.8/bits/basic_string.h ****    *
 101:/usr/include/c++/4.8/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
 102:/usr/include/c++/4.8/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 103:/usr/include/c++/4.8/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 104:/usr/include/c++/4.8/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 105:/usr/include/c++/4.8/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 106:/usr/include/c++/4.8/bits/basic_string.h ****    *
 107:/usr/include/c++/4.8/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
 108:/usr/include/c++/4.8/bits/basic_string.h ****    *  for a C++ string implementation.
 109:/usr/include/c++/4.8/bits/basic_string.h ****   */
 110:/usr/include/c++/4.8/bits/basic_string.h ****   // 21.3  Template class basic_string
 111:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 112:/usr/include/c++/4.8/bits/basic_string.h ****     class basic_string
 113:/usr/include/c++/4.8/bits/basic_string.h ****     {
 114:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 115:/usr/include/c++/4.8/bits/basic_string.h **** 
 116:/usr/include/c++/4.8/bits/basic_string.h ****       // Types:
 117:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 118:/usr/include/c++/4.8/bits/basic_string.h ****       typedef _Traits					    traits_type;
 119:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 120:/usr/include/c++/4.8/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 121:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
GAS LISTING /tmp/cceISX6N.s 			page 43


 122:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 123:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 124:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 125:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 126:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 127:/usr/include/c++/4.8/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 128:/usr/include/c++/4.8/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 129:/usr/include/c++/4.8/bits/basic_string.h ****                                                             const_iterator;
 130:/usr/include/c++/4.8/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 131:/usr/include/c++/4.8/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 132:/usr/include/c++/4.8/bits/basic_string.h **** 
 133:/usr/include/c++/4.8/bits/basic_string.h ****     private:
 134:/usr/include/c++/4.8/bits/basic_string.h ****       // _Rep: string representation
 135:/usr/include/c++/4.8/bits/basic_string.h ****       //   Invariants:
 136:/usr/include/c++/4.8/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 137:/usr/include/c++/4.8/bits/basic_string.h ****       //      must be kept null-terminated.
 138:/usr/include/c++/4.8/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 139:/usr/include/c++/4.8/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 140:/usr/include/c++/4.8/bits/basic_string.h ****       //   3. _M_refcount has three states:
 141:/usr/include/c++/4.8/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 142:/usr/include/c++/4.8/bits/basic_string.h ****       //       0: one reference, non-const.
 143:/usr/include/c++/4.8/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 144:/usr/include/c++/4.8/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 145:/usr/include/c++/4.8/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 146:/usr/include/c++/4.8/bits/basic_string.h ****       //      empty string representation needs no constructor.
 147:/usr/include/c++/4.8/bits/basic_string.h **** 
 148:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Rep_base
 149:/usr/include/c++/4.8/bits/basic_string.h ****       {
 150:/usr/include/c++/4.8/bits/basic_string.h **** 	size_type		_M_length;
 151:/usr/include/c++/4.8/bits/basic_string.h **** 	size_type		_M_capacity;
 152:/usr/include/c++/4.8/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 153:/usr/include/c++/4.8/bits/basic_string.h ****       };
 154:/usr/include/c++/4.8/bits/basic_string.h **** 
 155:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Rep : _Rep_base
 156:/usr/include/c++/4.8/bits/basic_string.h ****       {
 157:/usr/include/c++/4.8/bits/basic_string.h **** 	// Types:
 158:/usr/include/c++/4.8/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 159:/usr/include/c++/4.8/bits/basic_string.h **** 
 160:/usr/include/c++/4.8/bits/basic_string.h **** 	// (Public) Data members:
 161:/usr/include/c++/4.8/bits/basic_string.h **** 
 162:/usr/include/c++/4.8/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 163:/usr/include/c++/4.8/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 164:/usr/include/c++/4.8/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
 165:/usr/include/c++/4.8/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 166:/usr/include/c++/4.8/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 167:/usr/include/c++/4.8/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 168:/usr/include/c++/4.8/bits/basic_string.h **** 	// look like this:
 169:/usr/include/c++/4.8/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 170:/usr/include/c++/4.8/bits/basic_string.h **** 	// Solving for m:
 171:/usr/include/c++/4.8/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 172:/usr/include/c++/4.8/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 173:/usr/include/c++/4.8/bits/basic_string.h **** 	static const size_type	_S_max_size;
 174:/usr/include/c++/4.8/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 175:/usr/include/c++/4.8/bits/basic_string.h **** 
 176:/usr/include/c++/4.8/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 177:/usr/include/c++/4.8/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 178:/usr/include/c++/4.8/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
GAS LISTING /tmp/cceISX6N.s 			page 44


 179:/usr/include/c++/4.8/bits/basic_string.h **** 
 180:/usr/include/c++/4.8/bits/basic_string.h ****         static _Rep&
 181:/usr/include/c++/4.8/bits/basic_string.h ****         _S_empty_rep()
 182:/usr/include/c++/4.8/bits/basic_string.h ****         { 
 183:/usr/include/c++/4.8/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 184:/usr/include/c++/4.8/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 185:/usr/include/c++/4.8/bits/basic_string.h **** 	  // be reasonably safe in this case.
 186:/usr/include/c++/4.8/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 187:/usr/include/c++/4.8/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 188:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 189:/usr/include/c++/4.8/bits/basic_string.h **** 
 190:/usr/include/c++/4.8/bits/basic_string.h ****         bool
 191:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_is_leaked() const
 192:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 193:/usr/include/c++/4.8/bits/basic_string.h **** 
 194:/usr/include/c++/4.8/bits/basic_string.h ****         bool
 195:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_is_shared() const
 196:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 197:/usr/include/c++/4.8/bits/basic_string.h **** 
 198:/usr/include/c++/4.8/bits/basic_string.h ****         void
 199:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_leaked()
 200:/usr/include/c++/4.8/bits/basic_string.h ****         { this->_M_refcount = -1; }
 201:/usr/include/c++/4.8/bits/basic_string.h **** 
 202:/usr/include/c++/4.8/bits/basic_string.h ****         void
 203:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_sharable()
 204:/usr/include/c++/4.8/bits/basic_string.h ****         { this->_M_refcount = 0; }
 205:/usr/include/c++/4.8/bits/basic_string.h **** 
 206:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 207:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n)
 208:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 209:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 210:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 211:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 212:/usr/include/c++/4.8/bits/basic_string.h **** 	    {
 213:/usr/include/c++/4.8/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 214:/usr/include/c++/4.8/bits/basic_string.h **** 	      this->_M_length = __n;
 215:/usr/include/c++/4.8/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 216:/usr/include/c++/4.8/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 217:/usr/include/c++/4.8/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 218:/usr/include/c++/4.8/bits/basic_string.h **** 	    }
 219:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 220:/usr/include/c++/4.8/bits/basic_string.h **** 
 221:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 222:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_refdata() throw()
 223:/usr/include/c++/4.8/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 224:/usr/include/c++/4.8/bits/basic_string.h **** 
 225:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 226:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 227:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 228:/usr/include/c++/4.8/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 229:/usr/include/c++/4.8/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 230:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 231:/usr/include/c++/4.8/bits/basic_string.h **** 
 232:/usr/include/c++/4.8/bits/basic_string.h **** 	// Create & Destroy
 233:/usr/include/c++/4.8/bits/basic_string.h **** 	static _Rep*
 234:/usr/include/c++/4.8/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 235:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 45


 236:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 237:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a)
 238:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 239:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 240:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 241:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 242:/usr/include/c++/4.8/bits/basic_string.h **** 	    {
 243:/usr/include/c++/4.8/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 244:/usr/include/c++/4.8/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 245:/usr/include/c++/4.8/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 246:/usr/include/c++/4.8/bits/basic_string.h **** 							 -1) <= 0)
 247:/usr/include/c++/4.8/bits/basic_string.h **** 		{
 248:/usr/include/c++/4.8/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 249:/usr/include/c++/4.8/bits/basic_string.h **** 		  _M_destroy(__a);
 250:/usr/include/c++/4.8/bits/basic_string.h **** 		}
 251:/usr/include/c++/4.8/bits/basic_string.h **** 	    }
 252:/usr/include/c++/4.8/bits/basic_string.h **** 	}  // XXX MT
 253:/usr/include/c++/4.8/bits/basic_string.h **** 
 254:/usr/include/c++/4.8/bits/basic_string.h **** 	void
 255:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 256:/usr/include/c++/4.8/bits/basic_string.h **** 
 257:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 258:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_refcopy() throw()
 259:/usr/include/c++/4.8/bits/basic_string.h **** 	{
 260:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 261:/usr/include/c++/4.8/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 262:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 263:/usr/include/c++/4.8/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 264:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _M_refdata();
 265:/usr/include/c++/4.8/bits/basic_string.h **** 	}  // XXX MT
 266:/usr/include/c++/4.8/bits/basic_string.h **** 
 267:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT*
 268:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 269:/usr/include/c++/4.8/bits/basic_string.h ****       };
 270:/usr/include/c++/4.8/bits/basic_string.h **** 
 271:/usr/include/c++/4.8/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 272:/usr/include/c++/4.8/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 273:/usr/include/c++/4.8/bits/basic_string.h ****       {
 274:/usr/include/c++/4.8/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a)
 275:/usr/include/c++/4.8/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 276:/usr/include/c++/4.8/bits/basic_string.h **** 
 277:/usr/include/c++/4.8/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 278:/usr/include/c++/4.8/bits/basic_string.h ****       };
 279:/usr/include/c++/4.8/bits/basic_string.h **** 
 280:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 281:/usr/include/c++/4.8/bits/basic_string.h ****       // Data Members (public):
 282:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 283:/usr/include/c++/4.8/bits/basic_string.h ****       // size that the allocator can hold.
 284:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 285:/usr/include/c++/4.8/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 286:/usr/include/c++/4.8/bits/basic_string.h **** 
 287:/usr/include/c++/4.8/bits/basic_string.h ****     private:
 288:/usr/include/c++/4.8/bits/basic_string.h ****       // Data Members (private):
 289:/usr/include/c++/4.8/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 290:/usr/include/c++/4.8/bits/basic_string.h **** 
 291:/usr/include/c++/4.8/bits/basic_string.h ****       _CharT*
 292:/usr/include/c++/4.8/bits/basic_string.h ****       _M_data() const
GAS LISTING /tmp/cceISX6N.s 			page 46


 293:/usr/include/c++/4.8/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 266              		.loc 8 293 0
 267 0063 498B3424 		mov	rsi, QWORD PTR [r12]
 268              	.LBE632:
 269              	.LBE631:
 270              	.LBE630:
 271              	.LBE629:
 272              	.LBE628:
 294:/usr/include/c++/4.8/bits/basic_string.h **** 
 295:/usr/include/c++/4.8/bits/basic_string.h ****       _CharT*
 296:/usr/include/c++/4.8/bits/basic_string.h ****       _M_data(_CharT* __p)
 297:/usr/include/c++/4.8/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 298:/usr/include/c++/4.8/bits/basic_string.h **** 
 299:/usr/include/c++/4.8/bits/basic_string.h ****       _Rep*
 300:/usr/include/c++/4.8/bits/basic_string.h ****       _M_rep() const
 301:/usr/include/c++/4.8/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
 302:/usr/include/c++/4.8/bits/basic_string.h **** 
 303:/usr/include/c++/4.8/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
 304:/usr/include/c++/4.8/bits/basic_string.h ****       // but they do not call _M_leak.
 305:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 306:/usr/include/c++/4.8/bits/basic_string.h ****       _M_ibegin() const
 307:/usr/include/c++/4.8/bits/basic_string.h ****       { return iterator(_M_data()); }
 308:/usr/include/c++/4.8/bits/basic_string.h **** 
 309:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 310:/usr/include/c++/4.8/bits/basic_string.h ****       _M_iend() const
 311:/usr/include/c++/4.8/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 312:/usr/include/c++/4.8/bits/basic_string.h **** 
 313:/usr/include/c++/4.8/bits/basic_string.h ****       void
 314:/usr/include/c++/4.8/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
 315:/usr/include/c++/4.8/bits/basic_string.h ****       {
 316:/usr/include/c++/4.8/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
 317:/usr/include/c++/4.8/bits/basic_string.h **** 	  _M_leak_hard();
 318:/usr/include/c++/4.8/bits/basic_string.h ****       }
 319:/usr/include/c++/4.8/bits/basic_string.h **** 
 320:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 321:/usr/include/c++/4.8/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 322:/usr/include/c++/4.8/bits/basic_string.h ****       {
 323:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__pos > this->size())
 324:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N(__s));
 325:/usr/include/c++/4.8/bits/basic_string.h **** 	return __pos;
 326:/usr/include/c++/4.8/bits/basic_string.h ****       }
 327:/usr/include/c++/4.8/bits/basic_string.h **** 
 328:/usr/include/c++/4.8/bits/basic_string.h ****       void
 329:/usr/include/c++/4.8/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 330:/usr/include/c++/4.8/bits/basic_string.h ****       {
 331:/usr/include/c++/4.8/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 332:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 333:/usr/include/c++/4.8/bits/basic_string.h ****       }
 334:/usr/include/c++/4.8/bits/basic_string.h **** 
 335:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 337:/usr/include/c++/4.8/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const
 338:/usr/include/c++/4.8/bits/basic_string.h ****       {
 339:/usr/include/c++/4.8/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/usr/include/c++/4.8/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/usr/include/c++/4.8/bits/basic_string.h ****       }
 342:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 47


 343:/usr/include/c++/4.8/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/usr/include/c++/4.8/bits/basic_string.h ****       bool
 345:/usr/include/c++/4.8/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const
 346:/usr/include/c++/4.8/bits/basic_string.h ****       {
 347:/usr/include/c++/4.8/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/usr/include/c++/4.8/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/usr/include/c++/4.8/bits/basic_string.h ****       }
 350:/usr/include/c++/4.8/bits/basic_string.h **** 
 351:/usr/include/c++/4.8/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/usr/include/c++/4.8/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 354:/usr/include/c++/4.8/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/usr/include/c++/4.8/bits/basic_string.h ****       {
 356:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 357:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 359:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/usr/include/c++/4.8/bits/basic_string.h ****       }
 361:/usr/include/c++/4.8/bits/basic_string.h **** 
 362:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 363:/usr/include/c++/4.8/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/usr/include/c++/4.8/bits/basic_string.h ****       {
 365:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 366:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 367:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 368:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
 369:/usr/include/c++/4.8/bits/basic_string.h ****       }
 370:/usr/include/c++/4.8/bits/basic_string.h **** 
 371:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 372:/usr/include/c++/4.8/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/usr/include/c++/4.8/bits/basic_string.h ****       {
 374:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n == 1)
 375:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 377:/usr/include/c++/4.8/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
 378:/usr/include/c++/4.8/bits/basic_string.h ****       }
 379:/usr/include/c++/4.8/bits/basic_string.h **** 
 380:/usr/include/c++/4.8/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/usr/include/c++/4.8/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Iterator>
 383:/usr/include/c++/4.8/bits/basic_string.h ****         static void
 384:/usr/include/c++/4.8/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/usr/include/c++/4.8/bits/basic_string.h ****         {
 386:/usr/include/c++/4.8/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, ++__p)
 387:/usr/include/c++/4.8/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/usr/include/c++/4.8/bits/basic_string.h **** 	}
 389:/usr/include/c++/4.8/bits/basic_string.h **** 
 390:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 391:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2)
 392:/usr/include/c++/4.8/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/usr/include/c++/4.8/bits/basic_string.h **** 
 394:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 395:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/usr/include/c++/4.8/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 397:/usr/include/c++/4.8/bits/basic_string.h **** 
 398:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 399:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2)
GAS LISTING /tmp/cceISX6N.s 			page 48


 400:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 401:/usr/include/c++/4.8/bits/basic_string.h **** 
 402:/usr/include/c++/4.8/bits/basic_string.h ****       static void
 403:/usr/include/c++/4.8/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 404:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
 405:/usr/include/c++/4.8/bits/basic_string.h **** 
 406:/usr/include/c++/4.8/bits/basic_string.h ****       static int
 407:/usr/include/c++/4.8/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2)
 408:/usr/include/c++/4.8/bits/basic_string.h ****       {
 409:/usr/include/c++/4.8/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 410:/usr/include/c++/4.8/bits/basic_string.h **** 
 411:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 412:/usr/include/c++/4.8/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 413:/usr/include/c++/4.8/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 414:/usr/include/c++/4.8/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 415:/usr/include/c++/4.8/bits/basic_string.h **** 	else
 416:/usr/include/c++/4.8/bits/basic_string.h **** 	  return int(__d);
 417:/usr/include/c++/4.8/bits/basic_string.h ****       }
 418:/usr/include/c++/4.8/bits/basic_string.h **** 
 419:/usr/include/c++/4.8/bits/basic_string.h ****       void
 420:/usr/include/c++/4.8/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
 421:/usr/include/c++/4.8/bits/basic_string.h **** 
 422:/usr/include/c++/4.8/bits/basic_string.h ****       void
 423:/usr/include/c++/4.8/bits/basic_string.h ****       _M_leak_hard();
 424:/usr/include/c++/4.8/bits/basic_string.h **** 
 425:/usr/include/c++/4.8/bits/basic_string.h ****       static _Rep&
 426:/usr/include/c++/4.8/bits/basic_string.h ****       _S_empty_rep()
 427:/usr/include/c++/4.8/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
 428:/usr/include/c++/4.8/bits/basic_string.h **** 
 429:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 430:/usr/include/c++/4.8/bits/basic_string.h ****       // Construct/copy/destroy:
 431:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 432:/usr/include/c++/4.8/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 433:/usr/include/c++/4.8/bits/basic_string.h **** 
 434:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 435:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 436:/usr/include/c++/4.8/bits/basic_string.h ****        */
 437:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string()
 438:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 439:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc()) { }
 440:/usr/include/c++/4.8/bits/basic_string.h **** #else
 441:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc()){ }
 442:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 443:/usr/include/c++/4.8/bits/basic_string.h **** 
 444:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 445:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/usr/include/c++/4.8/bits/basic_string.h ****        */
 447:/usr/include/c++/4.8/bits/basic_string.h ****       explicit
 448:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _Alloc& __a);
 449:/usr/include/c++/4.8/bits/basic_string.h **** 
 450:/usr/include/c++/4.8/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
 451:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 452:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
 453:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 454:/usr/include/c++/4.8/bits/basic_string.h ****        */
 455:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str);
 456:/usr/include/c++/4.8/bits/basic_string.h ****       /**
GAS LISTING /tmp/cceISX6N.s 			page 49


 457:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 458:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 459:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 460:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy (default remainder).
 461:/usr/include/c++/4.8/bits/basic_string.h ****        */
 462:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 463:/usr/include/c++/4.8/bits/basic_string.h **** 		   size_type __n = npos);
 464:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 465:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 466:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 467:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 468:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 469:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 470:/usr/include/c++/4.8/bits/basic_string.h ****        */
 471:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 472:/usr/include/c++/4.8/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
 473:/usr/include/c++/4.8/bits/basic_string.h **** 
 474:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 475:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 476:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source character %array.
 477:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 478:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 479:/usr/include/c++/4.8/bits/basic_string.h ****        *
 480:/usr/include/c++/4.8/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 481:/usr/include/c++/4.8/bits/basic_string.h ****        *  has no special meaning.
 482:/usr/include/c++/4.8/bits/basic_string.h ****        */
 483:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 484:/usr/include/c++/4.8/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
 485:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 486:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 487:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source C string.
 488:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 489:/usr/include/c++/4.8/bits/basic_string.h ****        */
 490:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
 491:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 492:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 493:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters.
 494:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Character to use.
 495:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 496:/usr/include/c++/4.8/bits/basic_string.h ****        */
 497:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
 498:/usr/include/c++/4.8/bits/basic_string.h **** 
 499:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 500:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 501:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Move construct string.
 502:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 503:/usr/include/c++/4.8/bits/basic_string.h ****        *
 504:/usr/include/c++/4.8/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 505:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 506:/usr/include/c++/4.8/bits/basic_string.h ****        **/
 507:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 508:/usr/include/c++/4.8/bits/basic_string.h ****       : _M_dataplus(__str._M_dataplus)
 509:/usr/include/c++/4.8/bits/basic_string.h ****       {
 510:/usr/include/c++/4.8/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 511:/usr/include/c++/4.8/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
 512:/usr/include/c++/4.8/bits/basic_string.h **** #else
 513:/usr/include/c++/4.8/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
GAS LISTING /tmp/cceISX6N.s 			page 50


 514:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 515:/usr/include/c++/4.8/bits/basic_string.h ****       }
 516:/usr/include/c++/4.8/bits/basic_string.h **** 
 517:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 518:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 519:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 520:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 521:/usr/include/c++/4.8/bits/basic_string.h ****        */
 522:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
 523:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 524:/usr/include/c++/4.8/bits/basic_string.h **** 
 525:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 526:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 527:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __beg  Start of range.
 528:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __end  End of range.
 529:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 530:/usr/include/c++/4.8/bits/basic_string.h ****        */
 531:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
 532:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 533:/usr/include/c++/4.8/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
 534:/usr/include/c++/4.8/bits/basic_string.h **** 
 535:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 536:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 537:/usr/include/c++/4.8/bits/basic_string.h ****        */
 538:/usr/include/c++/4.8/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
 539:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
 540:/usr/include/c++/4.8/bits/basic_string.h **** 
 541:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 542:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 543:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 544:/usr/include/c++/4.8/bits/basic_string.h ****        */
 545:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 546:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(const basic_string& __str) 
 547:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__str); }
 548:/usr/include/c++/4.8/bits/basic_string.h **** 
 549:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 550:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 551:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 552:/usr/include/c++/4.8/bits/basic_string.h ****        */
 553:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 554:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(const _CharT* __s) 
 555:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__s); }
 556:/usr/include/c++/4.8/bits/basic_string.h **** 
 557:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 558:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 559:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Source character.
 560:/usr/include/c++/4.8/bits/basic_string.h ****        *
 561:/usr/include/c++/4.8/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 562:/usr/include/c++/4.8/bits/basic_string.h ****        *  (*this)[0] == @a c.
 563:/usr/include/c++/4.8/bits/basic_string.h ****        */
 564:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 565:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(_CharT __c) 
 566:/usr/include/c++/4.8/bits/basic_string.h ****       { 
 567:/usr/include/c++/4.8/bits/basic_string.h **** 	this->assign(1, __c); 
 568:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 569:/usr/include/c++/4.8/bits/basic_string.h ****       }
 570:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 51


 571:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 572:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 573:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 574:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string.
 575:/usr/include/c++/4.8/bits/basic_string.h ****        *
 576:/usr/include/c++/4.8/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 577:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 578:/usr/include/c++/4.8/bits/basic_string.h ****        **/
 579:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 580:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(basic_string&& __str)
 581:/usr/include/c++/4.8/bits/basic_string.h ****       {
 582:/usr/include/c++/4.8/bits/basic_string.h **** 	// NB: DR 1204.
 583:/usr/include/c++/4.8/bits/basic_string.h **** 	this->swap(__str);
 584:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 585:/usr/include/c++/4.8/bits/basic_string.h ****       }
 586:/usr/include/c++/4.8/bits/basic_string.h **** 
 587:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 588:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 589:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 590:/usr/include/c++/4.8/bits/basic_string.h ****        */
 591:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 592:/usr/include/c++/4.8/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 593:/usr/include/c++/4.8/bits/basic_string.h ****       {
 594:/usr/include/c++/4.8/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 595:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 596:/usr/include/c++/4.8/bits/basic_string.h ****       }
 597:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 598:/usr/include/c++/4.8/bits/basic_string.h **** 
 599:/usr/include/c++/4.8/bits/basic_string.h ****       // Iterators:
 600:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 601:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 602:/usr/include/c++/4.8/bits/basic_string.h ****        *  the %string.  Unshares the string.
 603:/usr/include/c++/4.8/bits/basic_string.h ****        */
 604:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 605:/usr/include/c++/4.8/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 606:/usr/include/c++/4.8/bits/basic_string.h ****       {
 607:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 608:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data());
 609:/usr/include/c++/4.8/bits/basic_string.h ****       }
 610:/usr/include/c++/4.8/bits/basic_string.h **** 
 611:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 612:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 613:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.
 614:/usr/include/c++/4.8/bits/basic_string.h ****        */
 615:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 616:/usr/include/c++/4.8/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 617:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 618:/usr/include/c++/4.8/bits/basic_string.h **** 
 619:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 620:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 621:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
 622:/usr/include/c++/4.8/bits/basic_string.h ****        */
 623:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
 624:/usr/include/c++/4.8/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 625:/usr/include/c++/4.8/bits/basic_string.h ****       {
 626:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 627:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
GAS LISTING /tmp/cceISX6N.s 			page 52


 628:/usr/include/c++/4.8/bits/basic_string.h ****       }
 629:/usr/include/c++/4.8/bits/basic_string.h **** 
 630:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 631:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 632:/usr/include/c++/4.8/bits/basic_string.h ****        *  last character in the %string.
 633:/usr/include/c++/4.8/bits/basic_string.h ****        */
 634:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 635:/usr/include/c++/4.8/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 636:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 637:/usr/include/c++/4.8/bits/basic_string.h **** 
 638:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 639:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 640:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 641:/usr/include/c++/4.8/bits/basic_string.h ****        *  order.  Unshares the string.
 642:/usr/include/c++/4.8/bits/basic_string.h ****        */
 643:/usr/include/c++/4.8/bits/basic_string.h ****       reverse_iterator
 644:/usr/include/c++/4.8/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 645:/usr/include/c++/4.8/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 646:/usr/include/c++/4.8/bits/basic_string.h **** 
 647:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 648:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 649:/usr/include/c++/4.8/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 650:/usr/include/c++/4.8/bits/basic_string.h ****        *  reverse element order.
 651:/usr/include/c++/4.8/bits/basic_string.h ****        */
 652:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 653:/usr/include/c++/4.8/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 654:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 655:/usr/include/c++/4.8/bits/basic_string.h **** 
 656:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 657:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 658:/usr/include/c++/4.8/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 659:/usr/include/c++/4.8/bits/basic_string.h ****        *  element order.  Unshares the string.
 660:/usr/include/c++/4.8/bits/basic_string.h ****        */
 661:/usr/include/c++/4.8/bits/basic_string.h ****       reverse_iterator
 662:/usr/include/c++/4.8/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 663:/usr/include/c++/4.8/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 664:/usr/include/c++/4.8/bits/basic_string.h **** 
 665:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 666:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 667:/usr/include/c++/4.8/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 668:/usr/include/c++/4.8/bits/basic_string.h ****        *  is done in reverse element order.
 669:/usr/include/c++/4.8/bits/basic_string.h ****        */
 670:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 671:/usr/include/c++/4.8/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 672:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 673:/usr/include/c++/4.8/bits/basic_string.h **** 
 674:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 675:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 676:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 677:/usr/include/c++/4.8/bits/basic_string.h ****        *  character in the %string.
 678:/usr/include/c++/4.8/bits/basic_string.h ****        */
 679:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 680:/usr/include/c++/4.8/bits/basic_string.h ****       cbegin() const noexcept
 681:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 682:/usr/include/c++/4.8/bits/basic_string.h **** 
 683:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 684:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
GAS LISTING /tmp/cceISX6N.s 			page 53


 685:/usr/include/c++/4.8/bits/basic_string.h ****        *  last character in the %string.
 686:/usr/include/c++/4.8/bits/basic_string.h ****        */
 687:/usr/include/c++/4.8/bits/basic_string.h ****       const_iterator
 688:/usr/include/c++/4.8/bits/basic_string.h ****       cend() const noexcept
 689:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 690:/usr/include/c++/4.8/bits/basic_string.h **** 
 691:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 692:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 693:/usr/include/c++/4.8/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 694:/usr/include/c++/4.8/bits/basic_string.h ****        *  reverse element order.
 695:/usr/include/c++/4.8/bits/basic_string.h ****        */
 696:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 697:/usr/include/c++/4.8/bits/basic_string.h ****       crbegin() const noexcept
 698:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 699:/usr/include/c++/4.8/bits/basic_string.h **** 
 700:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 701:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 702:/usr/include/c++/4.8/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 703:/usr/include/c++/4.8/bits/basic_string.h ****        *  is done in reverse element order.
 704:/usr/include/c++/4.8/bits/basic_string.h ****        */
 705:/usr/include/c++/4.8/bits/basic_string.h ****       const_reverse_iterator
 706:/usr/include/c++/4.8/bits/basic_string.h ****       crend() const noexcept
 707:/usr/include/c++/4.8/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 708:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 709:/usr/include/c++/4.8/bits/basic_string.h **** 
 710:/usr/include/c++/4.8/bits/basic_string.h ****     public:
 711:/usr/include/c++/4.8/bits/basic_string.h ****       // Capacity:
 712:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 713:/usr/include/c++/4.8/bits/basic_string.h ****       ///  null-termination.
 714:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 715:/usr/include/c++/4.8/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 716:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 717:/usr/include/c++/4.8/bits/basic_string.h **** 
 718:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 719:/usr/include/c++/4.8/bits/basic_string.h ****       ///  null-termination.
 720:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 721:/usr/include/c++/4.8/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 722:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_length; }
 723:/usr/include/c++/4.8/bits/basic_string.h **** 
 724:/usr/include/c++/4.8/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 725:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 726:/usr/include/c++/4.8/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 727:/usr/include/c++/4.8/bits/basic_string.h ****       { return _Rep::_S_max_size; }
 728:/usr/include/c++/4.8/bits/basic_string.h **** 
 729:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 730:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 731:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 732:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 733:/usr/include/c++/4.8/bits/basic_string.h ****        *
 734:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 735:/usr/include/c++/4.8/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 736:/usr/include/c++/4.8/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 737:/usr/include/c++/4.8/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 738:/usr/include/c++/4.8/bits/basic_string.h ****        */
 739:/usr/include/c++/4.8/bits/basic_string.h ****       void
 740:/usr/include/c++/4.8/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 741:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 54


 742:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 743:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 744:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 745:/usr/include/c++/4.8/bits/basic_string.h ****        *
 746:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 747:/usr/include/c++/4.8/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 748:/usr/include/c++/4.8/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 749:/usr/include/c++/4.8/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 750:/usr/include/c++/4.8/bits/basic_string.h ****        *  setting them to 0.
 751:/usr/include/c++/4.8/bits/basic_string.h ****        */
 752:/usr/include/c++/4.8/bits/basic_string.h ****       void
 753:/usr/include/c++/4.8/bits/basic_string.h ****       resize(size_type __n)
 754:/usr/include/c++/4.8/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 755:/usr/include/c++/4.8/bits/basic_string.h **** 
 756:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 757:/usr/include/c++/4.8/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 758:/usr/include/c++/4.8/bits/basic_string.h ****       void
 759:/usr/include/c++/4.8/bits/basic_string.h ****       shrink_to_fit()
 760:/usr/include/c++/4.8/bits/basic_string.h ****       {
 761:/usr/include/c++/4.8/bits/basic_string.h **** 	if (capacity() > size())
 762:/usr/include/c++/4.8/bits/basic_string.h **** 	  {
 763:/usr/include/c++/4.8/bits/basic_string.h **** 	    __try
 764:/usr/include/c++/4.8/bits/basic_string.h **** 	      { reserve(0); }
 765:/usr/include/c++/4.8/bits/basic_string.h **** 	    __catch(...)
 766:/usr/include/c++/4.8/bits/basic_string.h **** 	      { }
 767:/usr/include/c++/4.8/bits/basic_string.h **** 	  }
 768:/usr/include/c++/4.8/bits/basic_string.h ****       }
 769:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 770:/usr/include/c++/4.8/bits/basic_string.h **** 
 771:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 772:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 773:/usr/include/c++/4.8/bits/basic_string.h ****        *  before needing to allocate more memory.
 774:/usr/include/c++/4.8/bits/basic_string.h ****        */
 775:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
 776:/usr/include/c++/4.8/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 777:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
 778:/usr/include/c++/4.8/bits/basic_string.h **** 
 779:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 780:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 781:/usr/include/c++/4.8/bits/basic_string.h ****        *          characters.
 782:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 783:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 784:/usr/include/c++/4.8/bits/basic_string.h ****        *
 785:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 786:/usr/include/c++/4.8/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 787:/usr/include/c++/4.8/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 788:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
 789:/usr/include/c++/4.8/bits/basic_string.h ****        *
 790:/usr/include/c++/4.8/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 791:/usr/include/c++/4.8/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 792:/usr/include/c++/4.8/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 793:/usr/include/c++/4.8/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 794:/usr/include/c++/4.8/bits/basic_string.h ****        *  data.
 795:/usr/include/c++/4.8/bits/basic_string.h ****        */
 796:/usr/include/c++/4.8/bits/basic_string.h ****       void
 797:/usr/include/c++/4.8/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
 798:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 55


 799:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 800:/usr/include/c++/4.8/bits/basic_string.h ****        *  Erases the string, making it empty.
 801:/usr/include/c++/4.8/bits/basic_string.h ****        */
 802:/usr/include/c++/4.8/bits/basic_string.h ****       void
 803:/usr/include/c++/4.8/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
 804:/usr/include/c++/4.8/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
 805:/usr/include/c++/4.8/bits/basic_string.h **** 
 806:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 807:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
 808:/usr/include/c++/4.8/bits/basic_string.h ****        *  <code>*this == ""</code>.
 809:/usr/include/c++/4.8/bits/basic_string.h ****        */
 810:/usr/include/c++/4.8/bits/basic_string.h ****       bool
 811:/usr/include/c++/4.8/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
 812:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->size() == 0; }
 813:/usr/include/c++/4.8/bits/basic_string.h **** 
 814:/usr/include/c++/4.8/bits/basic_string.h ****       // Element access:
 815:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 816:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 817:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 818:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
 819:/usr/include/c++/4.8/bits/basic_string.h ****        *
 820:/usr/include/c++/4.8/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 821:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 822:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 823:/usr/include/c++/4.8/bits/basic_string.h ****        *  see at().)
 824:/usr/include/c++/4.8/bits/basic_string.h ****        */
 825:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 826:/usr/include/c++/4.8/bits/basic_string.h ****       operator[] (size_type __pos) const
 827:/usr/include/c++/4.8/bits/basic_string.h ****       {
 828:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 829:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__pos];
 830:/usr/include/c++/4.8/bits/basic_string.h ****       }
 831:/usr/include/c++/4.8/bits/basic_string.h **** 
 832:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 833:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
 834:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
 835:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 836:/usr/include/c++/4.8/bits/basic_string.h ****        *
 837:/usr/include/c++/4.8/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
 838:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
 839:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
 840:/usr/include/c++/4.8/bits/basic_string.h ****        *  see at().)  Unshares the string.
 841:/usr/include/c++/4.8/bits/basic_string.h ****        */
 842:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 843:/usr/include/c++/4.8/bits/basic_string.h ****       operator[](size_type __pos)
 844:/usr/include/c++/4.8/bits/basic_string.h ****       {
 845:/usr/include/c++/4.8/bits/basic_string.h ****         // allow pos == size() as v3 extension:
 846:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_ASSERT(__pos <= size());
 847:/usr/include/c++/4.8/bits/basic_string.h ****         // but be strict in pedantic mode:
 848:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__pos < size());
 849:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 850:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__pos];
 851:/usr/include/c++/4.8/bits/basic_string.h ****       }
 852:/usr/include/c++/4.8/bits/basic_string.h **** 
 853:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 854:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 855:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n The index of the character to access.
GAS LISTING /tmp/cceISX6N.s 			page 56


 856:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
 857:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 858:/usr/include/c++/4.8/bits/basic_string.h ****        *
 859:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 860:/usr/include/c++/4.8/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 861:/usr/include/c++/4.8/bits/basic_string.h ****        *  throws out_of_range if the check fails.
 862:/usr/include/c++/4.8/bits/basic_string.h ****        */
 863:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 864:/usr/include/c++/4.8/bits/basic_string.h ****       at(size_type __n) const
 865:/usr/include/c++/4.8/bits/basic_string.h ****       {
 866:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n >= this->size())
 867:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N("basic_string::at"));
 868:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__n];
 869:/usr/include/c++/4.8/bits/basic_string.h ****       }
 870:/usr/include/c++/4.8/bits/basic_string.h **** 
 871:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 872:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
 873:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n The index of the character to access.
 874:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Read/write reference to the character.
 875:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
 876:/usr/include/c++/4.8/bits/basic_string.h ****        *
 877:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
 878:/usr/include/c++/4.8/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
 879:/usr/include/c++/4.8/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
 880:/usr/include/c++/4.8/bits/basic_string.h ****        *  unsharing the string.
 881:/usr/include/c++/4.8/bits/basic_string.h ****        */
 882:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 883:/usr/include/c++/4.8/bits/basic_string.h ****       at(size_type __n)
 884:/usr/include/c++/4.8/bits/basic_string.h ****       {
 885:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__n >= size())
 886:/usr/include/c++/4.8/bits/basic_string.h **** 	  __throw_out_of_range(__N("basic_string::at"));
 887:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_leak();
 888:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_data()[__n];
 889:/usr/include/c++/4.8/bits/basic_string.h ****       }
 890:/usr/include/c++/4.8/bits/basic_string.h **** 
 891:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 892:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 893:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
 894:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 895:/usr/include/c++/4.8/bits/basic_string.h ****        */
 896:/usr/include/c++/4.8/bits/basic_string.h ****       reference
 897:/usr/include/c++/4.8/bits/basic_string.h ****       front()
 898:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](0); }
 899:/usr/include/c++/4.8/bits/basic_string.h **** 
 900:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 901:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
 902:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 903:/usr/include/c++/4.8/bits/basic_string.h ****        */
 904:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 905:/usr/include/c++/4.8/bits/basic_string.h ****       front() const
 906:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](0); }
 907:/usr/include/c++/4.8/bits/basic_string.h **** 
 908:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 909:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
 910:/usr/include/c++/4.8/bits/basic_string.h ****        *  element of the %string.
 911:/usr/include/c++/4.8/bits/basic_string.h ****        */
 912:/usr/include/c++/4.8/bits/basic_string.h ****       reference
GAS LISTING /tmp/cceISX6N.s 			page 57


 913:/usr/include/c++/4.8/bits/basic_string.h ****       back()
 914:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 915:/usr/include/c++/4.8/bits/basic_string.h **** 
 916:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 917:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
 918:/usr/include/c++/4.8/bits/basic_string.h ****        *  last element of the %string.
 919:/usr/include/c++/4.8/bits/basic_string.h ****        */
 920:/usr/include/c++/4.8/bits/basic_string.h ****       const_reference
 921:/usr/include/c++/4.8/bits/basic_string.h ****       back() const
 922:/usr/include/c++/4.8/bits/basic_string.h ****       { return operator[](this->size() - 1); }
 923:/usr/include/c++/4.8/bits/basic_string.h **** #endif
 924:/usr/include/c++/4.8/bits/basic_string.h **** 
 925:/usr/include/c++/4.8/bits/basic_string.h ****       // Modifiers:
 926:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 927:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a string to this string.
 928:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 929:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 930:/usr/include/c++/4.8/bits/basic_string.h ****        */
 931:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 932:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(const basic_string& __str)
 933:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__str); }
 934:/usr/include/c++/4.8/bits/basic_string.h **** 
 935:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 936:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C string.
 937:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
 938:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 939:/usr/include/c++/4.8/bits/basic_string.h ****        */
 940:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 941:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(const _CharT* __s)
 942:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__s); }
 943:/usr/include/c++/4.8/bits/basic_string.h **** 
 944:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 945:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a character.
 946:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to append.
 947:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 948:/usr/include/c++/4.8/bits/basic_string.h ****        */
 949:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 950:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(_CharT __c)
 951:/usr/include/c++/4.8/bits/basic_string.h ****       { 
 952:/usr/include/c++/4.8/bits/basic_string.h **** 	this->push_back(__c);
 953:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
 954:/usr/include/c++/4.8/bits/basic_string.h ****       }
 955:/usr/include/c++/4.8/bits/basic_string.h **** 
 956:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
 957:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 958:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
 959:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
 960:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 961:/usr/include/c++/4.8/bits/basic_string.h ****        */
 962:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 963:/usr/include/c++/4.8/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
 964:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
 965:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
 966:/usr/include/c++/4.8/bits/basic_string.h **** 
 967:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 968:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a string to this string.
 969:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
GAS LISTING /tmp/cceISX6N.s 			page 58


 970:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 971:/usr/include/c++/4.8/bits/basic_string.h ****        */
 972:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 973:/usr/include/c++/4.8/bits/basic_string.h ****       append(const basic_string& __str);
 974:/usr/include/c++/4.8/bits/basic_string.h **** 
 975:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 976:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a substring.
 977:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to append.
 978:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
 979:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 980:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 981:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
 982:/usr/include/c++/4.8/bits/basic_string.h ****        *
 983:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
 984:/usr/include/c++/4.8/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
 985:/usr/include/c++/4.8/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
 986:/usr/include/c++/4.8/bits/basic_string.h ****        *  remainder of @a __str is appended.
 987:/usr/include/c++/4.8/bits/basic_string.h ****        */
 988:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 989:/usr/include/c++/4.8/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n);
 990:/usr/include/c++/4.8/bits/basic_string.h **** 
 991:/usr/include/c++/4.8/bits/basic_string.h ****       /**
 992:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C substring.
 993:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
 994:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
 995:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
 996:/usr/include/c++/4.8/bits/basic_string.h ****        */
 997:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
 998:/usr/include/c++/4.8/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
 999:/usr/include/c++/4.8/bits/basic_string.h **** 
1000:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1001:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a C string.
1002:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to append.
1003:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1004:/usr/include/c++/4.8/bits/basic_string.h ****        */
1005:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1006:/usr/include/c++/4.8/bits/basic_string.h ****       append(const _CharT* __s)
1007:/usr/include/c++/4.8/bits/basic_string.h ****       {
1008:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1009:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
1010:/usr/include/c++/4.8/bits/basic_string.h ****       }
1011:/usr/include/c++/4.8/bits/basic_string.h **** 
1012:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1013:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append multiple characters.
1014:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1015:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to use.
1016:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1017:/usr/include/c++/4.8/bits/basic_string.h ****        *
1018:/usr/include/c++/4.8/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1019:/usr/include/c++/4.8/bits/basic_string.h ****        */
1020:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1021:/usr/include/c++/4.8/bits/basic_string.h ****       append(size_type __n, _CharT __c);
1022:/usr/include/c++/4.8/bits/basic_string.h **** 
1023:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1024:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1025:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1026:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
GAS LISTING /tmp/cceISX6N.s 			page 59


1027:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1028:/usr/include/c++/4.8/bits/basic_string.h ****        */
1029:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1030:/usr/include/c++/4.8/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1031:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1032:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1033:/usr/include/c++/4.8/bits/basic_string.h **** 
1034:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1035:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a range of characters.
1036:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1037:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1038:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1039:/usr/include/c++/4.8/bits/basic_string.h ****        *
1040:/usr/include/c++/4.8/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1041:/usr/include/c++/4.8/bits/basic_string.h ****        */
1042:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1043:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1044:/usr/include/c++/4.8/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1045:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
1046:/usr/include/c++/4.8/bits/basic_string.h **** 
1047:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1048:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Append a single character.
1049:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to append.
1050:/usr/include/c++/4.8/bits/basic_string.h ****        */
1051:/usr/include/c++/4.8/bits/basic_string.h ****       void
1052:/usr/include/c++/4.8/bits/basic_string.h ****       push_back(_CharT __c)
1053:/usr/include/c++/4.8/bits/basic_string.h ****       { 
1054:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
1055:/usr/include/c++/4.8/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
1056:/usr/include/c++/4.8/bits/basic_string.h **** 	  this->reserve(__len);
1057:/usr/include/c++/4.8/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
1058:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
1059:/usr/include/c++/4.8/bits/basic_string.h ****       }
1060:/usr/include/c++/4.8/bits/basic_string.h **** 
1061:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1062:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1063:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string to use.
1064:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1065:/usr/include/c++/4.8/bits/basic_string.h ****        */
1066:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1067:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const basic_string& __str);
1068:/usr/include/c++/4.8/bits/basic_string.h **** 
1069:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1070:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1071:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1072:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param  __str  Source string to use.
1073:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1074:/usr/include/c++/4.8/bits/basic_string.h ****        *
1075:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1076:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1077:/usr/include/c++/4.8/bits/basic_string.h ****        */
1078:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1079:/usr/include/c++/4.8/bits/basic_string.h ****       assign(basic_string&& __str)
1080:/usr/include/c++/4.8/bits/basic_string.h ****       {
1081:/usr/include/c++/4.8/bits/basic_string.h **** 	this->swap(__str);
1082:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
1083:/usr/include/c++/4.8/bits/basic_string.h ****       }
GAS LISTING /tmp/cceISX6N.s 			page 60


1084:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1085:/usr/include/c++/4.8/bits/basic_string.h **** 
1086:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1087:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1088:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to use.
1089:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1090:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1091:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1092:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1093:/usr/include/c++/4.8/bits/basic_string.h ****        *
1094:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1095:/usr/include/c++/4.8/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1096:/usr/include/c++/4.8/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1097:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1098:/usr/include/c++/4.8/bits/basic_string.h ****        */
1099:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1100:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n)
1101:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__str._M_data()
1102:/usr/include/c++/4.8/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
1103:/usr/include/c++/4.8/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
1104:/usr/include/c++/4.8/bits/basic_string.h **** 
1105:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1106:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1107:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to use.
1108:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1109:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1110:/usr/include/c++/4.8/bits/basic_string.h ****        *
1111:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1112:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1113:/usr/include/c++/4.8/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1114:/usr/include/c++/4.8/bits/basic_string.h ****        */
1115:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1116:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
1117:/usr/include/c++/4.8/bits/basic_string.h **** 
1118:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1119:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1120:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to use.
1121:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1122:/usr/include/c++/4.8/bits/basic_string.h ****        *
1123:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1124:/usr/include/c++/4.8/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1125:/usr/include/c++/4.8/bits/basic_string.h ****        *  function returns.
1126:/usr/include/c++/4.8/bits/basic_string.h ****        */
1127:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1128:/usr/include/c++/4.8/bits/basic_string.h ****       assign(const _CharT* __s)
1129:/usr/include/c++/4.8/bits/basic_string.h ****       {
1130:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1131:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
1132:/usr/include/c++/4.8/bits/basic_string.h ****       }
1133:/usr/include/c++/4.8/bits/basic_string.h **** 
1134:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1135:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1136:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1137:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to use.
1138:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1139:/usr/include/c++/4.8/bits/basic_string.h ****        *
1140:/usr/include/c++/4.8/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
GAS LISTING /tmp/cceISX6N.s 			page 61


1141:/usr/include/c++/4.8/bits/basic_string.h ****        *  character @a __c.
1142:/usr/include/c++/4.8/bits/basic_string.h ****        */
1143:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1144:/usr/include/c++/4.8/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1145:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1146:/usr/include/c++/4.8/bits/basic_string.h **** 
1147:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1148:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1149:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1150:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1151:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1152:/usr/include/c++/4.8/bits/basic_string.h ****        *
1153:/usr/include/c++/4.8/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1154:/usr/include/c++/4.8/bits/basic_string.h ****       */
1155:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1156:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1157:/usr/include/c++/4.8/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1158:/usr/include/c++/4.8/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
1159:/usr/include/c++/4.8/bits/basic_string.h **** 
1160:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1161:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1162:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1163:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1164:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1165:/usr/include/c++/4.8/bits/basic_string.h ****        */
1166:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1167:/usr/include/c++/4.8/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1168:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1169:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1170:/usr/include/c++/4.8/bits/basic_string.h **** 
1171:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1172:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1173:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1174:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1175:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1176:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1177:/usr/include/c++/4.8/bits/basic_string.h ****        *
1178:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1179:/usr/include/c++/4.8/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1180:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1181:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1182:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1183:/usr/include/c++/4.8/bits/basic_string.h ****       */
1184:/usr/include/c++/4.8/bits/basic_string.h ****       void
1185:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1186:/usr/include/c++/4.8/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1187:/usr/include/c++/4.8/bits/basic_string.h **** 
1188:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1189:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1190:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1191:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __beg  Start of range.
1192:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __end  End of range.
1193:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1194:/usr/include/c++/4.8/bits/basic_string.h ****        *
1195:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1196:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1197:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
GAS LISTING /tmp/cceISX6N.s 			page 62


1198:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1199:/usr/include/c++/4.8/bits/basic_string.h ****       */
1200:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1201:/usr/include/c++/4.8/bits/basic_string.h ****         void
1202:/usr/include/c++/4.8/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1203:/usr/include/c++/4.8/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1204:/usr/include/c++/4.8/bits/basic_string.h **** 
1205:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1206:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1207:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1208:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1209:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1210:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1211:/usr/include/c++/4.8/bits/basic_string.h ****        */
1212:/usr/include/c++/4.8/bits/basic_string.h ****       void
1213:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1214:/usr/include/c++/4.8/bits/basic_string.h ****       {
1215:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1216:/usr/include/c++/4.8/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
1217:/usr/include/c++/4.8/bits/basic_string.h ****       }
1218:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1219:/usr/include/c++/4.8/bits/basic_string.h **** 
1220:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1221:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert value of a string.
1222:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1223:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to insert.
1224:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1225:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1226:/usr/include/c++/4.8/bits/basic_string.h ****        *
1227:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1228:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1229:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1230:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1231:/usr/include/c++/4.8/bits/basic_string.h ****       */
1232:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1233:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1234:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
1235:/usr/include/c++/4.8/bits/basic_string.h **** 
1236:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1237:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a substring.
1238:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1239:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  The string to insert.
1240:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1241:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1242:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1243:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1244:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1245:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1246:/usr/include/c++/4.8/bits/basic_string.h ****        *
1247:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1248:/usr/include/c++/4.8/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1249:/usr/include/c++/4.8/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1250:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1251:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1252:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1253:/usr/include/c++/4.8/bits/basic_string.h ****       */
1254:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
GAS LISTING /tmp/cceISX6N.s 			page 63


1255:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1256:/usr/include/c++/4.8/bits/basic_string.h **** 	     size_type __pos2, size_type __n)
1257:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
1258:/usr/include/c++/4.8/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
1259:/usr/include/c++/4.8/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
1260:/usr/include/c++/4.8/bits/basic_string.h **** 
1261:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1262:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a C substring.
1263:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1264:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to insert.
1265:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1266:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1267:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1268:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1269:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1270:/usr/include/c++/4.8/bits/basic_string.h ****        *
1271:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1272:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1273:/usr/include/c++/4.8/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1274:/usr/include/c++/4.8/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1275:/usr/include/c++/4.8/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1276:/usr/include/c++/4.8/bits/basic_string.h ****       */
1277:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1278:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
1279:/usr/include/c++/4.8/bits/basic_string.h **** 
1280:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1281:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert a C string.
1282:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1283:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  The C string to insert.
1284:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1285:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1286:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1287:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1288:/usr/include/c++/4.8/bits/basic_string.h ****        *
1289:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1290:/usr/include/c++/4.8/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1291:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1292:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1293:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1294:/usr/include/c++/4.8/bits/basic_string.h ****       */
1295:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1296:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1297:/usr/include/c++/4.8/bits/basic_string.h ****       {
1298:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1299:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
1300:/usr/include/c++/4.8/bits/basic_string.h ****       }
1301:/usr/include/c++/4.8/bits/basic_string.h **** 
1302:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1303:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1304:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1305:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1306:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1307:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1308:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1309:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1310:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1311:/usr/include/c++/4.8/bits/basic_string.h ****        *
GAS LISTING /tmp/cceISX6N.s 			page 64


1312:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1313:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1314:/usr/include/c++/4.8/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1315:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1316:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1317:/usr/include/c++/4.8/bits/basic_string.h ****       */
1318:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1319:/usr/include/c++/4.8/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1320:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1321:/usr/include/c++/4.8/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1322:/usr/include/c++/4.8/bits/basic_string.h **** 
1323:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1324:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Insert one character.
1325:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1326:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  The character to insert.
1327:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1328:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1329:/usr/include/c++/4.8/bits/basic_string.h ****        *
1330:/usr/include/c++/4.8/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1331:/usr/include/c++/4.8/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1332:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1333:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1334:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1335:/usr/include/c++/4.8/bits/basic_string.h ****       */
1336:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1337:/usr/include/c++/4.8/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
1338:/usr/include/c++/4.8/bits/basic_string.h ****       {
1339:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
1340:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
1341:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1342:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1343:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1344:/usr/include/c++/4.8/bits/basic_string.h ****       }
1345:/usr/include/c++/4.8/bits/basic_string.h **** 
1346:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1347:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove characters.
1348:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1349:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1350:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1351:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1352:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1353:/usr/include/c++/4.8/bits/basic_string.h ****        *
1354:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1355:/usr/include/c++/4.8/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1356:/usr/include/c++/4.8/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
1357:/usr/include/c++/4.8/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1358:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1359:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1360:/usr/include/c++/4.8/bits/basic_string.h ****       */
1361:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1362:/usr/include/c++/4.8/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1363:/usr/include/c++/4.8/bits/basic_string.h ****       { 
1364:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
1365:/usr/include/c++/4.8/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
1366:/usr/include/c++/4.8/bits/basic_string.h **** 	return *this;
1367:/usr/include/c++/4.8/bits/basic_string.h ****       }
1368:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 65


1369:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1370:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove one character.
1371:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1372:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1373:/usr/include/c++/4.8/bits/basic_string.h ****        *
1374:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1375:/usr/include/c++/4.8/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1376:/usr/include/c++/4.8/bits/basic_string.h ****       */
1377:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1378:/usr/include/c++/4.8/bits/basic_string.h ****       erase(iterator __position)
1379:/usr/include/c++/4.8/bits/basic_string.h ****       {
1380:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
1381:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __position < _M_iend());
1382:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
1383:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
1384:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
1385:/usr/include/c++/4.8/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1386:/usr/include/c++/4.8/bits/basic_string.h ****       }
1387:/usr/include/c++/4.8/bits/basic_string.h **** 
1388:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1389:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1390:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1391:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1392:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1393:/usr/include/c++/4.8/bits/basic_string.h ****        *
1394:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1395:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1396:/usr/include/c++/4.8/bits/basic_string.h ****       */
1397:/usr/include/c++/4.8/bits/basic_string.h ****       iterator
1398:/usr/include/c++/4.8/bits/basic_string.h ****       erase(iterator __first, iterator __last);
1399:/usr/include/c++/4.8/bits/basic_string.h ****  
1400:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1401:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1402:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Remove the last character.
1403:/usr/include/c++/4.8/bits/basic_string.h ****        *
1404:/usr/include/c++/4.8/bits/basic_string.h ****        *  The string must be non-empty.
1405:/usr/include/c++/4.8/bits/basic_string.h ****        */
1406:/usr/include/c++/4.8/bits/basic_string.h ****       void
1407:/usr/include/c++/4.8/bits/basic_string.h ****       pop_back()
1408:/usr/include/c++/4.8/bits/basic_string.h ****       { erase(size()-1, 1); }
1409:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1410:/usr/include/c++/4.8/bits/basic_string.h **** 
1411:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1412:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1413:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1414:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1415:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to insert.
1416:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1417:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1418:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.
1419:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1420:/usr/include/c++/4.8/bits/basic_string.h ****        *
1421:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1422:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1423:/usr/include/c++/4.8/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1424:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1425:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
GAS LISTING /tmp/cceISX6N.s 			page 66


1426:/usr/include/c++/4.8/bits/basic_string.h ****        *  error is thrown.
1427:/usr/include/c++/4.8/bits/basic_string.h ****       */
1428:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1429:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1430:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1431:/usr/include/c++/4.8/bits/basic_string.h **** 
1432:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1433:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1434:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1435:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1436:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to insert.
1437:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1438:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1439:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1440:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1441:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str.size().
1442:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1443:/usr/include/c++/4.8/bits/basic_string.h ****        *
1444:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1445:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1446:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1447:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1448:/usr/include/c++/4.8/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1449:/usr/include/c++/4.8/bits/basic_string.h ****       */
1450:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1451:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1452:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __pos2, size_type __n2)
1453:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1454:/usr/include/c++/4.8/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1455:/usr/include/c++/4.8/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
1456:/usr/include/c++/4.8/bits/basic_string.h **** 
1457:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1458:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1459:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1460:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1461:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to insert.
1462:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1463:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1464:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1465:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1466:/usr/include/c++/4.8/bits/basic_string.h ****        *
1467:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1468:/usr/include/c++/4.8/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1469:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1470:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1471:/usr/include/c++/4.8/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1472:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1473:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.
1474:/usr/include/c++/4.8/bits/basic_string.h ****       */
1475:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1476:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1477:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __n2);
1478:/usr/include/c++/4.8/bits/basic_string.h **** 
1479:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1480:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1481:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1482:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
GAS LISTING /tmp/cceISX6N.s 			page 67


1483:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to insert.
1484:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1485:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1486:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1487:/usr/include/c++/4.8/bits/basic_string.h ****        *
1488:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1489:/usr/include/c++/4.8/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1490:/usr/include/c++/4.8/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1491:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1492:/usr/include/c++/4.8/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1493:/usr/include/c++/4.8/bits/basic_string.h ****        *  change if an error is thrown.
1494:/usr/include/c++/4.8/bits/basic_string.h ****       */
1495:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1496:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1497:/usr/include/c++/4.8/bits/basic_string.h ****       {
1498:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1499:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1500:/usr/include/c++/4.8/bits/basic_string.h ****       }
1501:/usr/include/c++/4.8/bits/basic_string.h **** 
1502:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1503:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1504:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1505:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1506:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1507:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to insert.
1508:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1509:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1510:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1511:/usr/include/c++/4.8/bits/basic_string.h ****        *
1512:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1513:/usr/include/c++/4.8/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1514:/usr/include/c++/4.8/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1515:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1516:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1517:/usr/include/c++/4.8/bits/basic_string.h ****        *  is thrown.
1518:/usr/include/c++/4.8/bits/basic_string.h ****       */
1519:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1520:/usr/include/c++/4.8/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1521:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1522:/usr/include/c++/4.8/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1523:/usr/include/c++/4.8/bits/basic_string.h **** 
1524:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1525:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1526:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1527:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1528:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String value to insert.
1529:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1530:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1531:/usr/include/c++/4.8/bits/basic_string.h ****        *
1532:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1533:/usr/include/c++/4.8/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1534:/usr/include/c++/4.8/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
1535:/usr/include/c++/4.8/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
1536:/usr/include/c++/4.8/bits/basic_string.h ****       */
1537:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1538:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
1539:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
GAS LISTING /tmp/cceISX6N.s 			page 68


1540:/usr/include/c++/4.8/bits/basic_string.h **** 
1541:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1542:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
1543:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1544:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1545:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string value to insert.
1546:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
1547:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1548:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1549:/usr/include/c++/4.8/bits/basic_string.h ****        *
1550:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1551:/usr/include/c++/4.8/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
1552:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1553:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1554:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1555:/usr/include/c++/4.8/bits/basic_string.h ****       */
1556:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1557:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
1558:/usr/include/c++/4.8/bits/basic_string.h ****       {
1559:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1560:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1561:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
1562:/usr/include/c++/4.8/bits/basic_string.h ****       }
1563:/usr/include/c++/4.8/bits/basic_string.h **** 
1564:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1565:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
1566:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1567:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1568:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string value to insert.
1569:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1570:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1571:/usr/include/c++/4.8/bits/basic_string.h ****        *
1572:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1573:/usr/include/c++/4.8/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
1574:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1575:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1576:/usr/include/c++/4.8/bits/basic_string.h ****       */
1577:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1578:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
1579:/usr/include/c++/4.8/bits/basic_string.h ****       {
1580:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1581:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
1582:/usr/include/c++/4.8/bits/basic_string.h ****       }
1583:/usr/include/c++/4.8/bits/basic_string.h **** 
1584:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1585:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
1586:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1587:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1588:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1589:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to insert.
1590:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1591:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/usr/include/c++/4.8/bits/basic_string.h ****        *
1593:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1594:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
1595:/usr/include/c++/4.8/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
1596:/usr/include/c++/4.8/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
GAS LISTING /tmp/cceISX6N.s 			page 69


1597:/usr/include/c++/4.8/bits/basic_string.h ****       */
1598:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1599:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
1600:/usr/include/c++/4.8/bits/basic_string.h ****       {
1601:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1602:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1603:/usr/include/c++/4.8/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
1604:/usr/include/c++/4.8/bits/basic_string.h ****       }
1605:/usr/include/c++/4.8/bits/basic_string.h **** 
1606:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1607:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
1608:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1609:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1610:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
1611:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
1612:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1613:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1614:/usr/include/c++/4.8/bits/basic_string.h ****        *
1615:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1616:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1617:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1618:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1619:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1620:/usr/include/c++/4.8/bits/basic_string.h ****       */
1621:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1622:/usr/include/c++/4.8/bits/basic_string.h ****         basic_string&
1623:/usr/include/c++/4.8/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
1624:/usr/include/c++/4.8/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
1625:/usr/include/c++/4.8/bits/basic_string.h ****         {
1626:/usr/include/c++/4.8/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1627:/usr/include/c++/4.8/bits/basic_string.h **** 				   && __i2 <= _M_iend());
1628:/usr/include/c++/4.8/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
1629:/usr/include/c++/4.8/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1630:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
1631:/usr/include/c++/4.8/bits/basic_string.h **** 	}
1632:/usr/include/c++/4.8/bits/basic_string.h **** 
1633:/usr/include/c++/4.8/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
1634:/usr/include/c++/4.8/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
1635:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1636:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
1637:/usr/include/c++/4.8/bits/basic_string.h ****       {
1638:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1639:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1640:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1641:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1642:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1, __k2 - __k1);
1643:/usr/include/c++/4.8/bits/basic_string.h ****       }
1644:/usr/include/c++/4.8/bits/basic_string.h **** 
1645:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1646:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1647:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
1648:/usr/include/c++/4.8/bits/basic_string.h ****       {
1649:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1650:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1651:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1652:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1653:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1, __k2 - __k1);
GAS LISTING /tmp/cceISX6N.s 			page 70


1654:/usr/include/c++/4.8/bits/basic_string.h ****       }
1655:/usr/include/c++/4.8/bits/basic_string.h **** 
1656:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1657:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
1658:/usr/include/c++/4.8/bits/basic_string.h ****       {
1659:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1660:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1661:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1662:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1663:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1664:/usr/include/c++/4.8/bits/basic_string.h ****       }
1665:/usr/include/c++/4.8/bits/basic_string.h **** 
1666:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1667:/usr/include/c++/4.8/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
1668:/usr/include/c++/4.8/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
1669:/usr/include/c++/4.8/bits/basic_string.h ****       {
1670:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
1671:/usr/include/c++/4.8/bits/basic_string.h **** 				 && __i2 <= _M_iend());
1672:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
1673:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
1674:/usr/include/c++/4.8/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
1675:/usr/include/c++/4.8/bits/basic_string.h ****       }
1676:/usr/include/c++/4.8/bits/basic_string.h ****       
1677:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
1678:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1679:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
1680:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1681:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1682:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1683:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Reference to this string.
1684:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1685:/usr/include/c++/4.8/bits/basic_string.h ****        *
1686:/usr/include/c++/4.8/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1687:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
1688:/usr/include/c++/4.8/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
1689:/usr/include/c++/4.8/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
1690:/usr/include/c++/4.8/bits/basic_string.h ****        *  thrown.
1691:/usr/include/c++/4.8/bits/basic_string.h ****       */
1692:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
1693:/usr/include/c++/4.8/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
1694:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
1695:/usr/include/c++/4.8/bits/basic_string.h **** #endif // C++11
1696:/usr/include/c++/4.8/bits/basic_string.h **** 
1697:/usr/include/c++/4.8/bits/basic_string.h ****     private:
1698:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Integer>
1699:/usr/include/c++/4.8/bits/basic_string.h **** 	basic_string&
1700:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
1701:/usr/include/c++/4.8/bits/basic_string.h **** 			    _Integer __val, __true_type)
1702:/usr/include/c++/4.8/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
1703:/usr/include/c++/4.8/bits/basic_string.h **** 
1704:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InputIterator>
1705:/usr/include/c++/4.8/bits/basic_string.h **** 	basic_string&
1706:/usr/include/c++/4.8/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
1707:/usr/include/c++/4.8/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
1708:/usr/include/c++/4.8/bits/basic_string.h **** 
1709:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1710:/usr/include/c++/4.8/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
GAS LISTING /tmp/cceISX6N.s 			page 71


1711:/usr/include/c++/4.8/bits/basic_string.h **** 		     _CharT __c);
1712:/usr/include/c++/4.8/bits/basic_string.h **** 
1713:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string&
1714:/usr/include/c++/4.8/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
1715:/usr/include/c++/4.8/bits/basic_string.h **** 		      size_type __n2);
1716:/usr/include/c++/4.8/bits/basic_string.h **** 
1717:/usr/include/c++/4.8/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
1718:/usr/include/c++/4.8/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
1719:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1720:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1721:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
1722:/usr/include/c++/4.8/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
1723:/usr/include/c++/4.8/bits/basic_string.h **** 	{
1724:/usr/include/c++/4.8/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
1725:/usr/include/c++/4.8/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
1726:/usr/include/c++/4.8/bits/basic_string.h **** 	}
1727:/usr/include/c++/4.8/bits/basic_string.h **** 
1728:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1729:/usr/include/c++/4.8/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
1730:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _Integer>
1731:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1732:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
1733:/usr/include/c++/4.8/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
1734:/usr/include/c++/4.8/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
1735:/usr/include/c++/4.8/bits/basic_string.h **** 				    __end, __a); }
1736:/usr/include/c++/4.8/bits/basic_string.h **** 
1737:/usr/include/c++/4.8/bits/basic_string.h ****       static _CharT*
1738:/usr/include/c++/4.8/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
1739:/usr/include/c++/4.8/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
1740:/usr/include/c++/4.8/bits/basic_string.h **** 
1741:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1742:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1743:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
1744:/usr/include/c++/4.8/bits/basic_string.h **** 	{
1745:/usr/include/c++/4.8/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
1746:/usr/include/c++/4.8/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
1747:/usr/include/c++/4.8/bits/basic_string.h ****         }
1748:/usr/include/c++/4.8/bits/basic_string.h **** 
1749:/usr/include/c++/4.8/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
1750:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _InIterator>
1751:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1752:/usr/include/c++/4.8/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
1753:/usr/include/c++/4.8/bits/basic_string.h **** 		      input_iterator_tag);
1754:/usr/include/c++/4.8/bits/basic_string.h **** 
1755:/usr/include/c++/4.8/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
1756:/usr/include/c++/4.8/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
1757:/usr/include/c++/4.8/bits/basic_string.h ****       template<class _FwdIterator>
1758:/usr/include/c++/4.8/bits/basic_string.h ****         static _CharT*
1759:/usr/include/c++/4.8/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
1760:/usr/include/c++/4.8/bits/basic_string.h **** 		     forward_iterator_tag);
1761:/usr/include/c++/4.8/bits/basic_string.h **** 
1762:/usr/include/c++/4.8/bits/basic_string.h ****       static _CharT*
1763:/usr/include/c++/4.8/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
1764:/usr/include/c++/4.8/bits/basic_string.h **** 
1765:/usr/include/c++/4.8/bits/basic_string.h ****     public:
1766:/usr/include/c++/4.8/bits/basic_string.h **** 
1767:/usr/include/c++/4.8/bits/basic_string.h ****       /**
GAS LISTING /tmp/cceISX6N.s 			page 72


1768:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Copy substring into C string.
1769:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to copy value into.
1770:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
1771:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
1772:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Number of characters actually copied
1773:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
1774:/usr/include/c++/4.8/bits/basic_string.h ****        *
1775:/usr/include/c++/4.8/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
1776:/usr/include/c++/4.8/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
1777:/usr/include/c++/4.8/bits/basic_string.h ****        *  out_of_range is thrown.
1778:/usr/include/c++/4.8/bits/basic_string.h ****       */
1779:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1780:/usr/include/c++/4.8/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
1781:/usr/include/c++/4.8/bits/basic_string.h **** 
1782:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1783:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Swap contents with another string.
1784:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String to swap with.
1785:/usr/include/c++/4.8/bits/basic_string.h ****        *
1786:/usr/include/c++/4.8/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
1787:/usr/include/c++/4.8/bits/basic_string.h ****        *  time.
1788:/usr/include/c++/4.8/bits/basic_string.h ****       */
1789:/usr/include/c++/4.8/bits/basic_string.h ****       void
1790:/usr/include/c++/4.8/bits/basic_string.h ****       swap(basic_string& __s);
1791:/usr/include/c++/4.8/bits/basic_string.h **** 
1792:/usr/include/c++/4.8/bits/basic_string.h ****       // String operations:
1793:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1794:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
1795:/usr/include/c++/4.8/bits/basic_string.h ****        *
1796:/usr/include/c++/4.8/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1797:/usr/include/c++/4.8/bits/basic_string.h ****        *  happen.
1798:/usr/include/c++/4.8/bits/basic_string.h ****       */
1799:/usr/include/c++/4.8/bits/basic_string.h ****       const _CharT*
1800:/usr/include/c++/4.8/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
1801:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_data(); }
1802:/usr/include/c++/4.8/bits/basic_string.h **** 
1803:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1804:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
1805:/usr/include/c++/4.8/bits/basic_string.h ****        *
1806:/usr/include/c++/4.8/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
1807:/usr/include/c++/4.8/bits/basic_string.h ****        *  happen.
1808:/usr/include/c++/4.8/bits/basic_string.h ****       */
1809:/usr/include/c++/4.8/bits/basic_string.h ****       const _CharT*
1810:/usr/include/c++/4.8/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
1811:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_data(); }
1812:/usr/include/c++/4.8/bits/basic_string.h **** 
1813:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1814:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
1815:/usr/include/c++/4.8/bits/basic_string.h ****       */
1816:/usr/include/c++/4.8/bits/basic_string.h ****       allocator_type
1817:/usr/include/c++/4.8/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
1818:/usr/include/c++/4.8/bits/basic_string.h ****       { return _M_dataplus; }
1819:/usr/include/c++/4.8/bits/basic_string.h **** 
1820:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1821:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a C substring.
1822:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1823:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1824:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
GAS LISTING /tmp/cceISX6N.s 			page 73


1825:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1826:/usr/include/c++/4.8/bits/basic_string.h ****        *
1827:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
1828:/usr/include/c++/4.8/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1829:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1830:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1831:/usr/include/c++/4.8/bits/basic_string.h ****       */
1832:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1833:/usr/include/c++/4.8/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const;
1834:/usr/include/c++/4.8/bits/basic_string.h **** 
1835:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1836:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a string.
1837:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to locate.
1838:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1839:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1840:/usr/include/c++/4.8/bits/basic_string.h ****        *
1841:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
1842:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
1843:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns npos.
1844:/usr/include/c++/4.8/bits/basic_string.h ****       */
1845:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1846:/usr/include/c++/4.8/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
1847:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1848:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
1849:/usr/include/c++/4.8/bits/basic_string.h **** 
1850:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1851:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a C string.
1852:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1853:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1854:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
1855:/usr/include/c++/4.8/bits/basic_string.h ****        *
1856:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
1857:/usr/include/c++/4.8/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
1858:/usr/include/c++/4.8/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1859:/usr/include/c++/4.8/bits/basic_string.h ****       */
1860:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1861:/usr/include/c++/4.8/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const
1862:/usr/include/c++/4.8/bits/basic_string.h ****       {
1863:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1864:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
1865:/usr/include/c++/4.8/bits/basic_string.h ****       }
1866:/usr/include/c++/4.8/bits/basic_string.h **** 
1867:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1868:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character.
1869:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1870:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1871:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1872:/usr/include/c++/4.8/bits/basic_string.h ****        *
1873:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
1874:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1875:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
1876:/usr/include/c++/4.8/bits/basic_string.h ****       */
1877:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1878:/usr/include/c++/4.8/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
1879:/usr/include/c++/4.8/bits/basic_string.h **** 
1880:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1881:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a string.
GAS LISTING /tmp/cceISX6N.s 			page 74


1882:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to locate.
1883:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1884:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1885:/usr/include/c++/4.8/bits/basic_string.h ****        *
1886:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
1887:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
1888:/usr/include/c++/4.8/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
1889:/usr/include/c++/4.8/bits/basic_string.h ****       */
1890:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1891:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
1892:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1893:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
1894:/usr/include/c++/4.8/bits/basic_string.h **** 
1895:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1896:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
1897:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1898:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
1899:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1900:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
1901:/usr/include/c++/4.8/bits/basic_string.h ****        *
1902:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
1903:/usr/include/c++/4.8/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
1904:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
1905:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1906:/usr/include/c++/4.8/bits/basic_string.h ****       */
1907:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1908:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const;
1909:/usr/include/c++/4.8/bits/basic_string.h **** 
1910:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1911:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a C string.
1912:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to locate.
1913:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
1914:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
1915:/usr/include/c++/4.8/bits/basic_string.h ****        *
1916:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
1917:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
1918:/usr/include/c++/4.8/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
1919:/usr/include/c++/4.8/bits/basic_string.h ****       */
1920:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1921:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
1922:/usr/include/c++/4.8/bits/basic_string.h ****       {
1923:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1924:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
1925:/usr/include/c++/4.8/bits/basic_string.h ****       }
1926:/usr/include/c++/4.8/bits/basic_string.h **** 
1927:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1928:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character.
1929:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1930:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
1931:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
1932:/usr/include/c++/4.8/bits/basic_string.h ****        *
1933:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
1934:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
1935:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
1936:/usr/include/c++/4.8/bits/basic_string.h ****       */
1937:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1938:/usr/include/c++/4.8/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
GAS LISTING /tmp/cceISX6N.s 			page 75


1939:/usr/include/c++/4.8/bits/basic_string.h **** 
1940:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1941:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of string.
1942:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
1943:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1944:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1945:/usr/include/c++/4.8/bits/basic_string.h ****        *
1946:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1947:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
1948:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
1949:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
1950:/usr/include/c++/4.8/bits/basic_string.h ****       */
1951:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1952:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
1953:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
1954:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
1955:/usr/include/c++/4.8/bits/basic_string.h **** 
1956:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1957:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
1958:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1959:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
1960:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
1961:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1962:/usr/include/c++/4.8/bits/basic_string.h ****        *
1963:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1964:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
1965:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
1966:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
1967:/usr/include/c++/4.8/bits/basic_string.h ****       */
1968:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1969:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const;
1970:/usr/include/c++/4.8/bits/basic_string.h **** 
1971:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1972:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
1973:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
1974:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1975:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1976:/usr/include/c++/4.8/bits/basic_string.h ****        *
1977:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
1978:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
1979:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
1980:/usr/include/c++/4.8/bits/basic_string.h ****       */
1981:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
1982:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
1983:/usr/include/c++/4.8/bits/basic_string.h ****       {
1984:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1985:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
1986:/usr/include/c++/4.8/bits/basic_string.h ****       }
1987:/usr/include/c++/4.8/bits/basic_string.h **** 
1988:/usr/include/c++/4.8/bits/basic_string.h ****       /**
1989:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character.
1990:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
1991:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
1992:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
1993:/usr/include/c++/4.8/bits/basic_string.h ****        *
1994:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
1995:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
GAS LISTING /tmp/cceISX6N.s 			page 76


1996:/usr/include/c++/4.8/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
1997:/usr/include/c++/4.8/bits/basic_string.h ****        *
1998:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
1999:/usr/include/c++/4.8/bits/basic_string.h ****       */
2000:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2001:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2002:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find(__c, __pos); }
2003:/usr/include/c++/4.8/bits/basic_string.h **** 
2004:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2005:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2006:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2007:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2008:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2009:/usr/include/c++/4.8/bits/basic_string.h ****        *
2010:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2011:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2012:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2013:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2014:/usr/include/c++/4.8/bits/basic_string.h ****       */
2015:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2016:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2017:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2018:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2019:/usr/include/c++/4.8/bits/basic_string.h **** 
2020:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2021:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2022:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2023:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2024:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2025:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2026:/usr/include/c++/4.8/bits/basic_string.h ****        *
2027:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2028:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2029:/usr/include/c++/4.8/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2030:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
2031:/usr/include/c++/4.8/bits/basic_string.h ****       */
2032:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2033:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const;
2034:/usr/include/c++/4.8/bits/basic_string.h **** 
2035:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2036:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2037:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2038:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2039:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2040:/usr/include/c++/4.8/bits/basic_string.h ****        *
2041:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2042:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2043:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2044:/usr/include/c++/4.8/bits/basic_string.h ****       */
2045:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2046:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2047:/usr/include/c++/4.8/bits/basic_string.h ****       {
2048:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2049:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2050:/usr/include/c++/4.8/bits/basic_string.h ****       }
2051:/usr/include/c++/4.8/bits/basic_string.h **** 
2052:/usr/include/c++/4.8/bits/basic_string.h ****       /**
GAS LISTING /tmp/cceISX6N.s 			page 77


2053:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character.
2054:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to locate.
2055:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2056:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2057:/usr/include/c++/4.8/bits/basic_string.h ****        *
2058:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2059:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2060:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2061:/usr/include/c++/4.8/bits/basic_string.h ****        *
2062:/usr/include/c++/4.8/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2063:/usr/include/c++/4.8/bits/basic_string.h ****       */
2064:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2065:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2066:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
2067:/usr/include/c++/4.8/bits/basic_string.h **** 
2068:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2069:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2070:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2071:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2072:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2073:/usr/include/c++/4.8/bits/basic_string.h ****        *
2074:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2075:/usr/include/c++/4.8/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2076:/usr/include/c++/4.8/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2077:/usr/include/c++/4.8/bits/basic_string.h ****       */
2078:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2079:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2080:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2081:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2082:/usr/include/c++/4.8/bits/basic_string.h **** 
2083:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2084:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2085:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2086:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2087:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2088:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2089:/usr/include/c++/4.8/bits/basic_string.h ****        *
2090:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2091:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2092:/usr/include/c++/4.8/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2093:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2094:/usr/include/c++/4.8/bits/basic_string.h ****       */
2095:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2096:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2097:/usr/include/c++/4.8/bits/basic_string.h **** 			size_type __n) const;
2098:/usr/include/c++/4.8/bits/basic_string.h **** 
2099:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2100:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2101:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2102:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2103:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2104:/usr/include/c++/4.8/bits/basic_string.h ****        *
2105:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2106:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2107:/usr/include/c++/4.8/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2108:/usr/include/c++/4.8/bits/basic_string.h ****       */
2109:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
GAS LISTING /tmp/cceISX6N.s 			page 78


2110:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2111:/usr/include/c++/4.8/bits/basic_string.h ****       {
2112:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2113:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2114:/usr/include/c++/4.8/bits/basic_string.h ****       }
2115:/usr/include/c++/4.8/bits/basic_string.h **** 
2116:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2117:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find position of a different character.
2118:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to avoid.
2119:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2120:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of first occurrence.
2121:/usr/include/c++/4.8/bits/basic_string.h ****        *
2122:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2123:/usr/include/c++/4.8/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2124:/usr/include/c++/4.8/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2125:/usr/include/c++/4.8/bits/basic_string.h ****       */
2126:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2127:/usr/include/c++/4.8/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2128:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2129:/usr/include/c++/4.8/bits/basic_string.h **** 
2130:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2131:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2132:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2133:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2134:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2135:/usr/include/c++/4.8/bits/basic_string.h ****        *
2136:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2137:/usr/include/c++/4.8/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2138:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2139:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2140:/usr/include/c++/4.8/bits/basic_string.h ****       */
2141:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2142:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2143:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT
2144:/usr/include/c++/4.8/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2145:/usr/include/c++/4.8/bits/basic_string.h **** 
2146:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2147:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2148:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2149:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2150:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2151:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2152:/usr/include/c++/4.8/bits/basic_string.h ****        *
2153:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2154:/usr/include/c++/4.8/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2155:/usr/include/c++/4.8/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2156:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns npos.
2157:/usr/include/c++/4.8/bits/basic_string.h ****       */
2158:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2159:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2160:/usr/include/c++/4.8/bits/basic_string.h **** 		       size_type __n) const;
2161:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2162:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2163:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2164:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2165:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2166:/usr/include/c++/4.8/bits/basic_string.h ****        *
GAS LISTING /tmp/cceISX6N.s 			page 79


2167:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2168:/usr/include/c++/4.8/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2169:/usr/include/c++/4.8/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2170:/usr/include/c++/4.8/bits/basic_string.h ****        *  npos.
2171:/usr/include/c++/4.8/bits/basic_string.h ****       */
2172:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2173:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2174:/usr/include/c++/4.8/bits/basic_string.h ****       {
2175:/usr/include/c++/4.8/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2176:/usr/include/c++/4.8/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2177:/usr/include/c++/4.8/bits/basic_string.h ****       }
2178:/usr/include/c++/4.8/bits/basic_string.h **** 
2179:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2180:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2181:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __c  Character to avoid.
2182:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2183:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Index of last occurrence.
2184:/usr/include/c++/4.8/bits/basic_string.h ****        *
2185:/usr/include/c++/4.8/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2186:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2187:/usr/include/c++/4.8/bits/basic_string.h ****        *  found.  If not found, returns npos.
2188:/usr/include/c++/4.8/bits/basic_string.h ****       */
2189:/usr/include/c++/4.8/bits/basic_string.h ****       size_type
2190:/usr/include/c++/4.8/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2191:/usr/include/c++/4.8/bits/basic_string.h **** 	_GLIBCXX_NOEXCEPT;
2192:/usr/include/c++/4.8/bits/basic_string.h **** 
2193:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2194:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Get a substring.
2195:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2196:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2197:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  The new string.
2198:/usr/include/c++/4.8/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2199:/usr/include/c++/4.8/bits/basic_string.h ****        *
2200:/usr/include/c++/4.8/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2201:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2202:/usr/include/c++/4.8/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2203:/usr/include/c++/4.8/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2204:/usr/include/c++/4.8/bits/basic_string.h ****       */
2205:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string
2206:/usr/include/c++/4.8/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2207:/usr/include/c++/4.8/bits/basic_string.h ****       { return basic_string(*this,
2208:/usr/include/c++/4.8/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2209:/usr/include/c++/4.8/bits/basic_string.h **** 
2210:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2211:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare to a string.
2212:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2213:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2214:/usr/include/c++/4.8/bits/basic_string.h ****        *
2215:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2216:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2217:/usr/include/c++/4.8/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2218:/usr/include/c++/4.8/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2219:/usr/include/c++/4.8/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2220:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2221:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2222:/usr/include/c++/4.8/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2223:/usr/include/c++/4.8/bits/basic_string.h ****       */
GAS LISTING /tmp/cceISX6N.s 			page 80


2224:/usr/include/c++/4.8/bits/basic_string.h ****       int
2225:/usr/include/c++/4.8/bits/basic_string.h ****       compare(const basic_string& __str) const
2226:/usr/include/c++/4.8/bits/basic_string.h ****       {
2227:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __size = this->size();
2228:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __osize = __str.size();
2229:/usr/include/c++/4.8/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2230:/usr/include/c++/4.8/bits/basic_string.h **** 
2231:/usr/include/c++/4.8/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2232:/usr/include/c++/4.8/bits/basic_string.h **** 	if (!__r)
2233:/usr/include/c++/4.8/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2234:/usr/include/c++/4.8/bits/basic_string.h **** 	return __r;
2235:/usr/include/c++/4.8/bits/basic_string.h ****       }
2236:/usr/include/c++/4.8/bits/basic_string.h **** 
2237:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2238:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2239:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2240:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2241:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2242:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2243:/usr/include/c++/4.8/bits/basic_string.h ****        *
2244:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2245:/usr/include/c++/4.8/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2246:/usr/include/c++/4.8/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2247:/usr/include/c++/4.8/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2248:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2249:/usr/include/c++/4.8/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2250:/usr/include/c++/4.8/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2251:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings by calling
2252:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
2253:/usr/include/c++/4.8/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2254:/usr/include/c++/4.8/bits/basic_string.h ****        *  the shorter one is ordered first.
2255:/usr/include/c++/4.8/bits/basic_string.h ****       */
2256:/usr/include/c++/4.8/bits/basic_string.h ****       int
2257:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2258:/usr/include/c++/4.8/bits/basic_string.h **** 
2259:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2260:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2261:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2262:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2263:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __str  String to compare against.
2264:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2265:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2266:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2267:/usr/include/c++/4.8/bits/basic_string.h ****        *
2268:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2269:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2270:/usr/include/c++/4.8/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2271:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2272:/usr/include/c++/4.8/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2273:/usr/include/c++/4.8/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2274:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2275:/usr/include/c++/4.8/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2276:/usr/include/c++/4.8/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2277:/usr/include/c++/4.8/bits/basic_string.h ****        *  calling
2278:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2279:/usr/include/c++/4.8/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2280:/usr/include/c++/4.8/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
GAS LISTING /tmp/cceISX6N.s 			page 81


2281:/usr/include/c++/4.8/bits/basic_string.h ****       */
2282:/usr/include/c++/4.8/bits/basic_string.h ****       int
2283:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2284:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __pos2, size_type __n2) const;
2285:/usr/include/c++/4.8/bits/basic_string.h **** 
2286:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2287:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare to a C string.
2288:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to compare against.
2289:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2290:/usr/include/c++/4.8/bits/basic_string.h ****        *
2291:/usr/include/c++/4.8/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2292:/usr/include/c++/4.8/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2293:/usr/include/c++/4.8/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2294:/usr/include/c++/4.8/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2295:/usr/include/c++/4.8/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2296:/usr/include/c++/4.8/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2297:/usr/include/c++/4.8/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2298:/usr/include/c++/4.8/bits/basic_string.h ****        *  ordered first.
2299:/usr/include/c++/4.8/bits/basic_string.h ****       */
2300:/usr/include/c++/4.8/bits/basic_string.h ****       int
2301:/usr/include/c++/4.8/bits/basic_string.h ****       compare(const _CharT* __s) const;
2302:/usr/include/c++/4.8/bits/basic_string.h **** 
2303:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2304:/usr/include/c++/4.8/bits/basic_string.h ****       // 5 String::compare specification questionable
2305:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2306:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2307:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2308:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2309:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  C string to compare against.
2310:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2311:/usr/include/c++/4.8/bits/basic_string.h ****        *
2312:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2313:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
2314:/usr/include/c++/4.8/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
2315:/usr/include/c++/4.8/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
2316:/usr/include/c++/4.8/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
2317:/usr/include/c++/4.8/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
2318:/usr/include/c++/4.8/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
2319:/usr/include/c++/4.8/bits/basic_string.h ****        *  function then compares the two string by calling
2320:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
2321:/usr/include/c++/4.8/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2322:/usr/include/c++/4.8/bits/basic_string.h ****        *  one is ordered first.
2323:/usr/include/c++/4.8/bits/basic_string.h ****       */
2324:/usr/include/c++/4.8/bits/basic_string.h ****       int
2325:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
2326:/usr/include/c++/4.8/bits/basic_string.h **** 
2327:/usr/include/c++/4.8/bits/basic_string.h ****       /**
2328:/usr/include/c++/4.8/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
2329:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2330:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2331:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __s  character %array to compare against.
2332:/usr/include/c++/4.8/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
2333:/usr/include/c++/4.8/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2334:/usr/include/c++/4.8/bits/basic_string.h ****        *
2335:/usr/include/c++/4.8/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2336:/usr/include/c++/4.8/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
2337:/usr/include/c++/4.8/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
GAS LISTING /tmp/cceISX6N.s 			page 82


2338:/usr/include/c++/4.8/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
2339:/usr/include/c++/4.8/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
2340:/usr/include/c++/4.8/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
2341:/usr/include/c++/4.8/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
2342:/usr/include/c++/4.8/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
2343:/usr/include/c++/4.8/bits/basic_string.h ****        *  function then compares the two strings by calling
2344:/usr/include/c++/4.8/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
2345:/usr/include/c++/4.8/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
2346:/usr/include/c++/4.8/bits/basic_string.h ****        *  one is ordered first.
2347:/usr/include/c++/4.8/bits/basic_string.h ****        *
2348:/usr/include/c++/4.8/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
2349:/usr/include/c++/4.8/bits/basic_string.h ****        *  no special meaning.
2350:/usr/include/c++/4.8/bits/basic_string.h ****       */
2351:/usr/include/c++/4.8/bits/basic_string.h ****       int
2352:/usr/include/c++/4.8/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
2353:/usr/include/c++/4.8/bits/basic_string.h **** 	      size_type __n2) const;
2354:/usr/include/c++/4.8/bits/basic_string.h ****   };
2355:/usr/include/c++/4.8/bits/basic_string.h **** 
2356:/usr/include/c++/4.8/bits/basic_string.h ****   // operator+
2357:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2358:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate two strings.
2359:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2360:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2361:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2362:/usr/include/c++/4.8/bits/basic_string.h ****    */
2363:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2364:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
2365:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2366:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2367:/usr/include/c++/4.8/bits/basic_string.h ****     {
2368:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2369:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__rhs);
2370:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2371:/usr/include/c++/4.8/bits/basic_string.h ****     }
2372:/usr/include/c++/4.8/bits/basic_string.h **** 
2373:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2374:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
2375:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2376:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2377:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
2378:/usr/include/c++/4.8/bits/basic_string.h ****    */
2379:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2380:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2381:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2382:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2383:/usr/include/c++/4.8/bits/basic_string.h **** 
2384:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2385:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate character and string.
2386:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2387:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2388:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2389:/usr/include/c++/4.8/bits/basic_string.h ****    */
2390:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2391:/usr/include/c++/4.8/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
2392:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
2393:/usr/include/c++/4.8/bits/basic_string.h **** 
2394:/usr/include/c++/4.8/bits/basic_string.h ****   /**
GAS LISTING /tmp/cceISX6N.s 			page 83


2395:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
2396:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2397:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2398:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2399:/usr/include/c++/4.8/bits/basic_string.h ****    */
2400:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2401:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2402:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2403:/usr/include/c++/4.8/bits/basic_string.h **** 	     const _CharT* __rhs)
2404:/usr/include/c++/4.8/bits/basic_string.h ****     {
2405:/usr/include/c++/4.8/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
2406:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__rhs);
2407:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2408:/usr/include/c++/4.8/bits/basic_string.h ****     }
2409:/usr/include/c++/4.8/bits/basic_string.h **** 
2410:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2411:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Concatenate string and character.
2412:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2413:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Last string.
2414:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
2415:/usr/include/c++/4.8/bits/basic_string.h ****    */
2416:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2417:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2418:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
2419:/usr/include/c++/4.8/bits/basic_string.h ****     {
2420:/usr/include/c++/4.8/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
2421:/usr/include/c++/4.8/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
2422:/usr/include/c++/4.8/bits/basic_string.h ****       __string_type __str(__lhs);
2423:/usr/include/c++/4.8/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
2424:/usr/include/c++/4.8/bits/basic_string.h ****       return __str;
2425:/usr/include/c++/4.8/bits/basic_string.h ****     }
2426:/usr/include/c++/4.8/bits/basic_string.h **** 
2427:/usr/include/c++/4.8/bits/basic_string.h **** #if __cplusplus >= 201103L
2428:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2429:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2430:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2431:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2432:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2433:/usr/include/c++/4.8/bits/basic_string.h **** 
2434:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2435:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2436:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2437:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2438:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2439:/usr/include/c++/4.8/bits/basic_string.h **** 
2440:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2441:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2442:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2443:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2444:/usr/include/c++/4.8/bits/basic_string.h ****     {
2445:/usr/include/c++/4.8/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
2446:/usr/include/c++/4.8/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
2447:/usr/include/c++/4.8/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
2448:/usr/include/c++/4.8/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
2449:/usr/include/c++/4.8/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
2450:/usr/include/c++/4.8/bits/basic_string.h ****     }
2451:/usr/include/c++/4.8/bits/basic_string.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 84


2452:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2453:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2454:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(const _CharT* __lhs,
2455:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2456:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
2457:/usr/include/c++/4.8/bits/basic_string.h **** 
2458:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2459:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2460:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(_CharT __lhs,
2461:/usr/include/c++/4.8/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
2462:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
2463:/usr/include/c++/4.8/bits/basic_string.h **** 
2464:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2465:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2466:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2467:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __rhs)
2468:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
2469:/usr/include/c++/4.8/bits/basic_string.h **** 
2470:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2471:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
2472:/usr/include/c++/4.8/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
2473:/usr/include/c++/4.8/bits/basic_string.h **** 	      _CharT __rhs)
2474:/usr/include/c++/4.8/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
2475:/usr/include/c++/4.8/bits/basic_string.h **** #endif
2476:/usr/include/c++/4.8/bits/basic_string.h **** 
2477:/usr/include/c++/4.8/bits/basic_string.h ****   // operator ==
2478:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2479:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
2480:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2481:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2482:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
2483:/usr/include/c++/4.8/bits/basic_string.h ****    */
2484:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2485:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2486:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2487:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2488:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
2489:/usr/include/c++/4.8/bits/basic_string.h **** 
2490:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT>
2491:/usr/include/c++/4.8/bits/basic_string.h ****     inline
2492:/usr/include/c++/4.8/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
2493:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
2494:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs)
2495:/usr/include/c++/4.8/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
2496:/usr/include/c++/4.8/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
2497:/usr/include/c++/4.8/bits/basic_string.h **** 						    __lhs.size())); }
2498:/usr/include/c++/4.8/bits/basic_string.h **** 
2499:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2500:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
2501:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2502:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2503:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
2504:/usr/include/c++/4.8/bits/basic_string.h ****    */
2505:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2506:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2507:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const _CharT* __lhs,
2508:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
GAS LISTING /tmp/cceISX6N.s 			page 85


2509:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
2510:/usr/include/c++/4.8/bits/basic_string.h **** 
2511:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2512:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
2513:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  String.
2514:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  C string.
2515:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
2516:/usr/include/c++/4.8/bits/basic_string.h ****    */
2517:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2518:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2519:/usr/include/c++/4.8/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2520:/usr/include/c++/4.8/bits/basic_string.h **** 	       const _CharT* __rhs)
2521:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
2522:/usr/include/c++/4.8/bits/basic_string.h **** 
2523:/usr/include/c++/4.8/bits/basic_string.h ****   // operator !=
2524:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2525:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test difference of two strings.
2526:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2527:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2528:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
2529:/usr/include/c++/4.8/bits/basic_string.h ****    */
2530:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2531:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2532:/usr/include/c++/4.8/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2533:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2534:/usr/include/c++/4.8/bits/basic_string.h ****     { return !(__lhs == __rhs); }
2535:/usr/include/c++/4.8/bits/basic_string.h **** 
2536:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2537:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
2538:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2539:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2540:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
2541:/usr/include/c++/4.8/bits/basic_string.h ****    */
2542:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2543:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2544:/usr/include/c++/4.8/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
2545:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2546:/usr/include/c++/4.8/bits/basic_string.h ****     { return !(__lhs == __rhs); }
2547:/usr/include/c++/4.8/bits/basic_string.h **** 
2548:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2549:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
2550:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  String.
2551:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  C string.
2552:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
2553:/usr/include/c++/4.8/bits/basic_string.h ****    */
2554:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2555:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2556:/usr/include/c++/4.8/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2557:/usr/include/c++/4.8/bits/basic_string.h **** 	       const _CharT* __rhs)
2558:/usr/include/c++/4.8/bits/basic_string.h ****     { return !(__lhs == __rhs); }
2559:/usr/include/c++/4.8/bits/basic_string.h **** 
2560:/usr/include/c++/4.8/bits/basic_string.h ****   // operator <
2561:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2562:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string precedes string.
2563:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2564:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2565:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
GAS LISTING /tmp/cceISX6N.s 			page 86


2566:/usr/include/c++/4.8/bits/basic_string.h ****    */
2567:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2568:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2569:/usr/include/c++/4.8/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2570:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2571:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
2572:/usr/include/c++/4.8/bits/basic_string.h **** 
2573:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2574:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
2575:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  String.
2576:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  C string.
2577:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
2578:/usr/include/c++/4.8/bits/basic_string.h ****    */
2579:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2580:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2581:/usr/include/c++/4.8/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2582:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __rhs)
2583:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
2584:/usr/include/c++/4.8/bits/basic_string.h **** 
2585:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2586:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
2587:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2588:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2589:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
2590:/usr/include/c++/4.8/bits/basic_string.h ****    */
2591:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2592:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2593:/usr/include/c++/4.8/bits/basic_string.h ****     operator<(const _CharT* __lhs,
2594:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2595:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
2596:/usr/include/c++/4.8/bits/basic_string.h **** 
2597:/usr/include/c++/4.8/bits/basic_string.h ****   // operator >
2598:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2599:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string follows string.
2600:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2601:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2602:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
2603:/usr/include/c++/4.8/bits/basic_string.h ****    */
2604:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2605:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2606:/usr/include/c++/4.8/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2607:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2608:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
2609:/usr/include/c++/4.8/bits/basic_string.h **** 
2610:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2611:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string follows C string.
2612:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  String.
2613:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  C string.
2614:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
2615:/usr/include/c++/4.8/bits/basic_string.h ****    */
2616:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2617:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2618:/usr/include/c++/4.8/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2619:/usr/include/c++/4.8/bits/basic_string.h **** 	      const _CharT* __rhs)
2620:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
2621:/usr/include/c++/4.8/bits/basic_string.h **** 
2622:/usr/include/c++/4.8/bits/basic_string.h ****   /**
GAS LISTING /tmp/cceISX6N.s 			page 87


2623:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if C string follows string.
2624:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2625:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2626:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
2627:/usr/include/c++/4.8/bits/basic_string.h ****    */
2628:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2629:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2630:/usr/include/c++/4.8/bits/basic_string.h ****     operator>(const _CharT* __lhs,
2631:/usr/include/c++/4.8/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2632:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
2633:/usr/include/c++/4.8/bits/basic_string.h **** 
2634:/usr/include/c++/4.8/bits/basic_string.h ****   // operator <=
2635:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2636:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
2637:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2638:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2639:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
2640:/usr/include/c++/4.8/bits/basic_string.h ****    */
2641:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2642:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2643:/usr/include/c++/4.8/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2644:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2645:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
2646:/usr/include/c++/4.8/bits/basic_string.h **** 
2647:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2648:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
2649:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  String.
2650:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  C string.
2651:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
2652:/usr/include/c++/4.8/bits/basic_string.h ****    */
2653:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2654:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2655:/usr/include/c++/4.8/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2656:/usr/include/c++/4.8/bits/basic_string.h **** 	       const _CharT* __rhs)
2657:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
2658:/usr/include/c++/4.8/bits/basic_string.h **** 
2659:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2660:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
2661:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2662:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2663:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
2664:/usr/include/c++/4.8/bits/basic_string.h ****    */
2665:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2666:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2667:/usr/include/c++/4.8/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
2668:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2669:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
2670:/usr/include/c++/4.8/bits/basic_string.h **** 
2671:/usr/include/c++/4.8/bits/basic_string.h ****   // operator >=
2672:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2673:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
2674:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2675:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2676:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
2677:/usr/include/c++/4.8/bits/basic_string.h ****    */
2678:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2679:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
GAS LISTING /tmp/cceISX6N.s 			page 88


2680:/usr/include/c++/4.8/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2681:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2682:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
2683:/usr/include/c++/4.8/bits/basic_string.h **** 
2684:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2685:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
2686:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  String.
2687:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  C string.
2688:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
2689:/usr/include/c++/4.8/bits/basic_string.h ****    */
2690:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2691:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2692:/usr/include/c++/4.8/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
2693:/usr/include/c++/4.8/bits/basic_string.h **** 	       const _CharT* __rhs)
2694:/usr/include/c++/4.8/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
2695:/usr/include/c++/4.8/bits/basic_string.h **** 
2696:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2697:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
2698:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  C string.
2699:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  String.
2700:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
2701:/usr/include/c++/4.8/bits/basic_string.h ****    */
2702:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2703:/usr/include/c++/4.8/bits/basic_string.h ****     inline bool
2704:/usr/include/c++/4.8/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
2705:/usr/include/c++/4.8/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
2706:/usr/include/c++/4.8/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
2707:/usr/include/c++/4.8/bits/basic_string.h **** 
2708:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2709:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
2710:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __lhs  First string.
2711:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __rhs  Second string.
2712:/usr/include/c++/4.8/bits/basic_string.h ****    *
2713:/usr/include/c++/4.8/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
2714:/usr/include/c++/4.8/bits/basic_string.h ****    */
2715:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2716:/usr/include/c++/4.8/bits/basic_string.h ****     inline void
2717:/usr/include/c++/4.8/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
2718:/usr/include/c++/4.8/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
2719:/usr/include/c++/4.8/bits/basic_string.h ****     { __lhs.swap(__rhs); }
2720:/usr/include/c++/4.8/bits/basic_string.h **** 
2721:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2722:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Read stream into a string.
2723:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __is  Input stream.
2724:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __str  Buffer to store into.
2725:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  Reference to the input stream.
2726:/usr/include/c++/4.8/bits/basic_string.h ****    *
2727:/usr/include/c++/4.8/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
2728:/usr/include/c++/4.8/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
2729:/usr/include/c++/4.8/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
2730:/usr/include/c++/4.8/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
2731:/usr/include/c++/4.8/bits/basic_string.h ****    *  contents of @a __str are erased.
2732:/usr/include/c++/4.8/bits/basic_string.h ****    */
2733:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2734:/usr/include/c++/4.8/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
2735:/usr/include/c++/4.8/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
2736:/usr/include/c++/4.8/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
GAS LISTING /tmp/cceISX6N.s 			page 89


2737:/usr/include/c++/4.8/bits/basic_string.h **** 
2738:/usr/include/c++/4.8/bits/basic_string.h ****   template<>
2739:/usr/include/c++/4.8/bits/basic_string.h ****     basic_istream<char>&
2740:/usr/include/c++/4.8/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
2741:/usr/include/c++/4.8/bits/basic_string.h **** 
2742:/usr/include/c++/4.8/bits/basic_string.h ****   /**
2743:/usr/include/c++/4.8/bits/basic_string.h ****    *  @brief  Write string to a stream.
2744:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __os  Output stream.
2745:/usr/include/c++/4.8/bits/basic_string.h ****    *  @param __str  String to write out.
2746:/usr/include/c++/4.8/bits/basic_string.h ****    *  @return  Reference to the output stream.
2747:/usr/include/c++/4.8/bits/basic_string.h ****    *
2748:/usr/include/c++/4.8/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
2749:/usr/include/c++/4.8/bits/basic_string.h ****    *  writing a C string.
2750:/usr/include/c++/4.8/bits/basic_string.h ****    */
2751:/usr/include/c++/4.8/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
2752:/usr/include/c++/4.8/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
2753:/usr/include/c++/4.8/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
2754:/usr/include/c++/4.8/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
2755:/usr/include/c++/4.8/bits/basic_string.h ****     {
2756:/usr/include/c++/4.8/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2757:/usr/include/c++/4.8/bits/basic_string.h ****       // 586. string inserter not a formatted function
2758:/usr/include/c++/4.8/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
 273              		.loc 8 2758 0
 274 0067 BF000000 		mov	edi, OFFSET FLAT:_ZSt4cout
 274      00
 275              	.LBE627:
 276              	.LBE626:
 277              	.LBB635:
 278              	.LBB621:
 279              	.LBB619:
 280              	.LBB617:
 281              	.LBB615:
 282              		.loc 6 643 0
 283 006c F20F1144 		movsd	QWORD PTR [rsp+8], xmm0
 283      2408
 284              	.LVL14:
 285              	.LBE615:
 286              	.LBE617:
 287              	.LBE619:
 288              	.LBE621:
 289              	.LBE635:
 290              	.LBB636:
 291              	.LBB633:
 292              		.loc 8 2758 0
 293 0072 488B56E8 		mov	rdx, QWORD PTR [rsi-24]
 294 0076 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 294      00
 295              	.LVL15:
 296              	.LBE633:
 297              	.LBE636:
 298              	.LBB637:
 299              	.LBB638:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 300              		.loc 2 535 0
 301 007b BA020000 		mov	edx, 2
 301      00
 302 0080 BE000000 		mov	esi, OFFSET FLAT:.LC2
GAS LISTING /tmp/cceISX6N.s 			page 90


 302      00
 303 0085 4889C7   		mov	rdi, rax
 304              	.LBE638:
 305              	.LBE637:
 306              	.LBB640:
 307              	.LBB634:
 308              		.loc 8 2758 0
 309 0088 4889C3   		mov	rbx, rax
 310              	.LVL16:
 311              	.LBE634:
 312              	.LBE640:
 313              	.LBB641:
 314              	.LBB639:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 315              		.loc 2 535 0
 316 008b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 316      00
 317              	.LVL17:
 318              	.LBE639:
 319              	.LBE641:
 320              	.LBB642:
 321              	.LBB643:
 322              	.LBB644:
 323              	.LBB645:
 324              	.LBB646:
 162:/usr/include/c++/4.8/chrono **** 	  }
 325              		.loc 7 162 0
 326 0090 F2480F2A 		cvtsi2sd	xmm0, rbp
 326      C5
 327              	.LBE646:
 328              	.LBE645:
 329              	.LBE644:
 330              	.LBE643:
 331              	.LBE642:
 332              	.LBB651:
 333              	.LBB652:
 221:/usr/include/c++/4.8/ostream **** 
 334              		.loc 2 221 0
 335 0095 4889DF   		mov	rdi, rbx
 336              	.LBE652:
 337              	.LBE651:
 338              	.LBB655:
 339              	.LBB650:
 340              	.LBB649:
 341              	.LBB648:
 342              	.LBB647:
 162:/usr/include/c++/4.8/chrono **** 	  }
 343              		.loc 7 162 0
 344 0098 F20F5E05 		divsd	xmm0, QWORD PTR .LC3[rip]
 344      00000000 
 345              	.LVL18:
 346              	.LBE647:
 347              	.LBE648:
 348              	.LBE649:
 349              	.LBE650:
 350              	.LBE655:
 351              	.LBB656:
GAS LISTING /tmp/cceISX6N.s 			page 91


 352              	.LBB653:
 221:/usr/include/c++/4.8/ostream **** 
 353              		.loc 2 221 0
 354 00a0 E8000000 		call	_ZNSo9_M_insertIdEERSoT_
 354      00
 355              	.LVL19:
 356              	.LBE653:
 357              	.LBE656:
 358              	.LBB657:
 359              	.LBB658:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 360              		.loc 2 535 0
 361 00a5 BA0E0000 		mov	edx, 14
 361      00
 362 00aa BE000000 		mov	esi, OFFSET FLAT:.LC4
 362      00
 363 00af 4889C7   		mov	rdi, rax
 364              	.LBE658:
 365              	.LBE657:
 366              	.LBB660:
 367              	.LBB654:
 221:/usr/include/c++/4.8/ostream **** 
 368              		.loc 2 221 0
 369 00b2 4889C3   		mov	rbx, rax
 370              	.LVL20:
 371              	.LBE654:
 372              	.LBE660:
 373              	.LBB661:
 374              	.LBB659:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 375              		.loc 2 535 0
 376 00b5 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 376      00
 377              	.LVL21:
 378              	.LBE659:
 379              	.LBE661:
 380              	.LBB662:
 381              	.LBB663:
 221:/usr/include/c++/4.8/ostream **** 
 382              		.loc 2 221 0
 383 00ba F20F1054 		movsd	xmm2, QWORD PTR [rsp+8]
 383      2408
 384 00c0 4889DF   		mov	rdi, rbx
 385 00c3 660F28C2 		movapd	xmm0, xmm2
 386 00c7 E8000000 		call	_ZNSo9_M_insertIdEERSoT_
 386      00
 387              	.LVL22:
 388 00cc 4889C5   		mov	rbp, rax
 389              	.LVL23:
 390              	.LBE663:
 391              	.LBE662:
 392              	.LBB664:
 393              	.LBB665:
 394              	.LBB666:
 539:/usr/include/c++/4.8/ostream **** 
 540:/usr/include/c++/4.8/ostream ****   // Signed and unsigned
 541:/usr/include/c++/4.8/ostream ****   template<class _Traits>
GAS LISTING /tmp/cceISX6N.s 			page 92


 542:/usr/include/c++/4.8/ostream ****     inline basic_ostream<char, _Traits>&
 543:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)
 544:/usr/include/c++/4.8/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 545:/usr/include/c++/4.8/ostream **** 
 546:/usr/include/c++/4.8/ostream ****   template<class _Traits>
 547:/usr/include/c++/4.8/ostream ****     inline basic_ostream<char, _Traits> &
 548:/usr/include/c++/4.8/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)
 549:/usr/include/c++/4.8/ostream ****     { return (__out << reinterpret_cast<const char*>(__s)); }
 550:/usr/include/c++/4.8/ostream ****   //@}
 551:/usr/include/c++/4.8/ostream **** 
 552:/usr/include/c++/4.8/ostream ****   // Standard basic_ostream manipulators
 553:/usr/include/c++/4.8/ostream **** 
 554:/usr/include/c++/4.8/ostream ****   /**
 555:/usr/include/c++/4.8/ostream ****    *  @brief  Write a newline and flush the stream.
 556:/usr/include/c++/4.8/ostream ****    *
 557:/usr/include/c++/4.8/ostream ****    *  This manipulator is often mistakenly used when a simple newline is
 558:/usr/include/c++/4.8/ostream ****    *  desired, leading to poor buffering performance.  See
 559:/usr/include/c++/4.8/ostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch25s02.html
 560:/usr/include/c++/4.8/ostream ****    *  for more on this subject.
 561:/usr/include/c++/4.8/ostream ****   */
 562:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 563:/usr/include/c++/4.8/ostream ****     inline basic_ostream<_CharT, _Traits>&
 564:/usr/include/c++/4.8/ostream ****     endl(basic_ostream<_CharT, _Traits>& __os)
 565:/usr/include/c++/4.8/ostream ****     { return flush(__os.put(__os.widen('\n'))); }
 395              		.loc 2 565 0
 396 00cf 488B00   		mov	rax, QWORD PTR [rax]
 397              	.LVL24:
 398              	.LBE666:
 399              	.LBE665:
 400              	.LBE664:
 401              	.LBE690:
 402 00d2 488B40E8 		mov	rax, QWORD PTR [rax-24]
 403 00d6 488B9C05 		mov	rbx, QWORD PTR [rbp+240+rax]
 403      F0000000 
 404              	.LVL25:
 405              	.LBB691:
 406              	.LBB687:
 407              	.LBB684:
 408              	.LBB681:
 409              	.LBB667:
 410              	.LBB668:
 411              	.LBB669:
  48:/usr/include/c++/4.8/bits/basic_ios.h **** 	__throw_bad_cast();
 412              		.loc 4 48 0
 413 00de 4885DB   		test	rbx, rbx
 414 00e1 743F     		je	.L17
 415              	.LVL26:
 416              	.LBE669:
 417              	.LBE668:
 418              	.LBB671:
 419              	.LBB672:
 420              		.file 9 "/usr/include/c++/4.8/bits/locale_facets.h"
   1:/usr/include/c++/4.8/bits/locale_facets.h **** // Locale support -*- C++ -*-
   2:/usr/include/c++/4.8/bits/locale_facets.h **** 
   3:/usr/include/c++/4.8/bits/locale_facets.h **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/bits/locale_facets.h **** //
   5:/usr/include/c++/4.8/bits/locale_facets.h **** // This file is part of the GNU ISO C++ Library.  This library is free
GAS LISTING /tmp/cceISX6N.s 			page 93


   6:/usr/include/c++/4.8/bits/locale_facets.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/bits/locale_facets.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/bits/locale_facets.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/bits/locale_facets.h **** // any later version.
  10:/usr/include/c++/4.8/bits/locale_facets.h **** 
  11:/usr/include/c++/4.8/bits/locale_facets.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/bits/locale_facets.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/bits/locale_facets.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/bits/locale_facets.h **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/bits/locale_facets.h **** 
  16:/usr/include/c++/4.8/bits/locale_facets.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/bits/locale_facets.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/bits/locale_facets.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/bits/locale_facets.h **** 
  20:/usr/include/c++/4.8/bits/locale_facets.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/bits/locale_facets.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/bits/locale_facets.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/bits/locale_facets.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/bits/locale_facets.h **** 
  25:/usr/include/c++/4.8/bits/locale_facets.h **** /** @file bits/locale_facets.h
  26:/usr/include/c++/4.8/bits/locale_facets.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/4.8/bits/locale_facets.h ****  *  Do not attempt to use it directly. @headername{locale}
  28:/usr/include/c++/4.8/bits/locale_facets.h ****  */
  29:/usr/include/c++/4.8/bits/locale_facets.h **** 
  30:/usr/include/c++/4.8/bits/locale_facets.h **** //
  31:/usr/include/c++/4.8/bits/locale_facets.h **** // ISO C++ 14882: 22.1  Locales
  32:/usr/include/c++/4.8/bits/locale_facets.h **** //
  33:/usr/include/c++/4.8/bits/locale_facets.h **** 
  34:/usr/include/c++/4.8/bits/locale_facets.h **** #ifndef _LOCALE_FACETS_H
  35:/usr/include/c++/4.8/bits/locale_facets.h **** #define _LOCALE_FACETS_H 1
  36:/usr/include/c++/4.8/bits/locale_facets.h **** 
  37:/usr/include/c++/4.8/bits/locale_facets.h **** #pragma GCC system_header
  38:/usr/include/c++/4.8/bits/locale_facets.h **** 
  39:/usr/include/c++/4.8/bits/locale_facets.h **** #include <cwctype>	// For wctype_t
  40:/usr/include/c++/4.8/bits/locale_facets.h **** #include <cctype>
  41:/usr/include/c++/4.8/bits/locale_facets.h **** #include <bits/ctype_base.h>
  42:/usr/include/c++/4.8/bits/locale_facets.h **** #include <iosfwd>
  43:/usr/include/c++/4.8/bits/locale_facets.h **** #include <bits/ios_base.h>  // For ios_base, ios_base::iostate
  44:/usr/include/c++/4.8/bits/locale_facets.h **** #include <streambuf>
  45:/usr/include/c++/4.8/bits/locale_facets.h **** #include <bits/cpp_type_traits.h>
  46:/usr/include/c++/4.8/bits/locale_facets.h **** #include <ext/type_traits.h>
  47:/usr/include/c++/4.8/bits/locale_facets.h **** #include <ext/numeric_traits.h>
  48:/usr/include/c++/4.8/bits/locale_facets.h **** #include <bits/streambuf_iterator.h>
  49:/usr/include/c++/4.8/bits/locale_facets.h **** 
  50:/usr/include/c++/4.8/bits/locale_facets.h **** namespace std _GLIBCXX_VISIBILITY(default)
  51:/usr/include/c++/4.8/bits/locale_facets.h **** {
  52:/usr/include/c++/4.8/bits/locale_facets.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/usr/include/c++/4.8/bits/locale_facets.h **** 
  54:/usr/include/c++/4.8/bits/locale_facets.h ****   // NB: Don't instantiate required wchar_t facets if no wchar_t support.
  55:/usr/include/c++/4.8/bits/locale_facets.h **** #ifdef _GLIBCXX_USE_WCHAR_T
  56:/usr/include/c++/4.8/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 28
  57:/usr/include/c++/4.8/bits/locale_facets.h **** #else
  58:/usr/include/c++/4.8/bits/locale_facets.h **** # define  _GLIBCXX_NUM_FACETS 14
  59:/usr/include/c++/4.8/bits/locale_facets.h **** #endif
  60:/usr/include/c++/4.8/bits/locale_facets.h **** 
  61:/usr/include/c++/4.8/bits/locale_facets.h ****   // Convert string to numeric value of type _Tp and store results.
  62:/usr/include/c++/4.8/bits/locale_facets.h ****   // NB: This is specialized for all required types, there is no
GAS LISTING /tmp/cceISX6N.s 			page 94


  63:/usr/include/c++/4.8/bits/locale_facets.h ****   // generic definition.
  64:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _Tp>
  65:/usr/include/c++/4.8/bits/locale_facets.h ****     void
  66:/usr/include/c++/4.8/bits/locale_facets.h ****     __convert_to_v(const char*, _Tp&, ios_base::iostate&,
  67:/usr/include/c++/4.8/bits/locale_facets.h **** 		   const __c_locale&) throw();
  68:/usr/include/c++/4.8/bits/locale_facets.h **** 
  69:/usr/include/c++/4.8/bits/locale_facets.h ****   // Explicit specializations for required types.
  70:/usr/include/c++/4.8/bits/locale_facets.h ****   template<>
  71:/usr/include/c++/4.8/bits/locale_facets.h ****     void
  72:/usr/include/c++/4.8/bits/locale_facets.h ****     __convert_to_v(const char*, float&, ios_base::iostate&,
  73:/usr/include/c++/4.8/bits/locale_facets.h **** 		   const __c_locale&) throw();
  74:/usr/include/c++/4.8/bits/locale_facets.h **** 
  75:/usr/include/c++/4.8/bits/locale_facets.h ****   template<>
  76:/usr/include/c++/4.8/bits/locale_facets.h ****     void
  77:/usr/include/c++/4.8/bits/locale_facets.h ****     __convert_to_v(const char*, double&, ios_base::iostate&,
  78:/usr/include/c++/4.8/bits/locale_facets.h **** 		   const __c_locale&) throw();
  79:/usr/include/c++/4.8/bits/locale_facets.h **** 
  80:/usr/include/c++/4.8/bits/locale_facets.h ****   template<>
  81:/usr/include/c++/4.8/bits/locale_facets.h ****     void
  82:/usr/include/c++/4.8/bits/locale_facets.h ****     __convert_to_v(const char*, long double&, ios_base::iostate&,
  83:/usr/include/c++/4.8/bits/locale_facets.h **** 		   const __c_locale&) throw();
  84:/usr/include/c++/4.8/bits/locale_facets.h **** 
  85:/usr/include/c++/4.8/bits/locale_facets.h ****   // NB: __pad is a struct, rather than a function, so it can be
  86:/usr/include/c++/4.8/bits/locale_facets.h ****   // partially-specialized.
  87:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT, typename _Traits>
  88:/usr/include/c++/4.8/bits/locale_facets.h ****     struct __pad
  89:/usr/include/c++/4.8/bits/locale_facets.h ****     {
  90:/usr/include/c++/4.8/bits/locale_facets.h ****       static void
  91:/usr/include/c++/4.8/bits/locale_facets.h ****       _S_pad(ios_base& __io, _CharT __fill, _CharT* __news,
  92:/usr/include/c++/4.8/bits/locale_facets.h **** 	     const _CharT* __olds, streamsize __newlen, streamsize __oldlen);
  93:/usr/include/c++/4.8/bits/locale_facets.h ****     };
  94:/usr/include/c++/4.8/bits/locale_facets.h **** 
  95:/usr/include/c++/4.8/bits/locale_facets.h ****   // Used by both numeric and monetary facets.
  96:/usr/include/c++/4.8/bits/locale_facets.h ****   // Inserts "group separator" characters into an array of characters.
  97:/usr/include/c++/4.8/bits/locale_facets.h ****   // It's recursive, one iteration per group.  It moves the characters
  98:/usr/include/c++/4.8/bits/locale_facets.h ****   // in the buffer this way: "xxxx12345" -> "12,345xxx".  Call this
  99:/usr/include/c++/4.8/bits/locale_facets.h ****   // only with __gsize != 0.
 100:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT>
 101:/usr/include/c++/4.8/bits/locale_facets.h ****     _CharT*
 102:/usr/include/c++/4.8/bits/locale_facets.h ****     __add_grouping(_CharT* __s, _CharT __sep,
 103:/usr/include/c++/4.8/bits/locale_facets.h **** 		   const char* __gbeg, size_t __gsize,
 104:/usr/include/c++/4.8/bits/locale_facets.h **** 		   const _CharT* __first, const _CharT* __last);
 105:/usr/include/c++/4.8/bits/locale_facets.h **** 
 106:/usr/include/c++/4.8/bits/locale_facets.h ****   // This template permits specializing facet output code for
 107:/usr/include/c++/4.8/bits/locale_facets.h ****   // ostreambuf_iterator.  For ostreambuf_iterator, sputn is
 108:/usr/include/c++/4.8/bits/locale_facets.h ****   // significantly more efficient than incrementing iterators.
 109:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT>
 110:/usr/include/c++/4.8/bits/locale_facets.h ****     inline
 111:/usr/include/c++/4.8/bits/locale_facets.h ****     ostreambuf_iterator<_CharT>
 112:/usr/include/c++/4.8/bits/locale_facets.h ****     __write(ostreambuf_iterator<_CharT> __s, const _CharT* __ws, int __len)
 113:/usr/include/c++/4.8/bits/locale_facets.h ****     {
 114:/usr/include/c++/4.8/bits/locale_facets.h ****       __s._M_put(__ws, __len);
 115:/usr/include/c++/4.8/bits/locale_facets.h ****       return __s;
 116:/usr/include/c++/4.8/bits/locale_facets.h ****     }
 117:/usr/include/c++/4.8/bits/locale_facets.h **** 
 118:/usr/include/c++/4.8/bits/locale_facets.h ****   // This is the unspecialized form of the template.
 119:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT, typename _OutIter>
GAS LISTING /tmp/cceISX6N.s 			page 95


 120:/usr/include/c++/4.8/bits/locale_facets.h ****     inline
 121:/usr/include/c++/4.8/bits/locale_facets.h ****     _OutIter
 122:/usr/include/c++/4.8/bits/locale_facets.h ****     __write(_OutIter __s, const _CharT* __ws, int __len)
 123:/usr/include/c++/4.8/bits/locale_facets.h ****     {
 124:/usr/include/c++/4.8/bits/locale_facets.h ****       for (int __j = 0; __j < __len; __j++, ++__s)
 125:/usr/include/c++/4.8/bits/locale_facets.h **** 	*__s = __ws[__j];
 126:/usr/include/c++/4.8/bits/locale_facets.h ****       return __s;
 127:/usr/include/c++/4.8/bits/locale_facets.h ****     }
 128:/usr/include/c++/4.8/bits/locale_facets.h **** 
 129:/usr/include/c++/4.8/bits/locale_facets.h **** 
 130:/usr/include/c++/4.8/bits/locale_facets.h ****   // 22.2.1.1  Template class ctype
 131:/usr/include/c++/4.8/bits/locale_facets.h ****   // Include host and configuration specific ctype enums for ctype_base.
 132:/usr/include/c++/4.8/bits/locale_facets.h **** 
 133:/usr/include/c++/4.8/bits/locale_facets.h ****   /**
 134:/usr/include/c++/4.8/bits/locale_facets.h ****    *  @brief  Common base for ctype facet
 135:/usr/include/c++/4.8/bits/locale_facets.h ****    *
 136:/usr/include/c++/4.8/bits/locale_facets.h ****    *  This template class provides implementations of the public functions
 137:/usr/include/c++/4.8/bits/locale_facets.h ****    *  that forward to the protected virtual functions.
 138:/usr/include/c++/4.8/bits/locale_facets.h ****    *
 139:/usr/include/c++/4.8/bits/locale_facets.h ****    *  This template also provides abstract stubs for the protected virtual
 140:/usr/include/c++/4.8/bits/locale_facets.h ****    *  functions.
 141:/usr/include/c++/4.8/bits/locale_facets.h ****   */
 142:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT>
 143:/usr/include/c++/4.8/bits/locale_facets.h ****     class __ctype_abstract_base : public locale::facet, public ctype_base
 144:/usr/include/c++/4.8/bits/locale_facets.h ****     {
 145:/usr/include/c++/4.8/bits/locale_facets.h ****     public:
 146:/usr/include/c++/4.8/bits/locale_facets.h ****       // Types:
 147:/usr/include/c++/4.8/bits/locale_facets.h ****       /// Typedef for the template parameter
 148:/usr/include/c++/4.8/bits/locale_facets.h ****       typedef _CharT char_type;
 149:/usr/include/c++/4.8/bits/locale_facets.h **** 
 150:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 151:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 152:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 153:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function finds a mask M for @a __c and compares it to
 154:/usr/include/c++/4.8/bits/locale_facets.h ****        *  mask @a __m.  It does so by returning the value of
 155:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 156:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 157:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to compare the mask of.
 158:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 159:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 160:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 161:/usr/include/c++/4.8/bits/locale_facets.h ****       bool
 162:/usr/include/c++/4.8/bits/locale_facets.h ****       is(mask __m, char_type __c) const
 163:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_is(__m, __c); }
 164:/usr/include/c++/4.8/bits/locale_facets.h **** 
 165:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 166:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Return a mask array.
 167:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 168:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 169:/usr/include/c++/4.8/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 170:/usr/include/c++/4.8/bits/locale_facets.h ****        *  as the char array.  It does so by returning the value of
 171:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_is().
 172:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 173:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 174:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 175:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 176:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
GAS LISTING /tmp/cceISX6N.s 			page 96


 177:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 178:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 179:/usr/include/c++/4.8/bits/locale_facets.h ****       is(const char_type *__lo, const char_type *__hi, mask *__vec) const
 180:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_is(__lo, __hi, __vec); }
 181:/usr/include/c++/4.8/bits/locale_facets.h **** 
 182:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 183:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Find char_type matching a mask
 184:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 185:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 186:/usr/include/c++/4.8/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is true.  It does so by returning
 187:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_is().
 188:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 189:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 190:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 191:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 192:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  Pointer to matching char_type if found, else @a __hi.
 193:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 194:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 195:/usr/include/c++/4.8/bits/locale_facets.h ****       scan_is(mask __m, const char_type* __lo, const char_type* __hi) const
 196:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_scan_is(__m, __lo, __hi); }
 197:/usr/include/c++/4.8/bits/locale_facets.h **** 
 198:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 199:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Find char_type not matching a mask
 200:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 201:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 202:/usr/include/c++/4.8/bits/locale_facets.h ****        *  [lo,hi) for which is(m,c) is false.  It does so by returning
 203:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_scan_not().
 204:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 205:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 206:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 207:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 208:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  Pointer to non-matching char if found, else @a __hi.
 209:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 210:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 211:/usr/include/c++/4.8/bits/locale_facets.h ****       scan_not(mask __m, const char_type* __lo, const char_type* __hi) const
 212:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_scan_not(__m, __lo, __hi); }
 213:/usr/include/c++/4.8/bits/locale_facets.h **** 
 214:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 215:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 216:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 217:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the argument to uppercase if possible.
 218:/usr/include/c++/4.8/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.  It does
 219:/usr/include/c++/4.8/bits/locale_facets.h ****        *  so by returning ctype<char_type>::do_toupper().
 220:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 221:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 222:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 223:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 224:/usr/include/c++/4.8/bits/locale_facets.h ****       char_type
 225:/usr/include/c++/4.8/bits/locale_facets.h ****       toupper(char_type __c) const
 226:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 227:/usr/include/c++/4.8/bits/locale_facets.h **** 
 228:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 229:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 230:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 231:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char_type in the range [lo,hi) to
 232:/usr/include/c++/4.8/bits/locale_facets.h ****        *  uppercase if possible.  Other elements remain untouched.  It does so
 233:/usr/include/c++/4.8/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_toupper(lo, hi).
GAS LISTING /tmp/cceISX6N.s 			page 97


 234:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 235:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 236:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 237:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 238:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 239:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 240:/usr/include/c++/4.8/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 241:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 242:/usr/include/c++/4.8/bits/locale_facets.h **** 
 243:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 244:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 245:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 246:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the argument to lowercase if possible.  If
 247:/usr/include/c++/4.8/bits/locale_facets.h ****        *  not possible (for example, '2'), returns the argument.  It does so
 248:/usr/include/c++/4.8/bits/locale_facets.h ****        *  by returning ctype<char_type>::do_tolower(c).
 249:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 250:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 251:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 252:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 253:/usr/include/c++/4.8/bits/locale_facets.h ****       char_type
 254:/usr/include/c++/4.8/bits/locale_facets.h ****       tolower(char_type __c) const
 255:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 256:/usr/include/c++/4.8/bits/locale_facets.h **** 
 257:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 258:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 259:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 260:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char_type in the range [__lo,__hi) to
 261:/usr/include/c++/4.8/bits/locale_facets.h ****        *  lowercase if possible.  Other elements remain untouched.  It does so
 262:/usr/include/c++/4.8/bits/locale_facets.h ****        *  by returning ctype<char_type>:: do_tolower(__lo, __hi).
 263:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 264:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 265:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 266:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 267:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 268:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 269:/usr/include/c++/4.8/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 270:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 271:/usr/include/c++/4.8/bits/locale_facets.h **** 
 272:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 273:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Widen char to char_type
 274:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 275:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the char argument to char_type using the
 276:/usr/include/c++/4.8/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 277:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 278:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 279:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 280:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 281:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 282:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char to convert.
 283:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The converted char_type.
 284:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 285:/usr/include/c++/4.8/bits/locale_facets.h ****       char_type
 286:/usr/include/c++/4.8/bits/locale_facets.h ****       widen(char __c) const
 287:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_widen(__c); }
 288:/usr/include/c++/4.8/bits/locale_facets.h **** 
 289:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 290:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Widen array to char_type
GAS LISTING /tmp/cceISX6N.s 			page 98


 291:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 292:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 293:/usr/include/c++/4.8/bits/locale_facets.h ****        *  simplest reasonable transformation.  It does so by returning
 294:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_widen(c).
 295:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 296:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 297:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 298:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 299:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 300:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 301:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 302:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 303:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 304:/usr/include/c++/4.8/bits/locale_facets.h ****       const char*
 305:/usr/include/c++/4.8/bits/locale_facets.h ****       widen(const char* __lo, const char* __hi, char_type* __to) const
 306:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_widen(__lo, __hi, __to); }
 307:/usr/include/c++/4.8/bits/locale_facets.h **** 
 308:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 309:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 310:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 311:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the char_type to char using the simplest
 312:/usr/include/c++/4.8/bits/locale_facets.h ****        *  reasonable transformation.  If the conversion fails, dfault is
 313:/usr/include/c++/4.8/bits/locale_facets.h ****        *  returned instead.  It does so by returning
 314:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__c).
 315:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 316:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 317:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 318:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 319:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 320:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 321:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The converted char.
 322:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 323:/usr/include/c++/4.8/bits/locale_facets.h ****       char
 324:/usr/include/c++/4.8/bits/locale_facets.h ****       narrow(char_type __c, char __dfault) const
 325:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_narrow(__c, __dfault); }
 326:/usr/include/c++/4.8/bits/locale_facets.h **** 
 327:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 328:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Narrow array to char array
 329:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 330:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char_type in the input to char using the
 331:/usr/include/c++/4.8/bits/locale_facets.h ****        *  simplest reasonable transformation and writes the results to the
 332:/usr/include/c++/4.8/bits/locale_facets.h ****        *  destination array.  For any char_type in the input that cannot be
 333:/usr/include/c++/4.8/bits/locale_facets.h ****        *  converted, @a dfault is used instead.  It does so by returning
 334:/usr/include/c++/4.8/bits/locale_facets.h ****        *  ctype<char_type>::do_narrow(__lo, __hi, __dfault, __to).
 335:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 336:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 337:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 338:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 339:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 340:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 341:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 342:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 343:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 344:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 345:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 346:/usr/include/c++/4.8/bits/locale_facets.h ****       narrow(const char_type* __lo, const char_type* __hi,
 347:/usr/include/c++/4.8/bits/locale_facets.h **** 	      char __dfault, char* __to) const
GAS LISTING /tmp/cceISX6N.s 			page 99


 348:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_narrow(__lo, __hi, __dfault, __to); }
 349:/usr/include/c++/4.8/bits/locale_facets.h **** 
 350:/usr/include/c++/4.8/bits/locale_facets.h ****     protected:
 351:/usr/include/c++/4.8/bits/locale_facets.h ****       explicit
 352:/usr/include/c++/4.8/bits/locale_facets.h ****       __ctype_abstract_base(size_t __refs = 0): facet(__refs) { }
 353:/usr/include/c++/4.8/bits/locale_facets.h **** 
 354:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual
 355:/usr/include/c++/4.8/bits/locale_facets.h ****       ~__ctype_abstract_base() { }
 356:/usr/include/c++/4.8/bits/locale_facets.h **** 
 357:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 358:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Test char_type classification.
 359:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 360:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function finds a mask M for @a c and compares it to mask @a m.
 361:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 362:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 363:/usr/include/c++/4.8/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 364:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 365:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 366:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to find the mask of.
 367:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 368:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  (M & __m) != 0.
 369:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 370:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual bool
 371:/usr/include/c++/4.8/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const = 0;
 372:/usr/include/c++/4.8/bits/locale_facets.h **** 
 373:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 374:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Return a mask array.
 375:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 376:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function finds the mask for each char_type in the range [lo,hi)
 377:/usr/include/c++/4.8/bits/locale_facets.h ****        *  and successively writes it to vec.  vec must have as many elements
 378:/usr/include/c++/4.8/bits/locale_facets.h ****        *  as the input.
 379:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 380:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_is() is a hook for a derived facet to change the behavior of
 381:/usr/include/c++/4.8/bits/locale_facets.h ****        *  classifying.  do_is() must always return the same result for the
 382:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 383:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 384:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 385:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 386:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 387:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 388:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 389:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 390:/usr/include/c++/4.8/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi,
 391:/usr/include/c++/4.8/bits/locale_facets.h **** 	    mask* __vec) const = 0;
 392:/usr/include/c++/4.8/bits/locale_facets.h **** 
 393:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 394:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Find char_type matching mask
 395:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 396:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function searches for and returns the first char_type c in
 397:/usr/include/c++/4.8/bits/locale_facets.h ****        *  [__lo,__hi) for which is(__m,c) is true.
 398:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 399:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 400:/usr/include/c++/4.8/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 401:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 402:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 403:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 404:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
GAS LISTING /tmp/cceISX6N.s 			page 100


 405:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 406:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  Pointer to a matching char_type if found, else @a __hi.
 407:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 408:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 409:/usr/include/c++/4.8/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo,
 410:/usr/include/c++/4.8/bits/locale_facets.h **** 		 const char_type* __hi) const = 0;
 411:/usr/include/c++/4.8/bits/locale_facets.h **** 
 412:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 413:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Find char_type not matching mask
 414:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 415:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first
 416:/usr/include/c++/4.8/bits/locale_facets.h ****        *  char_type c of [lo,hi) for which is(m,c) is false.
 417:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 418:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_scan_is() is a hook for a derived facet to change the behavior of
 419:/usr/include/c++/4.8/bits/locale_facets.h ****        *  match searching.  do_is() must always return the same result for the
 420:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 421:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 422:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 423:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 424:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 425:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char_type if found, else @a __hi.
 426:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 427:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 428:/usr/include/c++/4.8/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
 429:/usr/include/c++/4.8/bits/locale_facets.h **** 		  const char_type* __hi) const = 0;
 430:/usr/include/c++/4.8/bits/locale_facets.h **** 
 431:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 432:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 433:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 434:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts the char_type argument to uppercase
 435:/usr/include/c++/4.8/bits/locale_facets.h ****        *  if possible.  If not possible (for example, '2'), returns the
 436:/usr/include/c++/4.8/bits/locale_facets.h ****        *  argument.
 437:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 438:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 439:/usr/include/c++/4.8/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 440:/usr/include/c++/4.8/bits/locale_facets.h ****        *  the same input.
 441:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 442:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 443:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The uppercase char_type if convertible, else @a __c.
 444:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 445:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char_type
 446:/usr/include/c++/4.8/bits/locale_facets.h ****       do_toupper(char_type __c) const = 0;
 447:/usr/include/c++/4.8/bits/locale_facets.h **** 
 448:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 449:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 450:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 451:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 452:/usr/include/c++/4.8/bits/locale_facets.h ****        *  to uppercase if possible.  Other elements remain untouched.
 453:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 454:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_toupper() is a hook for a derived facet to change the behavior of
 455:/usr/include/c++/4.8/bits/locale_facets.h ****        *  uppercasing.  do_toupper() must always return the same result for
 456:/usr/include/c++/4.8/bits/locale_facets.h ****        *  the same input.
 457:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 458:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 459:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 460:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 461:/usr/include/c++/4.8/bits/locale_facets.h ****       */
GAS LISTING /tmp/cceISX6N.s 			page 101


 462:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 463:/usr/include/c++/4.8/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const = 0;
 464:/usr/include/c++/4.8/bits/locale_facets.h **** 
 465:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 466:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 467:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 468:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts the argument to lowercase if
 469:/usr/include/c++/4.8/bits/locale_facets.h ****        *  possible.  If not possible (for example, '2'), returns the argument.
 470:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 471:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 472:/usr/include/c++/4.8/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 473:/usr/include/c++/4.8/bits/locale_facets.h ****        *  the same input.
 474:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 475:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 476:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The lowercase char_type if convertible, else @a __c.
 477:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 478:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char_type
 479:/usr/include/c++/4.8/bits/locale_facets.h ****       do_tolower(char_type __c) const = 0;
 480:/usr/include/c++/4.8/bits/locale_facets.h **** 
 481:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 482:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 483:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 484:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range [__lo,__hi)
 485:/usr/include/c++/4.8/bits/locale_facets.h ****        *  to lowercase if possible.  Other elements remain untouched.
 486:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 487:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_tolower() is a hook for a derived facet to change the behavior of
 488:/usr/include/c++/4.8/bits/locale_facets.h ****        *  lowercasing.  do_tolower() must always return the same result for
 489:/usr/include/c++/4.8/bits/locale_facets.h ****        *  the same input.
 490:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 491:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 492:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 493:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 494:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 495:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 496:/usr/include/c++/4.8/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const = 0;
 497:/usr/include/c++/4.8/bits/locale_facets.h **** 
 498:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 499:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Widen char
 500:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 501:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts the char to char_type using the
 502:/usr/include/c++/4.8/bits/locale_facets.h ****        *  simplest reasonable transformation.
 503:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 504:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 505:/usr/include/c++/4.8/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 506:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 507:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 508:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 509:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 510:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 511:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char to convert.
 512:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The converted char_type
 513:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 514:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char_type
 515:/usr/include/c++/4.8/bits/locale_facets.h ****       do_widen(char __c) const = 0;
 516:/usr/include/c++/4.8/bits/locale_facets.h **** 
 517:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 518:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Widen char array
GAS LISTING /tmp/cceISX6N.s 			page 102


 519:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 520:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char in the input to char_type using the
 521:/usr/include/c++/4.8/bits/locale_facets.h ****        *  simplest reasonable transformation.
 522:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 523:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_widen() is a hook for a derived facet to change the behavior of
 524:/usr/include/c++/4.8/bits/locale_facets.h ****        *  widening.  do_widen() must always return the same result for the
 525:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 526:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 527:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 528:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 529:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 530:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start range.
 531:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 532:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 533:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 534:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 535:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char*
 536:/usr/include/c++/4.8/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __to) const = 0;
 537:/usr/include/c++/4.8/bits/locale_facets.h **** 
 538:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 539:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Narrow char_type to char
 540:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 541:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts the argument to char using the
 542:/usr/include/c++/4.8/bits/locale_facets.h ****        *  simplest reasonable transformation.  If the conversion fails, dfault
 543:/usr/include/c++/4.8/bits/locale_facets.h ****        *  is returned instead.
 544:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 545:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 546:/usr/include/c++/4.8/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 547:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 548:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 549:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 550:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 551:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 552:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char_type to convert.
 553:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __dfault  Char to return if conversion fails.
 554:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The converted char.
 555:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 556:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char
 557:/usr/include/c++/4.8/bits/locale_facets.h ****       do_narrow(char_type __c, char __dfault) const = 0;
 558:/usr/include/c++/4.8/bits/locale_facets.h **** 
 559:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 560:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Narrow char_type array to char
 561:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 562:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This virtual function converts each char_type in the range
 563:/usr/include/c++/4.8/bits/locale_facets.h ****        *  [__lo,__hi) to char using the simplest reasonable
 564:/usr/include/c++/4.8/bits/locale_facets.h ****        *  transformation and writes the results to the destination
 565:/usr/include/c++/4.8/bits/locale_facets.h ****        *  array.  For any element in the input that cannot be
 566:/usr/include/c++/4.8/bits/locale_facets.h ****        *  converted, @a __dfault is used instead.
 567:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 568:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_narrow() is a hook for a derived facet to change the behavior of
 569:/usr/include/c++/4.8/bits/locale_facets.h ****        *  narrowing.  do_narrow() must always return the same result for the
 570:/usr/include/c++/4.8/bits/locale_facets.h ****        *  same input.
 571:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 572:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 573:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 574:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 575:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
GAS LISTING /tmp/cceISX6N.s 			page 103


 576:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 577:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __dfault  Char to use if conversion fails.
 578:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __to  Pointer to the destination array.
 579:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 580:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 581:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 582:/usr/include/c++/4.8/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 583:/usr/include/c++/4.8/bits/locale_facets.h **** 		char __dfault, char* __to) const = 0;
 584:/usr/include/c++/4.8/bits/locale_facets.h ****     };
 585:/usr/include/c++/4.8/bits/locale_facets.h **** 
 586:/usr/include/c++/4.8/bits/locale_facets.h ****   /**
 587:/usr/include/c++/4.8/bits/locale_facets.h ****    *  @brief  Primary class template ctype facet.
 588:/usr/include/c++/4.8/bits/locale_facets.h ****    *  @ingroup locales
 589:/usr/include/c++/4.8/bits/locale_facets.h ****    *
 590:/usr/include/c++/4.8/bits/locale_facets.h ****    *  This template class defines classification and conversion functions for
 591:/usr/include/c++/4.8/bits/locale_facets.h ****    *  character sets.  It wraps cctype functionality.  Ctype gets used by
 592:/usr/include/c++/4.8/bits/locale_facets.h ****    *  streams for many I/O operations.
 593:/usr/include/c++/4.8/bits/locale_facets.h ****    *
 594:/usr/include/c++/4.8/bits/locale_facets.h ****    *  This template provides the protected virtual functions the developer
 595:/usr/include/c++/4.8/bits/locale_facets.h ****    *  will have to replace in a derived class or specialization to make a
 596:/usr/include/c++/4.8/bits/locale_facets.h ****    *  working facet.  The public functions that access them are defined in
 597:/usr/include/c++/4.8/bits/locale_facets.h ****    *  __ctype_abstract_base, to allow for implementation flexibility.  See
 598:/usr/include/c++/4.8/bits/locale_facets.h ****    *  ctype<wchar_t> for an example.  The functions are documented in
 599:/usr/include/c++/4.8/bits/locale_facets.h ****    *  __ctype_abstract_base.
 600:/usr/include/c++/4.8/bits/locale_facets.h ****    *
 601:/usr/include/c++/4.8/bits/locale_facets.h ****    *  Note: implementations are provided for all the protected virtual
 602:/usr/include/c++/4.8/bits/locale_facets.h ****    *  functions, but will likely not be useful.
 603:/usr/include/c++/4.8/bits/locale_facets.h ****   */
 604:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT>
 605:/usr/include/c++/4.8/bits/locale_facets.h ****     class ctype : public __ctype_abstract_base<_CharT>
 606:/usr/include/c++/4.8/bits/locale_facets.h ****     {
 607:/usr/include/c++/4.8/bits/locale_facets.h ****     public:
 608:/usr/include/c++/4.8/bits/locale_facets.h ****       // Types:
 609:/usr/include/c++/4.8/bits/locale_facets.h ****       typedef _CharT			char_type;
 610:/usr/include/c++/4.8/bits/locale_facets.h ****       typedef typename __ctype_abstract_base<_CharT>::mask mask;
 611:/usr/include/c++/4.8/bits/locale_facets.h **** 
 612:/usr/include/c++/4.8/bits/locale_facets.h ****       /// The facet id for ctype<char_type>
 613:/usr/include/c++/4.8/bits/locale_facets.h ****       static locale::id			id;
 614:/usr/include/c++/4.8/bits/locale_facets.h **** 
 615:/usr/include/c++/4.8/bits/locale_facets.h ****       explicit
 616:/usr/include/c++/4.8/bits/locale_facets.h ****       ctype(size_t __refs = 0) : __ctype_abstract_base<_CharT>(__refs) { }
 617:/usr/include/c++/4.8/bits/locale_facets.h **** 
 618:/usr/include/c++/4.8/bits/locale_facets.h ****    protected:
 619:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual
 620:/usr/include/c++/4.8/bits/locale_facets.h ****       ~ctype();
 621:/usr/include/c++/4.8/bits/locale_facets.h **** 
 622:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual bool
 623:/usr/include/c++/4.8/bits/locale_facets.h ****       do_is(mask __m, char_type __c) const;
 624:/usr/include/c++/4.8/bits/locale_facets.h **** 
 625:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 626:/usr/include/c++/4.8/bits/locale_facets.h ****       do_is(const char_type* __lo, const char_type* __hi, mask* __vec) const;
 627:/usr/include/c++/4.8/bits/locale_facets.h **** 
 628:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 629:/usr/include/c++/4.8/bits/locale_facets.h ****       do_scan_is(mask __m, const char_type* __lo, const char_type* __hi) const;
 630:/usr/include/c++/4.8/bits/locale_facets.h **** 
 631:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 632:/usr/include/c++/4.8/bits/locale_facets.h ****       do_scan_not(mask __m, const char_type* __lo,
GAS LISTING /tmp/cceISX6N.s 			page 104


 633:/usr/include/c++/4.8/bits/locale_facets.h **** 		  const char_type* __hi) const;
 634:/usr/include/c++/4.8/bits/locale_facets.h **** 
 635:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char_type
 636:/usr/include/c++/4.8/bits/locale_facets.h ****       do_toupper(char_type __c) const;
 637:/usr/include/c++/4.8/bits/locale_facets.h **** 
 638:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 639:/usr/include/c++/4.8/bits/locale_facets.h ****       do_toupper(char_type* __lo, const char_type* __hi) const;
 640:/usr/include/c++/4.8/bits/locale_facets.h **** 
 641:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char_type
 642:/usr/include/c++/4.8/bits/locale_facets.h ****       do_tolower(char_type __c) const;
 643:/usr/include/c++/4.8/bits/locale_facets.h **** 
 644:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 645:/usr/include/c++/4.8/bits/locale_facets.h ****       do_tolower(char_type* __lo, const char_type* __hi) const;
 646:/usr/include/c++/4.8/bits/locale_facets.h **** 
 647:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char_type
 648:/usr/include/c++/4.8/bits/locale_facets.h ****       do_widen(char __c) const;
 649:/usr/include/c++/4.8/bits/locale_facets.h **** 
 650:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char*
 651:/usr/include/c++/4.8/bits/locale_facets.h ****       do_widen(const char* __lo, const char* __hi, char_type* __dest) const;
 652:/usr/include/c++/4.8/bits/locale_facets.h **** 
 653:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual char
 654:/usr/include/c++/4.8/bits/locale_facets.h ****       do_narrow(char_type, char __dfault) const;
 655:/usr/include/c++/4.8/bits/locale_facets.h **** 
 656:/usr/include/c++/4.8/bits/locale_facets.h ****       virtual const char_type*
 657:/usr/include/c++/4.8/bits/locale_facets.h ****       do_narrow(const char_type* __lo, const char_type* __hi,
 658:/usr/include/c++/4.8/bits/locale_facets.h **** 		char __dfault, char* __to) const;
 659:/usr/include/c++/4.8/bits/locale_facets.h ****     };
 660:/usr/include/c++/4.8/bits/locale_facets.h **** 
 661:/usr/include/c++/4.8/bits/locale_facets.h ****   template<typename _CharT>
 662:/usr/include/c++/4.8/bits/locale_facets.h ****     locale::id ctype<_CharT>::id;
 663:/usr/include/c++/4.8/bits/locale_facets.h **** 
 664:/usr/include/c++/4.8/bits/locale_facets.h ****   /**
 665:/usr/include/c++/4.8/bits/locale_facets.h ****    *  @brief  The ctype<char> specialization.
 666:/usr/include/c++/4.8/bits/locale_facets.h ****    *  @ingroup locales
 667:/usr/include/c++/4.8/bits/locale_facets.h ****    *
 668:/usr/include/c++/4.8/bits/locale_facets.h ****    *  This class defines classification and conversion functions for
 669:/usr/include/c++/4.8/bits/locale_facets.h ****    *  the char type.  It gets used by char streams for many I/O
 670:/usr/include/c++/4.8/bits/locale_facets.h ****    *  operations.  The char specialization provides a number of
 671:/usr/include/c++/4.8/bits/locale_facets.h ****    *  optimizations as well.
 672:/usr/include/c++/4.8/bits/locale_facets.h ****   */
 673:/usr/include/c++/4.8/bits/locale_facets.h ****   template<>
 674:/usr/include/c++/4.8/bits/locale_facets.h ****     class ctype<char> : public locale::facet, public ctype_base
 675:/usr/include/c++/4.8/bits/locale_facets.h ****     {
 676:/usr/include/c++/4.8/bits/locale_facets.h ****     public:
 677:/usr/include/c++/4.8/bits/locale_facets.h ****       // Types:
 678:/usr/include/c++/4.8/bits/locale_facets.h ****       /// Typedef for the template parameter char.
 679:/usr/include/c++/4.8/bits/locale_facets.h ****       typedef char		char_type;
 680:/usr/include/c++/4.8/bits/locale_facets.h **** 
 681:/usr/include/c++/4.8/bits/locale_facets.h ****     protected:
 682:/usr/include/c++/4.8/bits/locale_facets.h ****       // Data Members:
 683:/usr/include/c++/4.8/bits/locale_facets.h ****       __c_locale		_M_c_locale_ctype;
 684:/usr/include/c++/4.8/bits/locale_facets.h ****       bool			_M_del;
 685:/usr/include/c++/4.8/bits/locale_facets.h ****       __to_type			_M_toupper;
 686:/usr/include/c++/4.8/bits/locale_facets.h ****       __to_type			_M_tolower;
 687:/usr/include/c++/4.8/bits/locale_facets.h ****       const mask*		_M_table;
 688:/usr/include/c++/4.8/bits/locale_facets.h ****       mutable char		_M_widen_ok;
 689:/usr/include/c++/4.8/bits/locale_facets.h ****       mutable char		_M_widen[1 + static_cast<unsigned char>(-1)];
GAS LISTING /tmp/cceISX6N.s 			page 105


 690:/usr/include/c++/4.8/bits/locale_facets.h ****       mutable char		_M_narrow[1 + static_cast<unsigned char>(-1)];
 691:/usr/include/c++/4.8/bits/locale_facets.h ****       mutable char		_M_narrow_ok;	// 0 uninitialized, 1 init,
 692:/usr/include/c++/4.8/bits/locale_facets.h **** 						// 2 memcpy can't be used
 693:/usr/include/c++/4.8/bits/locale_facets.h **** 
 694:/usr/include/c++/4.8/bits/locale_facets.h ****     public:
 695:/usr/include/c++/4.8/bits/locale_facets.h ****       /// The facet id for ctype<char>
 696:/usr/include/c++/4.8/bits/locale_facets.h ****       static locale::id        id;
 697:/usr/include/c++/4.8/bits/locale_facets.h ****       /// The size of the mask table.  It is SCHAR_MAX + 1.
 698:/usr/include/c++/4.8/bits/locale_facets.h ****       static const size_t      table_size = 1 + static_cast<unsigned char>(-1);
 699:/usr/include/c++/4.8/bits/locale_facets.h **** 
 700:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 701:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Constructor performs initialization.
 702:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 703:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This is the constructor provided by the standard.
 704:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 705:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 706:/usr/include/c++/4.8/bits/locale_facets.h ****        *               Else classic_table() is used.
 707:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 708:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 709:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 710:/usr/include/c++/4.8/bits/locale_facets.h ****       explicit
 711:/usr/include/c++/4.8/bits/locale_facets.h ****       ctype(const mask* __table = 0, bool __del = false, size_t __refs = 0);
 712:/usr/include/c++/4.8/bits/locale_facets.h **** 
 713:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 714:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Constructor performs static initialization.
 715:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 716:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This constructor is used to construct the initial C locale facet.
 717:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 718:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __cloc  Handle to C locale data.
 719:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __table If non-zero, table is used as the per-char mask.
 720:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __del   If true, passes ownership of table to this facet.
 721:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __refs  Passed to the base facet class.
 722:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 723:/usr/include/c++/4.8/bits/locale_facets.h ****       explicit
 724:/usr/include/c++/4.8/bits/locale_facets.h ****       ctype(__c_locale __cloc, const mask* __table = 0, bool __del = false,
 725:/usr/include/c++/4.8/bits/locale_facets.h **** 	    size_t __refs = 0);
 726:/usr/include/c++/4.8/bits/locale_facets.h **** 
 727:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 728:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Test char classification.
 729:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 730:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function compares the mask table[c] to @a __m.
 731:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 732:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char to compare the mask of.
 733:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 734:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  True if __m & table[__c] is true, false otherwise.
 735:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 736:/usr/include/c++/4.8/bits/locale_facets.h ****       inline bool
 737:/usr/include/c++/4.8/bits/locale_facets.h ****       is(mask __m, char __c) const;
 738:/usr/include/c++/4.8/bits/locale_facets.h **** 
 739:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 740:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Return a mask array.
 741:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 742:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function finds the mask for each char in the range [lo, hi) and
 743:/usr/include/c++/4.8/bits/locale_facets.h ****        *  successively writes it to vec.  vec must have as many elements as
 744:/usr/include/c++/4.8/bits/locale_facets.h ****        *  the char array.
 745:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 746:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
GAS LISTING /tmp/cceISX6N.s 			page 106


 747:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 748:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __vec  Pointer to an array of mask storage.
 749:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 750:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 751:/usr/include/c++/4.8/bits/locale_facets.h ****       inline const char*
 752:/usr/include/c++/4.8/bits/locale_facets.h ****       is(const char* __lo, const char* __hi, mask* __vec) const;
 753:/usr/include/c++/4.8/bits/locale_facets.h **** 
 754:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 755:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Find char matching a mask
 756:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 757:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function searches for and returns the first char in [lo,hi) for
 758:/usr/include/c++/4.8/bits/locale_facets.h ****        *  which is(m,char) is true.
 759:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 760:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 761:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 762:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 763:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  Pointer to a matching char if found, else @a __hi.
 764:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 765:/usr/include/c++/4.8/bits/locale_facets.h ****       inline const char*
 766:/usr/include/c++/4.8/bits/locale_facets.h ****       scan_is(mask __m, const char* __lo, const char* __hi) const;
 767:/usr/include/c++/4.8/bits/locale_facets.h **** 
 768:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 769:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Find char not matching a mask
 770:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 771:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function searches for and returns a pointer to the first char
 772:/usr/include/c++/4.8/bits/locale_facets.h ****        *  in [__lo,__hi) for which is(m,char) is false.
 773:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 774:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __m  The mask to compare against.
 775:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to start of range.
 776:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 777:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  Pointer to a non-matching char if found, else @a __hi.
 778:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 779:/usr/include/c++/4.8/bits/locale_facets.h ****       inline const char*
 780:/usr/include/c++/4.8/bits/locale_facets.h ****       scan_not(mask __m, const char* __lo, const char* __hi) const;
 781:/usr/include/c++/4.8/bits/locale_facets.h **** 
 782:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 783:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert to uppercase.
 784:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 785:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the char argument to uppercase if possible.
 786:/usr/include/c++/4.8/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 787:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 788:/usr/include/c++/4.8/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>::do_toupper(c).
 789:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 790:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 791:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char to convert.
 792:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The uppercase char if convertible, else @a __c.
 793:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 794:/usr/include/c++/4.8/bits/locale_facets.h ****       char_type
 795:/usr/include/c++/4.8/bits/locale_facets.h ****       toupper(char_type __c) const
 796:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_toupper(__c); }
 797:/usr/include/c++/4.8/bits/locale_facets.h **** 
 798:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 799:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert array to uppercase.
 800:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 801:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char in the range [__lo,__hi) to uppercase
 802:/usr/include/c++/4.8/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 803:/usr/include/c++/4.8/bits/locale_facets.h ****        *
GAS LISTING /tmp/cceISX6N.s 			page 107


 804:/usr/include/c++/4.8/bits/locale_facets.h ****        *  toupper() acts as if it returns ctype<char>:: do_toupper(__lo, __hi).
 805:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_toupper() must always return the same result for the same input.
 806:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 807:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 808:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 809:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 810:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 811:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 812:/usr/include/c++/4.8/bits/locale_facets.h ****       toupper(char_type *__lo, const char_type* __hi) const
 813:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_toupper(__lo, __hi); }
 814:/usr/include/c++/4.8/bits/locale_facets.h **** 
 815:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 816:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert to lowercase.
 817:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 818:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the char argument to lowercase if possible.
 819:/usr/include/c++/4.8/bits/locale_facets.h ****        *  If not possible (for example, '2'), returns the argument.
 820:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 821:/usr/include/c++/4.8/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>::do_tolower(__c).
 822:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 823:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 824:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char to convert.
 825:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The lowercase char if convertible, else @a __c.
 826:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 827:/usr/include/c++/4.8/bits/locale_facets.h ****       char_type
 828:/usr/include/c++/4.8/bits/locale_facets.h ****       tolower(char_type __c) const
 829:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_tolower(__c); }
 830:/usr/include/c++/4.8/bits/locale_facets.h **** 
 831:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 832:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Convert array to lowercase.
 833:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 834:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts each char in the range [lo,hi) to lowercase
 835:/usr/include/c++/4.8/bits/locale_facets.h ****        *  if possible.  Other chars remain untouched.
 836:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 837:/usr/include/c++/4.8/bits/locale_facets.h ****        *  tolower() acts as if it returns ctype<char>:: do_tolower(__lo, __hi).
 838:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_tolower() must always return the same result for the same input.
 839:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 840:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __lo  Pointer to first char in range.
 841:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __hi  Pointer to end of range.
 842:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  @a __hi.
 843:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 844:/usr/include/c++/4.8/bits/locale_facets.h ****       const char_type*
 845:/usr/include/c++/4.8/bits/locale_facets.h ****       tolower(char_type* __lo, const char_type* __hi) const
 846:/usr/include/c++/4.8/bits/locale_facets.h ****       { return this->do_tolower(__lo, __hi); }
 847:/usr/include/c++/4.8/bits/locale_facets.h **** 
 848:/usr/include/c++/4.8/bits/locale_facets.h ****       /**
 849:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @brief  Widen char
 850:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 851:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function converts the char to char_type using the simplest
 852:/usr/include/c++/4.8/bits/locale_facets.h ****        *  reasonable transformation.  For an underived ctype<char> facet, the
 853:/usr/include/c++/4.8/bits/locale_facets.h ****        *  argument will be returned unchanged.
 854:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 855:/usr/include/c++/4.8/bits/locale_facets.h ****        *  This function works as if it returns ctype<char>::do_widen(c).
 856:/usr/include/c++/4.8/bits/locale_facets.h ****        *  do_widen() must always return the same result for the same input.
 857:/usr/include/c++/4.8/bits/locale_facets.h ****        *
 858:/usr/include/c++/4.8/bits/locale_facets.h ****        *  Note: this is not what you want for codepage conversions.  See
 859:/usr/include/c++/4.8/bits/locale_facets.h ****        *  codecvt for that.
 860:/usr/include/c++/4.8/bits/locale_facets.h ****        *
GAS LISTING /tmp/cceISX6N.s 			page 108


 861:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @param __c  The char to convert.
 862:/usr/include/c++/4.8/bits/locale_facets.h ****        *  @return  The converted character.
 863:/usr/include/c++/4.8/bits/locale_facets.h ****       */
 864:/usr/include/c++/4.8/bits/locale_facets.h ****       char_type
 865:/usr/include/c++/4.8/bits/locale_facets.h ****       widen(char __c) const
 866:/usr/include/c++/4.8/bits/locale_facets.h ****       {
 867:/usr/include/c++/4.8/bits/locale_facets.h **** 	if (_M_widen_ok)
 421              		.loc 9 867 0
 422 00e3 807B3800 		cmp	BYTE PTR [rbx+56], 0
 423 00e7 7421     		je	.L13
 868:/usr/include/c++/4.8/bits/locale_facets.h **** 	  return _M_widen[static_cast<unsigned char>(__c)];
 424              		.loc 9 868 0
 425 00e9 0FB64343 		movzx	eax, BYTE PTR [rbx+67]
 426              	.LVL27:
 427              	.L14:
 428              	.LBE672:
 429              	.LBE671:
 430              	.LBE667:
 431              		.loc 2 565 0
 432 00ed 4889EF   		mov	rdi, rbp
 433 00f0 0FBEF0   		movsx	esi, al
 434 00f3 E8000000 		call	_ZNSo3putEc
 434      00
 435              	.LVL28:
 436              	.LBE681:
 437              	.LBE684:
 438              	.LBE687:
 439              	.LBE691:
  25:utils.h       **** 
  26:utils.h       **** 	auto diff = end - start;
  27:utils.h       **** 	cout << name << ": "<< chrono::duration<double, milli>(diff).count() << " ms. Result = " << fun(ar
  28:utils.h       **** }
 440              		.loc 5 28 0
 441 00f8 4883C418 		add	rsp, 24
 442              		.cfi_remember_state
 443              		.cfi_def_cfa_offset 40
 444              	.LBB692:
 445              	.LBB688:
 446              	.LBB685:
 447              	.LBB682:
 448              	.LBB676:
 449              	.LBB677:
 566:/usr/include/c++/4.8/ostream **** 
 567:/usr/include/c++/4.8/ostream ****   /**
 568:/usr/include/c++/4.8/ostream ****    *  @brief  Write a null character into the output sequence.
 569:/usr/include/c++/4.8/ostream ****    *
 570:/usr/include/c++/4.8/ostream ****    *  <em>Null character</em> is @c CharT() by definition.  For CharT
 571:/usr/include/c++/4.8/ostream ****    *  of @c char, this correctly writes the ASCII @c NUL character
 572:/usr/include/c++/4.8/ostream ****    *  string terminator.
 573:/usr/include/c++/4.8/ostream ****   */
 574:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 575:/usr/include/c++/4.8/ostream ****     inline basic_ostream<_CharT, _Traits>&
 576:/usr/include/c++/4.8/ostream ****     ends(basic_ostream<_CharT, _Traits>& __os)
 577:/usr/include/c++/4.8/ostream ****     { return __os.put(_CharT()); }
 578:/usr/include/c++/4.8/ostream **** 
 579:/usr/include/c++/4.8/ostream ****   /**
 580:/usr/include/c++/4.8/ostream ****    *  @brief  Flushes the output stream.
GAS LISTING /tmp/cceISX6N.s 			page 109


 581:/usr/include/c++/4.8/ostream ****    *
 582:/usr/include/c++/4.8/ostream ****    *  This manipulator simply calls the stream's @c flush() member function.
 583:/usr/include/c++/4.8/ostream ****   */
 584:/usr/include/c++/4.8/ostream ****   template<typename _CharT, typename _Traits>
 585:/usr/include/c++/4.8/ostream ****     inline basic_ostream<_CharT, _Traits>&
 586:/usr/include/c++/4.8/ostream ****     flush(basic_ostream<_CharT, _Traits>& __os)
 587:/usr/include/c++/4.8/ostream ****     { return __os.flush(); }
 450              		.loc 2 587 0
 451 00fc 4889C7   		mov	rdi, rax
 452              	.LBE677:
 453              	.LBE676:
 454              	.LBE682:
 455              	.LBE685:
 456              	.LBE688:
 457              	.LBE692:
 458              		.loc 5 28 0
 459 00ff 5B       		pop	rbx
 460              		.cfi_def_cfa_offset 32
 461              	.LVL29:
 462 0100 5D       		pop	rbp
 463              		.cfi_def_cfa_offset 24
 464              	.LVL30:
 465 0101 415C     		pop	r12
 466              		.cfi_def_cfa_offset 16
 467              	.LVL31:
 468 0103 415D     		pop	r13
 469              		.cfi_def_cfa_offset 8
 470              	.LVL32:
 471              	.LBB693:
 472              	.LBB689:
 473              	.LBB686:
 474              	.LBB683:
 475              	.LBB679:
 476              	.LBB678:
 477              		.loc 2 587 0
 478 0105 E9000000 		jmp	_ZNSo5flushEv
 478      00
 479              	.LVL33:
 480              	.L13:
 481              		.cfi_restore_state
 482              	.LBE678:
 483              	.LBE679:
 484              	.LBB680:
 485              	.LBB674:
 486              	.LBB673:
 869:/usr/include/c++/4.8/bits/locale_facets.h **** 	this->_M_widen_init();
 487              		.loc 9 869 0
 488 010a 4889DF   		mov	rdi, rbx
 489 010d E8000000 		call	_ZNKSt5ctypeIcE13_M_widen_initEv
 489      00
 490              	.LVL34:
 870:/usr/include/c++/4.8/bits/locale_facets.h **** 	return this->do_widen(__c);
 491              		.loc 9 870 0
 492 0112 488B03   		mov	rax, QWORD PTR [rbx]
 493 0115 BE0A0000 		mov	esi, 10
 493      00
 494 011a 4889DF   		mov	rdi, rbx
GAS LISTING /tmp/cceISX6N.s 			page 110


 495 011d FF5030   		call	[QWORD PTR [rax+48]]
 496              	.LVL35:
 497 0120 EBCB     		jmp	.L14
 498              	.LVL36:
 499              	.L17:
 500              	.LBE673:
 501              	.LBE674:
 502              	.LBB675:
 503              	.LBB670:
  49:/usr/include/c++/4.8/bits/basic_ios.h ****       return *__f;
 504              		.loc 4 49 0
 505 0122 E8000000 		call	_ZSt16__throw_bad_castv
 505      00
 506              	.LVL37:
 507              	.LBE670:
 508              	.LBE675:
 509              	.LBE680:
 510              	.LBE683:
 511              	.LBE686:
 512              	.LBE689:
 513              	.LBE693:
 514              		.cfi_endproc
 515              	.LFE2219:
 516              		.size	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Cons
 517              		.weak	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Cons
 518              		.set	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Const
 519              		.section	.rodata.str1.1
 520              	.LC5:
 521 0012 48656C6C 		.string	"Hello World!"
 521      6F20576F 
 521      726C6421 
 521      00
 522              		.section	.rodata.str1.8,"aMS",@progbits,1
 523              		.align 8
 524              	.LC9:
 525 0000 7369676D 		.string	"sigmoid((2x + 3) * 0.25 + 1) ="
 525      6F696428 
 525      28327820 
 525      2B203329 
 525      202A2030 
 526              		.section	.rodata.str1.1
 527              	.LC10:
 528 001f 78203D20 		.string	"x = %.2f: %.4f\n"
 528      252E3266 
 528      3A20252E 
 528      34660A00 
 529              	.LC12:
 530 002f 42696E64 		.string	"Bind evaluation"
 530      20657661 
 530      6C756174 
 530      696F6E00 
 531              	.LC13:
 532 003f 4C616D62 		.string	"Lambda evaluation"
 532      64612065 
 532      76616C75 
 532      6174696F 
 532      6E00
GAS LISTING /tmp/cceISX6N.s 			page 111


 533              		.section	.text.startup,"ax",@progbits
 534              		.p2align 4,,15
 535              		.globl	main
 536              		.type	main, @function
 537              	main:
 538              	.LFB2108:
 539              		.file 10 "compiler.cpp"
   1:compiler.cpp  **** /*
   2:compiler.cpp  ****  * compiler.cpp
   3:compiler.cpp  ****  *
   4:compiler.cpp  ****  *  Created on: Jul 20, 2014
   5:compiler.cpp  ****  *      Author: Adam Kosiorek
   6:compiler.cpp  ****  */
   7:compiler.cpp  **** 
   8:compiler.cpp  **** #include "compiler.h"
   9:compiler.cpp  **** #include "utils.h"
  10:compiler.cpp  **** #include <iostream>
  11:compiler.cpp  **** #include <functional>
  12:compiler.cpp  **** using namespace std;
  13:compiler.cpp  **** 
  14:compiler.cpp  **** int main(int argc, char** argv) {
 540              		.loc 10 14 0
 541              		.cfi_startproc
 542              		.cfi_personality 0x3,__gxx_personality_v0
 543              		.cfi_lsda 0x3,.LLSDA2108
 544              	.LVL38:
 545 0000 4155     		push	r13
 546              		.cfi_def_cfa_offset 16
 547              		.cfi_offset 13, -16
 548              	.LBB864:
  15:compiler.cpp  **** 
  16:compiler.cpp  **** 	cout << "Hello World!" << endl;
 549              		.loc 10 16 0
 550 0002 BE000000 		mov	esi, OFFSET FLAT:.LC5
 550      00
 551              	.LVL39:
 552 0007 BF000000 		mov	edi, OFFSET FLAT:_ZSt4cout
 552      00
 553              	.LVL40:
 554              	.LBE864:
  14:compiler.cpp  **** 
 555              		.loc 10 14 0
 556 000c 4154     		push	r12
 557              		.cfi_def_cfa_offset 24
 558              		.cfi_offset 12, -24
 559 000e 55       		push	rbp
 560              		.cfi_def_cfa_offset 32
 561              		.cfi_offset 6, -32
 562 000f 53       		push	rbx
 563              		.cfi_def_cfa_offset 40
 564              		.cfi_offset 3, -40
 565 0010 4881ECA8 		sub	rsp, 168
 565      000000
 566              		.cfi_def_cfa_offset 208
 567              	.LEHB0:
 568              	.LBB986:
 569              		.loc 10 16 0
GAS LISTING /tmp/cceISX6N.s 			page 112


 570 0017 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 570      00
 571              	.LVL41:
 572              	.LBB865:
 573              	.LBB866:
 113:/usr/include/c++/4.8/ostream ****       }
 574              		.loc 2 113 0
 575 001c 4889C7   		mov	rdi, rax
 576              	.LBE866:
 577              	.LBE865:
  17:compiler.cpp  **** 
  18:compiler.cpp  **** 	double x = .25;
  19:compiler.cpp  **** 	Variable V(x);
  20:compiler.cpp  **** 	Constant one(1.), two(2.), three(3.), o25(.25);
  21:compiler.cpp  **** 	BinaryExpr<Variable, Constant, Product> X2(V, two);
  22:compiler.cpp  **** 	BinaryExpr<decltype(X2), Constant, Sum> X2plus3(X2, three);
  23:compiler.cpp  **** 	BinaryExpr<decltype(X2plus3), Constant, Product> X2plus3o25(X2plus3, o25);
  24:compiler.cpp  **** 	BinaryExpr<decltype(X2plus3o25), Constant, Sum> almost(X2plus3o25, one);
  25:compiler.cpp  **** 	UnaryExpr<decltype(almost), Sigmoid> result(almost);
  26:compiler.cpp  **** 
  27:compiler.cpp  **** 
  28:compiler.cpp  **** 
  29:compiler.cpp  **** 
  30:compiler.cpp  **** 	cout << "sigmoid((2x + 3) * 0.25 + 1) =" << endl;
  31:compiler.cpp  **** 	x = .25;
  32:compiler.cpp  **** 	printf("x = %.2f: %.4f\n", x, result.eval());
 578              		.loc 10 32 0
 579 001f 488D6C24 		lea	rbp, [rsp+80]
 579      50
 580              	.LBB868:
 581              	.LBB867:
 113:/usr/include/c++/4.8/ostream ****       }
 582              		.loc 2 113 0
 583 0024 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
 583      00
 584              	.LVL42:
 585              	.LBE867:
 586              	.LBE868:
  18:compiler.cpp  **** 	Variable V(x);
 587              		.loc 10 18 0
 588 0029 F20F1035 		movsd	xmm6, QWORD PTR .LC6[rip]
 588      00000000 
 589              	.LBB869:
 590              	.LBB870:
  28:compiler.h    **** 	double eval() const { return op_(exp_.eval()); };
 591              		.loc 1 28 0
 592 0031 488D4424 		lea	rax, [rsp+40]
 592      28
 593 0036 F20F103D 		movsd	xmm7, QWORD PTR .LC7[rip]
 593      00000000 
 594              	.LBE870:
 595              	.LBE869:
  30:compiler.cpp  **** 	x = .25;
 596              		.loc 10 30 0
 597 003e BE000000 		mov	esi, OFFSET FLAT:.LC9
 597      00
  18:compiler.cpp  **** 	Variable V(x);
GAS LISTING /tmp/cceISX6N.s 			page 113


 598              		.loc 10 18 0
 599 0043 F20F1174 		movsd	QWORD PTR [rsp+40], xmm6
 599      2428
 600              	.LVL43:
  30:compiler.cpp  **** 	x = .25;
 601              		.loc 10 30 0
 602 0049 BF000000 		mov	edi, OFFSET FLAT:_ZSt4cout
 602      00
 603              	.LBB872:
 604              	.LBB871:
  28:compiler.h    **** 	double eval() const { return op_(exp_.eval()); };
 605              		.loc 1 28 0
 606 004e 48894424 		mov	QWORD PTR [rsp+80], rax
 606      50
 607 0053 F20F1035 		movsd	xmm6, QWORD PTR .LC8[rip]
 607      00000000 
 608 005b F20F117C 		movsd	QWORD PTR [rsp+88], xmm7
 608      2458
 609 0061 F20F1174 		movsd	QWORD PTR [rsp+104], xmm6
 609      2468
 610 0067 F20F103D 		movsd	xmm7, QWORD PTR .LC6[rip]
 610      00000000 
 611 006f F20F1035 		movsd	xmm6, QWORD PTR .LC1[rip]
 611      00000000 
 612 0077 F20F117C 		movsd	QWORD PTR [rsp+120], xmm7
 612      2478
 613 007d F20F11B4 		movsd	QWORD PTR [rsp+136], xmm6
 613      24880000 
 613      00
 614              	.LBE871:
 615              	.LBE872:
  30:compiler.cpp  **** 	x = .25;
 616              		.loc 10 30 0
 617 0086 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
 617      00
 618              	.LVL44:
 619              	.LBB873:
 620              	.LBB874:
 113:/usr/include/c++/4.8/ostream ****       }
 621              		.loc 2 113 0
 622 008b 4889C7   		mov	rdi, rax
 623 008e E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
 623      00
 624              	.LVL45:
 625              	.LBE874:
 626              	.LBE873:
  31:compiler.cpp  **** 	printf("x = %.2f: %.4f\n", x, result.eval());
 627              		.loc 10 31 0
 628 0093 F20F103D 		movsd	xmm7, QWORD PTR .LC6[rip]
 628      00000000 
 629              		.loc 10 32 0
 630 009b 4889EF   		mov	rdi, rbp
  31:compiler.cpp  **** 	printf("x = %.2f: %.4f\n", x, result.eval());
 631              		.loc 10 31 0
 632 009e F20F117C 		movsd	QWORD PTR [rsp+40], xmm7
 632      2428
 633              		.loc 10 32 0
GAS LISTING /tmp/cceISX6N.s 			page 114


 634 00a4 E8000000 		call	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Sig
 634      00
 635              	.LVL46:
 636 00a9 660F28C8 		movapd	xmm1, xmm0
 637              	.LVL47:
 638              	.LBB875:
 639              	.LBB876:
 640              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004, 2005, 2007, 2008, 2012 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <http://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   _G_va_list __ap) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 _G_va_list __ap))
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/cceISX6N.s 			page 115


  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_BSD || defined __USE_ISOC99 || defined __USE_UNIX98
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    _G_va_list __ap) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, _G_va_list __ap))
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, _G_va_list __ap);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  _G_va_list __ap);
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 641              		.loc 11 104 0
 642 00ad BE000000 		mov	esi, OFFSET FLAT:.LC10
GAS LISTING /tmp/cceISX6N.s 			page 116


 642      00
 643 00b2 F20F1044 		movsd	xmm0, QWORD PTR [rsp+40]
 643      2428
 644 00b8 BF010000 		mov	edi, 1
 644      00
 645 00bd B8020000 		mov	eax, 2
 645      00
 646 00c2 E8000000 		call	__printf_chk
 646      00
 647              	.LVL48:
 648              	.LBE876:
 649              	.LBE875:
  33:compiler.cpp  **** 	x = .5;
 650              		.loc 10 33 0
 651 00c7 F20F1035 		movsd	xmm6, QWORD PTR .LC11[rip]
 651      00000000 
  34:compiler.cpp  **** 	printf("x = %.2f: %.4f\n", x, result.eval());
 652              		.loc 10 34 0
 653 00cf 4889EF   		mov	rdi, rbp
  33:compiler.cpp  **** 	x = .5;
 654              		.loc 10 33 0
 655 00d2 F20F1174 		movsd	QWORD PTR [rsp+40], xmm6
 655      2428
 656              		.loc 10 34 0
 657 00d8 E8000000 		call	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Sig
 657      00
 658              	.LVL49:
 659 00dd 660F28C8 		movapd	xmm1, xmm0
 660              	.LVL50:
 661              	.LBB877:
 662              	.LBB878:
 663              		.loc 11 104 0
 664 00e1 BE000000 		mov	esi, OFFSET FLAT:.LC10
 664      00
 665 00e6 F20F1044 		movsd	xmm0, QWORD PTR [rsp+40]
 665      2428
 666 00ec BF010000 		mov	edi, 1
 666      00
 667 00f1 B8020000 		mov	eax, 2
 667      00
 668 00f6 E8000000 		call	__printf_chk
 668      00
 669              	.LVL51:
 670              	.LBE878:
 671              	.LBE877:
  35:compiler.cpp  **** 	x = 1.;
 672              		.loc 10 35 0
 673 00fb F20F103D 		movsd	xmm7, QWORD PTR .LC1[rip]
 673      00000000 
  36:compiler.cpp  **** 	printf("x = %.2f: %.4f\n", x, result.eval());
 674              		.loc 10 36 0
 675 0103 4889EF   		mov	rdi, rbp
  35:compiler.cpp  **** 	x = 1.;
 676              		.loc 10 35 0
 677 0106 F20F117C 		movsd	QWORD PTR [rsp+40], xmm7
 677      2428
 678              		.loc 10 36 0
GAS LISTING /tmp/cceISX6N.s 			page 117


 679 010c E8000000 		call	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Sig
 679      00
 680              	.LVL52:
 681 0111 660F28C8 		movapd	xmm1, xmm0
 682              	.LVL53:
 683              	.LBB879:
 684              	.LBB880:
 685              		.loc 11 104 0
 686 0115 BE000000 		mov	esi, OFFSET FLAT:.LC10
 686      00
 687 011a F20F1044 		movsd	xmm0, QWORD PTR [rsp+40]
 687      2428
 688 0120 BF010000 		mov	edi, 1
 688      00
 689 0125 B8020000 		mov	eax, 2
 689      00
 690 012a E8000000 		call	__printf_chk
 690      00
 691              	.LVL54:
 692              	.LBE880:
 693              	.LBE879:
  37:compiler.cpp  **** 
  38:compiler.cpp  **** 	const int TIMES = 10000;
  39:compiler.cpp  **** 	timeExec<TIMES>("Bind evaluation", bind(&decltype(result)::eval, &result));
 694              		.loc 10 39 0
 695 012f 488D7C24 		lea	rdi, [rsp+32]
 695      20
 696 0134 488D5424 		lea	rdx, [rsp+30]
 696      1E
 697 0139 BE000000 		mov	esi, OFFSET FLAT:.LC12
 697      00
 698              	.LBB881:
 699              	.LBB882:
 700              	.LBB883:
 701              	.LBB884:
 644:/usr/include/c++/4.8/functional **** 
 645:/usr/include/c++/4.8/functional ****       template<typename... _Args>
 646:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs
 647:/usr/include/c++/4.8/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 648:/usr/include/c++/4.8/functional **** 
 649:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 650:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs2
 651:/usr/include/c++/4.8/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<const _Class*, _Tp>,
 652:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 653:/usr/include/c++/4.8/functional **** 
 654:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 655:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs3
 656:/usr/include/c++/4.8/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 657:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 658:/usr/include/c++/4.8/functional **** 
 659:/usr/include/c++/4.8/functional ****     public:
 660:/usr/include/c++/4.8/functional ****       typedef _Res result_type;
 661:/usr/include/c++/4.8/functional **** 
 662:/usr/include/c++/4.8/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 663:/usr/include/c++/4.8/functional **** 
 664:/usr/include/c++/4.8/functional ****       // Handle objects
 665:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
GAS LISTING /tmp/cceISX6N.s 			page 118


 666:/usr/include/c++/4.8/functional **** 	_Res
 667:/usr/include/c++/4.8/functional **** 	operator()(const _Class& __object, _Args&&... __args) const
 668:/usr/include/c++/4.8/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 669:/usr/include/c++/4.8/functional **** 
 670:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 671:/usr/include/c++/4.8/functional **** 	_Res
 672:/usr/include/c++/4.8/functional **** 	operator()(const _Class&& __object, _Args&&... __args) const
 673:/usr/include/c++/4.8/functional **** 	{
 674:/usr/include/c++/4.8/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 675:/usr/include/c++/4.8/functional **** 	}
 676:/usr/include/c++/4.8/functional **** 
 677:/usr/include/c++/4.8/functional ****       // Handle pointers
 678:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 679:/usr/include/c++/4.8/functional **** 	_Res
 680:/usr/include/c++/4.8/functional **** 	operator()(const _Class* __object, _Args&&... __args) const
 681:/usr/include/c++/4.8/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 682:/usr/include/c++/4.8/functional **** 
 683:/usr/include/c++/4.8/functional ****       // Handle smart pointers, references and pointers to derived
 684:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 685:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 686:/usr/include/c++/4.8/functional **** 	_Res operator()(_Tp&& __object, _Args&&... __args) const
 687:/usr/include/c++/4.8/functional **** 	{
 688:/usr/include/c++/4.8/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 689:/usr/include/c++/4.8/functional **** 	      std::forward<_Args>(__args)...);
 690:/usr/include/c++/4.8/functional **** 	}
 691:/usr/include/c++/4.8/functional **** 
 692:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 693:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 694:/usr/include/c++/4.8/functional **** 	_Res
 695:/usr/include/c++/4.8/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 696:/usr/include/c++/4.8/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 697:/usr/include/c++/4.8/functional **** 
 698:/usr/include/c++/4.8/functional ****     private:
 699:/usr/include/c++/4.8/functional ****       _Functor __pmf;
 700:/usr/include/c++/4.8/functional ****     };
 701:/usr/include/c++/4.8/functional **** 
 702:/usr/include/c++/4.8/functional ****   /// Implementation of @c mem_fn for volatile member function pointers.
 703:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 704:/usr/include/c++/4.8/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) volatile>
 705:/usr/include/c++/4.8/functional ****     : public _Maybe_unary_or_binary_function<_Res, volatile _Class*,
 706:/usr/include/c++/4.8/functional **** 					     _ArgTypes...>
 707:/usr/include/c++/4.8/functional ****     {
 708:/usr/include/c++/4.8/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) volatile;
 709:/usr/include/c++/4.8/functional **** 
 710:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 711:/usr/include/c++/4.8/functional **** 	_Res
 712:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 713:/usr/include/c++/4.8/functional **** 		_Args&&... __args) const
 714:/usr/include/c++/4.8/functional **** 	{
 715:/usr/include/c++/4.8/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 716:/usr/include/c++/4.8/functional **** 	    (std::forward<_Args>(__args)...);
 717:/usr/include/c++/4.8/functional **** 	}
 718:/usr/include/c++/4.8/functional **** 
 719:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 720:/usr/include/c++/4.8/functional **** 	_Res
 721:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 722:/usr/include/c++/4.8/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
GAS LISTING /tmp/cceISX6N.s 			page 119


 723:/usr/include/c++/4.8/functional **** 
 724:/usr/include/c++/4.8/functional ****       template<typename... _Args>
 725:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs
 726:/usr/include/c++/4.8/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 727:/usr/include/c++/4.8/functional **** 
 728:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 729:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs2
 730:/usr/include/c++/4.8/functional **** 	  = _Require<_NotSame<_Class, _Tp>, _NotSame<volatile _Class*, _Tp>,
 731:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 732:/usr/include/c++/4.8/functional **** 
 733:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 734:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs3
 735:/usr/include/c++/4.8/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 736:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 737:/usr/include/c++/4.8/functional **** 
 738:/usr/include/c++/4.8/functional ****     public:
 739:/usr/include/c++/4.8/functional ****       typedef _Res result_type;
 740:/usr/include/c++/4.8/functional **** 
 741:/usr/include/c++/4.8/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 742:/usr/include/c++/4.8/functional **** 
 743:/usr/include/c++/4.8/functional ****       // Handle objects
 744:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 745:/usr/include/c++/4.8/functional **** 	_Res
 746:/usr/include/c++/4.8/functional **** 	operator()(volatile _Class& __object, _Args&&... __args) const
 747:/usr/include/c++/4.8/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 748:/usr/include/c++/4.8/functional **** 
 749:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 750:/usr/include/c++/4.8/functional **** 	_Res
 751:/usr/include/c++/4.8/functional **** 	operator()(volatile _Class&& __object, _Args&&... __args) const
 752:/usr/include/c++/4.8/functional **** 	{
 753:/usr/include/c++/4.8/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 754:/usr/include/c++/4.8/functional **** 	}
 755:/usr/include/c++/4.8/functional **** 
 756:/usr/include/c++/4.8/functional ****       // Handle pointers
 757:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 758:/usr/include/c++/4.8/functional **** 	_Res
 759:/usr/include/c++/4.8/functional **** 	operator()(volatile _Class* __object, _Args&&... __args) const
 760:/usr/include/c++/4.8/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 761:/usr/include/c++/4.8/functional **** 
 762:/usr/include/c++/4.8/functional ****       // Handle smart pointers, references and pointers to derived
 763:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 764:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 765:/usr/include/c++/4.8/functional **** 	_Res
 766:/usr/include/c++/4.8/functional **** 	operator()(_Tp&& __object, _Args&&... __args) const
 767:/usr/include/c++/4.8/functional **** 	{
 768:/usr/include/c++/4.8/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 769:/usr/include/c++/4.8/functional **** 	      std::forward<_Args>(__args)...);
 770:/usr/include/c++/4.8/functional **** 	}
 771:/usr/include/c++/4.8/functional **** 
 772:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 773:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 774:/usr/include/c++/4.8/functional **** 	_Res
 775:/usr/include/c++/4.8/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 776:/usr/include/c++/4.8/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 777:/usr/include/c++/4.8/functional **** 
 778:/usr/include/c++/4.8/functional ****     private:
 779:/usr/include/c++/4.8/functional ****       _Functor __pmf;
GAS LISTING /tmp/cceISX6N.s 			page 120


 780:/usr/include/c++/4.8/functional ****     };
 781:/usr/include/c++/4.8/functional **** 
 782:/usr/include/c++/4.8/functional ****   /// Implementation of @c mem_fn for const volatile member function pointers.
 783:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class, typename... _ArgTypes>
 784:/usr/include/c++/4.8/functional ****     class _Mem_fn<_Res (_Class::*)(_ArgTypes...) const volatile>
 785:/usr/include/c++/4.8/functional ****     : public _Maybe_unary_or_binary_function<_Res, const volatile _Class*,
 786:/usr/include/c++/4.8/functional **** 					     _ArgTypes...>
 787:/usr/include/c++/4.8/functional ****     {
 788:/usr/include/c++/4.8/functional ****       typedef _Res (_Class::*_Functor)(_ArgTypes...) const volatile;
 789:/usr/include/c++/4.8/functional **** 
 790:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 791:/usr/include/c++/4.8/functional **** 	_Res
 792:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __object, const volatile _Class *,
 793:/usr/include/c++/4.8/functional **** 		_Args&&... __args) const
 794:/usr/include/c++/4.8/functional **** 	{
 795:/usr/include/c++/4.8/functional **** 	  return (std::forward<_Tp>(__object).*__pmf)
 796:/usr/include/c++/4.8/functional **** 	    (std::forward<_Args>(__args)...);
 797:/usr/include/c++/4.8/functional **** 	}
 798:/usr/include/c++/4.8/functional **** 
 799:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 800:/usr/include/c++/4.8/functional **** 	_Res
 801:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __ptr, const volatile void *, _Args&&... __args) const
 802:/usr/include/c++/4.8/functional **** 	{ return ((*__ptr).*__pmf)(std::forward<_Args>(__args)...); }
 803:/usr/include/c++/4.8/functional **** 
 804:/usr/include/c++/4.8/functional ****       template<typename... _Args>
 805:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs
 806:/usr/include/c++/4.8/functional **** 	  = _Require<_AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 807:/usr/include/c++/4.8/functional **** 
 808:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 809:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs2
 810:/usr/include/c++/4.8/functional **** 	  = _Require<_NotSame<_Class, _Tp>,
 811:/usr/include/c++/4.8/functional **** 		     _NotSame<const volatile _Class*, _Tp>,
 812:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 813:/usr/include/c++/4.8/functional **** 
 814:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args>
 815:/usr/include/c++/4.8/functional **** 	using _RequireValidArgs3
 816:/usr/include/c++/4.8/functional **** 	  = _Require<is_base_of<_Class, _Tp>,
 817:/usr/include/c++/4.8/functional **** 		     _AllConvertible<_Pack<_Args...>, _Pack<_ArgTypes...>>>;
 818:/usr/include/c++/4.8/functional **** 
 819:/usr/include/c++/4.8/functional ****     public:
 820:/usr/include/c++/4.8/functional ****       typedef _Res result_type;
 821:/usr/include/c++/4.8/functional **** 
 822:/usr/include/c++/4.8/functional ****       explicit _Mem_fn(_Functor __pmf) : __pmf(__pmf) { }
 823:/usr/include/c++/4.8/functional **** 
 824:/usr/include/c++/4.8/functional ****       // Handle objects
 825:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 826:/usr/include/c++/4.8/functional **** 	_Res
 827:/usr/include/c++/4.8/functional **** 	operator()(const volatile _Class& __object, _Args&&... __args) const
 828:/usr/include/c++/4.8/functional **** 	{ return (__object.*__pmf)(std::forward<_Args>(__args)...); }
 829:/usr/include/c++/4.8/functional **** 
 830:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 831:/usr/include/c++/4.8/functional **** 	_Res
 832:/usr/include/c++/4.8/functional **** 	operator()(const volatile _Class&& __object, _Args&&... __args) const
 833:/usr/include/c++/4.8/functional **** 	{
 834:/usr/include/c++/4.8/functional **** 	  return (std::move(__object).*__pmf)(std::forward<_Args>(__args)...);
 835:/usr/include/c++/4.8/functional **** 	}
 836:/usr/include/c++/4.8/functional **** 
GAS LISTING /tmp/cceISX6N.s 			page 121


 837:/usr/include/c++/4.8/functional ****       // Handle pointers
 838:/usr/include/c++/4.8/functional ****       template<typename... _Args, typename _Req = _RequireValidArgs<_Args...>>
 839:/usr/include/c++/4.8/functional **** 	_Res
 840:/usr/include/c++/4.8/functional **** 	operator()(const volatile _Class* __object, _Args&&... __args) const
 841:/usr/include/c++/4.8/functional **** 	{ return (__object->*__pmf)(std::forward<_Args>(__args)...); }
 842:/usr/include/c++/4.8/functional **** 
 843:/usr/include/c++/4.8/functional ****       // Handle smart pointers, references and pointers to derived
 844:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 845:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs2<_Tp, _Args...>>
 846:/usr/include/c++/4.8/functional **** 	_Res operator()(_Tp&& __object, _Args&&... __args) const
 847:/usr/include/c++/4.8/functional **** 	{
 848:/usr/include/c++/4.8/functional **** 	  return _M_call(std::forward<_Tp>(__object), &__object,
 849:/usr/include/c++/4.8/functional **** 	      std::forward<_Args>(__args)...);
 850:/usr/include/c++/4.8/functional **** 	}
 851:/usr/include/c++/4.8/functional **** 
 852:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename... _Args,
 853:/usr/include/c++/4.8/functional **** 	       typename _Req = _RequireValidArgs3<_Tp, _Args...>>
 854:/usr/include/c++/4.8/functional **** 	_Res
 855:/usr/include/c++/4.8/functional **** 	operator()(reference_wrapper<_Tp> __ref, _Args&&... __args) const
 856:/usr/include/c++/4.8/functional **** 	{ return operator()(__ref.get(), std::forward<_Args>(__args)...); }
 857:/usr/include/c++/4.8/functional **** 
 858:/usr/include/c++/4.8/functional ****     private:
 859:/usr/include/c++/4.8/functional ****       _Functor __pmf;
 860:/usr/include/c++/4.8/functional ****     };
 861:/usr/include/c++/4.8/functional **** 
 862:/usr/include/c++/4.8/functional **** 
 863:/usr/include/c++/4.8/functional ****   template<typename _Tp, bool>
 864:/usr/include/c++/4.8/functional ****     struct _Mem_fn_const_or_non
 865:/usr/include/c++/4.8/functional ****     {
 866:/usr/include/c++/4.8/functional ****       typedef const _Tp& type;
 867:/usr/include/c++/4.8/functional ****     };
 868:/usr/include/c++/4.8/functional **** 
 869:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 870:/usr/include/c++/4.8/functional ****     struct _Mem_fn_const_or_non<_Tp, false>
 871:/usr/include/c++/4.8/functional ****     {
 872:/usr/include/c++/4.8/functional ****       typedef _Tp& type;
 873:/usr/include/c++/4.8/functional ****     };
 874:/usr/include/c++/4.8/functional **** 
 875:/usr/include/c++/4.8/functional ****   template<typename _Res, typename _Class>
 876:/usr/include/c++/4.8/functional ****     class _Mem_fn<_Res _Class::*>
 877:/usr/include/c++/4.8/functional ****     {
 878:/usr/include/c++/4.8/functional ****       using __pm_type = _Res _Class::*;
 879:/usr/include/c++/4.8/functional **** 
 880:/usr/include/c++/4.8/functional ****       // This bit of genius is due to Peter Dimov, improved slightly by
 881:/usr/include/c++/4.8/functional ****       // Douglas Gregor.
 882:/usr/include/c++/4.8/functional ****       // Made less elegant to support perfect forwarding and noexcept.
 883:/usr/include/c++/4.8/functional ****       template<typename _Tp>
 884:/usr/include/c++/4.8/functional **** 	auto
 885:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __object, const _Class *) const noexcept
 886:/usr/include/c++/4.8/functional **** 	-> decltype(std::forward<_Tp>(__object).*std::declval<__pm_type&>())
 887:/usr/include/c++/4.8/functional **** 	{ return std::forward<_Tp>(__object).*__pm; }
 888:/usr/include/c++/4.8/functional **** 
 889:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename _Up>
 890:/usr/include/c++/4.8/functional **** 	auto
 891:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __object, _Up * const *) const noexcept
 892:/usr/include/c++/4.8/functional **** 	-> decltype((*std::forward<_Tp>(__object)).*std::declval<__pm_type&>())
 893:/usr/include/c++/4.8/functional **** 	{ return (*std::forward<_Tp>(__object)).*__pm; }
GAS LISTING /tmp/cceISX6N.s 			page 122


 894:/usr/include/c++/4.8/functional **** 
 895:/usr/include/c++/4.8/functional ****       template<typename _Tp>
 896:/usr/include/c++/4.8/functional **** 	auto
 897:/usr/include/c++/4.8/functional **** 	_M_call(_Tp&& __ptr, const volatile void*) const
 898:/usr/include/c++/4.8/functional **** 	noexcept(noexcept((*__ptr).*std::declval<__pm_type&>()))
 899:/usr/include/c++/4.8/functional **** 	-> decltype((*__ptr).*std::declval<__pm_type&>())
 900:/usr/include/c++/4.8/functional **** 	{ return (*__ptr).*__pm; }
 901:/usr/include/c++/4.8/functional **** 
 902:/usr/include/c++/4.8/functional ****     public:
 903:/usr/include/c++/4.8/functional ****       explicit
 904:/usr/include/c++/4.8/functional ****       _Mem_fn(_Res _Class::*__pm) noexcept : __pm(__pm) { }
 905:/usr/include/c++/4.8/functional **** 
 906:/usr/include/c++/4.8/functional ****       // Handle objects
 907:/usr/include/c++/4.8/functional ****       _Res&
 908:/usr/include/c++/4.8/functional ****       operator()(_Class& __object) const noexcept
 909:/usr/include/c++/4.8/functional ****       { return __object.*__pm; }
 910:/usr/include/c++/4.8/functional **** 
 911:/usr/include/c++/4.8/functional ****       const _Res&
 912:/usr/include/c++/4.8/functional ****       operator()(const _Class& __object) const noexcept
 913:/usr/include/c++/4.8/functional ****       { return __object.*__pm; }
 914:/usr/include/c++/4.8/functional **** 
 915:/usr/include/c++/4.8/functional ****       _Res&&
 916:/usr/include/c++/4.8/functional ****       operator()(_Class&& __object) const noexcept
 917:/usr/include/c++/4.8/functional ****       { return std::forward<_Class>(__object).*__pm; }
 918:/usr/include/c++/4.8/functional **** 
 919:/usr/include/c++/4.8/functional ****       const _Res&&
 920:/usr/include/c++/4.8/functional ****       operator()(const _Class&& __object) const noexcept
 921:/usr/include/c++/4.8/functional ****       { return std::forward<const _Class>(__object).*__pm; }
 922:/usr/include/c++/4.8/functional **** 
 923:/usr/include/c++/4.8/functional ****       // Handle pointers
 924:/usr/include/c++/4.8/functional ****       _Res&
 925:/usr/include/c++/4.8/functional ****       operator()(_Class* __object) const noexcept
 926:/usr/include/c++/4.8/functional ****       { return __object->*__pm; }
 927:/usr/include/c++/4.8/functional **** 
 928:/usr/include/c++/4.8/functional ****       const _Res&
 929:/usr/include/c++/4.8/functional ****       operator()(const _Class* __object) const noexcept
 930:/usr/include/c++/4.8/functional ****       { return __object->*__pm; }
 931:/usr/include/c++/4.8/functional **** 
 932:/usr/include/c++/4.8/functional ****       // Handle smart pointers and derived
 933:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename _Req = _Require<_NotSame<_Class*, _Tp>>>
 934:/usr/include/c++/4.8/functional **** 	auto
 935:/usr/include/c++/4.8/functional **** 	operator()(_Tp&& __unknown) const
 936:/usr/include/c++/4.8/functional **** 	noexcept(noexcept(std::declval<_Mem_fn*>()->_M_call
 937:/usr/include/c++/4.8/functional **** 			  (std::forward<_Tp>(__unknown), &__unknown)))
 938:/usr/include/c++/4.8/functional **** 	-> decltype(this->_M_call(std::forward<_Tp>(__unknown), &__unknown))
 939:/usr/include/c++/4.8/functional **** 	{ return _M_call(std::forward<_Tp>(__unknown), &__unknown); }
 940:/usr/include/c++/4.8/functional **** 
 941:/usr/include/c++/4.8/functional ****       template<typename _Tp, typename _Req = _Require<is_base_of<_Class, _Tp>>>
 942:/usr/include/c++/4.8/functional **** 	auto
 943:/usr/include/c++/4.8/functional **** 	operator()(reference_wrapper<_Tp> __ref) const
 944:/usr/include/c++/4.8/functional **** 	noexcept(noexcept(std::declval<_Mem_fn&>()(__ref.get())))
 945:/usr/include/c++/4.8/functional **** 	-> decltype((*this)(__ref.get()))
 946:/usr/include/c++/4.8/functional **** 	{ return (*this)(__ref.get()); }
 947:/usr/include/c++/4.8/functional **** 
 948:/usr/include/c++/4.8/functional ****     private:
 949:/usr/include/c++/4.8/functional ****       _Res _Class::*__pm;
 950:/usr/include/c++/4.8/functional ****     };
GAS LISTING /tmp/cceISX6N.s 			page 123


 951:/usr/include/c++/4.8/functional **** 
 952:/usr/include/c++/4.8/functional ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 953:/usr/include/c++/4.8/functional ****   // 2048.  Unnecessary mem_fn overloads
 954:/usr/include/c++/4.8/functional ****   /**
 955:/usr/include/c++/4.8/functional ****    *  @brief Returns a function object that forwards to the member
 956:/usr/include/c++/4.8/functional ****    *  pointer @a pm.
 957:/usr/include/c++/4.8/functional ****    *  @ingroup functors
 958:/usr/include/c++/4.8/functional ****    */
 959:/usr/include/c++/4.8/functional ****   template<typename _Tp, typename _Class>
 960:/usr/include/c++/4.8/functional ****     inline _Mem_fn<_Tp _Class::*>
 961:/usr/include/c++/4.8/functional ****     mem_fn(_Tp _Class::* __pm) noexcept
 962:/usr/include/c++/4.8/functional ****     {
 963:/usr/include/c++/4.8/functional ****       return _Mem_fn<_Tp _Class::*>(__pm);
 964:/usr/include/c++/4.8/functional ****     }
 965:/usr/include/c++/4.8/functional **** 
 966:/usr/include/c++/4.8/functional ****   /**
 967:/usr/include/c++/4.8/functional ****    *  @brief Determines if the given type _Tp is a function object
 968:/usr/include/c++/4.8/functional ****    *  should be treated as a subexpression when evaluating calls to
 969:/usr/include/c++/4.8/functional ****    *  function objects returned by bind(). [TR1 3.6.1]
 970:/usr/include/c++/4.8/functional ****    *  @ingroup binders
 971:/usr/include/c++/4.8/functional ****    */
 972:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 973:/usr/include/c++/4.8/functional ****     struct is_bind_expression
 974:/usr/include/c++/4.8/functional ****     : public false_type { };
 975:/usr/include/c++/4.8/functional **** 
 976:/usr/include/c++/4.8/functional ****   /**
 977:/usr/include/c++/4.8/functional ****    *  @brief Determines if the given type _Tp is a placeholder in a
 978:/usr/include/c++/4.8/functional ****    *  bind() expression and, if so, which placeholder it is. [TR1 3.6.2]
 979:/usr/include/c++/4.8/functional ****    *  @ingroup binders
 980:/usr/include/c++/4.8/functional ****    */
 981:/usr/include/c++/4.8/functional ****   template<typename _Tp>
 982:/usr/include/c++/4.8/functional ****     struct is_placeholder
 983:/usr/include/c++/4.8/functional ****     : public integral_constant<int, 0>
 984:/usr/include/c++/4.8/functional ****     { };
 985:/usr/include/c++/4.8/functional **** 
 986:/usr/include/c++/4.8/functional ****   /** @brief The type of placeholder objects defined by libstdc++.
 987:/usr/include/c++/4.8/functional ****    *  @ingroup binders
 988:/usr/include/c++/4.8/functional ****    */
 989:/usr/include/c++/4.8/functional ****   template<int _Num> struct _Placeholder { };
 990:/usr/include/c++/4.8/functional **** 
 991:/usr/include/c++/4.8/functional ****   _GLIBCXX_END_NAMESPACE_VERSION
 992:/usr/include/c++/4.8/functional **** 
 993:/usr/include/c++/4.8/functional ****   /** @namespace std::placeholders
 994:/usr/include/c++/4.8/functional ****    *  @brief ISO C++11 entities sub-namespace for functional.
 995:/usr/include/c++/4.8/functional ****    *  @ingroup binders
 996:/usr/include/c++/4.8/functional ****    */
 997:/usr/include/c++/4.8/functional ****   namespace placeholders
 998:/usr/include/c++/4.8/functional ****   {
 999:/usr/include/c++/4.8/functional ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
1000:/usr/include/c++/4.8/functional ****   /* Define a large number of placeholders. There is no way to
1001:/usr/include/c++/4.8/functional ****    * simplify this with variadic templates, because we're introducing
1002:/usr/include/c++/4.8/functional ****    * unique names for each.
1003:/usr/include/c++/4.8/functional ****    */
1004:/usr/include/c++/4.8/functional ****     extern const _Placeholder<1> _1;
1005:/usr/include/c++/4.8/functional ****     extern const _Placeholder<2> _2;
1006:/usr/include/c++/4.8/functional ****     extern const _Placeholder<3> _3;
1007:/usr/include/c++/4.8/functional ****     extern const _Placeholder<4> _4;
GAS LISTING /tmp/cceISX6N.s 			page 124


1008:/usr/include/c++/4.8/functional ****     extern const _Placeholder<5> _5;
1009:/usr/include/c++/4.8/functional ****     extern const _Placeholder<6> _6;
1010:/usr/include/c++/4.8/functional ****     extern const _Placeholder<7> _7;
1011:/usr/include/c++/4.8/functional ****     extern const _Placeholder<8> _8;
1012:/usr/include/c++/4.8/functional ****     extern const _Placeholder<9> _9;
1013:/usr/include/c++/4.8/functional ****     extern const _Placeholder<10> _10;
1014:/usr/include/c++/4.8/functional ****     extern const _Placeholder<11> _11;
1015:/usr/include/c++/4.8/functional ****     extern const _Placeholder<12> _12;
1016:/usr/include/c++/4.8/functional ****     extern const _Placeholder<13> _13;
1017:/usr/include/c++/4.8/functional ****     extern const _Placeholder<14> _14;
1018:/usr/include/c++/4.8/functional ****     extern const _Placeholder<15> _15;
1019:/usr/include/c++/4.8/functional ****     extern const _Placeholder<16> _16;
1020:/usr/include/c++/4.8/functional ****     extern const _Placeholder<17> _17;
1021:/usr/include/c++/4.8/functional ****     extern const _Placeholder<18> _18;
1022:/usr/include/c++/4.8/functional ****     extern const _Placeholder<19> _19;
1023:/usr/include/c++/4.8/functional ****     extern const _Placeholder<20> _20;
1024:/usr/include/c++/4.8/functional ****     extern const _Placeholder<21> _21;
1025:/usr/include/c++/4.8/functional ****     extern const _Placeholder<22> _22;
1026:/usr/include/c++/4.8/functional ****     extern const _Placeholder<23> _23;
1027:/usr/include/c++/4.8/functional ****     extern const _Placeholder<24> _24;
1028:/usr/include/c++/4.8/functional ****     extern const _Placeholder<25> _25;
1029:/usr/include/c++/4.8/functional ****     extern const _Placeholder<26> _26;
1030:/usr/include/c++/4.8/functional ****     extern const _Placeholder<27> _27;
1031:/usr/include/c++/4.8/functional ****     extern const _Placeholder<28> _28;
1032:/usr/include/c++/4.8/functional ****     extern const _Placeholder<29> _29;
1033:/usr/include/c++/4.8/functional ****   _GLIBCXX_END_NAMESPACE_VERSION
1034:/usr/include/c++/4.8/functional ****   }
1035:/usr/include/c++/4.8/functional **** 
1036:/usr/include/c++/4.8/functional ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
1037:/usr/include/c++/4.8/functional **** 
1038:/usr/include/c++/4.8/functional ****   /**
1039:/usr/include/c++/4.8/functional ****    *  Partial specialization of is_placeholder that provides the placeholder
1040:/usr/include/c++/4.8/functional ****    *  number for the placeholder objects defined by libstdc++.
1041:/usr/include/c++/4.8/functional ****    *  @ingroup binders
1042:/usr/include/c++/4.8/functional ****    */
1043:/usr/include/c++/4.8/functional ****   template<int _Num>
1044:/usr/include/c++/4.8/functional ****     struct is_placeholder<_Placeholder<_Num> >
1045:/usr/include/c++/4.8/functional ****     : public integral_constant<int, _Num>
1046:/usr/include/c++/4.8/functional ****     { };
1047:/usr/include/c++/4.8/functional **** 
1048:/usr/include/c++/4.8/functional ****   template<int _Num>
1049:/usr/include/c++/4.8/functional ****     struct is_placeholder<const _Placeholder<_Num> >
1050:/usr/include/c++/4.8/functional ****     : public integral_constant<int, _Num>
1051:/usr/include/c++/4.8/functional ****     { };
1052:/usr/include/c++/4.8/functional **** 
1053:/usr/include/c++/4.8/functional ****   /**
1054:/usr/include/c++/4.8/functional ****    * Used by _Safe_tuple_element to indicate that there is no tuple
1055:/usr/include/c++/4.8/functional ****    * element at this position.
1056:/usr/include/c++/4.8/functional ****    */
1057:/usr/include/c++/4.8/functional ****   struct _No_tuple_element;
1058:/usr/include/c++/4.8/functional **** 
1059:/usr/include/c++/4.8/functional ****   /**
1060:/usr/include/c++/4.8/functional ****    * Implementation helper for _Safe_tuple_element. This primary
1061:/usr/include/c++/4.8/functional ****    * template handles the case where it is safe to use @c
1062:/usr/include/c++/4.8/functional ****    * tuple_element.
1063:/usr/include/c++/4.8/functional ****    */
1064:/usr/include/c++/4.8/functional ****   template<std::size_t __i, typename _Tuple, bool _IsSafe>
GAS LISTING /tmp/cceISX6N.s 			page 125


1065:/usr/include/c++/4.8/functional ****     struct _Safe_tuple_element_impl
1066:/usr/include/c++/4.8/functional ****     : tuple_element<__i, _Tuple> { };
1067:/usr/include/c++/4.8/functional **** 
1068:/usr/include/c++/4.8/functional ****   /**
1069:/usr/include/c++/4.8/functional ****    * Implementation helper for _Safe_tuple_element. This partial
1070:/usr/include/c++/4.8/functional ****    * specialization handles the case where it is not safe to use @c
1071:/usr/include/c++/4.8/functional ****    * tuple_element. We just return @c _No_tuple_element.
1072:/usr/include/c++/4.8/functional ****    */
1073:/usr/include/c++/4.8/functional ****   template<std::size_t __i, typename _Tuple>
1074:/usr/include/c++/4.8/functional ****     struct _Safe_tuple_element_impl<__i, _Tuple, false>
1075:/usr/include/c++/4.8/functional ****     {
1076:/usr/include/c++/4.8/functional ****       typedef _No_tuple_element type;
1077:/usr/include/c++/4.8/functional ****     };
1078:/usr/include/c++/4.8/functional **** 
1079:/usr/include/c++/4.8/functional ****   /**
1080:/usr/include/c++/4.8/functional ****    * Like tuple_element, but returns @c _No_tuple_element when
1081:/usr/include/c++/4.8/functional ****    * tuple_element would return an error.
1082:/usr/include/c++/4.8/functional ****    */
1083:/usr/include/c++/4.8/functional ****  template<std::size_t __i, typename _Tuple>
1084:/usr/include/c++/4.8/functional ****    struct _Safe_tuple_element
1085:/usr/include/c++/4.8/functional ****    : _Safe_tuple_element_impl<__i, _Tuple,
1086:/usr/include/c++/4.8/functional **** 			      (__i < tuple_size<_Tuple>::value)>
1087:/usr/include/c++/4.8/functional ****    { };
1088:/usr/include/c++/4.8/functional **** 
1089:/usr/include/c++/4.8/functional ****   /**
1090:/usr/include/c++/4.8/functional ****    *  Maps an argument to bind() into an actual argument to the bound
1091:/usr/include/c++/4.8/functional ****    *  function object [TR1 3.6.3/5]. Only the first parameter should
1092:/usr/include/c++/4.8/functional ****    *  be specified: the rest are used to determine among the various
1093:/usr/include/c++/4.8/functional ****    *  implementations. Note that, although this class is a function
1094:/usr/include/c++/4.8/functional ****    *  object, it isn't entirely normal because it takes only two
1095:/usr/include/c++/4.8/functional ****    *  parameters regardless of the number of parameters passed to the
1096:/usr/include/c++/4.8/functional ****    *  bind expression. The first parameter is the bound argument and
1097:/usr/include/c++/4.8/functional ****    *  the second parameter is a tuple containing references to the
1098:/usr/include/c++/4.8/functional ****    *  rest of the arguments.
1099:/usr/include/c++/4.8/functional ****    */
1100:/usr/include/c++/4.8/functional ****   template<typename _Arg,
1101:/usr/include/c++/4.8/functional **** 	   bool _IsBindExp = is_bind_expression<_Arg>::value,
1102:/usr/include/c++/4.8/functional **** 	   bool _IsPlaceholder = (is_placeholder<_Arg>::value > 0)>
1103:/usr/include/c++/4.8/functional ****     class _Mu;
1104:/usr/include/c++/4.8/functional **** 
1105:/usr/include/c++/4.8/functional ****   /**
1106:/usr/include/c++/4.8/functional ****    *  If the argument is reference_wrapper<_Tp>, returns the
1107:/usr/include/c++/4.8/functional ****    *  underlying reference. [TR1 3.6.3/5 bullet 1]
1108:/usr/include/c++/4.8/functional ****    */
1109:/usr/include/c++/4.8/functional ****   template<typename _Tp>
1110:/usr/include/c++/4.8/functional ****     class _Mu<reference_wrapper<_Tp>, false, false>
1111:/usr/include/c++/4.8/functional ****     {
1112:/usr/include/c++/4.8/functional ****     public:
1113:/usr/include/c++/4.8/functional ****       typedef _Tp& result_type;
1114:/usr/include/c++/4.8/functional **** 
1115:/usr/include/c++/4.8/functional ****       /* Note: This won't actually work for const volatile
1116:/usr/include/c++/4.8/functional ****        * reference_wrappers, because reference_wrapper::get() is const
1117:/usr/include/c++/4.8/functional ****        * but not volatile-qualified. This might be a defect in the TR.
1118:/usr/include/c++/4.8/functional ****        */
1119:/usr/include/c++/4.8/functional ****       template<typename _CVRef, typename _Tuple>
1120:/usr/include/c++/4.8/functional **** 	result_type
1121:/usr/include/c++/4.8/functional **** 	operator()(_CVRef& __arg, _Tuple&) const volatile
GAS LISTING /tmp/cceISX6N.s 			page 126


1122:/usr/include/c++/4.8/functional **** 	{ return __arg.get(); }
1123:/usr/include/c++/4.8/functional ****     };
1124:/usr/include/c++/4.8/functional **** 
1125:/usr/include/c++/4.8/functional ****   /**
1126:/usr/include/c++/4.8/functional ****    *  If the argument is a bind expression, we invoke the underlying
1127:/usr/include/c++/4.8/functional ****    *  function object with the same cv-qualifiers as we are given and
1128:/usr/include/c++/4.8/functional ****    *  pass along all of our arguments (unwrapped). [TR1 3.6.3/5 bullet 2]
1129:/usr/include/c++/4.8/functional ****    */
1130:/usr/include/c++/4.8/functional ****   template<typename _Arg>
1131:/usr/include/c++/4.8/functional ****     class _Mu<_Arg, true, false>
1132:/usr/include/c++/4.8/functional ****     {
1133:/usr/include/c++/4.8/functional ****     public:
1134:/usr/include/c++/4.8/functional ****       template<typename _CVArg, typename... _Args>
1135:/usr/include/c++/4.8/functional **** 	auto
1136:/usr/include/c++/4.8/functional **** 	operator()(_CVArg& __arg,
1137:/usr/include/c++/4.8/functional **** 		   tuple<_Args...>& __tuple) const volatile
1138:/usr/include/c++/4.8/functional **** 	-> decltype(__arg(declval<_Args>()...))
1139:/usr/include/c++/4.8/functional **** 	{
1140:/usr/include/c++/4.8/functional **** 	  // Construct an index tuple and forward to __call
1141:/usr/include/c++/4.8/functional **** 	  typedef typename _Build_index_tuple<sizeof...(_Args)>::__type
1142:/usr/include/c++/4.8/functional **** 	    _Indexes;
1143:/usr/include/c++/4.8/functional **** 	  return this->__call(__arg, __tuple, _Indexes());
1144:/usr/include/c++/4.8/functional **** 	}
1145:/usr/include/c++/4.8/functional **** 
1146:/usr/include/c++/4.8/functional ****     private:
1147:/usr/include/c++/4.8/functional ****       // Invokes the underlying function object __arg by unpacking all
1148:/usr/include/c++/4.8/functional ****       // of the arguments in the tuple.
1149:/usr/include/c++/4.8/functional ****       template<typename _CVArg, typename... _Args, std::size_t... _Indexes>
1150:/usr/include/c++/4.8/functional **** 	auto
1151:/usr/include/c++/4.8/functional **** 	__call(_CVArg& __arg, tuple<_Args...>& __tuple,
1152:/usr/include/c++/4.8/functional **** 	       const _Index_tuple<_Indexes...>&) const volatile
1153:/usr/include/c++/4.8/functional **** 	-> decltype(__arg(declval<_Args>()...))
1154:/usr/include/c++/4.8/functional **** 	{
1155:/usr/include/c++/4.8/functional **** 	  return __arg(std::forward<_Args>(get<_Indexes>(__tuple))...);
1156:/usr/include/c++/4.8/functional **** 	}
1157:/usr/include/c++/4.8/functional ****     };
1158:/usr/include/c++/4.8/functional **** 
1159:/usr/include/c++/4.8/functional ****   /**
1160:/usr/include/c++/4.8/functional ****    *  If the argument is a placeholder for the Nth argument, returns
1161:/usr/include/c++/4.8/functional ****    *  a reference to the Nth argument to the bind function object.
1162:/usr/include/c++/4.8/functional ****    *  [TR1 3.6.3/5 bullet 3]
1163:/usr/include/c++/4.8/functional ****    */
1164:/usr/include/c++/4.8/functional ****   template<typename _Arg>
1165:/usr/include/c++/4.8/functional ****     class _Mu<_Arg, false, true>
1166:/usr/include/c++/4.8/functional ****     {
1167:/usr/include/c++/4.8/functional ****     public:
1168:/usr/include/c++/4.8/functional ****       template<typename _Signature> class result;
1169:/usr/include/c++/4.8/functional **** 
1170:/usr/include/c++/4.8/functional ****       template<typename _CVMu, typename _CVArg, typename _Tuple>
1171:/usr/include/c++/4.8/functional **** 	class result<_CVMu(_CVArg, _Tuple)>
1172:/usr/include/c++/4.8/functional **** 	{
1173:/usr/include/c++/4.8/functional **** 	  // Add a reference, if it hasn't already been done for us.
1174:/usr/include/c++/4.8/functional **** 	  // This allows us to be a little bit sloppy in constructing
1175:/usr/include/c++/4.8/functional **** 	  // the tuple that we pass to result_of<...>.
1176:/usr/include/c++/4.8/functional **** 	  typedef typename _Safe_tuple_element<(is_placeholder<_Arg>::value
1177:/usr/include/c++/4.8/functional **** 						- 1), _Tuple>::type
1178:/usr/include/c++/4.8/functional **** 	    __base_type;
GAS LISTING /tmp/cceISX6N.s 			page 127


1179:/usr/include/c++/4.8/functional **** 
1180:/usr/include/c++/4.8/functional **** 	public:
1181:/usr/include/c++/4.8/functional **** 	  typedef typename add_rvalue_reference<__base_type>::type type;
1182:/usr/include/c++/4.8/functional **** 	};
1183:/usr/include/c++/4.8/functional **** 
1184:/usr/include/c++/4.8/functional ****       template<typename _Tuple>
1185:/usr/include/c++/4.8/functional **** 	typename result<_Mu(_Arg, _Tuple)>::type
1186:/usr/include/c++/4.8/functional **** 	operator()(const volatile _Arg&, _Tuple& __tuple) const volatile
1187:/usr/include/c++/4.8/functional **** 	{
1188:/usr/include/c++/4.8/functional **** 	  return std::forward<typename result<_Mu(_Arg, _Tuple)>::type>(
1189:/usr/include/c++/4.8/functional **** 	      ::std::get<(is_placeholder<_Arg>::value - 1)>(__tuple));
1190:/usr/include/c++/4.8/functional **** 	}
1191:/usr/include/c++/4.8/functional ****     };
1192:/usr/include/c++/4.8/functional **** 
1193:/usr/include/c++/4.8/functional ****   /**
1194:/usr/include/c++/4.8/functional ****    *  If the argument is just a value, returns a reference to that
1195:/usr/include/c++/4.8/functional ****    *  value. The cv-qualifiers on the reference are the same as the
1196:/usr/include/c++/4.8/functional ****    *  cv-qualifiers on the _Mu object. [TR1 3.6.3/5 bullet 4]
1197:/usr/include/c++/4.8/functional ****    */
1198:/usr/include/c++/4.8/functional ****   template<typename _Arg>
1199:/usr/include/c++/4.8/functional ****     class _Mu<_Arg, false, false>
1200:/usr/include/c++/4.8/functional ****     {
1201:/usr/include/c++/4.8/functional ****     public:
1202:/usr/include/c++/4.8/functional ****       template<typename _Signature> struct result;
1203:/usr/include/c++/4.8/functional **** 
1204:/usr/include/c++/4.8/functional ****       template<typename _CVMu, typename _CVArg, typename _Tuple>
1205:/usr/include/c++/4.8/functional **** 	struct result<_CVMu(_CVArg, _Tuple)>
1206:/usr/include/c++/4.8/functional **** 	{
1207:/usr/include/c++/4.8/functional **** 	  typedef typename add_lvalue_reference<_CVArg>::type type;
1208:/usr/include/c++/4.8/functional **** 	};
1209:/usr/include/c++/4.8/functional **** 
1210:/usr/include/c++/4.8/functional ****       // Pick up the cv-qualifiers of the argument
1211:/usr/include/c++/4.8/functional ****       template<typename _CVArg, typename _Tuple>
1212:/usr/include/c++/4.8/functional **** 	_CVArg&&
1213:/usr/include/c++/4.8/functional **** 	operator()(_CVArg&& __arg, _Tuple&) const volatile
1214:/usr/include/c++/4.8/functional **** 	{ return std::forward<_CVArg>(__arg); }
1215:/usr/include/c++/4.8/functional ****     };
1216:/usr/include/c++/4.8/functional **** 
1217:/usr/include/c++/4.8/functional ****   /**
1218:/usr/include/c++/4.8/functional ****    *  Maps member pointers into instances of _Mem_fn but leaves all
1219:/usr/include/c++/4.8/functional ****    *  other function objects untouched. Used by tr1::bind(). The
1220:/usr/include/c++/4.8/functional ****    *  primary template handles the non--member-pointer case.
1221:/usr/include/c++/4.8/functional ****    */
1222:/usr/include/c++/4.8/functional ****   template<typename _Tp>
1223:/usr/include/c++/4.8/functional ****     struct _Maybe_wrap_member_pointer
1224:/usr/include/c++/4.8/functional ****     {
1225:/usr/include/c++/4.8/functional ****       typedef _Tp type;
1226:/usr/include/c++/4.8/functional **** 
1227:/usr/include/c++/4.8/functional ****       static const _Tp&
1228:/usr/include/c++/4.8/functional ****       __do_wrap(const _Tp& __x)
1229:/usr/include/c++/4.8/functional ****       { return __x; }
1230:/usr/include/c++/4.8/functional **** 
1231:/usr/include/c++/4.8/functional ****       static _Tp&&
1232:/usr/include/c++/4.8/functional ****       __do_wrap(_Tp&& __x)
1233:/usr/include/c++/4.8/functional ****       { return static_cast<_Tp&&>(__x); }
1234:/usr/include/c++/4.8/functional ****     };
1235:/usr/include/c++/4.8/functional **** 
GAS LISTING /tmp/cceISX6N.s 			page 128


1236:/usr/include/c++/4.8/functional ****   /**
1237:/usr/include/c++/4.8/functional ****    *  Maps member pointers into instances of _Mem_fn but leaves all
1238:/usr/include/c++/4.8/functional ****    *  other function objects untouched. Used by tr1::bind(). This
1239:/usr/include/c++/4.8/functional ****    *  partial specialization handles the member pointer case.
1240:/usr/include/c++/4.8/functional ****    */
1241:/usr/include/c++/4.8/functional ****   template<typename _Tp, typename _Class>
1242:/usr/include/c++/4.8/functional ****     struct _Maybe_wrap_member_pointer<_Tp _Class::*>
1243:/usr/include/c++/4.8/functional ****     {
1244:/usr/include/c++/4.8/functional ****       typedef _Mem_fn<_Tp _Class::*> type;
1245:/usr/include/c++/4.8/functional **** 
1246:/usr/include/c++/4.8/functional ****       static type
1247:/usr/include/c++/4.8/functional ****       __do_wrap(_Tp _Class::* __pm)
1248:/usr/include/c++/4.8/functional ****       { return type(__pm); }
1249:/usr/include/c++/4.8/functional ****     };
1250:/usr/include/c++/4.8/functional **** 
1251:/usr/include/c++/4.8/functional ****   // Specialization needed to prevent "forming reference to void" errors when
1252:/usr/include/c++/4.8/functional ****   // bind<void>() is called, because argument deduction instantiates
1253:/usr/include/c++/4.8/functional ****   // _Maybe_wrap_member_pointer<void> outside the immediate context where
1254:/usr/include/c++/4.8/functional ****   // SFINAE applies.
1255:/usr/include/c++/4.8/functional ****   template<>
1256:/usr/include/c++/4.8/functional ****     struct _Maybe_wrap_member_pointer<void>
1257:/usr/include/c++/4.8/functional ****     {
1258:/usr/include/c++/4.8/functional ****       typedef void type;
1259:/usr/include/c++/4.8/functional ****     };
1260:/usr/include/c++/4.8/functional **** 
1261:/usr/include/c++/4.8/functional ****   // std::get<I> for volatile-qualified tuples
1262:/usr/include/c++/4.8/functional ****   template<std::size_t _Ind, typename... _Tp>
1263:/usr/include/c++/4.8/functional ****     inline auto
1264:/usr/include/c++/4.8/functional ****     __volget(volatile tuple<_Tp...>& __tuple)
1265:/usr/include/c++/4.8/functional ****     -> typename tuple_element<_Ind, tuple<_Tp...>>::type volatile&
1266:/usr/include/c++/4.8/functional ****     { return std::get<_Ind>(const_cast<tuple<_Tp...>&>(__tuple)); }
1267:/usr/include/c++/4.8/functional **** 
1268:/usr/include/c++/4.8/functional ****   // std::get<I> for const-volatile-qualified tuples
1269:/usr/include/c++/4.8/functional ****   template<std::size_t _Ind, typename... _Tp>
1270:/usr/include/c++/4.8/functional ****     inline auto
1271:/usr/include/c++/4.8/functional ****     __volget(const volatile tuple<_Tp...>& __tuple)
1272:/usr/include/c++/4.8/functional ****     -> typename tuple_element<_Ind, tuple<_Tp...>>::type const volatile&
1273:/usr/include/c++/4.8/functional ****     { return std::get<_Ind>(const_cast<const tuple<_Tp...>&>(__tuple)); }
1274:/usr/include/c++/4.8/functional **** 
1275:/usr/include/c++/4.8/functional ****   /// Type of the function object returned from bind().
1276:/usr/include/c++/4.8/functional ****   template<typename _Signature>
1277:/usr/include/c++/4.8/functional ****     struct _Bind;
1278:/usr/include/c++/4.8/functional **** 
1279:/usr/include/c++/4.8/functional ****    template<typename _Functor, typename... _Bound_args>
1280:/usr/include/c++/4.8/functional ****     class _Bind<_Functor(_Bound_args...)>
1281:/usr/include/c++/4.8/functional ****     : public _Weak_result_type<_Functor>
1282:/usr/include/c++/4.8/functional ****     {
1283:/usr/include/c++/4.8/functional ****       typedef _Bind __self_type;
1284:/usr/include/c++/4.8/functional ****       typedef typename _Build_index_tuple<sizeof...(_Bound_args)>::__type
1285:/usr/include/c++/4.8/functional **** 	_Bound_indexes;
1286:/usr/include/c++/4.8/functional **** 
1287:/usr/include/c++/4.8/functional ****       _Functor _M_f;
1288:/usr/include/c++/4.8/functional ****       tuple<_Bound_args...> _M_bound_args;
1289:/usr/include/c++/4.8/functional **** 
1290:/usr/include/c++/4.8/functional ****       // Call unqualified
1291:/usr/include/c++/4.8/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1292:/usr/include/c++/4.8/functional **** 	_Result
GAS LISTING /tmp/cceISX6N.s 			page 129


1293:/usr/include/c++/4.8/functional **** 	__call(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>)
1294:/usr/include/c++/4.8/functional **** 	{
1295:/usr/include/c++/4.8/functional **** 	  return _M_f(_Mu<_Bound_args>()
1296:/usr/include/c++/4.8/functional **** 		      (get<_Indexes>(_M_bound_args), __args)...);
1297:/usr/include/c++/4.8/functional **** 	}
1298:/usr/include/c++/4.8/functional **** 
1299:/usr/include/c++/4.8/functional ****       // Call as const
1300:/usr/include/c++/4.8/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1301:/usr/include/c++/4.8/functional **** 	_Result
1302:/usr/include/c++/4.8/functional **** 	__call_c(tuple<_Args...>&& __args, _Index_tuple<_Indexes...>) const
1303:/usr/include/c++/4.8/functional **** 	{
1304:/usr/include/c++/4.8/functional **** 	  return _M_f(_Mu<_Bound_args>()
1305:/usr/include/c++/4.8/functional **** 		      (get<_Indexes>(_M_bound_args), __args)...);
1306:/usr/include/c++/4.8/functional **** 	}
1307:/usr/include/c++/4.8/functional **** 
1308:/usr/include/c++/4.8/functional ****       // Call as volatile
1309:/usr/include/c++/4.8/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1310:/usr/include/c++/4.8/functional **** 	_Result
1311:/usr/include/c++/4.8/functional **** 	__call_v(tuple<_Args...>&& __args,
1312:/usr/include/c++/4.8/functional **** 		 _Index_tuple<_Indexes...>) volatile
1313:/usr/include/c++/4.8/functional **** 	{
1314:/usr/include/c++/4.8/functional **** 	  return _M_f(_Mu<_Bound_args>()
1315:/usr/include/c++/4.8/functional **** 		      (__volget<_Indexes>(_M_bound_args), __args)...);
1316:/usr/include/c++/4.8/functional **** 	}
1317:/usr/include/c++/4.8/functional **** 
1318:/usr/include/c++/4.8/functional ****       // Call as const volatile
1319:/usr/include/c++/4.8/functional ****       template<typename _Result, typename... _Args, std::size_t... _Indexes>
1320:/usr/include/c++/4.8/functional **** 	_Result
1321:/usr/include/c++/4.8/functional **** 	__call_c_v(tuple<_Args...>&& __args,
1322:/usr/include/c++/4.8/functional **** 		   _Index_tuple<_Indexes...>) const volatile
1323:/usr/include/c++/4.8/functional **** 	{
1324:/usr/include/c++/4.8/functional **** 	  return _M_f(_Mu<_Bound_args>()
1325:/usr/include/c++/4.8/functional **** 		      (__volget<_Indexes>(_M_bound_args), __args)...);
1326:/usr/include/c++/4.8/functional **** 	}
1327:/usr/include/c++/4.8/functional **** 
1328:/usr/include/c++/4.8/functional ****      public:
1329:/usr/include/c++/4.8/functional ****       template<typename... _Args>
1330:/usr/include/c++/4.8/functional **** 	explicit _Bind(const _Functor& __f, _Args&&... __args)
1331:/usr/include/c++/4.8/functional **** 	: _M_f(__f), _M_bound_args(std::forward<_Args>(__args)...)
1332:/usr/include/c++/4.8/functional **** 	{ }
1333:/usr/include/c++/4.8/functional **** 
1334:/usr/include/c++/4.8/functional ****       template<typename... _Args>
1335:/usr/include/c++/4.8/functional **** 	explicit _Bind(_Functor&& __f, _Args&&... __args)
1336:/usr/include/c++/4.8/functional **** 	: _M_f(std::move(__f)), _M_bound_args(std::forward<_Args>(__args)...)
 702              		.loc 6 1336 0
 703 013e 48C74424 		mov	QWORD PTR [rsp+48], OFFSET FLAT:_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7Pro
 703      30000000 
 703      00
 704 0147 48C74424 		mov	QWORD PTR [rsp+56], 0
 704      38000000 
 704      00
 705              	.LVL55:
 706              	.LBB885:
 707              	.LBB886:
 708              	.LBB887:
 709              	.LBB888:
 710              		.file 12 "/usr/include/c++/4.8/tuple"
GAS LISTING /tmp/cceISX6N.s 			page 130


   1:/usr/include/c++/4.8/tuple **** // <tuple> -*- C++ -*-
   2:/usr/include/c++/4.8/tuple **** 
   3:/usr/include/c++/4.8/tuple **** // Copyright (C) 2007-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/tuple **** //
   5:/usr/include/c++/4.8/tuple **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/tuple **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/tuple **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/tuple **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/4.8/tuple **** // any later version.
  10:/usr/include/c++/4.8/tuple **** 
  11:/usr/include/c++/4.8/tuple **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/tuple **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/tuple **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/tuple **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/tuple **** 
  16:/usr/include/c++/4.8/tuple **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/tuple **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/tuple **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/tuple **** 
  20:/usr/include/c++/4.8/tuple **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/tuple **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/tuple **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/tuple **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/tuple **** 
  25:/usr/include/c++/4.8/tuple **** /** @file include/tuple
  26:/usr/include/c++/4.8/tuple ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/4.8/tuple ****  */
  28:/usr/include/c++/4.8/tuple **** 
  29:/usr/include/c++/4.8/tuple **** #ifndef _GLIBCXX_TUPLE
  30:/usr/include/c++/4.8/tuple **** #define _GLIBCXX_TUPLE 1
  31:/usr/include/c++/4.8/tuple **** 
  32:/usr/include/c++/4.8/tuple **** #pragma GCC system_header
  33:/usr/include/c++/4.8/tuple **** 
  34:/usr/include/c++/4.8/tuple **** #if __cplusplus < 201103L
  35:/usr/include/c++/4.8/tuple **** # include <bits/c++0x_warning.h>
  36:/usr/include/c++/4.8/tuple **** #else
  37:/usr/include/c++/4.8/tuple **** 
  38:/usr/include/c++/4.8/tuple **** #include <utility>
  39:/usr/include/c++/4.8/tuple **** #include <array>
  40:/usr/include/c++/4.8/tuple **** #include <bits/uses_allocator.h>
  41:/usr/include/c++/4.8/tuple **** 
  42:/usr/include/c++/4.8/tuple **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/4.8/tuple **** {
  44:/usr/include/c++/4.8/tuple **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/4.8/tuple **** 
  46:/usr/include/c++/4.8/tuple ****   /**
  47:/usr/include/c++/4.8/tuple ****    *  @addtogroup utilities
  48:/usr/include/c++/4.8/tuple ****    *  @{
  49:/usr/include/c++/4.8/tuple ****    */
  50:/usr/include/c++/4.8/tuple **** 
  51:/usr/include/c++/4.8/tuple ****   // Adds a const reference to a non-reference type.
  52:/usr/include/c++/4.8/tuple ****   template<typename _Tp>
  53:/usr/include/c++/4.8/tuple ****     struct __add_c_ref
  54:/usr/include/c++/4.8/tuple ****     { typedef const _Tp& type; };
  55:/usr/include/c++/4.8/tuple **** 
  56:/usr/include/c++/4.8/tuple ****   template<typename _Tp>
  57:/usr/include/c++/4.8/tuple ****     struct __add_c_ref<_Tp&>
GAS LISTING /tmp/cceISX6N.s 			page 131


  58:/usr/include/c++/4.8/tuple ****     { typedef _Tp& type; };
  59:/usr/include/c++/4.8/tuple **** 
  60:/usr/include/c++/4.8/tuple ****   // Adds a reference to a non-reference type.
  61:/usr/include/c++/4.8/tuple ****   template<typename _Tp>
  62:/usr/include/c++/4.8/tuple ****     struct __add_ref
  63:/usr/include/c++/4.8/tuple ****     { typedef _Tp& type; };
  64:/usr/include/c++/4.8/tuple **** 
  65:/usr/include/c++/4.8/tuple ****   template<typename _Tp>
  66:/usr/include/c++/4.8/tuple ****     struct __add_ref<_Tp&>
  67:/usr/include/c++/4.8/tuple ****     { typedef _Tp& type; };
  68:/usr/include/c++/4.8/tuple **** 
  69:/usr/include/c++/4.8/tuple ****   // Adds an rvalue reference to a non-reference type.
  70:/usr/include/c++/4.8/tuple ****   template<typename _Tp>
  71:/usr/include/c++/4.8/tuple ****     struct __add_r_ref
  72:/usr/include/c++/4.8/tuple ****     { typedef _Tp&& type; };
  73:/usr/include/c++/4.8/tuple **** 
  74:/usr/include/c++/4.8/tuple ****   template<typename _Tp>
  75:/usr/include/c++/4.8/tuple ****     struct __add_r_ref<_Tp&>
  76:/usr/include/c++/4.8/tuple ****     { typedef _Tp& type; };
  77:/usr/include/c++/4.8/tuple **** 
  78:/usr/include/c++/4.8/tuple ****   template<std::size_t _Idx, typename _Head, bool _IsEmptyNotFinal>
  79:/usr/include/c++/4.8/tuple ****     struct _Head_base;
  80:/usr/include/c++/4.8/tuple **** 
  81:/usr/include/c++/4.8/tuple ****   template<std::size_t _Idx, typename _Head>
  82:/usr/include/c++/4.8/tuple ****     struct _Head_base<_Idx, _Head, true>
  83:/usr/include/c++/4.8/tuple ****     : public _Head
  84:/usr/include/c++/4.8/tuple ****     {
  85:/usr/include/c++/4.8/tuple ****       constexpr _Head_base()
  86:/usr/include/c++/4.8/tuple ****       : _Head() { }
  87:/usr/include/c++/4.8/tuple **** 
  88:/usr/include/c++/4.8/tuple ****       constexpr _Head_base(const _Head& __h)
  89:/usr/include/c++/4.8/tuple ****       : _Head(__h) { }
  90:/usr/include/c++/4.8/tuple **** 
  91:/usr/include/c++/4.8/tuple ****       template<typename _UHead, typename = typename
  92:/usr/include/c++/4.8/tuple **** 	       enable_if<!is_convertible<_UHead,
  93:/usr/include/c++/4.8/tuple **** 	                                 __uses_alloc_base>::value>::type>
  94:/usr/include/c++/4.8/tuple ****         constexpr _Head_base(_UHead&& __h)
  95:/usr/include/c++/4.8/tuple **** 	: _Head(std::forward<_UHead>(__h)) { }
  96:/usr/include/c++/4.8/tuple **** 
  97:/usr/include/c++/4.8/tuple ****       _Head_base(__uses_alloc0)
  98:/usr/include/c++/4.8/tuple ****       : _Head() { }
  99:/usr/include/c++/4.8/tuple **** 
 100:/usr/include/c++/4.8/tuple ****       template<typename _Alloc>
 101:/usr/include/c++/4.8/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a)
 102:/usr/include/c++/4.8/tuple **** 	: _Head(allocator_arg, *__a._M_a) { }
 103:/usr/include/c++/4.8/tuple **** 
 104:/usr/include/c++/4.8/tuple ****       template<typename _Alloc>
 105:/usr/include/c++/4.8/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a)
 106:/usr/include/c++/4.8/tuple **** 	: _Head(*__a._M_a) { }
 107:/usr/include/c++/4.8/tuple **** 
 108:/usr/include/c++/4.8/tuple ****       template<typename _UHead>
 109:/usr/include/c++/4.8/tuple **** 	_Head_base(__uses_alloc0, _UHead&& __uhead)
 110:/usr/include/c++/4.8/tuple **** 	: _Head(std::forward<_UHead>(__uhead)) { }
 111:/usr/include/c++/4.8/tuple **** 
 112:/usr/include/c++/4.8/tuple ****       template<typename _Alloc, typename _UHead>
 113:/usr/include/c++/4.8/tuple **** 	_Head_base(__uses_alloc1<_Alloc> __a, _UHead&& __uhead)
 114:/usr/include/c++/4.8/tuple **** 	: _Head(allocator_arg, *__a._M_a, std::forward<_UHead>(__uhead)) { }
GAS LISTING /tmp/cceISX6N.s 			page 132


 115:/usr/include/c++/4.8/tuple **** 
 116:/usr/include/c++/4.8/tuple ****       template<typename _Alloc, typename _UHead>
 117:/usr/include/c++/4.8/tuple **** 	_Head_base(__uses_alloc2<_Alloc> __a, _UHead&& __uhead)
 118:/usr/include/c++/4.8/tuple **** 	: _Head(std::forward<_UHead>(__uhead), *__a._M_a) { }
 119:/usr/include/c++/4.8/tuple **** 
 120:/usr/include/c++/4.8/tuple ****       static constexpr _Head&
 121:/usr/include/c++/4.8/tuple ****       _M_head(_Head_base& __b) noexcept { return __b; }
 122:/usr/include/c++/4.8/tuple **** 
 123:/usr/include/c++/4.8/tuple ****       static constexpr const _Head&
 124:/usr/include/c++/4.8/tuple ****       _M_head(const _Head_base& __b) noexcept { return __b; }
 125:/usr/include/c++/4.8/tuple ****     };
 126:/usr/include/c++/4.8/tuple **** 
 127:/usr/include/c++/4.8/tuple ****   template<std::size_t _Idx, typename _Head>
 128:/usr/include/c++/4.8/tuple ****     struct _Head_base<_Idx, _Head, false>
 129:/usr/include/c++/4.8/tuple ****     {
 130:/usr/include/c++/4.8/tuple ****       constexpr _Head_base()
 131:/usr/include/c++/4.8/tuple ****       : _M_head_impl() { }
 132:/usr/include/c++/4.8/tuple **** 
 133:/usr/include/c++/4.8/tuple ****       constexpr _Head_base(const _Head& __h)
 134:/usr/include/c++/4.8/tuple ****       : _M_head_impl(__h) { }
 135:/usr/include/c++/4.8/tuple **** 
 136:/usr/include/c++/4.8/tuple ****       template<typename _UHead, typename = typename
 137:/usr/include/c++/4.8/tuple **** 	       enable_if<!is_convertible<_UHead,
 138:/usr/include/c++/4.8/tuple **** 	                                 __uses_alloc_base>::value>::type>
 139:/usr/include/c++/4.8/tuple ****         constexpr _Head_base(_UHead&& __h)
 140:/usr/include/c++/4.8/tuple **** 	: _M_head_impl(std::forward<_UHead>(__h)) { }
 711              		.loc 12 140 0
 712 0150 48896C24 		mov	QWORD PTR [rsp+64], rbp
 712      40
 713              	.LVL56:
 714              	.LBE888:
 715              	.LBE887:
 716              	.LBE886:
 717              	.LBE885:
 718              	.LBE884:
 719              	.LBE883:
 720              	.LBE882:
 721              	.LBE881:
 722              		.loc 10 39 0
 723 0155 E8000000 		call	_ZNSsC1EPKcRKSaIcE
 723      00
 724              	.LEHE0:
 725              	.LVL57:
 726 015a 488D7424 		lea	rsi, [rsp+48]
 726      30
 727              	.LVL58:
 728 015f 488D7C24 		lea	rdi, [rsp+32]
 728      20
 729              	.LEHB1:
 730 0164 E8000000 		call	_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8Const
 730      00
 731              	.LEHE1:
 732              	.LVL59:
 733              	.LBB889:
 734              	.LBB890:
 539:/usr/include/c++/4.8/bits/basic_string.h **** 
 735              		.loc 8 539 0
GAS LISTING /tmp/cceISX6N.s 			page 133


 736 0169 488B4424 		mov	rax, QWORD PTR [rsp+32]
 736      20
 737 016e 488D7424 		lea	rsi, [rsp+31]
 737      1F
 738              	.LBE890:
 739              	.LBE889:
 740              	.LBB892:
 741              	.LBB893:
  18:utils.h       **** 
 742              		.loc 5 18 0
 743 0173 BB102700 		mov	ebx, 10000
 743      00
 744              	.LBE893:
 745              	.LBE892:
 746              	.LBB978:
 747              	.LBB891:
 539:/usr/include/c++/4.8/bits/basic_string.h **** 
 748              		.loc 8 539 0
 749 0178 488D78E8 		lea	rdi, [rax-24]
 750 017c E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE
 750      00
 751              	.LVL60:
 752              	.LBE891:
 753              	.LBE978:
  40:compiler.cpp  **** 	timeExec<1>("Lambda evaluation", [&]() {
  41:compiler.cpp  **** 		for(int i = 0; i < TIMES; ++i) {
  42:compiler.cpp  **** 			result.eval();
  43:compiler.cpp  **** 		}
  44:compiler.cpp  **** 		return result.eval();
  45:compiler.cpp  **** 	});
 754              		.loc 10 45 0
 755 0181 488D5424 		lea	rdx, [rsp+31]
 755      1F
 756              	.LVL61:
 757 0186 488D7C24 		lea	rdi, [rsp+48]
 757      30
 758              	.LVL62:
 759 018b BE000000 		mov	esi, OFFSET FLAT:.LC13
 759      00
 760              	.LEHB2:
 761 0190 E8000000 		call	_ZNSsC1EPKcRKSaIcE
 761      00
 762              	.LEHE2:
 763              	.LVL63:
 764              	.LBB979:
 765              	.LBB977:
  18:utils.h       **** 
 766              		.loc 5 18 0
 767 0195 E8000000 		call	_ZNSt6chrono3_V212steady_clock3nowEv
 767      00
 768              	.LVL64:
 769 019a 4989C5   		mov	r13, rax
 770              	.LVL65:
 771 019d 488B4424 		mov	rax, QWORD PTR [rsp+80]
 771      50
 772 01a2 F20F10A4 		movsd	xmm4, QWORD PTR [rsp+136]
 772      24880000 
GAS LISTING /tmp/cceISX6N.s 			page 134


 772      00
 773 01ab F20F105C 		movsd	xmm3, QWORD PTR [rsp+120]
 773      2478
 774 01b1 F20F1008 		movsd	xmm1, QWORD PTR [rax]
 775 01b5 F20F1054 		movsd	xmm2, QWORD PTR [rsp+104]
 775      2468
 776 01bb F20F594C 		mulsd	xmm1, QWORD PTR [rsp+88]
 776      2458
 777              	.LVL66:
 778              		.p2align 4,,10
 779 01c1 0F1F8000 		.p2align 3
 779      000000
 780              	.L22:
 781              	.LBB894:
 782              	.LBB895:
 783              	.LBB896:
 784              	.LBB897:
 785              	.LBB898:
 786              	.LBB899:
 787              	.LBB900:
 788              	.LBB901:
 789              	.LBB902:
 790              	.LBB903:
  48:compiler.h    **** 	}
 791              		.loc 1 48 0
 792 01c8 660F28C1 		movapd	xmm0, xmm1
 793 01cc F20F58C2 		addsd	xmm0, xmm2
 794              	.LBE903:
 795              	.LBE902:
 796              	.LBE901:
 797              	.LBB904:
 798              	.LBB905:
  60:compiler.h    **** 	}
 799              		.loc 1 60 0
 800 01d0 F20F59C3 		mulsd	xmm0, xmm3
 801              	.LBE905:
 802              	.LBE904:
 803              	.LBE900:
 804              	.LBB906:
 805              	.LBB907:
  48:compiler.h    **** 	}
 806              		.loc 1 48 0
 807 01d4 F20F58C4 		addsd	xmm0, xmm4
 808              	.LBE907:
 809              	.LBE906:
 810              	.LBE899:
 811              	.LBB908:
 812              	.LBB909:
 813              		.loc 1 72 0
 814 01d8 660F5705 		xorpd	xmm0, XMMWORD PTR .LC0[rip]
 814      00000000 
 815 01e0 660F2E05 		ucomisd	xmm0, QWORD PTR .LC14[rip]
 815      00000000 
 816 01e8 7241     		jb	.L19
 817 01ea E8000000 		call	exp
 817      00
 818              	.LVL67:
GAS LISTING /tmp/cceISX6N.s 			page 135


 819 01ef 488B5424 		mov	rdx, QWORD PTR [rsp+80]
 819      50
 820 01f4 F20F1054 		movsd	xmm2, QWORD PTR [rsp+104]
 820      2468
 821 01fa F20F105C 		movsd	xmm3, QWORD PTR [rsp+120]
 821      2478
 822 0200 660F28C2 		movapd	xmm0, xmm2
 823 0204 F20F10A4 		movsd	xmm4, QWORD PTR [rsp+136]
 823      24880000 
 823      00
 824              	.LVL68:
 825 020d F20F100A 		movsd	xmm1, QWORD PTR [rdx]
 826 0211 F20F594C 		mulsd	xmm1, QWORD PTR [rsp+88]
 826      2458
 827 0217 F20F58C1 		addsd	xmm0, xmm1
 828              	.LVL69:
 829 021b F20F59C3 		mulsd	xmm0, xmm3
 830 021f F20F58C4 		addsd	xmm0, xmm4
 831 0223 660F5705 		xorpd	xmm0, XMMWORD PTR .LC0[rip]
 831      00000000 
 832              	.LVL70:
 833              	.L19:
 834              	.LBE909:
 835              	.LBE908:
 836              	.LBE898:
  41:compiler.cpp  **** 			result.eval();
 837              		.loc 10 41 0
 838 022b 83EB01   		sub	ebx, 1
 839 022e 7598     		jne	.L22
 840              	.LVL71:
 841 0230 660F2E05 		ucomisd	xmm0, QWORD PTR .LC14[rip]
 841      00000000 
 842 0238 7205     		jb	.L23
 843              	.LBE897:
 844              	.LBB910:
 845              	.LBB911:
 846              	.LBB912:
 847              		.loc 1 72 0
 848 023a E8000000 		call	exp
 848      00
 849              	.LVL72:
 850              	.L23:
 851              	.LBE912:
 852              	.LBE911:
 853              	.LBE910:
 854              	.LBE896:
 855              	.LBE895:
 856              	.LBE894:
  24:utils.h       **** 
 857              		.loc 5 24 0
 858 023f E8000000 		call	_ZNSt6chrono3_V212steady_clock3nowEv
 858      00
 859              	.LVL73:
 860 0244 4989C4   		mov	r12, rax
 861              	.LVL74:
 862              	.LBB913:
 863              	.LBB914:
GAS LISTING /tmp/cceISX6N.s 			page 136


 864              	.LBB915:
 865              		.loc 7 398 0
 866 0247 BB102700 		mov	ebx, 10000
 866      00
 867              	.LVL75:
 868 024c 4D29EC   		sub	r12, r13
 869              	.LVL76:
 870 024f 90       		.p2align 4,,10
 871              		.p2align 3
 872              	.L28:
 873              	.LBE915:
 874              	.LBE914:
 875              	.LBE913:
 876              	.LBB916:
 877              	.LBB917:
 878              	.LBB918:
 879              	.LBB919:
 880              	.LBB920:
 881              	.LBB921:
 882              	.LBB922:
 883              	.LBB923:
 884              	.LBB924:
 885              	.LBB925:
 886              	.LBB926:
  60:compiler.h    **** 	}
 887              		.loc 1 60 0
 888 0250 488B5424 		mov	rdx, QWORD PTR [rsp+80]
 888      50
 889 0255 F20F1044 		movsd	xmm0, QWORD PTR [rsp+88]
 889      2458
 890 025b F20F5902 		mulsd	xmm0, QWORD PTR [rdx]
 891              	.LVL77:
 892              	.LBE926:
 893              	.LBE925:
 894              	.LBE924:
 895              	.LBB927:
 896              	.LBB928:
  48:compiler.h    **** 	}
 897              		.loc 1 48 0
 898 025f F20F5844 		addsd	xmm0, QWORD PTR [rsp+104]
 898      2468
 899              	.LVL78:
 900              	.LBE928:
 901              	.LBE927:
 902              	.LBE923:
 903              	.LBB929:
 904              	.LBB930:
  60:compiler.h    **** 	}
 905              		.loc 1 60 0
 906 0265 F20F5944 		mulsd	xmm0, QWORD PTR [rsp+120]
 906      2478
 907              	.LBE930:
 908              	.LBE929:
 909              	.LBE922:
 910              	.LBB931:
 911              	.LBB932:
  48:compiler.h    **** 	}
GAS LISTING /tmp/cceISX6N.s 			page 137


 912              		.loc 1 48 0
 913 026b F20F5884 		addsd	xmm0, QWORD PTR [rsp+136]
 913      24880000 
 913      00
 914              	.LBE932:
 915              	.LBE931:
 916              	.LBE921:
 917              	.LBB933:
 918              	.LBB934:
 919              		.loc 1 72 0
 920 0274 660F5705 		xorpd	xmm0, XMMWORD PTR .LC0[rip]
 920      00000000 
 921 027c 660F2E05 		ucomisd	xmm0, QWORD PTR .LC14[rip]
 921      00000000 
 922 0284 7205     		jb	.L25
 923 0286 E8000000 		call	exp
 923      00
 924              	.LVL79:
 925              	.L25:
 926              	.LBE934:
 927              	.LBE933:
 928              	.LBE920:
  41:compiler.cpp  **** 			result.eval();
 929              		.loc 10 41 0
 930 028b 83EB01   		sub	ebx, 1
 931 028e 75C0     		jne	.L28
 932              	.LBE919:
  44:compiler.cpp  **** 	});
 933              		.loc 10 44 0
 934 0290 4889EF   		mov	rdi, rbp
 935 0293 E8000000 		call	_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E7Sig
 935      00
 936              	.LVL80:
 937              	.LBE918:
 938              	.LBE917:
 939              	.LBE916:
 940              	.LBB937:
 941              	.LBB938:
 942              	.LBB939:
 943              	.LBB940:
 944              	.LBB941:
 162:/usr/include/c++/4.8/chrono **** 	  }
 945              		.loc 7 162 0
 946 0298 F2490F2A 		cvtsi2sd	xmm5, r12
 946      EC
 947              	.LBE941:
 948              	.LBE940:
 949              	.LBE939:
 950              	.LBE938:
 951              	.LBE937:
 952              	.LBB946:
 953              	.LBB947:
 954              	.LBB948:
 955              	.LBB949:
 956              	.LBB950:
 957              	.LBB951:
 958              	.LBB952:
GAS LISTING /tmp/cceISX6N.s 			page 138


 293:/usr/include/c++/4.8/bits/basic_string.h **** 
 959              		.loc 8 293 0
 960 029d 488B7424 		mov	rsi, QWORD PTR [rsp+48]
 960      30
 961              	.LVL81:
 962              	.LBE952:
 963              	.LBE951:
 964              	.LBE950:
 965              	.LBE949:
 966              	.LBE948:
 967              		.loc 8 2758 0
 968 02a2 BF000000 		mov	edi, OFFSET FLAT:_ZSt4cout
 968      00
 969              	.LBE947:
 970              	.LBE946:
 971              	.LBB956:
 972              	.LBB936:
 973              	.LBB935:
  44:compiler.cpp  **** 	});
 974              		.loc 10 44 0
 975 02a7 F20F1144 		movsd	QWORD PTR [rsp+8], xmm0
 975      2408
 976              	.LBE935:
 977              	.LBE936:
 978              	.LBE956:
 979              	.LBB957:
 980              	.LBB953:
 981              		.loc 8 2758 0
 982 02ad 488B56E8 		mov	rdx, QWORD PTR [rsi-24]
 983              	.LBE953:
 984              	.LBE957:
 985              	.LBB958:
 986              	.LBB945:
 987              	.LBB944:
 988              	.LBB943:
 989              	.LBB942:
 162:/usr/include/c++/4.8/chrono **** 	  }
 990              		.loc 7 162 0
 991 02b1 F20F5E2D 		divsd	xmm5, QWORD PTR .LC3[rip]
 991      00000000 
 992 02b9 F20F112C 		movsd	QWORD PTR [rsp], xmm5
 992      24
 993              	.LEHB3:
 994              	.LBE942:
 995              	.LBE943:
 996              	.LBE944:
 997              	.LBE945:
 998              	.LBE958:
 999              	.LBB959:
 1000              	.LBB954:
 1001              		.loc 8 2758 0
 1002 02be E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1002      00
 1003              	.LVL82:
 1004              	.LBE954:
 1005              	.LBE959:
 1006              	.LBB960:
GAS LISTING /tmp/cceISX6N.s 			page 139


 1007              	.LBB961:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1008              		.loc 2 535 0
 1009 02c3 BA020000 		mov	edx, 2
 1009      00
 1010 02c8 BE000000 		mov	esi, OFFSET FLAT:.LC2
 1010      00
 1011 02cd 4889C7   		mov	rdi, rax
 1012              	.LBE961:
 1013              	.LBE960:
 1014              	.LBB963:
 1015              	.LBB955:
 1016              		.loc 8 2758 0
 1017 02d0 4889C3   		mov	rbx, rax
 1018              	.LVL83:
 1019              	.LBE955:
 1020              	.LBE963:
 1021              	.LBB964:
 1022              	.LBB962:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1023              		.loc 2 535 0
 1024 02d3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1024      00
 1025              	.LVL84:
 1026              	.LBE962:
 1027              	.LBE964:
 1028              	.LBB965:
 1029              	.LBB966:
 221:/usr/include/c++/4.8/ostream **** 
 1030              		.loc 2 221 0
 1031 02d8 F20F1004 		movsd	xmm0, QWORD PTR [rsp]
 1031      24
 1032 02dd 4889DF   		mov	rdi, rbx
 1033 02e0 E8000000 		call	_ZNSo9_M_insertIdEERSoT_
 1033      00
 1034              	.LVL85:
 1035              	.LBE966:
 1036              	.LBE965:
 1037              	.LBB968:
 1038              	.LBB969:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1039              		.loc 2 535 0
 1040 02e5 BA0E0000 		mov	edx, 14
 1040      00
 1041 02ea BE000000 		mov	esi, OFFSET FLAT:.LC4
 1041      00
 1042 02ef 4889C7   		mov	rdi, rax
 1043              	.LBE969:
 1044              	.LBE968:
 1045              	.LBB971:
 1046              	.LBB967:
 221:/usr/include/c++/4.8/ostream **** 
 1047              		.loc 2 221 0
 1048 02f2 4889C3   		mov	rbx, rax
 1049              	.LVL86:
 1050              	.LBE967:
 1051              	.LBE971:
GAS LISTING /tmp/cceISX6N.s 			page 140


 1052              	.LBB972:
 1053              	.LBB970:
 535:/usr/include/c++/4.8/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 1054              		.loc 2 535 0
 1055 02f5 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1055      00
 1056              	.LVL87:
 1057              	.LBE970:
 1058              	.LBE972:
 1059              	.LBB973:
 1060              	.LBB974:
 221:/usr/include/c++/4.8/ostream **** 
 1061              		.loc 2 221 0
 1062 02fa F20F1044 		movsd	xmm0, QWORD PTR [rsp+8]
 1062      2408
 1063 0300 4889DF   		mov	rdi, rbx
 1064 0303 E8000000 		call	_ZNSo9_M_insertIdEERSoT_
 1064      00
 1065              	.LVL88:
 1066              	.LBE974:
 1067              	.LBE973:
 1068              	.LBB975:
 1069              	.LBB976:
 113:/usr/include/c++/4.8/ostream ****       }
 1070              		.loc 2 113 0
 1071 0308 4889C7   		mov	rdi, rax
 1072 030b E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
 1072      00
 1073              	.LEHE3:
 1074              	.LVL89:
 1075              	.LBE976:
 1076              	.LBE975:
 1077              	.LBE977:
 1078              	.LBE979:
 1079              	.LBB980:
 1080              	.LBB981:
 539:/usr/include/c++/4.8/bits/basic_string.h **** 
 1081              		.loc 8 539 0
 1082 0310 488B4424 		mov	rax, QWORD PTR [rsp+48]
 1082      30
 1083 0315 488D7424 		lea	rsi, [rsp+32]
 1083      20
 1084              	.LVL90:
 1085 031a 488D78E8 		lea	rdi, [rax-24]
 1086 031e E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE
 1086      00
 1087              	.LVL91:
 1088              	.LBE981:
 1089              	.LBE980:
 1090              	.LBE986:
  46:compiler.cpp  **** }
 1091              		.loc 10 46 0
 1092 0323 4881C4A8 		add	rsp, 168
 1092      000000
 1093              		.cfi_remember_state
 1094              		.cfi_def_cfa_offset 40
 1095              	.LVL92:
GAS LISTING /tmp/cceISX6N.s 			page 141


 1096 032a 31C0     		xor	eax, eax
 1097 032c 5B       		pop	rbx
 1098              		.cfi_def_cfa_offset 32
 1099              	.LVL93:
 1100 032d 5D       		pop	rbp
 1101              		.cfi_def_cfa_offset 24
 1102              	.LVL94:
 1103 032e 415C     		pop	r12
 1104              		.cfi_def_cfa_offset 16
 1105              	.LVL95:
 1106 0330 415D     		pop	r13
 1107              		.cfi_def_cfa_offset 8
 1108              	.LVL96:
 1109 0332 C3       		ret
 1110              	.LVL97:
 1111              	.L31:
 1112              		.cfi_restore_state
 1113 0333 4889C3   		mov	rbx, rax
 1114              	.LVL98:
 1115              	.LBB987:
 1116              	.LBB982:
 1117              	.LBB983:
 539:/usr/include/c++/4.8/bits/basic_string.h **** 
 1118              		.loc 8 539 0
 1119 0336 488B4424 		mov	rax, QWORD PTR [rsp+32]
 1119      20
 1120 033b 488D7424 		lea	rsi, [rsp+31]
 1120      1F
 1121 0340 488D78E8 		lea	rdi, [rax-24]
 1122 0344 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE
 1122      00
 1123              	.LVL99:
 1124 0349 4889DF   		mov	rdi, rbx
 1125              	.LEHB4:
 1126 034c E8000000 		call	_Unwind_Resume
 1126      00
 1127              	.LVL100:
 1128              	.L32:
 1129 0351 4889C3   		mov	rbx, rax
 1130              	.LVL101:
 1131              	.LBE983:
 1132              	.LBE982:
 1133              	.LBB984:
 1134              	.LBB985:
 1135 0354 488B4424 		mov	rax, QWORD PTR [rsp+48]
 1135      30
 1136 0359 488D7424 		lea	rsi, [rsp+32]
 1136      20
 1137              	.LVL102:
 1138 035e 488D78E8 		lea	rdi, [rax-24]
 1139 0362 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE
 1139      00
 1140              	.LVL103:
 1141 0367 4889DF   		mov	rdi, rbx
 1142 036a E8000000 		call	_Unwind_Resume
 1142      00
 1143              	.LEHE4:
GAS LISTING /tmp/cceISX6N.s 			page 142


 1144              	.LVL104:
 1145              	.LBE985:
 1146              	.LBE984:
 1147              	.LBE987:
 1148              		.cfi_endproc
 1149              	.LFE2108:
 1150              		.globl	__gxx_personality_v0
 1151              		.section	.gcc_except_table,"a",@progbits
 1152              	.LLSDA2108:
 1153 0000 FF       		.byte	0xff
 1154 0001 FF       		.byte	0xff
 1155 0002 01       		.byte	0x1
 1156 0003 1B       		.uleb128 .LLSDACSE2108-.LLSDACSB2108
 1157              	.LLSDACSB2108:
 1158 0004 17       		.uleb128 .LEHB0-.LFB2108
 1159 0005 C302     		.uleb128 .LEHE0-.LEHB0
 1160 0007 00       		.uleb128 0
 1161 0008 00       		.uleb128 0
 1162 0009 E402     		.uleb128 .LEHB1-.LFB2108
 1163 000b 05       		.uleb128 .LEHE1-.LEHB1
 1164 000c B306     		.uleb128 .L31-.LFB2108
 1165 000e 00       		.uleb128 0
 1166 000f 9003     		.uleb128 .LEHB2-.LFB2108
 1167 0011 05       		.uleb128 .LEHE2-.LEHB2
 1168 0012 00       		.uleb128 0
 1169 0013 00       		.uleb128 0
 1170 0014 BE05     		.uleb128 .LEHB3-.LFB2108
 1171 0016 52       		.uleb128 .LEHE3-.LEHB3
 1172 0017 D106     		.uleb128 .L32-.LFB2108
 1173 0019 00       		.uleb128 0
 1174 001a CC06     		.uleb128 .LEHB4-.LFB2108
 1175 001c 23       		.uleb128 .LEHE4-.LEHB4
 1176 001d 00       		.uleb128 0
 1177 001e 00       		.uleb128 0
 1178              	.LLSDACSE2108:
 1179              		.section	.text.startup
 1180              		.size	main, .-main
 1181 036f 90       		.p2align 4,,15
 1182              		.type	_GLOBAL__sub_I_main, @function
 1183              	_GLOBAL__sub_I_main:
 1184              	.LFB2363:
 1185              		.loc 10 46 0
 1186              		.cfi_startproc
 1187              	.LVL105:
 1188 0370 4883EC08 		sub	rsp, 8
 1189              		.cfi_def_cfa_offset 16
 1190              	.LBB990:
 1191              	.LBB991:
 1192              		.file 13 "/usr/include/c++/4.8/iostream"
   1:/usr/include/c++/4.8/iostream **** // Standard iostream objects -*- C++ -*-
   2:/usr/include/c++/4.8/iostream **** 
   3:/usr/include/c++/4.8/iostream **** // Copyright (C) 1997-2013 Free Software Foundation, Inc.
   4:/usr/include/c++/4.8/iostream **** //
   5:/usr/include/c++/4.8/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/4.8/iostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/4.8/iostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/4.8/iostream **** // Free Software Foundation; either version 3, or (at your option)
GAS LISTING /tmp/cceISX6N.s 			page 143


   9:/usr/include/c++/4.8/iostream **** // any later version.
  10:/usr/include/c++/4.8/iostream **** 
  11:/usr/include/c++/4.8/iostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/4.8/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/4.8/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/4.8/iostream **** // GNU General Public License for more details.
  15:/usr/include/c++/4.8/iostream **** 
  16:/usr/include/c++/4.8/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/4.8/iostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/4.8/iostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/4.8/iostream **** 
  20:/usr/include/c++/4.8/iostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/4.8/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/4.8/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/4.8/iostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/4.8/iostream **** 
  25:/usr/include/c++/4.8/iostream **** /** @file include/iostream
  26:/usr/include/c++/4.8/iostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/4.8/iostream ****  */
  28:/usr/include/c++/4.8/iostream **** 
  29:/usr/include/c++/4.8/iostream **** //
  30:/usr/include/c++/4.8/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  31:/usr/include/c++/4.8/iostream **** //
  32:/usr/include/c++/4.8/iostream **** 
  33:/usr/include/c++/4.8/iostream **** #ifndef _GLIBCXX_IOSTREAM
  34:/usr/include/c++/4.8/iostream **** #define _GLIBCXX_IOSTREAM 1
  35:/usr/include/c++/4.8/iostream **** 
  36:/usr/include/c++/4.8/iostream **** #pragma GCC system_header
  37:/usr/include/c++/4.8/iostream **** 
  38:/usr/include/c++/4.8/iostream **** #include <bits/c++config.h>
  39:/usr/include/c++/4.8/iostream **** #include <ostream>
  40:/usr/include/c++/4.8/iostream **** #include <istream>
  41:/usr/include/c++/4.8/iostream **** 
  42:/usr/include/c++/4.8/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  43:/usr/include/c++/4.8/iostream **** {
  44:/usr/include/c++/4.8/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  45:/usr/include/c++/4.8/iostream **** 
  46:/usr/include/c++/4.8/iostream ****   /**
  47:/usr/include/c++/4.8/iostream ****    *  @name Standard Stream Objects
  48:/usr/include/c++/4.8/iostream ****    *
  49:/usr/include/c++/4.8/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  50:/usr/include/c++/4.8/iostream ****    *  objects</em>.  For other declarations, see
  51:/usr/include/c++/4.8/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/bk01pt11ch24.html
  52:/usr/include/c++/4.8/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  53:/usr/include/c++/4.8/iostream ****    *
  54:/usr/include/c++/4.8/iostream ****    *  They are required by default to cooperate with the global C
  55:/usr/include/c++/4.8/iostream ****    *  library's @c FILE streams, and to be available during program
  56:/usr/include/c++/4.8/iostream ****    *  startup and termination. For more information, see the HOWTO
  57:/usr/include/c++/4.8/iostream ****    *  linked to above.
  58:/usr/include/c++/4.8/iostream ****   */
  59:/usr/include/c++/4.8/iostream ****   //@{
  60:/usr/include/c++/4.8/iostream ****   extern istream cin;		/// Linked to standard input
  61:/usr/include/c++/4.8/iostream ****   extern ostream cout;		/// Linked to standard output
  62:/usr/include/c++/4.8/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  63:/usr/include/c++/4.8/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  64:/usr/include/c++/4.8/iostream **** 
  65:/usr/include/c++/4.8/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
GAS LISTING /tmp/cceISX6N.s 			page 144


  66:/usr/include/c++/4.8/iostream ****   extern wistream wcin;		/// Linked to standard input
  67:/usr/include/c++/4.8/iostream ****   extern wostream wcout;	/// Linked to standard output
  68:/usr/include/c++/4.8/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  69:/usr/include/c++/4.8/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  70:/usr/include/c++/4.8/iostream **** #endif
  71:/usr/include/c++/4.8/iostream ****   //@}
  72:/usr/include/c++/4.8/iostream **** 
  73:/usr/include/c++/4.8/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  74:/usr/include/c++/4.8/iostream ****   static ios_base::Init __ioinit;
 1193              		.loc 13 74 0
 1194 0374 BF000000 		mov	edi, OFFSET FLAT:_ZStL8__ioinit
 1194      00
 1195 0379 E8000000 		call	_ZNSt8ios_base4InitC1Ev
 1195      00
 1196              	.LVL106:
 1197 037e BA000000 		mov	edx, OFFSET FLAT:__dso_handle
 1197      00
 1198 0383 BE000000 		mov	esi, OFFSET FLAT:_ZStL8__ioinit
 1198      00
 1199 0388 BF000000 		mov	edi, OFFSET FLAT:_ZNSt8ios_base4InitD1Ev
 1199      00
 1200              	.LBE991:
 1201              	.LBE990:
 1202              		.loc 10 46 0
 1203 038d 4883C408 		add	rsp, 8
 1204              		.cfi_def_cfa_offset 8
 1205              	.LBB993:
 1206              	.LBB992:
 1207              		.loc 13 74 0
 1208 0391 E9000000 		jmp	__cxa_atexit
 1208      00
 1209              	.LVL107:
 1210              	.LBE992:
 1211              	.LBE993:
 1212              		.cfi_endproc
 1213              	.LFE2363:
 1214              		.size	_GLOBAL__sub_I_main, .-_GLOBAL__sub_I_main
 1215              		.section	.init_array,"aw"
 1216              		.align 8
 1217 0000 00000000 		.quad	_GLOBAL__sub_I_main
 1217      00000000 
 1218              		.local	_ZStL8__ioinit
 1219              		.comm	_ZStL8__ioinit,1,1
 1220              		.section	.rodata.cst16,"aM",@progbits,16
 1221              		.align 16
 1222              	.LC0:
 1223 0000 00000000 		.long	0
 1224 0004 00000080 		.long	-2147483648
 1225 0008 00000000 		.long	0
 1226 000c 00000000 		.long	0
 1227              		.section	.rodata.cst8,"aM",@progbits,8
 1228              		.align 8
 1229              	.LC1:
 1230 0000 00000000 		.long	0
 1231 0004 0000F03F 		.long	1072693248
 1232              		.align 8
 1233              	.LC3:
GAS LISTING /tmp/cceISX6N.s 			page 145


 1234 0008 00000000 		.long	0
 1235 000c 80842E41 		.long	1093567616
 1236              		.align 8
 1237              	.LC6:
 1238 0010 00000000 		.long	0
 1239 0014 0000D03F 		.long	1070596096
 1240              		.align 8
 1241              	.LC7:
 1242 0018 00000000 		.long	0
 1243 001c 00000040 		.long	1073741824
 1244              		.align 8
 1245              	.LC8:
 1246 0020 00000000 		.long	0
 1247 0024 00000840 		.long	1074266112
 1248              		.align 8
 1249              	.LC11:
 1250 0028 00000000 		.long	0
 1251 002c 0000E03F 		.long	1071644672
 1252              		.align 8
 1253              	.LC14:
 1254 0030 00000000 		.long	0
 1255 0034 00288640 		.long	1082533888
 1256              		.text
 1257              	.Letext0:
 1258              		.file 14 "/usr/include/c++/4.8/cmath"
 1259              		.file 15 "/usr/include/c++/4.8/type_traits"
 1260              		.file 16 "/usr/include/c++/4.8/cstdint"
 1261              		.file 17 "/usr/include/c++/4.8/ctime"
 1262              		.file 18 "<built-in>"
 1263              		.file 19 "/usr/include/c++/4.8/ratio"
 1264              		.file 20 "/usr/include/c++/4.8/cwchar"
 1265              		.file 21 "/usr/include/c++/4.8/bits/exception_ptr.h"
 1266              		.file 22 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/c++config.h"
 1267              		.file 23 "/usr/include/c++/4.8/bits/char_traits.h"
 1268              		.file 24 "/usr/include/c++/4.8/clocale"
 1269              		.file 25 "/usr/include/c++/4.8/bits/allocator.h"
 1270              		.file 26 "/usr/include/c++/4.8/cstdlib"
 1271              		.file 27 "/usr/include/c++/4.8/cstdio"
 1272              		.file 28 "/usr/include/c++/4.8/bits/basic_string.tcc"
 1273              		.file 29 "/usr/include/c++/4.8/initializer_list"
 1274              		.file 30 "/usr/include/c++/4.8/bits/stringfwd.h"
 1275              		.file 31 "/usr/include/c++/4.8/cwctype"
 1276              		.file 32 "/usr/include/c++/4.8/bits/ostream.tcc"
 1277              		.file 33 "/usr/include/c++/4.8/bits/stl_pair.h"
 1278              		.file 34 "/usr/include/c++/4.8/bits/uses_allocator.h"
 1279              		.file 35 "/usr/include/c++/4.8/bits/stl_function.h"
 1280              		.file 36 "/usr/include/c++/4.8/bits/stl_iterator_base_types.h"
 1281              		.file 37 "/usr/include/c++/4.8/bits/basic_ios.tcc"
 1282              		.file 38 "/usr/include/c++/4.8/bits/move.h"
 1283              		.file 39 "/usr/include/c++/4.8/iosfwd"
 1284              		.file 40 "/usr/include/c++/4.8/bits/ostream_insert.h"
 1285              		.file 41 "/usr/include/c++/4.8/bits/postypes.h"
 1286              		.file 42 "/usr/include/c++/4.8/bits/cpp_type_traits.h"
 1287              		.file 43 "/usr/include/c++/4.8/ext/new_allocator.h"
 1288              		.file 44 "/usr/include/c++/4.8/ext/numeric_traits.h"
 1289              		.file 45 "/usr/include/c++/4.8/bits/stl_iterator.h"
 1290              		.file 46 "/usr/include/c++/4.8/ext/atomicity.h"
GAS LISTING /tmp/cceISX6N.s 			page 146


 1291              		.file 47 "/usr/include/x86_64-linux-gnu/bits/mathdef.h"
 1292              		.file 48 "/usr/include/stdint.h"
 1293              		.file 49 "/usr/lib/gcc/x86_64-linux-gnu/4.8/include/stddef.h"
 1294              		.file 50 "/usr/include/x86_64-linux-gnu/bits/types.h"
 1295              		.file 51 "/usr/include/time.h"
 1296              		.file 52 "/usr/include/c++/4.8/bits/functexcept.h"
 1297              		.file 53 "/usr/include/stdio.h"
 1298              		.file 54 "/usr/include/libio.h"
 1299              		.file 55 "/usr/include/wchar.h"
 1300              		.file 56 "/usr/include/x86_64-linux-gnu/bits/wchar2.h"
 1301              		.file 57 "/usr/include/c++/4.8/debug/debug.h"
 1302              		.file 58 "/usr/include/locale.h"
 1303              		.file 59 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/atomic_word.h"
 1304              		.file 60 "/usr/include/stdlib.h"
 1305              		.file 61 "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h"
 1306              		.file 62 "/usr/include/x86_64-linux-gnu/bits/stdlib.h"
 1307              		.file 63 "/usr/include/_G_config.h"
 1308              		.file 64 "/usr/include/x86_64-linux-gnu/bits/stdio.h"
 1309              		.file 65 "/usr/include/wctype.h"
 1310              		.file 66 "/usr/include/x86_64-linux-gnu/c++/4.8/bits/gthr-default.h"
 1311              		.file 67 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h"
 1312              		.section	.debug_info,"",@progbits
 1313              	.Ldebug_info0:
 1314 0000 B78F0000 		.long	0x8fb7
 1315 0004 0400     		.value	0x4
 1316 0006 00000000 		.long	.Ldebug_abbrev0
 1317 000a 08       		.byte	0x8
 1318 000b 01       		.uleb128 0x1
 1319 000c 00000000 		.long	.LASF1096
 1320 0010 04       		.byte	0x4
 1321 0011 00000000 		.long	.LASF1097
 1322 0015 00000000 		.long	.LASF1098
 1323 0019 00000000 		.long	.Ldebug_ranges0+0x660
 1324 001d 00000000 		.quad	0
 1324      00000000 
 1325 0025 00000000 		.long	.Ldebug_line0
 1326 0029 02       		.uleb128 0x2
 1327 002a 08       		.byte	0x8
 1328 002b 04       		.byte	0x4
 1329 002c 00000000 		.long	.LASF0
 1330 0030 02       		.uleb128 0x2
 1331 0031 08       		.byte	0x8
 1332 0032 05       		.byte	0x5
 1333 0033 00000000 		.long	.LASF1
 1334 0037 03       		.uleb128 0x3
 1335 0038 73746400 		.string	"std"
 1336 003c 12       		.byte	0x12
 1337 003d 00       		.byte	0
 1338 003e 56400000 		.long	0x4056
 1339 0042 04       		.uleb128 0x4
 1340 0043 0E       		.byte	0xe
 1341 0044 0D04     		.value	0x40d
 1342 0046 2D490000 		.long	0x492d
 1343 004a 04       		.uleb128 0x4
 1344 004b 0E       		.byte	0xe
 1345 004c 0E04     		.value	0x40e
 1346 004e 22490000 		.long	0x4922
GAS LISTING /tmp/cceISX6N.s 			page 147


 1347 0052 05       		.uleb128 0x5
 1348 0053 00000000 		.long	.LASF2
 1349 0057 01       		.byte	0x1
 1350 0058 0F       		.byte	0xf
 1351 0059 39       		.byte	0x39
 1352 005a A5000000 		.long	0xa5
 1353 005e 06       		.uleb128 0x6
 1354 005f 00000000 		.long	.LASF4
 1355 0063 0F       		.byte	0xf
 1356 0064 3B       		.byte	0x3b
 1357 0065 B84A0000 		.long	0x4ab8
 1358 0069 07       		.uleb128 0x7
 1359 006a 00000000 		.long	.LASF5
 1360 006e 0F       		.byte	0xf
 1361 006f 3C       		.byte	0x3c
 1362 0070 BD4A0000 		.long	0x4abd
 1363 0074 08       		.uleb128 0x8
 1364 0075 00000000 		.long	.LASF6
 1365 0079 0F       		.byte	0xf
 1366 007a 3E       		.byte	0x3e
 1367 007b 00000000 		.long	.LASF8
 1368 007f 69000000 		.long	0x69
 1369 0083 8B000000 		.long	0x8b
 1370 0087 91000000 		.long	0x91
 1371 008b 09       		.uleb128 0x9
 1372 008c C44A0000 		.long	0x4ac4
 1373 0090 00       		.byte	0
 1374 0091 0A       		.uleb128 0xa
 1375 0092 5F547000 		.string	"_Tp"
 1376 0096 BD4A0000 		.long	0x4abd
 1377 009a 0B       		.uleb128 0xb
 1378 009b 5F5F7600 		.string	"__v"
 1379 009f BD4A0000 		.long	0x4abd
 1380 00a3 00       		.byte	0
 1381 00a4 00       		.byte	0
 1382 00a5 0C       		.uleb128 0xc
 1383 00a6 52000000 		.long	0x52
 1384 00aa 05       		.uleb128 0x5
 1385 00ab 00000000 		.long	.LASF3
 1386 00af 01       		.byte	0x1
 1387 00b0 0F       		.byte	0xf
 1388 00b1 39       		.byte	0x39
 1389 00b2 FD000000 		.long	0xfd
 1390 00b6 06       		.uleb128 0x6
 1391 00b7 00000000 		.long	.LASF4
 1392 00bb 0F       		.byte	0xf
 1393 00bc 3B       		.byte	0x3b
 1394 00bd B84A0000 		.long	0x4ab8
 1395 00c1 07       		.uleb128 0x7
 1396 00c2 00000000 		.long	.LASF5
 1397 00c6 0F       		.byte	0xf
 1398 00c7 3C       		.byte	0x3c
 1399 00c8 BD4A0000 		.long	0x4abd
 1400 00cc 08       		.uleb128 0x8
 1401 00cd 00000000 		.long	.LASF7
 1402 00d1 0F       		.byte	0xf
 1403 00d2 3E       		.byte	0x3e
GAS LISTING /tmp/cceISX6N.s 			page 148


 1404 00d3 00000000 		.long	.LASF9
 1405 00d7 C1000000 		.long	0xc1
 1406 00db E3000000 		.long	0xe3
 1407 00df E9000000 		.long	0xe9
 1408 00e3 09       		.uleb128 0x9
 1409 00e4 CA4A0000 		.long	0x4aca
 1410 00e8 00       		.byte	0
 1411 00e9 0A       		.uleb128 0xa
 1412 00ea 5F547000 		.string	"_Tp"
 1413 00ee BD4A0000 		.long	0x4abd
 1414 00f2 0B       		.uleb128 0xb
 1415 00f3 5F5F7600 		.string	"__v"
 1416 00f7 BD4A0000 		.long	0x4abd
 1417 00fb 01       		.byte	0x1
 1418 00fc 00       		.byte	0
 1419 00fd 0C       		.uleb128 0xc
 1420 00fe AA000000 		.long	0xaa
 1421 0102 05       		.uleb128 0x5
 1422 0103 00000000 		.long	.LASF10
 1423 0107 01       		.byte	0x1
 1424 0108 0F       		.byte	0xf
 1425 0109 39       		.byte	0x39
 1426 010a 55010000 		.long	0x155
 1427 010e 06       		.uleb128 0x6
 1428 010f 00000000 		.long	.LASF4
 1429 0113 0F       		.byte	0xf
 1430 0114 3B       		.byte	0x3b
 1431 0115 D74A0000 		.long	0x4ad7
 1432 0119 07       		.uleb128 0x7
 1433 011a 00000000 		.long	.LASF5
 1434 011e 0F       		.byte	0xf
 1435 011f 3C       		.byte	0x3c
 1436 0120 EA480000 		.long	0x48ea
 1437 0124 08       		.uleb128 0x8
 1438 0125 00000000 		.long	.LASF11
 1439 0129 0F       		.byte	0xf
 1440 012a 3E       		.byte	0x3e
 1441 012b 00000000 		.long	.LASF12
 1442 012f 19010000 		.long	0x119
 1443 0133 3B010000 		.long	0x13b
 1444 0137 41010000 		.long	0x141
 1445 013b 09       		.uleb128 0x9
 1446 013c DC4A0000 		.long	0x4adc
 1447 0140 00       		.byte	0
 1448 0141 0A       		.uleb128 0xa
 1449 0142 5F547000 		.string	"_Tp"
 1450 0146 EA480000 		.long	0x48ea
 1451 014a 0B       		.uleb128 0xb
 1452 014b 5F5F7600 		.string	"__v"
 1453 014f EA480000 		.long	0x48ea
 1454 0153 00       		.byte	0
 1455 0154 00       		.byte	0
 1456 0155 0C       		.uleb128 0xc
 1457 0156 02010000 		.long	0x102
 1458 015a 0D       		.uleb128 0xd
 1459 015b 10       		.byte	0x10
 1460 015c 30       		.byte	0x30
GAS LISTING /tmp/cceISX6N.s 			page 149


 1461 015d E24A0000 		.long	0x4ae2
 1462 0161 0D       		.uleb128 0xd
 1463 0162 10       		.byte	0x10
 1464 0163 31       		.byte	0x31
 1465 0164 ED4A0000 		.long	0x4aed
 1466 0168 0D       		.uleb128 0xd
 1467 0169 10       		.byte	0x10
 1468 016a 32       		.byte	0x32
 1469 016b F84A0000 		.long	0x4af8
 1470 016f 0D       		.uleb128 0xd
 1471 0170 10       		.byte	0x10
 1472 0171 33       		.byte	0x33
 1473 0172 034B0000 		.long	0x4b03
 1474 0176 0D       		.uleb128 0xd
 1475 0177 10       		.byte	0x10
 1476 0178 35       		.byte	0x35
 1477 0179 924B0000 		.long	0x4b92
 1478 017d 0D       		.uleb128 0xd
 1479 017e 10       		.byte	0x10
 1480 017f 36       		.byte	0x36
 1481 0180 9D4B0000 		.long	0x4b9d
 1482 0184 0D       		.uleb128 0xd
 1483 0185 10       		.byte	0x10
 1484 0186 37       		.byte	0x37
 1485 0187 A84B0000 		.long	0x4ba8
 1486 018b 0D       		.uleb128 0xd
 1487 018c 10       		.byte	0x10
 1488 018d 38       		.byte	0x38
 1489 018e B34B0000 		.long	0x4bb3
 1490 0192 0D       		.uleb128 0xd
 1491 0193 10       		.byte	0x10
 1492 0194 3A       		.byte	0x3a
 1493 0195 3A4B0000 		.long	0x4b3a
 1494 0199 0D       		.uleb128 0xd
 1495 019a 10       		.byte	0x10
 1496 019b 3B       		.byte	0x3b
 1497 019c 454B0000 		.long	0x4b45
 1498 01a0 0D       		.uleb128 0xd
 1499 01a1 10       		.byte	0x10
 1500 01a2 3C       		.byte	0x3c
 1501 01a3 504B0000 		.long	0x4b50
 1502 01a7 0D       		.uleb128 0xd
 1503 01a8 10       		.byte	0x10
 1504 01a9 3D       		.byte	0x3d
 1505 01aa 5B4B0000 		.long	0x4b5b
 1506 01ae 0D       		.uleb128 0xd
 1507 01af 10       		.byte	0x10
 1508 01b0 3F       		.byte	0x3f
 1509 01b1 004C0000 		.long	0x4c00
 1510 01b5 0D       		.uleb128 0xd
 1511 01b6 10       		.byte	0x10
 1512 01b7 40       		.byte	0x40
 1513 01b8 EA4B0000 		.long	0x4bea
 1514 01bc 0D       		.uleb128 0xd
 1515 01bd 10       		.byte	0x10
 1516 01be 42       		.byte	0x42
 1517 01bf 0E4B0000 		.long	0x4b0e
GAS LISTING /tmp/cceISX6N.s 			page 150


 1518 01c3 0D       		.uleb128 0xd
 1519 01c4 10       		.byte	0x10
 1520 01c5 43       		.byte	0x43
 1521 01c6 194B0000 		.long	0x4b19
 1522 01ca 0D       		.uleb128 0xd
 1523 01cb 10       		.byte	0x10
 1524 01cc 44       		.byte	0x44
 1525 01cd 244B0000 		.long	0x4b24
 1526 01d1 0D       		.uleb128 0xd
 1527 01d2 10       		.byte	0x10
 1528 01d3 45       		.byte	0x45
 1529 01d4 2F4B0000 		.long	0x4b2f
 1530 01d8 0D       		.uleb128 0xd
 1531 01d9 10       		.byte	0x10
 1532 01da 47       		.byte	0x47
 1533 01db BE4B0000 		.long	0x4bbe
 1534 01df 0D       		.uleb128 0xd
 1535 01e0 10       		.byte	0x10
 1536 01e1 48       		.byte	0x48
 1537 01e2 C94B0000 		.long	0x4bc9
 1538 01e6 0D       		.uleb128 0xd
 1539 01e7 10       		.byte	0x10
 1540 01e8 49       		.byte	0x49
 1541 01e9 D44B0000 		.long	0x4bd4
 1542 01ed 0D       		.uleb128 0xd
 1543 01ee 10       		.byte	0x10
 1544 01ef 4A       		.byte	0x4a
 1545 01f0 DF4B0000 		.long	0x4bdf
 1546 01f4 0D       		.uleb128 0xd
 1547 01f5 10       		.byte	0x10
 1548 01f6 4C       		.byte	0x4c
 1549 01f7 664B0000 		.long	0x4b66
 1550 01fb 0D       		.uleb128 0xd
 1551 01fc 10       		.byte	0x10
 1552 01fd 4D       		.byte	0x4d
 1553 01fe 714B0000 		.long	0x4b71
 1554 0202 0D       		.uleb128 0xd
 1555 0203 10       		.byte	0x10
 1556 0204 4E       		.byte	0x4e
 1557 0205 7C4B0000 		.long	0x4b7c
 1558 0209 0D       		.uleb128 0xd
 1559 020a 10       		.byte	0x10
 1560 020b 4F       		.byte	0x4f
 1561 020c 874B0000 		.long	0x4b87
 1562 0210 0D       		.uleb128 0xd
 1563 0211 10       		.byte	0x10
 1564 0212 51       		.byte	0x51
 1565 0213 0B4C0000 		.long	0x4c0b
 1566 0217 0D       		.uleb128 0xd
 1567 0218 10       		.byte	0x10
 1568 0219 52       		.byte	0x52
 1569 021a F54B0000 		.long	0x4bf5
 1570 021e 0D       		.uleb128 0xd
 1571 021f 11       		.byte	0x11
 1572 0220 3C       		.byte	0x3c
 1573 0221 744C0000 		.long	0x4c74
 1574 0225 0D       		.uleb128 0xd
GAS LISTING /tmp/cceISX6N.s 			page 151


 1575 0226 11       		.byte	0x11
 1576 0227 3D       		.byte	0x3d
 1577 0228 7F4C0000 		.long	0x4c7f
 1578 022c 0D       		.uleb128 0xd
 1579 022d 11       		.byte	0x11
 1580 022e 3E       		.byte	0x3e
 1581 022f 8A4C0000 		.long	0x4c8a
 1582 0233 0D       		.uleb128 0xd
 1583 0234 11       		.byte	0x11
 1584 0235 40       		.byte	0x40
 1585 0236 254D0000 		.long	0x4d25
 1586 023a 0D       		.uleb128 0xd
 1587 023b 11       		.byte	0x11
 1588 023c 41       		.byte	0x41
 1589 023d 304D0000 		.long	0x4d30
 1590 0241 0D       		.uleb128 0xd
 1591 0242 11       		.byte	0x11
 1592 0243 42       		.byte	0x42
 1593 0244 4A4D0000 		.long	0x4d4a
 1594 0248 0D       		.uleb128 0xd
 1595 0249 11       		.byte	0x11
 1596 024a 43       		.byte	0x43
 1597 024b 654D0000 		.long	0x4d65
 1598 024f 0D       		.uleb128 0xd
 1599 0250 11       		.byte	0x11
 1600 0251 44       		.byte	0x44
 1601 0252 804D0000 		.long	0x4d80
 1602 0256 0D       		.uleb128 0xd
 1603 0257 11       		.byte	0x11
 1604 0258 45       		.byte	0x45
 1605 0259 A14D0000 		.long	0x4da1
 1606 025d 0D       		.uleb128 0xd
 1607 025e 11       		.byte	0x11
 1608 025f 46       		.byte	0x46
 1609 0260 C24D0000 		.long	0x4dc2
 1610 0264 0D       		.uleb128 0xd
 1611 0265 11       		.byte	0x11
 1612 0266 47       		.byte	0x47
 1613 0267 D74D0000 		.long	0x4dd7
 1614 026b 0D       		.uleb128 0xd
 1615 026c 11       		.byte	0x11
 1616 026d 48       		.byte	0x48
 1617 026e EC4D0000 		.long	0x4dec
 1618 0272 0E       		.uleb128 0xe
 1619 0273 00000000 		.long	.LASF13
 1620 0277 07       		.byte	0x7
 1621 0278 3B       		.byte	0x3b
 1622 0279 C8090000 		.long	0x9c8
 1623 027d 0F       		.uleb128 0xf
 1624 027e 5F563200 		.string	"_V2"
 1625 0282 07       		.byte	0x7
 1626 0283 C402     		.value	0x2c4
 1627 0285 BD020000 		.long	0x2bd
 1628 0289 10       		.uleb128 0x10
 1629 028a 00000000 		.long	.LASF1099
 1630 028e 01       		.byte	0x1
 1631 028f 07       		.byte	0x7
GAS LISTING /tmp/cceISX6N.s 			page 152


 1632 0290 F202     		.value	0x2f2
 1633 0292 11       		.uleb128 0x11
 1634 0293 00000000 		.long	.LASF95
 1635 0297 07       		.byte	0x7
 1636 0298 F902     		.value	0x2f9
 1637 029a B84A0000 		.long	0x4ab8
 1638 029e 01       		.byte	0x1
 1639 029f 12       		.uleb128 0x12
 1640 02a0 00000000 		.long	.LASF14
 1641 02a4 07       		.byte	0x7
 1642 02a5 F702     		.value	0x2f7
 1643 02a7 31050000 		.long	0x531
 1644 02ab 13       		.uleb128 0x13
 1645 02ac 6E6F7700 		.string	"now"
 1646 02b0 07       		.byte	0x7
 1647 02b1 FC02     		.value	0x2fc
 1648 02b3 00000000 		.long	.LASF41
 1649 02b7 9F020000 		.long	0x29f
 1650 02bb 00       		.byte	0
 1651 02bc 00       		.byte	0
 1652 02bd 14       		.uleb128 0x14
 1653 02be 07       		.byte	0x7
 1654 02bf C402     		.value	0x2c4
 1655 02c1 7D020000 		.long	0x27d
 1656 02c5 05       		.uleb128 0x5
 1657 02c6 00000000 		.long	.LASF15
 1658 02ca 08       		.byte	0x8
 1659 02cb 07       		.byte	0x7
 1660 02cc F0       		.byte	0xf0
 1661 02cd 2C050000 		.long	0x52c
 1662 02d1 15       		.uleb128 0x15
 1663 02d2 72657000 		.string	"rep"
 1664 02d6 07       		.byte	0x7
 1665 02d7 F2       		.byte	0xf2
 1666 02d8 30000000 		.long	0x30
 1667 02dc 16       		.uleb128 0x16
 1668 02dd 5F5F7200 		.string	"__r"
 1669 02e1 07       		.byte	0x7
 1670 02e2 7401     		.value	0x174
 1671 02e4 D1020000 		.long	0x2d1
 1672 02e8 00       		.byte	0
 1673 02e9 03       		.byte	0x3
 1674 02ea 17       		.uleb128 0x17
 1675 02eb 00000000 		.long	.LASF16
 1676 02ef 07       		.byte	0x7
 1677 02f0 FB       		.byte	0xfb
 1678 02f1 F9020000 		.long	0x2f9
 1679 02f5 FF020000 		.long	0x2ff
 1680 02f9 09       		.uleb128 0x9
 1681 02fa 264E0000 		.long	0x4e26
 1682 02fe 00       		.byte	0
 1683 02ff 18       		.uleb128 0x18
 1684 0300 00000000 		.long	.LASF16
 1685 0304 07       		.byte	0x7
 1686 0305 0001     		.value	0x100
 1687 0307 0F030000 		.long	0x30f
 1688 030b 1A030000 		.long	0x31a
GAS LISTING /tmp/cceISX6N.s 			page 153


 1689 030f 09       		.uleb128 0x9
 1690 0310 264E0000 		.long	0x4e26
 1691 0314 19       		.uleb128 0x19
 1692 0315 2C4E0000 		.long	0x4e2c
 1693 0319 00       		.byte	0
 1694 031a 18       		.uleb128 0x18
 1695 031b 00000000 		.long	.LASF17
 1696 031f 07       		.byte	0x7
 1697 0320 1001     		.value	0x110
 1698 0322 2A030000 		.long	0x32a
 1699 0326 35030000 		.long	0x335
 1700 032a 09       		.uleb128 0x9
 1701 032b 264E0000 		.long	0x4e26
 1702 032f 09       		.uleb128 0x9
 1703 0330 06490000 		.long	0x4906
 1704 0334 00       		.byte	0
 1705 0335 1A       		.uleb128 0x1a
 1706 0336 00000000 		.long	.LASF18
 1707 033a 07       		.byte	0x7
 1708 033b 1101     		.value	0x111
 1709 033d 00000000 		.long	.LASF20
 1710 0341 324E0000 		.long	0x4e32
 1711 0345 4D030000 		.long	0x34d
 1712 0349 58030000 		.long	0x358
 1713 034d 09       		.uleb128 0x9
 1714 034e 264E0000 		.long	0x4e26
 1715 0352 19       		.uleb128 0x19
 1716 0353 2C4E0000 		.long	0x4e2c
 1717 0357 00       		.byte	0
 1718 0358 1A       		.uleb128 0x1a
 1719 0359 00000000 		.long	.LASF19
 1720 035d 07       		.byte	0x7
 1721 035e 1501     		.value	0x115
 1722 0360 00000000 		.long	.LASF21
 1723 0364 D1020000 		.long	0x2d1
 1724 0368 70030000 		.long	0x370
 1725 036c 76030000 		.long	0x376
 1726 0370 09       		.uleb128 0x9
 1727 0371 384E0000 		.long	0x4e38
 1728 0375 00       		.byte	0
 1729 0376 1A       		.uleb128 0x1a
 1730 0377 00000000 		.long	.LASF22
 1731 037b 07       		.byte	0x7
 1732 037c 1A01     		.value	0x11a
 1733 037e 00000000 		.long	.LASF23
 1734 0382 C5020000 		.long	0x2c5
 1735 0386 8E030000 		.long	0x38e
 1736 038a 94030000 		.long	0x394
 1737 038e 09       		.uleb128 0x9
 1738 038f 384E0000 		.long	0x4e38
 1739 0393 00       		.byte	0
 1740 0394 1A       		.uleb128 0x1a
 1741 0395 00000000 		.long	.LASF24
 1742 0399 07       		.byte	0x7
 1743 039a 1E01     		.value	0x11e
 1744 039c 00000000 		.long	.LASF25
 1745 03a0 C5020000 		.long	0x2c5
GAS LISTING /tmp/cceISX6N.s 			page 154


 1746 03a4 AC030000 		.long	0x3ac
 1747 03a8 B2030000 		.long	0x3b2
 1748 03ac 09       		.uleb128 0x9
 1749 03ad 384E0000 		.long	0x4e38
 1750 03b1 00       		.byte	0
 1751 03b2 1A       		.uleb128 0x1a
 1752 03b3 00000000 		.long	.LASF26
 1753 03b7 07       		.byte	0x7
 1754 03b8 2201     		.value	0x122
 1755 03ba 00000000 		.long	.LASF27
 1756 03be 324E0000 		.long	0x4e32
 1757 03c2 CA030000 		.long	0x3ca
 1758 03c6 D0030000 		.long	0x3d0
 1759 03ca 09       		.uleb128 0x9
 1760 03cb 264E0000 		.long	0x4e26
 1761 03cf 00       		.byte	0
 1762 03d0 1A       		.uleb128 0x1a
 1763 03d1 00000000 		.long	.LASF26
 1764 03d5 07       		.byte	0x7
 1765 03d6 2901     		.value	0x129
 1766 03d8 00000000 		.long	.LASF28
 1767 03dc C5020000 		.long	0x2c5
 1768 03e0 E8030000 		.long	0x3e8
 1769 03e4 F3030000 		.long	0x3f3
 1770 03e8 09       		.uleb128 0x9
 1771 03e9 264E0000 		.long	0x4e26
 1772 03ed 19       		.uleb128 0x19
 1773 03ee 06490000 		.long	0x4906
 1774 03f2 00       		.byte	0
 1775 03f3 1A       		.uleb128 0x1a
 1776 03f4 00000000 		.long	.LASF29
 1777 03f8 07       		.byte	0x7
 1778 03f9 2D01     		.value	0x12d
 1779 03fb 00000000 		.long	.LASF30
 1780 03ff 324E0000 		.long	0x4e32
 1781 0403 0B040000 		.long	0x40b
 1782 0407 11040000 		.long	0x411
 1783 040b 09       		.uleb128 0x9
 1784 040c 264E0000 		.long	0x4e26
 1785 0410 00       		.byte	0
 1786 0411 1A       		.uleb128 0x1a
 1787 0412 00000000 		.long	.LASF29
 1788 0416 07       		.byte	0x7
 1789 0417 3401     		.value	0x134
 1790 0419 00000000 		.long	.LASF31
 1791 041d C5020000 		.long	0x2c5
 1792 0421 29040000 		.long	0x429
 1793 0425 34040000 		.long	0x434
 1794 0429 09       		.uleb128 0x9
 1795 042a 264E0000 		.long	0x4e26
 1796 042e 19       		.uleb128 0x19
 1797 042f 06490000 		.long	0x4906
 1798 0433 00       		.byte	0
 1799 0434 1A       		.uleb128 0x1a
 1800 0435 00000000 		.long	.LASF32
 1801 0439 07       		.byte	0x7
 1802 043a 3801     		.value	0x138
GAS LISTING /tmp/cceISX6N.s 			page 155


 1803 043c 00000000 		.long	.LASF33
 1804 0440 324E0000 		.long	0x4e32
 1805 0444 4C040000 		.long	0x44c
 1806 0448 57040000 		.long	0x457
 1807 044c 09       		.uleb128 0x9
 1808 044d 264E0000 		.long	0x4e26
 1809 0451 19       		.uleb128 0x19
 1810 0452 2C4E0000 		.long	0x4e2c
 1811 0456 00       		.byte	0
 1812 0457 1A       		.uleb128 0x1a
 1813 0458 00000000 		.long	.LASF34
 1814 045c 07       		.byte	0x7
 1815 045d 3F01     		.value	0x13f
 1816 045f 00000000 		.long	.LASF35
 1817 0463 324E0000 		.long	0x4e32
 1818 0467 6F040000 		.long	0x46f
 1819 046b 7A040000 		.long	0x47a
 1820 046f 09       		.uleb128 0x9
 1821 0470 264E0000 		.long	0x4e26
 1822 0474 19       		.uleb128 0x19
 1823 0475 2C4E0000 		.long	0x4e2c
 1824 0479 00       		.byte	0
 1825 047a 1A       		.uleb128 0x1a
 1826 047b 00000000 		.long	.LASF36
 1827 047f 07       		.byte	0x7
 1828 0480 4601     		.value	0x146
 1829 0482 00000000 		.long	.LASF37
 1830 0486 324E0000 		.long	0x4e32
 1831 048a 92040000 		.long	0x492
 1832 048e 9D040000 		.long	0x49d
 1833 0492 09       		.uleb128 0x9
 1834 0493 264E0000 		.long	0x4e26
 1835 0497 19       		.uleb128 0x19
 1836 0498 3E4E0000 		.long	0x4e3e
 1837 049c 00       		.byte	0
 1838 049d 0C       		.uleb128 0xc
 1839 049e D1020000 		.long	0x2d1
 1840 04a2 1A       		.uleb128 0x1a
 1841 04a3 00000000 		.long	.LASF38
 1842 04a7 07       		.byte	0x7
 1843 04a8 4D01     		.value	0x14d
 1844 04aa 00000000 		.long	.LASF39
 1845 04ae 324E0000 		.long	0x4e32
 1846 04b2 BA040000 		.long	0x4ba
 1847 04b6 C5040000 		.long	0x4c5
 1848 04ba 09       		.uleb128 0x9
 1849 04bb 264E0000 		.long	0x4e26
 1850 04bf 19       		.uleb128 0x19
 1851 04c0 3E4E0000 		.long	0x4e3e
 1852 04c4 00       		.byte	0
 1853 04c5 1B       		.uleb128 0x1b
 1854 04c6 00000000 		.long	.LASF40
 1855 04ca 07       		.byte	0x7
 1856 04cb 6801     		.value	0x168
 1857 04cd 00000000 		.long	.LASF70
 1858 04d1 C5020000 		.long	0x2c5
 1859 04d5 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 156


 1860 04d6 6D696E00 		.string	"min"
 1861 04da 07       		.byte	0x7
 1862 04db 6C01     		.value	0x16c
 1863 04dd 00000000 		.long	.LASF42
 1864 04e1 C5020000 		.long	0x2c5
 1865 04e5 13       		.uleb128 0x13
 1866 04e6 6D617800 		.string	"max"
 1867 04ea 07       		.byte	0x7
 1868 04eb 7001     		.value	0x170
 1869 04ed 00000000 		.long	.LASF43
 1870 04f1 C5020000 		.long	0x2c5
 1871 04f5 1C       		.uleb128 0x1c
 1872 04f6 00000000 		.long	.LASF48
 1873 04fa 07       		.byte	0x7
 1874 04fb 0601     		.value	0x106
 1875 04fd 0E050000 		.long	0x50e
 1876 0501 19050000 		.long	0x519
 1877 0505 1D       		.uleb128 0x1d
 1878 0506 00000000 		.long	.LASF44
 1879 050a 30000000 		.long	0x30
 1880 050e 09       		.uleb128 0x9
 1881 050f 264E0000 		.long	0x4e26
 1882 0513 19       		.uleb128 0x19
 1883 0514 7A670000 		.long	0x677a
 1884 0518 00       		.byte	0
 1885 0519 1D       		.uleb128 0x1d
 1886 051a 00000000 		.long	.LASF45
 1887 051e 30000000 		.long	0x30
 1888 0522 1D       		.uleb128 0x1d
 1889 0523 00000000 		.long	.LASF46
 1890 0527 7B0A0000 		.long	0xa7b
 1891 052b 00       		.byte	0
 1892 052c 0C       		.uleb128 0xc
 1893 052d C5020000 		.long	0x2c5
 1894 0531 1E       		.uleb128 0x1e
 1895 0532 00000000 		.long	.LASF47
 1896 0536 08       		.byte	0x8
 1897 0537 07       		.byte	0x7
 1898 0538 2102     		.value	0x221
 1899 053a 25060000 		.long	0x625
 1900 053e 12       		.uleb128 0x12
 1901 053f 00000000 		.long	.LASF16
 1902 0543 07       		.byte	0x7
 1903 0544 2402     		.value	0x224
 1904 0546 C5020000 		.long	0x2c5
 1905 054a 16       		.uleb128 0x16
 1906 054b 5F5F6400 		.string	"__d"
 1907 054f 07       		.byte	0x7
 1908 0550 5302     		.value	0x253
 1909 0552 3E050000 		.long	0x53e
 1910 0556 00       		.byte	0
 1911 0557 03       		.byte	0x3
 1912 0558 18       		.uleb128 0x18
 1913 0559 00000000 		.long	.LASF14
 1914 055d 07       		.byte	0x7
 1915 055e 2802     		.value	0x228
 1916 0560 68050000 		.long	0x568
GAS LISTING /tmp/cceISX6N.s 			page 157


 1917 0564 6E050000 		.long	0x56e
 1918 0568 09       		.uleb128 0x9
 1919 0569 30610000 		.long	0x6130
 1920 056d 00       		.byte	0
 1921 056e 1C       		.uleb128 0x1c
 1922 056f 00000000 		.long	.LASF14
 1923 0573 07       		.byte	0x7
 1924 0574 2B02     		.value	0x22b
 1925 0576 7E050000 		.long	0x57e
 1926 057a 89050000 		.long	0x589
 1927 057e 09       		.uleb128 0x9
 1928 057f 30610000 		.long	0x6130
 1929 0583 19       		.uleb128 0x19
 1930 0584 36610000 		.long	0x6136
 1931 0588 00       		.byte	0
 1932 0589 0C       		.uleb128 0xc
 1933 058a 3E050000 		.long	0x53e
 1934 058e 1A       		.uleb128 0x1a
 1935 058f 00000000 		.long	.LASF49
 1936 0593 07       		.byte	0x7
 1937 0594 3702     		.value	0x237
 1938 0596 00000000 		.long	.LASF50
 1939 059a 3E050000 		.long	0x53e
 1940 059e A6050000 		.long	0x5a6
 1941 05a2 AC050000 		.long	0x5ac
 1942 05a6 09       		.uleb128 0x9
 1943 05a7 3C610000 		.long	0x613c
 1944 05ab 00       		.byte	0
 1945 05ac 1A       		.uleb128 0x1a
 1946 05ad 00000000 		.long	.LASF32
 1947 05b1 07       		.byte	0x7
 1948 05b2 3C02     		.value	0x23c
 1949 05b4 00000000 		.long	.LASF51
 1950 05b8 42610000 		.long	0x6142
 1951 05bc C4050000 		.long	0x5c4
 1952 05c0 CF050000 		.long	0x5cf
 1953 05c4 09       		.uleb128 0x9
 1954 05c5 30610000 		.long	0x6130
 1955 05c9 19       		.uleb128 0x19
 1956 05ca 36610000 		.long	0x6136
 1957 05ce 00       		.byte	0
 1958 05cf 1A       		.uleb128 0x1a
 1959 05d0 00000000 		.long	.LASF34
 1960 05d4 07       		.byte	0x7
 1961 05d5 4302     		.value	0x243
 1962 05d7 00000000 		.long	.LASF52
 1963 05db 42610000 		.long	0x6142
 1964 05df E7050000 		.long	0x5e7
 1965 05e3 F2050000 		.long	0x5f2
 1966 05e7 09       		.uleb128 0x9
 1967 05e8 30610000 		.long	0x6130
 1968 05ec 19       		.uleb128 0x19
 1969 05ed 36610000 		.long	0x6136
 1970 05f1 00       		.byte	0
 1971 05f2 13       		.uleb128 0x13
 1972 05f3 6D696E00 		.string	"min"
 1973 05f7 07       		.byte	0x7
GAS LISTING /tmp/cceISX6N.s 			page 158


 1974 05f8 4B02     		.value	0x24b
 1975 05fa 00000000 		.long	.LASF53
 1976 05fe 31050000 		.long	0x531
 1977 0602 13       		.uleb128 0x13
 1978 0603 6D617800 		.string	"max"
 1979 0607 07       		.byte	0x7
 1980 0608 4F02     		.value	0x24f
 1981 060a 00000000 		.long	.LASF54
 1982 060e 31050000 		.long	0x531
 1983 0612 1D       		.uleb128 0x1d
 1984 0613 00000000 		.long	.LASF55
 1985 0617 89020000 		.long	0x289
 1986 061b 1D       		.uleb128 0x1d
 1987 061c 00000000 		.long	.LASF56
 1988 0620 C5020000 		.long	0x2c5
 1989 0624 00       		.byte	0
 1990 0625 0C       		.uleb128 0xc
 1991 0626 31050000 		.long	0x531
 1992 062a 05       		.uleb128 0x5
 1993 062b 00000000 		.long	.LASF57
 1994 062f 08       		.byte	0x8
 1995 0630 07       		.byte	0x7
 1996 0631 F0       		.byte	0xf0
 1997 0632 BE080000 		.long	0x8be
 1998 0636 15       		.uleb128 0x15
 1999 0637 72657000 		.string	"rep"
 2000 063b 07       		.byte	0x7
 2001 063c F2       		.byte	0xf2
 2002 063d 29000000 		.long	0x29
 2003 0641 16       		.uleb128 0x16
 2004 0642 5F5F7200 		.string	"__r"
 2005 0646 07       		.byte	0x7
 2006 0647 7401     		.value	0x174
 2007 0649 36060000 		.long	0x636
 2008 064d 00       		.byte	0
 2009 064e 03       		.byte	0x3
 2010 064f 17       		.uleb128 0x17
 2011 0650 00000000 		.long	.LASF16
 2012 0654 07       		.byte	0x7
 2013 0655 FB       		.byte	0xfb
 2014 0656 5E060000 		.long	0x65e
 2015 065a 64060000 		.long	0x664
 2016 065e 09       		.uleb128 0x9
 2017 065f 4E610000 		.long	0x614e
 2018 0663 00       		.byte	0
 2019 0664 18       		.uleb128 0x18
 2020 0665 00000000 		.long	.LASF16
 2021 0669 07       		.byte	0x7
 2022 066a 0001     		.value	0x100
 2023 066c 74060000 		.long	0x674
 2024 0670 7F060000 		.long	0x67f
 2025 0674 09       		.uleb128 0x9
 2026 0675 4E610000 		.long	0x614e
 2027 0679 19       		.uleb128 0x19
 2028 067a 54610000 		.long	0x6154
 2029 067e 00       		.byte	0
 2030 067f 18       		.uleb128 0x18
GAS LISTING /tmp/cceISX6N.s 			page 159


 2031 0680 00000000 		.long	.LASF17
 2032 0684 07       		.byte	0x7
 2033 0685 1001     		.value	0x110
 2034 0687 8F060000 		.long	0x68f
 2035 068b 9A060000 		.long	0x69a
 2036 068f 09       		.uleb128 0x9
 2037 0690 4E610000 		.long	0x614e
 2038 0694 09       		.uleb128 0x9
 2039 0695 06490000 		.long	0x4906
 2040 0699 00       		.byte	0
 2041 069a 1A       		.uleb128 0x1a
 2042 069b 00000000 		.long	.LASF18
 2043 069f 07       		.byte	0x7
 2044 06a0 1101     		.value	0x111
 2045 06a2 00000000 		.long	.LASF58
 2046 06a6 5A610000 		.long	0x615a
 2047 06aa B2060000 		.long	0x6b2
 2048 06ae BD060000 		.long	0x6bd
 2049 06b2 09       		.uleb128 0x9
 2050 06b3 4E610000 		.long	0x614e
 2051 06b7 19       		.uleb128 0x19
 2052 06b8 54610000 		.long	0x6154
 2053 06bc 00       		.byte	0
 2054 06bd 1A       		.uleb128 0x1a
 2055 06be 00000000 		.long	.LASF19
 2056 06c2 07       		.byte	0x7
 2057 06c3 1501     		.value	0x115
 2058 06c5 00000000 		.long	.LASF59
 2059 06c9 36060000 		.long	0x636
 2060 06cd D5060000 		.long	0x6d5
 2061 06d1 DB060000 		.long	0x6db
 2062 06d5 09       		.uleb128 0x9
 2063 06d6 60610000 		.long	0x6160
 2064 06da 00       		.byte	0
 2065 06db 1A       		.uleb128 0x1a
 2066 06dc 00000000 		.long	.LASF22
 2067 06e0 07       		.byte	0x7
 2068 06e1 1A01     		.value	0x11a
 2069 06e3 00000000 		.long	.LASF60
 2070 06e7 2A060000 		.long	0x62a
 2071 06eb F3060000 		.long	0x6f3
 2072 06ef F9060000 		.long	0x6f9
 2073 06f3 09       		.uleb128 0x9
 2074 06f4 60610000 		.long	0x6160
 2075 06f8 00       		.byte	0
 2076 06f9 1A       		.uleb128 0x1a
 2077 06fa 00000000 		.long	.LASF24
 2078 06fe 07       		.byte	0x7
 2079 06ff 1E01     		.value	0x11e
 2080 0701 00000000 		.long	.LASF61
 2081 0705 2A060000 		.long	0x62a
 2082 0709 11070000 		.long	0x711
 2083 070d 17070000 		.long	0x717
 2084 0711 09       		.uleb128 0x9
 2085 0712 60610000 		.long	0x6160
 2086 0716 00       		.byte	0
 2087 0717 1A       		.uleb128 0x1a
GAS LISTING /tmp/cceISX6N.s 			page 160


 2088 0718 00000000 		.long	.LASF26
 2089 071c 07       		.byte	0x7
 2090 071d 2201     		.value	0x122
 2091 071f 00000000 		.long	.LASF62
 2092 0723 5A610000 		.long	0x615a
 2093 0727 2F070000 		.long	0x72f
 2094 072b 35070000 		.long	0x735
 2095 072f 09       		.uleb128 0x9
 2096 0730 4E610000 		.long	0x614e
 2097 0734 00       		.byte	0
 2098 0735 1A       		.uleb128 0x1a
 2099 0736 00000000 		.long	.LASF26
 2100 073a 07       		.byte	0x7
 2101 073b 2901     		.value	0x129
 2102 073d 00000000 		.long	.LASF63
 2103 0741 2A060000 		.long	0x62a
 2104 0745 4D070000 		.long	0x74d
 2105 0749 58070000 		.long	0x758
 2106 074d 09       		.uleb128 0x9
 2107 074e 4E610000 		.long	0x614e
 2108 0752 19       		.uleb128 0x19
 2109 0753 06490000 		.long	0x4906
 2110 0757 00       		.byte	0
 2111 0758 1A       		.uleb128 0x1a
 2112 0759 00000000 		.long	.LASF29
 2113 075d 07       		.byte	0x7
 2114 075e 2D01     		.value	0x12d
 2115 0760 00000000 		.long	.LASF64
 2116 0764 5A610000 		.long	0x615a
 2117 0768 70070000 		.long	0x770
 2118 076c 76070000 		.long	0x776
 2119 0770 09       		.uleb128 0x9
 2120 0771 4E610000 		.long	0x614e
 2121 0775 00       		.byte	0
 2122 0776 1A       		.uleb128 0x1a
 2123 0777 00000000 		.long	.LASF29
 2124 077b 07       		.byte	0x7
 2125 077c 3401     		.value	0x134
 2126 077e 00000000 		.long	.LASF65
 2127 0782 2A060000 		.long	0x62a
 2128 0786 8E070000 		.long	0x78e
 2129 078a 99070000 		.long	0x799
 2130 078e 09       		.uleb128 0x9
 2131 078f 4E610000 		.long	0x614e
 2132 0793 19       		.uleb128 0x19
 2133 0794 06490000 		.long	0x4906
 2134 0798 00       		.byte	0
 2135 0799 1A       		.uleb128 0x1a
 2136 079a 00000000 		.long	.LASF32
 2137 079e 07       		.byte	0x7
 2138 079f 3801     		.value	0x138
 2139 07a1 00000000 		.long	.LASF66
 2140 07a5 5A610000 		.long	0x615a
 2141 07a9 B1070000 		.long	0x7b1
 2142 07ad BC070000 		.long	0x7bc
 2143 07b1 09       		.uleb128 0x9
 2144 07b2 4E610000 		.long	0x614e
GAS LISTING /tmp/cceISX6N.s 			page 161


 2145 07b6 19       		.uleb128 0x19
 2146 07b7 54610000 		.long	0x6154
 2147 07bb 00       		.byte	0
 2148 07bc 1A       		.uleb128 0x1a
 2149 07bd 00000000 		.long	.LASF34
 2150 07c1 07       		.byte	0x7
 2151 07c2 3F01     		.value	0x13f
 2152 07c4 00000000 		.long	.LASF67
 2153 07c8 5A610000 		.long	0x615a
 2154 07cc D4070000 		.long	0x7d4
 2155 07d0 DF070000 		.long	0x7df
 2156 07d4 09       		.uleb128 0x9
 2157 07d5 4E610000 		.long	0x614e
 2158 07d9 19       		.uleb128 0x19
 2159 07da 54610000 		.long	0x6154
 2160 07de 00       		.byte	0
 2161 07df 1A       		.uleb128 0x1a
 2162 07e0 00000000 		.long	.LASF36
 2163 07e4 07       		.byte	0x7
 2164 07e5 4601     		.value	0x146
 2165 07e7 00000000 		.long	.LASF68
 2166 07eb 5A610000 		.long	0x615a
 2167 07ef F7070000 		.long	0x7f7
 2168 07f3 02080000 		.long	0x802
 2169 07f7 09       		.uleb128 0x9
 2170 07f8 4E610000 		.long	0x614e
 2171 07fc 19       		.uleb128 0x19
 2172 07fd 66610000 		.long	0x6166
 2173 0801 00       		.byte	0
 2174 0802 0C       		.uleb128 0xc
 2175 0803 36060000 		.long	0x636
 2176 0807 1A       		.uleb128 0x1a
 2177 0808 00000000 		.long	.LASF38
 2178 080c 07       		.byte	0x7
 2179 080d 4D01     		.value	0x14d
 2180 080f 00000000 		.long	.LASF69
 2181 0813 5A610000 		.long	0x615a
 2182 0817 1F080000 		.long	0x81f
 2183 081b 2A080000 		.long	0x82a
 2184 081f 09       		.uleb128 0x9
 2185 0820 4E610000 		.long	0x614e
 2186 0824 19       		.uleb128 0x19
 2187 0825 66610000 		.long	0x6166
 2188 0829 00       		.byte	0
 2189 082a 1B       		.uleb128 0x1b
 2190 082b 00000000 		.long	.LASF40
 2191 082f 07       		.byte	0x7
 2192 0830 6801     		.value	0x168
 2193 0832 00000000 		.long	.LASF71
 2194 0836 2A060000 		.long	0x62a
 2195 083a 13       		.uleb128 0x13
 2196 083b 6D696E00 		.string	"min"
 2197 083f 07       		.byte	0x7
 2198 0840 6C01     		.value	0x16c
 2199 0842 00000000 		.long	.LASF72
 2200 0846 2A060000 		.long	0x62a
 2201 084a 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 162


 2202 084b 6D617800 		.string	"max"
 2203 084f 07       		.byte	0x7
 2204 0850 7001     		.value	0x170
 2205 0852 00000000 		.long	.LASF73
 2206 0856 2A060000 		.long	0x62a
 2207 085a 1C       		.uleb128 0x1c
 2208 085b 00000000 		.long	.LASF74
 2209 085f 07       		.byte	0x7
 2210 0860 0601     		.value	0x106
 2211 0862 73080000 		.long	0x873
 2212 0866 7E080000 		.long	0x87e
 2213 086a 1D       		.uleb128 0x1d
 2214 086b 00000000 		.long	.LASF44
 2215 086f 29000000 		.long	0x29
 2216 0873 09       		.uleb128 0x9
 2217 0874 4E610000 		.long	0x614e
 2218 0878 19       		.uleb128 0x19
 2219 0879 87690000 		.long	0x6987
 2220 087d 00       		.byte	0
 2221 087e 18       		.uleb128 0x18
 2222 087f 00000000 		.long	.LASF75
 2223 0883 07       		.byte	0x7
 2224 0884 0D01     		.value	0x10d
 2225 0886 A0080000 		.long	0x8a0
 2226 088a AB080000 		.long	0x8ab
 2227 088e 1D       		.uleb128 0x1d
 2228 088f 00000000 		.long	.LASF44
 2229 0893 30000000 		.long	0x30
 2230 0897 1D       		.uleb128 0x1d
 2231 0898 00000000 		.long	.LASF76
 2232 089c 7B0A0000 		.long	0xa7b
 2233 08a0 09       		.uleb128 0x9
 2234 08a1 4E610000 		.long	0x614e
 2235 08a5 19       		.uleb128 0x19
 2236 08a6 2C4E0000 		.long	0x4e2c
 2237 08aa 00       		.byte	0
 2238 08ab 1D       		.uleb128 0x1d
 2239 08ac 00000000 		.long	.LASF45
 2240 08b0 29000000 		.long	0x29
 2241 08b4 1D       		.uleb128 0x1d
 2242 08b5 00000000 		.long	.LASF46
 2243 08b9 4B320000 		.long	0x324b
 2244 08bd 00       		.byte	0
 2245 08be 0C       		.uleb128 0xc
 2246 08bf 2A060000 		.long	0x62a
 2247 08c3 05       		.uleb128 0x5
 2248 08c4 00000000 		.long	.LASF77
 2249 08c8 01       		.byte	0x1
 2250 08c9 07       		.byte	0x7
 2251 08ca 9A       		.byte	0x9a
 2252 08cb 26090000 		.long	0x926
 2253 08cf 1F       		.uleb128 0x1f
 2254 08d0 00000000 		.long	.LASF78
 2255 08d4 07       		.byte	0x7
 2256 08d5 9E       		.byte	0x9e
 2257 08d6 2A060000 		.long	0x62a
 2258 08da F6080000 		.long	0x8f6
GAS LISTING /tmp/cceISX6N.s 			page 163


 2259 08de 1D       		.uleb128 0x1d
 2260 08df 00000000 		.long	.LASF45
 2261 08e3 30000000 		.long	0x30
 2262 08e7 1D       		.uleb128 0x1d
 2263 08e8 00000000 		.long	.LASF46
 2264 08ec 7B0A0000 		.long	0xa7b
 2265 08f0 19       		.uleb128 0x19
 2266 08f1 2C4E0000 		.long	0x4e2c
 2267 08f5 00       		.byte	0
 2268 08f6 1D       		.uleb128 0x1d
 2269 08f7 00000000 		.long	.LASF79
 2270 08fb 2A060000 		.long	0x62a
 2271 08ff 0A       		.uleb128 0xa
 2272 0900 5F434600 		.string	"_CF"
 2273 0904 023C0000 		.long	0x3c02
 2274 0908 0A       		.uleb128 0xa
 2275 0909 5F435200 		.string	"_CR"
 2276 090d 29000000 		.long	0x29
 2277 0911 20       		.uleb128 0x20
 2278 0912 00000000 		.long	.LASF80
 2279 0916 BD4A0000 		.long	0x4abd
 2280 091a 01       		.byte	0x1
 2281 091b 20       		.uleb128 0x20
 2282 091c 00000000 		.long	.LASF81
 2283 0920 BD4A0000 		.long	0x4abd
 2284 0924 00       		.byte	0
 2285 0925 00       		.byte	0
 2286 0926 21       		.uleb128 0x21
 2287 0927 00000000 		.long	.LASF82
 2288 092b 07       		.byte	0x7
 2289 092c 8801     		.value	0x188
 2290 092e 470B0000 		.long	0xb47
 2291 0932 65090000 		.long	0x965
 2292 0936 1D       		.uleb128 0x1d
 2293 0937 00000000 		.long	.LASF83
 2294 093b 30000000 		.long	0x30
 2295 093f 1D       		.uleb128 0x1d
 2296 0940 00000000 		.long	.LASF84
 2297 0944 7B0A0000 		.long	0xa7b
 2298 0948 1D       		.uleb128 0x1d
 2299 0949 00000000 		.long	.LASF44
 2300 094d 30000000 		.long	0x30
 2301 0951 1D       		.uleb128 0x1d
 2302 0952 00000000 		.long	.LASF76
 2303 0956 7B0A0000 		.long	0xa7b
 2304 095a 19       		.uleb128 0x19
 2305 095b 2C4E0000 		.long	0x4e2c
 2306 095f 19       		.uleb128 0x19
 2307 0960 2C4E0000 		.long	0x4e2c
 2308 0964 00       		.byte	0
 2309 0965 1F       		.uleb128 0x1f
 2310 0966 00000000 		.long	.LASF85
 2311 096a 07       		.byte	0x7
 2312 096b C1       		.byte	0xc1
 2313 096c 513C0000 		.long	0x3c51
 2314 0970 95090000 		.long	0x995
 2315 0974 1D       		.uleb128 0x1d
GAS LISTING /tmp/cceISX6N.s 			page 164


 2316 0975 00000000 		.long	.LASF79
 2317 0979 2A060000 		.long	0x62a
 2318 097d 1D       		.uleb128 0x1d
 2319 097e 00000000 		.long	.LASF45
 2320 0982 30000000 		.long	0x30
 2321 0986 1D       		.uleb128 0x1d
 2322 0987 00000000 		.long	.LASF46
 2323 098b 7B0A0000 		.long	0xa7b
 2324 098f 19       		.uleb128 0x19
 2325 0990 2C4E0000 		.long	0x4e2c
 2326 0994 00       		.byte	0
 2327 0995 22       		.uleb128 0x22
 2328 0996 00000000 		.long	.LASF498
 2329 099a 07       		.byte	0x7
 2330 099b 8902     		.value	0x289
 2331 099d 470B0000 		.long	0xb47
 2332 09a1 1D       		.uleb128 0x1d
 2333 09a2 00000000 		.long	.LASF55
 2334 09a6 89020000 		.long	0x289
 2335 09aa 1D       		.uleb128 0x1d
 2336 09ab 00000000 		.long	.LASF86
 2337 09af C5020000 		.long	0x2c5
 2338 09b3 1D       		.uleb128 0x1d
 2339 09b4 00000000 		.long	.LASF87
 2340 09b8 C5020000 		.long	0x2c5
 2341 09bc 19       		.uleb128 0x19
 2342 09bd 5D6F0000 		.long	0x6f5d
 2343 09c1 19       		.uleb128 0x19
 2344 09c2 5D6F0000 		.long	0x6f5d
 2345 09c6 00       		.byte	0
 2346 09c7 00       		.byte	0
 2347 09c8 05       		.uleb128 0x5
 2348 09c9 00000000 		.long	.LASF88
 2349 09cd 01       		.byte	0x1
 2350 09ce 0F       		.byte	0xf
 2351 09cf 39       		.byte	0x39
 2352 09d0 1B0A0000 		.long	0xa1b
 2353 09d4 06       		.uleb128 0x6
 2354 09d5 00000000 		.long	.LASF4
 2355 09d9 0F       		.byte	0xf
 2356 09da 3B       		.byte	0x3b
 2357 09db 104E0000 		.long	0x4e10
 2358 09df 07       		.uleb128 0x7
 2359 09e0 00000000 		.long	.LASF5
 2360 09e4 0F       		.byte	0xf
 2361 09e5 3C       		.byte	0x3c
 2362 09e6 30000000 		.long	0x30
 2363 09ea 08       		.uleb128 0x8
 2364 09eb 00000000 		.long	.LASF89
 2365 09ef 0F       		.byte	0xf
 2366 09f0 3E       		.byte	0x3e
 2367 09f1 00000000 		.long	.LASF90
 2368 09f5 DF090000 		.long	0x9df
 2369 09f9 010A0000 		.long	0xa01
 2370 09fd 070A0000 		.long	0xa07
 2371 0a01 09       		.uleb128 0x9
 2372 0a02 154E0000 		.long	0x4e15
GAS LISTING /tmp/cceISX6N.s 			page 165


 2373 0a06 00       		.byte	0
 2374 0a07 0A       		.uleb128 0xa
 2375 0a08 5F547000 		.string	"_Tp"
 2376 0a0c 30000000 		.long	0x30
 2377 0a10 0B       		.uleb128 0xb
 2378 0a11 5F5F7600 		.string	"__v"
 2379 0a15 30000000 		.long	0x30
 2380 0a19 01       		.byte	0x1
 2381 0a1a 00       		.byte	0
 2382 0a1b 0C       		.uleb128 0xc
 2383 0a1c C8090000 		.long	0x9c8
 2384 0a20 05       		.uleb128 0x5
 2385 0a21 00000000 		.long	.LASF91
 2386 0a25 01       		.byte	0x1
 2387 0a26 0F       		.byte	0xf
 2388 0a27 39       		.byte	0x39
 2389 0a28 760A0000 		.long	0xa76
 2390 0a2c 06       		.uleb128 0x6
 2391 0a2d 00000000 		.long	.LASF4
 2392 0a31 0F       		.byte	0xf
 2393 0a32 3B       		.byte	0x3b
 2394 0a33 104E0000 		.long	0x4e10
 2395 0a37 07       		.uleb128 0x7
 2396 0a38 00000000 		.long	.LASF5
 2397 0a3c 0F       		.byte	0xf
 2398 0a3d 3C       		.byte	0x3c
 2399 0a3e 30000000 		.long	0x30
 2400 0a42 08       		.uleb128 0x8
 2401 0a43 00000000 		.long	.LASF92
 2402 0a47 0F       		.byte	0xf
 2403 0a48 3E       		.byte	0x3e
 2404 0a49 00000000 		.long	.LASF93
 2405 0a4d 370A0000 		.long	0xa37
 2406 0a51 590A0000 		.long	0xa59
 2407 0a55 5F0A0000 		.long	0xa5f
 2408 0a59 09       		.uleb128 0x9
 2409 0a5a 1B4E0000 		.long	0x4e1b
 2410 0a5e 00       		.byte	0
 2411 0a5f 0A       		.uleb128 0xa
 2412 0a60 5F547000 		.string	"_Tp"
 2413 0a64 30000000 		.long	0x30
 2414 0a68 23       		.uleb128 0x23
 2415 0a69 5F5F7600 		.string	"__v"
 2416 0a6d 30000000 		.long	0x30
 2417 0a71 00CA9A3B 		.long	0x3b9aca00
 2418 0a75 00       		.byte	0
 2419 0a76 0C       		.uleb128 0xc
 2420 0a77 200A0000 		.long	0xa20
 2421 0a7b 1E       		.uleb128 0x1e
 2422 0a7c 00000000 		.long	.LASF94
 2423 0a80 01       		.byte	0x1
 2424 0a81 13       		.byte	0x13
 2425 0a82 0701     		.value	0x107
 2426 0a84 BD0A0000 		.long	0xabd
 2427 0a88 24       		.uleb128 0x24
 2428 0a89 6E756D00 		.string	"num"
 2429 0a8d 13       		.byte	0x13
GAS LISTING /tmp/cceISX6N.s 			page 166


 2430 0a8e 0E01     		.value	0x10e
 2431 0a90 214E0000 		.long	0x4e21
 2432 0a94 01       		.byte	0x1
 2433 0a95 25       		.uleb128 0x25
 2434 0a96 64656E00 		.string	"den"
 2435 0a9a 13       		.byte	0x13
 2436 0a9b 1101     		.value	0x111
 2437 0a9d 214E0000 		.long	0x4e21
 2438 0aa1 00CA9A3B 		.long	0x3b9aca00
 2439 0aa5 20       		.uleb128 0x20
 2440 0aa6 00000000 		.long	.LASF96
 2441 0aaa 30000000 		.long	0x30
 2442 0aae 01       		.byte	0x1
 2443 0aaf 26       		.uleb128 0x26
 2444 0ab0 00000000 		.long	.LASF97
 2445 0ab4 30000000 		.long	0x30
 2446 0ab8 00CA9A3B 		.long	0x3b9aca00
 2447 0abc 00       		.byte	0
 2448 0abd 1E       		.uleb128 0x1e
 2449 0abe 00000000 		.long	.LASF98
 2450 0ac2 01       		.byte	0x1
 2451 0ac3 13       		.byte	0x13
 2452 0ac4 0701     		.value	0x107
 2453 0ac6 FF0A0000 		.long	0xaff
 2454 0aca 25       		.uleb128 0x25
 2455 0acb 6E756D00 		.string	"num"
 2456 0acf 13       		.byte	0x13
 2457 0ad0 0E01     		.value	0x10e
 2458 0ad2 214E0000 		.long	0x4e21
 2459 0ad6 00CA9A3B 		.long	0x3b9aca00
 2460 0ada 24       		.uleb128 0x24
 2461 0adb 64656E00 		.string	"den"
 2462 0adf 13       		.byte	0x13
 2463 0ae0 1101     		.value	0x111
 2464 0ae2 214E0000 		.long	0x4e21
 2465 0ae6 01       		.byte	0x1
 2466 0ae7 26       		.uleb128 0x26
 2467 0ae8 00000000 		.long	.LASF96
 2468 0aec 30000000 		.long	0x30
 2469 0af0 00CA9A3B 		.long	0x3b9aca00
 2470 0af4 20       		.uleb128 0x20
 2471 0af5 00000000 		.long	.LASF97
 2472 0af9 30000000 		.long	0x30
 2473 0afd 01       		.byte	0x1
 2474 0afe 00       		.byte	0
 2475 0aff 1E       		.uleb128 0x1e
 2476 0b00 00000000 		.long	.LASF99
 2477 0b04 01       		.byte	0x1
 2478 0b05 13       		.byte	0x13
 2479 0b06 0701     		.value	0x107
 2480 0b08 3B0B0000 		.long	0xb3b
 2481 0b0c 24       		.uleb128 0x24
 2482 0b0d 6E756D00 		.string	"num"
 2483 0b11 13       		.byte	0x13
 2484 0b12 0E01     		.value	0x10e
 2485 0b14 214E0000 		.long	0x4e21
 2486 0b18 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 167


 2487 0b19 24       		.uleb128 0x24
 2488 0b1a 64656E00 		.string	"den"
 2489 0b1e 13       		.byte	0x13
 2490 0b1f 1101     		.value	0x111
 2491 0b21 214E0000 		.long	0x4e21
 2492 0b25 01       		.byte	0x1
 2493 0b26 20       		.uleb128 0x20
 2494 0b27 00000000 		.long	.LASF96
 2495 0b2b 30000000 		.long	0x30
 2496 0b2f 01       		.byte	0x1
 2497 0b30 20       		.uleb128 0x20
 2498 0b31 00000000 		.long	.LASF97
 2499 0b35 30000000 		.long	0x30
 2500 0b39 01       		.byte	0x1
 2501 0b3a 00       		.byte	0
 2502 0b3b 05       		.uleb128 0x5
 2503 0b3c 00000000 		.long	.LASF100
 2504 0b40 01       		.byte	0x1
 2505 0b41 0F       		.byte	0xf
 2506 0b42 8E       		.byte	0x8e
 2507 0b43 5C0B0000 		.long	0xb5c
 2508 0b47 07       		.uleb128 0x7
 2509 0b48 00000000 		.long	.LASF101
 2510 0b4c 0F       		.byte	0xf
 2511 0b4d 8F       		.byte	0x8f
 2512 0b4e C5020000 		.long	0x2c5
 2513 0b52 0A       		.uleb128 0xa
 2514 0b53 5F547000 		.string	"_Tp"
 2515 0b57 C5020000 		.long	0x2c5
 2516 0b5b 00       		.byte	0
 2517 0b5c 0D       		.uleb128 0xd
 2518 0b5d 14       		.byte	0x14
 2519 0b5e 40       		.byte	0x40
 2520 0b5f 83500000 		.long	0x5083
 2521 0b63 0D       		.uleb128 0xd
 2522 0b64 14       		.byte	0x14
 2523 0b65 8B       		.byte	0x8b
 2524 0b66 18500000 		.long	0x5018
 2525 0b6a 0D       		.uleb128 0xd
 2526 0b6b 14       		.byte	0x14
 2527 0b6c 8D       		.byte	0x8d
 2528 0b6d 8E500000 		.long	0x508e
 2529 0b71 0D       		.uleb128 0xd
 2530 0b72 14       		.byte	0x14
 2531 0b73 8E       		.byte	0x8e
 2532 0b74 A4500000 		.long	0x50a4
 2533 0b78 0D       		.uleb128 0xd
 2534 0b79 14       		.byte	0x14
 2535 0b7a 8F       		.byte	0x8f
 2536 0b7b C0500000 		.long	0x50c0
 2537 0b7f 0D       		.uleb128 0xd
 2538 0b80 14       		.byte	0x14
 2539 0b81 90       		.byte	0x90
 2540 0b82 E6500000 		.long	0x50e6
 2541 0b86 0D       		.uleb128 0xd
 2542 0b87 14       		.byte	0x14
 2543 0b88 91       		.byte	0x91
GAS LISTING /tmp/cceISX6N.s 			page 168


 2544 0b89 01510000 		.long	0x5101
 2545 0b8d 0D       		.uleb128 0xd
 2546 0b8e 14       		.byte	0x14
 2547 0b8f 92       		.byte	0x92
 2548 0b90 27510000 		.long	0x5127
 2549 0b94 0D       		.uleb128 0xd
 2550 0b95 14       		.byte	0x14
 2551 0b96 93       		.byte	0x93
 2552 0b97 42510000 		.long	0x5142
 2553 0b9b 0D       		.uleb128 0xd
 2554 0b9c 14       		.byte	0x14
 2555 0b9d 94       		.byte	0x94
 2556 0b9e 5E510000 		.long	0x515e
 2557 0ba2 0D       		.uleb128 0xd
 2558 0ba3 14       		.byte	0x14
 2559 0ba4 95       		.byte	0x95
 2560 0ba5 7A510000 		.long	0x517a
 2561 0ba9 0D       		.uleb128 0xd
 2562 0baa 14       		.byte	0x14
 2563 0bab 96       		.byte	0x96
 2564 0bac 90510000 		.long	0x5190
 2565 0bb0 0D       		.uleb128 0xd
 2566 0bb1 14       		.byte	0x14
 2567 0bb2 97       		.byte	0x97
 2568 0bb3 9C510000 		.long	0x519c
 2569 0bb7 0D       		.uleb128 0xd
 2570 0bb8 14       		.byte	0x14
 2571 0bb9 98       		.byte	0x98
 2572 0bba C2510000 		.long	0x51c2
 2573 0bbe 0D       		.uleb128 0xd
 2574 0bbf 14       		.byte	0x14
 2575 0bc0 99       		.byte	0x99
 2576 0bc1 E7510000 		.long	0x51e7
 2577 0bc5 0D       		.uleb128 0xd
 2578 0bc6 14       		.byte	0x14
 2579 0bc7 9A       		.byte	0x9a
 2580 0bc8 08520000 		.long	0x5208
 2581 0bcc 0D       		.uleb128 0xd
 2582 0bcd 14       		.byte	0x14
 2583 0bce 9B       		.byte	0x9b
 2584 0bcf 33520000 		.long	0x5233
 2585 0bd3 0D       		.uleb128 0xd
 2586 0bd4 14       		.byte	0x14
 2587 0bd5 9C       		.byte	0x9c
 2588 0bd6 4E520000 		.long	0x524e
 2589 0bda 0D       		.uleb128 0xd
 2590 0bdb 14       		.byte	0x14
 2591 0bdc 9E       		.byte	0x9e
 2592 0bdd 64520000 		.long	0x5264
 2593 0be1 0D       		.uleb128 0xd
 2594 0be2 14       		.byte	0x14
 2595 0be3 A0       		.byte	0xa0
 2596 0be4 85520000 		.long	0x5285
 2597 0be8 0D       		.uleb128 0xd
 2598 0be9 14       		.byte	0x14
 2599 0bea A1       		.byte	0xa1
 2600 0beb A1520000 		.long	0x52a1
GAS LISTING /tmp/cceISX6N.s 			page 169


 2601 0bef 0D       		.uleb128 0xd
 2602 0bf0 14       		.byte	0x14
 2603 0bf1 A2       		.byte	0xa2
 2604 0bf2 BC520000 		.long	0x52bc
 2605 0bf6 0D       		.uleb128 0xd
 2606 0bf7 14       		.byte	0x14
 2607 0bf8 A4       		.byte	0xa4
 2608 0bf9 E2520000 		.long	0x52e2
 2609 0bfd 0D       		.uleb128 0xd
 2610 0bfe 14       		.byte	0x14
 2611 0bff A7       		.byte	0xa7
 2612 0c00 02530000 		.long	0x5302
 2613 0c04 0D       		.uleb128 0xd
 2614 0c05 14       		.byte	0x14
 2615 0c06 AA       		.byte	0xaa
 2616 0c07 27530000 		.long	0x5327
 2617 0c0b 0D       		.uleb128 0xd
 2618 0c0c 14       		.byte	0x14
 2619 0c0d AC       		.byte	0xac
 2620 0c0e 47530000 		.long	0x5347
 2621 0c12 0D       		.uleb128 0xd
 2622 0c13 14       		.byte	0x14
 2623 0c14 AE       		.byte	0xae
 2624 0c15 62530000 		.long	0x5362
 2625 0c19 0D       		.uleb128 0xd
 2626 0c1a 14       		.byte	0x14
 2627 0c1b B0       		.byte	0xb0
 2628 0c1c 7D530000 		.long	0x537d
 2629 0c20 0D       		.uleb128 0xd
 2630 0c21 14       		.byte	0x14
 2631 0c22 B1       		.byte	0xb1
 2632 0c23 9D530000 		.long	0x539d
 2633 0c27 0D       		.uleb128 0xd
 2634 0c28 14       		.byte	0x14
 2635 0c29 B2       		.byte	0xb2
 2636 0c2a B7530000 		.long	0x53b7
 2637 0c2e 0D       		.uleb128 0xd
 2638 0c2f 14       		.byte	0x14
 2639 0c30 B3       		.byte	0xb3
 2640 0c31 D1530000 		.long	0x53d1
 2641 0c35 0D       		.uleb128 0xd
 2642 0c36 14       		.byte	0x14
 2643 0c37 B4       		.byte	0xb4
 2644 0c38 EB530000 		.long	0x53eb
 2645 0c3c 0D       		.uleb128 0xd
 2646 0c3d 14       		.byte	0x14
 2647 0c3e B5       		.byte	0xb5
 2648 0c3f 05540000 		.long	0x5405
 2649 0c43 0D       		.uleb128 0xd
 2650 0c44 14       		.byte	0x14
 2651 0c45 B6       		.byte	0xb6
 2652 0c46 1F540000 		.long	0x541f
 2653 0c4a 0D       		.uleb128 0xd
 2654 0c4b 14       		.byte	0x14
 2655 0c4c B7       		.byte	0xb7
 2656 0c4d 44540000 		.long	0x5444
 2657 0c51 0D       		.uleb128 0xd
GAS LISTING /tmp/cceISX6N.s 			page 170


 2658 0c52 14       		.byte	0x14
 2659 0c53 B8       		.byte	0xb8
 2660 0c54 5A540000 		.long	0x545a
 2661 0c58 0D       		.uleb128 0xd
 2662 0c59 14       		.byte	0x14
 2663 0c5a B9       		.byte	0xb9
 2664 0c5b 7A540000 		.long	0x547a
 2665 0c5f 0D       		.uleb128 0xd
 2666 0c60 14       		.byte	0x14
 2667 0c61 BA       		.byte	0xba
 2668 0c62 99540000 		.long	0x5499
 2669 0c66 0D       		.uleb128 0xd
 2670 0c67 14       		.byte	0x14
 2671 0c68 BB       		.byte	0xbb
 2672 0c69 B8540000 		.long	0x54b8
 2673 0c6d 0D       		.uleb128 0xd
 2674 0c6e 14       		.byte	0x14
 2675 0c6f BC       		.byte	0xbc
 2676 0c70 E3540000 		.long	0x54e3
 2677 0c74 0D       		.uleb128 0xd
 2678 0c75 14       		.byte	0x14
 2679 0c76 BD       		.byte	0xbd
 2680 0c77 FE540000 		.long	0x54fe
 2681 0c7b 0D       		.uleb128 0xd
 2682 0c7c 14       		.byte	0x14
 2683 0c7d BF       		.byte	0xbf
 2684 0c7e 1F550000 		.long	0x551f
 2685 0c82 0D       		.uleb128 0xd
 2686 0c83 14       		.byte	0x14
 2687 0c84 C1       		.byte	0xc1
 2688 0c85 3A550000 		.long	0x553a
 2689 0c89 0D       		.uleb128 0xd
 2690 0c8a 14       		.byte	0x14
 2691 0c8b C2       		.byte	0xc2
 2692 0c8c 5A550000 		.long	0x555a
 2693 0c90 0D       		.uleb128 0xd
 2694 0c91 14       		.byte	0x14
 2695 0c92 C3       		.byte	0xc3
 2696 0c93 7A550000 		.long	0x557a
 2697 0c97 0D       		.uleb128 0xd
 2698 0c98 14       		.byte	0x14
 2699 0c99 C4       		.byte	0xc4
 2700 0c9a 9A550000 		.long	0x559a
 2701 0c9e 0D       		.uleb128 0xd
 2702 0c9f 14       		.byte	0x14
 2703 0ca0 C5       		.byte	0xc5
 2704 0ca1 B9550000 		.long	0x55b9
 2705 0ca5 0D       		.uleb128 0xd
 2706 0ca6 14       		.byte	0x14
 2707 0ca7 C6       		.byte	0xc6
 2708 0ca8 CF550000 		.long	0x55cf
 2709 0cac 0D       		.uleb128 0xd
 2710 0cad 14       		.byte	0x14
 2711 0cae C7       		.byte	0xc7
 2712 0caf EF550000 		.long	0x55ef
 2713 0cb3 0D       		.uleb128 0xd
 2714 0cb4 14       		.byte	0x14
GAS LISTING /tmp/cceISX6N.s 			page 171


 2715 0cb5 C8       		.byte	0xc8
 2716 0cb6 0E560000 		.long	0x560e
 2717 0cba 0D       		.uleb128 0xd
 2718 0cbb 14       		.byte	0x14
 2719 0cbc C9       		.byte	0xc9
 2720 0cbd 2D560000 		.long	0x562d
 2721 0cc1 0D       		.uleb128 0xd
 2722 0cc2 14       		.byte	0x14
 2723 0cc3 CA       		.byte	0xca
 2724 0cc4 4C560000 		.long	0x564c
 2725 0cc8 0D       		.uleb128 0xd
 2726 0cc9 14       		.byte	0x14
 2727 0cca CB       		.byte	0xcb
 2728 0ccb 63560000 		.long	0x5663
 2729 0ccf 0D       		.uleb128 0xd
 2730 0cd0 14       		.byte	0x14
 2731 0cd1 CC       		.byte	0xcc
 2732 0cd2 7A560000 		.long	0x567a
 2733 0cd6 0D       		.uleb128 0xd
 2734 0cd7 14       		.byte	0x14
 2735 0cd8 CD       		.byte	0xcd
 2736 0cd9 98560000 		.long	0x5698
 2737 0cdd 0D       		.uleb128 0xd
 2738 0cde 14       		.byte	0x14
 2739 0cdf CE       		.byte	0xce
 2740 0ce0 B7560000 		.long	0x56b7
 2741 0ce4 0D       		.uleb128 0xd
 2742 0ce5 14       		.byte	0x14
 2743 0ce6 CF       		.byte	0xcf
 2744 0ce7 D5560000 		.long	0x56d5
 2745 0ceb 0D       		.uleb128 0xd
 2746 0cec 14       		.byte	0x14
 2747 0ced D0       		.byte	0xd0
 2748 0cee F4560000 		.long	0x56f4
 2749 0cf2 04       		.uleb128 0x4
 2750 0cf3 14       		.byte	0x14
 2751 0cf4 0801     		.value	0x108
 2752 0cf6 18570000 		.long	0x5718
 2753 0cfa 04       		.uleb128 0x4
 2754 0cfb 14       		.byte	0x14
 2755 0cfc 0901     		.value	0x109
 2756 0cfe 33570000 		.long	0x5733
 2757 0d02 04       		.uleb128 0x4
 2758 0d03 14       		.byte	0x14
 2759 0d04 0A01     		.value	0x10a
 2760 0d06 53570000 		.long	0x5753
 2761 0d0a 04       		.uleb128 0x4
 2762 0d0b 14       		.byte	0x14
 2763 0d0c 1801     		.value	0x118
 2764 0d0e 1F550000 		.long	0x551f
 2765 0d12 04       		.uleb128 0x4
 2766 0d13 14       		.byte	0x14
 2767 0d14 1B01     		.value	0x11b
 2768 0d16 E2520000 		.long	0x52e2
 2769 0d1a 04       		.uleb128 0x4
 2770 0d1b 14       		.byte	0x14
 2771 0d1c 1E01     		.value	0x11e
GAS LISTING /tmp/cceISX6N.s 			page 172


 2772 0d1e 27530000 		.long	0x5327
 2773 0d22 04       		.uleb128 0x4
 2774 0d23 14       		.byte	0x14
 2775 0d24 2101     		.value	0x121
 2776 0d26 62530000 		.long	0x5362
 2777 0d2a 04       		.uleb128 0x4
 2778 0d2b 14       		.byte	0x14
 2779 0d2c 2501     		.value	0x125
 2780 0d2e 18570000 		.long	0x5718
 2781 0d32 04       		.uleb128 0x4
 2782 0d33 14       		.byte	0x14
 2783 0d34 2601     		.value	0x126
 2784 0d36 33570000 		.long	0x5733
 2785 0d3a 04       		.uleb128 0x4
 2786 0d3b 14       		.byte	0x14
 2787 0d3c 2701     		.value	0x127
 2788 0d3e 53570000 		.long	0x5753
 2789 0d42 0E       		.uleb128 0xe
 2790 0d43 00000000 		.long	.LASF102
 2791 0d47 15       		.byte	0x15
 2792 0d48 36       		.byte	0x36
 2793 0d49 F40E0000 		.long	0xef4
 2794 0d4d 27       		.uleb128 0x27
 2795 0d4e 00000000 		.long	.LASF103
 2796 0d52 08       		.byte	0x8
 2797 0d53 15       		.byte	0x15
 2798 0d54 4B       		.byte	0x4b
 2799 0d55 EE0E0000 		.long	0xeee
 2800 0d59 28       		.uleb128 0x28
 2801 0d5a 00000000 		.long	.LASF155
 2802 0d5e 15       		.byte	0x15
 2803 0d5f 4D       		.byte	0x4d
 2804 0d60 724C0000 		.long	0x4c72
 2805 0d64 00       		.byte	0
 2806 0d65 29       		.uleb128 0x29
 2807 0d66 00000000 		.long	.LASF103
 2808 0d6a 15       		.byte	0x15
 2809 0d6b 4F       		.byte	0x4f
 2810 0d6c 740D0000 		.long	0xd74
 2811 0d70 7F0D0000 		.long	0xd7f
 2812 0d74 09       		.uleb128 0x9
 2813 0d75 73570000 		.long	0x5773
 2814 0d79 19       		.uleb128 0x19
 2815 0d7a 724C0000 		.long	0x4c72
 2816 0d7e 00       		.byte	0
 2817 0d7f 2A       		.uleb128 0x2a
 2818 0d80 00000000 		.long	.LASF104
 2819 0d84 15       		.byte	0x15
 2820 0d85 51       		.byte	0x51
 2821 0d86 00000000 		.long	.LASF106
 2822 0d8a 920D0000 		.long	0xd92
 2823 0d8e 980D0000 		.long	0xd98
 2824 0d92 09       		.uleb128 0x9
 2825 0d93 73570000 		.long	0x5773
 2826 0d97 00       		.byte	0
 2827 0d98 2A       		.uleb128 0x2a
 2828 0d99 00000000 		.long	.LASF105
GAS LISTING /tmp/cceISX6N.s 			page 173


 2829 0d9d 15       		.byte	0x15
 2830 0d9e 52       		.byte	0x52
 2831 0d9f 00000000 		.long	.LASF107
 2832 0da3 AB0D0000 		.long	0xdab
 2833 0da7 B10D0000 		.long	0xdb1
 2834 0dab 09       		.uleb128 0x9
 2835 0dac 73570000 		.long	0x5773
 2836 0db0 00       		.byte	0
 2837 0db1 08       		.uleb128 0x8
 2838 0db2 00000000 		.long	.LASF108
 2839 0db6 15       		.byte	0x15
 2840 0db7 54       		.byte	0x54
 2841 0db8 00000000 		.long	.LASF109
 2842 0dbc 724C0000 		.long	0x4c72
 2843 0dc0 C80D0000 		.long	0xdc8
 2844 0dc4 CE0D0000 		.long	0xdce
 2845 0dc8 09       		.uleb128 0x9
 2846 0dc9 79570000 		.long	0x5779
 2847 0dcd 00       		.byte	0
 2848 0dce 2B       		.uleb128 0x2b
 2849 0dcf 00000000 		.long	.LASF103
 2850 0dd3 15       		.byte	0x15
 2851 0dd4 5A       		.byte	0x5a
 2852 0dd5 01       		.byte	0x1
 2853 0dd6 DE0D0000 		.long	0xdde
 2854 0dda E40D0000 		.long	0xde4
 2855 0dde 09       		.uleb128 0x9
 2856 0ddf 73570000 		.long	0x5773
 2857 0de3 00       		.byte	0
 2858 0de4 2B       		.uleb128 0x2b
 2859 0de5 00000000 		.long	.LASF103
 2860 0de9 15       		.byte	0x15
 2861 0dea 5C       		.byte	0x5c
 2862 0deb 01       		.byte	0x1
 2863 0dec F40D0000 		.long	0xdf4
 2864 0df0 FF0D0000 		.long	0xdff
 2865 0df4 09       		.uleb128 0x9
 2866 0df5 73570000 		.long	0x5773
 2867 0df9 19       		.uleb128 0x19
 2868 0dfa 7F570000 		.long	0x577f
 2869 0dfe 00       		.byte	0
 2870 0dff 2B       		.uleb128 0x2b
 2871 0e00 00000000 		.long	.LASF103
 2872 0e04 15       		.byte	0x15
 2873 0e05 5F       		.byte	0x5f
 2874 0e06 01       		.byte	0x1
 2875 0e07 0F0E0000 		.long	0xe0f
 2876 0e0b 1A0E0000 		.long	0xe1a
 2877 0e0f 09       		.uleb128 0x9
 2878 0e10 73570000 		.long	0x5773
 2879 0e14 19       		.uleb128 0x19
 2880 0e15 FB0E0000 		.long	0xefb
 2881 0e19 00       		.byte	0
 2882 0e1a 2B       		.uleb128 0x2b
 2883 0e1b 00000000 		.long	.LASF103
 2884 0e1f 15       		.byte	0x15
 2885 0e20 63       		.byte	0x63
GAS LISTING /tmp/cceISX6N.s 			page 174


 2886 0e21 01       		.byte	0x1
 2887 0e22 2A0E0000 		.long	0xe2a
 2888 0e26 350E0000 		.long	0xe35
 2889 0e2a 09       		.uleb128 0x9
 2890 0e2b 73570000 		.long	0x5773
 2891 0e2f 19       		.uleb128 0x19
 2892 0e30 8A570000 		.long	0x578a
 2893 0e34 00       		.byte	0
 2894 0e35 2C       		.uleb128 0x2c
 2895 0e36 00000000 		.long	.LASF18
 2896 0e3a 15       		.byte	0x15
 2897 0e3b 70       		.byte	0x70
 2898 0e3c 00000000 		.long	.LASF110
 2899 0e40 90570000 		.long	0x5790
 2900 0e44 01       		.byte	0x1
 2901 0e45 4D0E0000 		.long	0xe4d
 2902 0e49 580E0000 		.long	0xe58
 2903 0e4d 09       		.uleb128 0x9
 2904 0e4e 73570000 		.long	0x5773
 2905 0e52 19       		.uleb128 0x19
 2906 0e53 7F570000 		.long	0x577f
 2907 0e57 00       		.byte	0
 2908 0e58 2C       		.uleb128 0x2c
 2909 0e59 00000000 		.long	.LASF18
 2910 0e5d 15       		.byte	0x15
 2911 0e5e 74       		.byte	0x74
 2912 0e5f 00000000 		.long	.LASF111
 2913 0e63 90570000 		.long	0x5790
 2914 0e67 01       		.byte	0x1
 2915 0e68 700E0000 		.long	0xe70
 2916 0e6c 7B0E0000 		.long	0xe7b
 2917 0e70 09       		.uleb128 0x9
 2918 0e71 73570000 		.long	0x5773
 2919 0e75 19       		.uleb128 0x19
 2920 0e76 8A570000 		.long	0x578a
 2921 0e7a 00       		.byte	0
 2922 0e7b 2B       		.uleb128 0x2b
 2923 0e7c 00000000 		.long	.LASF112
 2924 0e80 15       		.byte	0x15
 2925 0e81 7B       		.byte	0x7b
 2926 0e82 01       		.byte	0x1
 2927 0e83 8B0E0000 		.long	0xe8b
 2928 0e87 960E0000 		.long	0xe96
 2929 0e8b 09       		.uleb128 0x9
 2930 0e8c 73570000 		.long	0x5773
 2931 0e90 09       		.uleb128 0x9
 2932 0e91 06490000 		.long	0x4906
 2933 0e95 00       		.byte	0
 2934 0e96 2D       		.uleb128 0x2d
 2935 0e97 00000000 		.long	.LASF113
 2936 0e9b 15       		.byte	0x15
 2937 0e9c 7E       		.byte	0x7e
 2938 0e9d 00000000 		.long	.LASF114
 2939 0ea1 01       		.byte	0x1
 2940 0ea2 AA0E0000 		.long	0xeaa
 2941 0ea6 B50E0000 		.long	0xeb5
 2942 0eaa 09       		.uleb128 0x9
GAS LISTING /tmp/cceISX6N.s 			page 175


 2943 0eab 73570000 		.long	0x5773
 2944 0eaf 19       		.uleb128 0x19
 2945 0eb0 90570000 		.long	0x5790
 2946 0eb4 00       		.byte	0
 2947 0eb5 2C       		.uleb128 0x2c
 2948 0eb6 00000000 		.long	.LASF115
 2949 0eba 15       		.byte	0x15
 2950 0ebb 8A       		.byte	0x8a
 2951 0ebc 00000000 		.long	.LASF116
 2952 0ec0 BD4A0000 		.long	0x4abd
 2953 0ec4 01       		.byte	0x1
 2954 0ec5 CD0E0000 		.long	0xecd
 2955 0ec9 D30E0000 		.long	0xed3
 2956 0ecd 09       		.uleb128 0x9
 2957 0ece 79570000 		.long	0x5779
 2958 0ed2 00       		.byte	0
 2959 0ed3 2E       		.uleb128 0x2e
 2960 0ed4 00000000 		.long	.LASF117
 2961 0ed8 15       		.byte	0x15
 2962 0ed9 93       		.byte	0x93
 2963 0eda 00000000 		.long	.LASF118
 2964 0ede 96570000 		.long	0x5796
 2965 0ee2 01       		.byte	0x1
 2966 0ee3 E70E0000 		.long	0xee7
 2967 0ee7 09       		.uleb128 0x9
 2968 0ee8 79570000 		.long	0x5779
 2969 0eec 00       		.byte	0
 2970 0eed 00       		.byte	0
 2971 0eee 0C       		.uleb128 0xc
 2972 0eef 4D0D0000 		.long	0xd4d
 2973 0ef3 00       		.byte	0
 2974 0ef4 0D       		.uleb128 0xd
 2975 0ef5 15       		.byte	0x15
 2976 0ef6 3A       		.byte	0x3a
 2977 0ef7 4D0D0000 		.long	0xd4d
 2978 0efb 07       		.uleb128 0x7
 2979 0efc 00000000 		.long	.LASF119
 2980 0f00 16       		.byte	0x16
 2981 0f01 BE       		.byte	0xbe
 2982 0f02 85570000 		.long	0x5785
 2983 0f06 2F       		.uleb128 0x2f
 2984 0f07 00000000 		.long	.LASF395
 2985 0f0b 0C       		.uleb128 0xc
 2986 0f0c 060F0000 		.long	0xf06
 2987 0f10 30       		.uleb128 0x30
 2988 0f11 00000000 		.long	.LASF493
 2989 0f15 01       		.byte	0x1
 2990 0f16 21       		.byte	0x21
 2991 0f17 4C       		.byte	0x4c
 2992 0f18 31       		.uleb128 0x31
 2993 0f19 00000000 		.long	.LASF1100
 2994 0f1d 39       		.byte	0x39
 2995 0f1e 30       		.byte	0x30
 2996 0f1f 05       		.uleb128 0x5
 2997 0f20 00000000 		.long	.LASF120
 2998 0f24 01       		.byte	0x1
 2999 0f25 17       		.byte	0x17
GAS LISTING /tmp/cceISX6N.s 			page 176


 3000 0f26 E9       		.byte	0xe9
 3001 0f27 E6100000 		.long	0x10e6
 3002 0f2b 07       		.uleb128 0x7
 3003 0f2c 00000000 		.long	.LASF121
 3004 0f30 17       		.byte	0x17
 3005 0f31 EB       		.byte	0xeb
 3006 0f32 3E490000 		.long	0x493e
 3007 0f36 07       		.uleb128 0x7
 3008 0f37 00000000 		.long	.LASF122
 3009 0f3b 17       		.byte	0x17
 3010 0f3c EC       		.byte	0xec
 3011 0f3d 06490000 		.long	0x4906
 3012 0f41 32       		.uleb128 0x32
 3013 0f42 00000000 		.long	.LASF123
 3014 0f46 17       		.byte	0x17
 3015 0f47 F2       		.byte	0xf2
 3016 0f48 00000000 		.long	.LASF1101
 3017 0f4c 5B0F0000 		.long	0xf5b
 3018 0f50 19       		.uleb128 0x19
 3019 0f51 B0570000 		.long	0x57b0
 3020 0f55 19       		.uleb128 0x19
 3021 0f56 B6570000 		.long	0x57b6
 3022 0f5a 00       		.byte	0
 3023 0f5b 0C       		.uleb128 0xc
 3024 0f5c 2B0F0000 		.long	0xf2b
 3025 0f60 33       		.uleb128 0x33
 3026 0f61 657100   		.string	"eq"
 3027 0f64 17       		.byte	0x17
 3028 0f65 F6       		.byte	0xf6
 3029 0f66 00000000 		.long	.LASF124
 3030 0f6a BD4A0000 		.long	0x4abd
 3031 0f6e 7D0F0000 		.long	0xf7d
 3032 0f72 19       		.uleb128 0x19
 3033 0f73 B6570000 		.long	0x57b6
 3034 0f77 19       		.uleb128 0x19
 3035 0f78 B6570000 		.long	0x57b6
 3036 0f7c 00       		.byte	0
 3037 0f7d 33       		.uleb128 0x33
 3038 0f7e 6C7400   		.string	"lt"
 3039 0f81 17       		.byte	0x17
 3040 0f82 FA       		.byte	0xfa
 3041 0f83 00000000 		.long	.LASF125
 3042 0f87 BD4A0000 		.long	0x4abd
 3043 0f8b 9A0F0000 		.long	0xf9a
 3044 0f8f 19       		.uleb128 0x19
 3045 0f90 B6570000 		.long	0x57b6
 3046 0f94 19       		.uleb128 0x19
 3047 0f95 B6570000 		.long	0x57b6
 3048 0f99 00       		.byte	0
 3049 0f9a 34       		.uleb128 0x34
 3050 0f9b 00000000 		.long	.LASF126
 3051 0f9f 17       		.byte	0x17
 3052 0fa0 FE       		.byte	0xfe
 3053 0fa1 00000000 		.long	.LASF127
 3054 0fa5 06490000 		.long	0x4906
 3055 0fa9 BD0F0000 		.long	0xfbd
 3056 0fad 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 177


 3057 0fae BC570000 		.long	0x57bc
 3058 0fb2 19       		.uleb128 0x19
 3059 0fb3 BC570000 		.long	0x57bc
 3060 0fb7 19       		.uleb128 0x19
 3061 0fb8 E6100000 		.long	0x10e6
 3062 0fbc 00       		.byte	0
 3063 0fbd 35       		.uleb128 0x35
 3064 0fbe 00000000 		.long	.LASF128
 3065 0fc2 17       		.byte	0x17
 3066 0fc3 0201     		.value	0x102
 3067 0fc5 00000000 		.long	.LASF130
 3068 0fc9 E6100000 		.long	0x10e6
 3069 0fcd D70F0000 		.long	0xfd7
 3070 0fd1 19       		.uleb128 0x19
 3071 0fd2 BC570000 		.long	0x57bc
 3072 0fd6 00       		.byte	0
 3073 0fd7 35       		.uleb128 0x35
 3074 0fd8 00000000 		.long	.LASF129
 3075 0fdc 17       		.byte	0x17
 3076 0fdd 0601     		.value	0x106
 3077 0fdf 00000000 		.long	.LASF131
 3078 0fe3 BC570000 		.long	0x57bc
 3079 0fe7 FB0F0000 		.long	0xffb
 3080 0feb 19       		.uleb128 0x19
 3081 0fec BC570000 		.long	0x57bc
 3082 0ff0 19       		.uleb128 0x19
 3083 0ff1 E6100000 		.long	0x10e6
 3084 0ff5 19       		.uleb128 0x19
 3085 0ff6 B6570000 		.long	0x57b6
 3086 0ffa 00       		.byte	0
 3087 0ffb 35       		.uleb128 0x35
 3088 0ffc 00000000 		.long	.LASF132
 3089 1000 17       		.byte	0x17
 3090 1001 0A01     		.value	0x10a
 3091 1003 00000000 		.long	.LASF133
 3092 1007 C2570000 		.long	0x57c2
 3093 100b 1F100000 		.long	0x101f
 3094 100f 19       		.uleb128 0x19
 3095 1010 C2570000 		.long	0x57c2
 3096 1014 19       		.uleb128 0x19
 3097 1015 BC570000 		.long	0x57bc
 3098 1019 19       		.uleb128 0x19
 3099 101a E6100000 		.long	0x10e6
 3100 101e 00       		.byte	0
 3101 101f 35       		.uleb128 0x35
 3102 1020 00000000 		.long	.LASF134
 3103 1024 17       		.byte	0x17
 3104 1025 0E01     		.value	0x10e
 3105 1027 00000000 		.long	.LASF135
 3106 102b C2570000 		.long	0x57c2
 3107 102f 43100000 		.long	0x1043
 3108 1033 19       		.uleb128 0x19
 3109 1034 C2570000 		.long	0x57c2
 3110 1038 19       		.uleb128 0x19
 3111 1039 BC570000 		.long	0x57bc
 3112 103d 19       		.uleb128 0x19
 3113 103e E6100000 		.long	0x10e6
GAS LISTING /tmp/cceISX6N.s 			page 178


 3114 1042 00       		.byte	0
 3115 1043 35       		.uleb128 0x35
 3116 1044 00000000 		.long	.LASF123
 3117 1048 17       		.byte	0x17
 3118 1049 1201     		.value	0x112
 3119 104b 00000000 		.long	.LASF136
 3120 104f C2570000 		.long	0x57c2
 3121 1053 67100000 		.long	0x1067
 3122 1057 19       		.uleb128 0x19
 3123 1058 C2570000 		.long	0x57c2
 3124 105c 19       		.uleb128 0x19
 3125 105d E6100000 		.long	0x10e6
 3126 1061 19       		.uleb128 0x19
 3127 1062 2B0F0000 		.long	0xf2b
 3128 1066 00       		.byte	0
 3129 1067 35       		.uleb128 0x35
 3130 1068 00000000 		.long	.LASF137
 3131 106c 17       		.byte	0x17
 3132 106d 1601     		.value	0x116
 3133 106f 00000000 		.long	.LASF138
 3134 1073 2B0F0000 		.long	0xf2b
 3135 1077 81100000 		.long	0x1081
 3136 107b 19       		.uleb128 0x19
 3137 107c C8570000 		.long	0x57c8
 3138 1080 00       		.byte	0
 3139 1081 0C       		.uleb128 0xc
 3140 1082 360F0000 		.long	0xf36
 3141 1086 35       		.uleb128 0x35
 3142 1087 00000000 		.long	.LASF139
 3143 108b 17       		.byte	0x17
 3144 108c 1C01     		.value	0x11c
 3145 108e 00000000 		.long	.LASF140
 3146 1092 360F0000 		.long	0xf36
 3147 1096 A0100000 		.long	0x10a0
 3148 109a 19       		.uleb128 0x19
 3149 109b B6570000 		.long	0x57b6
 3150 109f 00       		.byte	0
 3151 10a0 35       		.uleb128 0x35
 3152 10a1 00000000 		.long	.LASF141
 3153 10a5 17       		.byte	0x17
 3154 10a6 2001     		.value	0x120
 3155 10a8 00000000 		.long	.LASF142
 3156 10ac BD4A0000 		.long	0x4abd
 3157 10b0 BF100000 		.long	0x10bf
 3158 10b4 19       		.uleb128 0x19
 3159 10b5 C8570000 		.long	0x57c8
 3160 10b9 19       		.uleb128 0x19
 3161 10ba C8570000 		.long	0x57c8
 3162 10be 00       		.byte	0
 3163 10bf 13       		.uleb128 0x13
 3164 10c0 656F6600 		.string	"eof"
 3165 10c4 17       		.byte	0x17
 3166 10c5 2401     		.value	0x124
 3167 10c7 00000000 		.long	.LASF143
 3168 10cb 360F0000 		.long	0xf36
 3169 10cf 36       		.uleb128 0x36
 3170 10d0 00000000 		.long	.LASF144
GAS LISTING /tmp/cceISX6N.s 			page 179


 3171 10d4 17       		.byte	0x17
 3172 10d5 2801     		.value	0x128
 3173 10d7 00000000 		.long	.LASF216
 3174 10db 360F0000 		.long	0xf36
 3175 10df 19       		.uleb128 0x19
 3176 10e0 C8570000 		.long	0x57c8
 3177 10e4 00       		.byte	0
 3178 10e5 00       		.byte	0
 3179 10e6 07       		.uleb128 0x7
 3180 10e7 00000000 		.long	.LASF145
 3181 10eb 16       		.byte	0x16
 3182 10ec BA       		.byte	0xba
 3183 10ed EA480000 		.long	0x48ea
 3184 10f1 0D       		.uleb128 0xd
 3185 10f2 18       		.byte	0x18
 3186 10f3 35       		.byte	0x35
 3187 10f4 CE570000 		.long	0x57ce
 3188 10f8 0D       		.uleb128 0xd
 3189 10f9 18       		.byte	0x18
 3190 10fa 36       		.byte	0x36
 3191 10fb FB580000 		.long	0x58fb
 3192 10ff 0D       		.uleb128 0xd
 3193 1100 18       		.byte	0x18
 3194 1101 37       		.byte	0x37
 3195 1102 15590000 		.long	0x5915
 3196 1106 07       		.uleb128 0x7
 3197 1107 00000000 		.long	.LASF146
 3198 110b 16       		.byte	0x16
 3199 110c BB       		.byte	0xbb
 3200 110d 30000000 		.long	0x30
 3201 1111 27       		.uleb128 0x27
 3202 1112 00000000 		.long	.LASF147
 3203 1116 01       		.byte	0x1
 3204 1117 19       		.byte	0x19
 3205 1118 5C       		.byte	0x5c
 3206 1119 91110000 		.long	0x1191
 3207 111d 37       		.uleb128 0x37
 3208 111e 86400000 		.long	0x4086
 3209 1122 00       		.byte	0
 3210 1123 01       		.byte	0x1
 3211 1124 38       		.uleb128 0x38
 3212 1125 00000000 		.long	.LASF148
 3213 1129 19       		.byte	0x19
 3214 112a 5F       		.byte	0x5f
 3215 112b E6100000 		.long	0x10e6
 3216 112f 01       		.byte	0x1
 3217 1130 38       		.uleb128 0x38
 3218 1131 00000000 		.long	.LASF149
 3219 1135 19       		.byte	0x19
 3220 1136 63       		.byte	0x63
 3221 1137 4B590000 		.long	0x594b
 3222 113b 01       		.byte	0x1
 3223 113c 38       		.uleb128 0x38
 3224 113d 00000000 		.long	.LASF150
 3225 1141 19       		.byte	0x19
 3226 1142 64       		.byte	0x64
 3227 1143 51590000 		.long	0x5951
GAS LISTING /tmp/cceISX6N.s 			page 180


 3228 1147 01       		.byte	0x1
 3229 1148 2B       		.uleb128 0x2b
 3230 1149 00000000 		.long	.LASF151
 3231 114d 19       		.byte	0x19
 3232 114e 71       		.byte	0x71
 3233 114f 01       		.byte	0x1
 3234 1150 58110000 		.long	0x1158
 3235 1154 5E110000 		.long	0x115e
 3236 1158 09       		.uleb128 0x9
 3237 1159 69590000 		.long	0x5969
 3238 115d 00       		.byte	0
 3239 115e 2B       		.uleb128 0x2b
 3240 115f 00000000 		.long	.LASF151
 3241 1163 19       		.byte	0x19
 3242 1164 73       		.byte	0x73
 3243 1165 01       		.byte	0x1
 3244 1166 6E110000 		.long	0x116e
 3245 116a 79110000 		.long	0x1179
 3246 116e 09       		.uleb128 0x9
 3247 116f 69590000 		.long	0x5969
 3248 1173 19       		.uleb128 0x19
 3249 1174 6F590000 		.long	0x596f
 3250 1178 00       		.byte	0
 3251 1179 39       		.uleb128 0x39
 3252 117a 00000000 		.long	.LASF152
 3253 117e 19       		.byte	0x19
 3254 117f 79       		.byte	0x79
 3255 1180 01       		.byte	0x1
 3256 1181 85110000 		.long	0x1185
 3257 1185 09       		.uleb128 0x9
 3258 1186 69590000 		.long	0x5969
 3259 118a 09       		.uleb128 0x9
 3260 118b 06490000 		.long	0x4906
 3261 118f 00       		.byte	0
 3262 1190 00       		.byte	0
 3263 1191 0C       		.uleb128 0xc
 3264 1192 11110000 		.long	0x1111
 3265 1196 0D       		.uleb128 0xd
 3266 1197 1A       		.byte	0x1a
 3267 1198 76       		.byte	0x76
 3268 1199 9A590000 		.long	0x599a
 3269 119d 0D       		.uleb128 0xd
 3270 119e 1A       		.byte	0x1a
 3271 119f 77       		.byte	0x77
 3272 11a0 CA590000 		.long	0x59ca
 3273 11a4 0D       		.uleb128 0xd
 3274 11a5 1A       		.byte	0x1a
 3275 11a6 7B       		.byte	0x7b
 3276 11a7 2C5A0000 		.long	0x5a2c
 3277 11ab 0D       		.uleb128 0xd
 3278 11ac 1A       		.byte	0x1a
 3279 11ad 7E       		.byte	0x7e
 3280 11ae 4A5A0000 		.long	0x5a4a
 3281 11b2 0D       		.uleb128 0xd
 3282 11b3 1A       		.byte	0x1a
 3283 11b4 81       		.byte	0x81
 3284 11b5 645A0000 		.long	0x5a64
GAS LISTING /tmp/cceISX6N.s 			page 181


 3285 11b9 0D       		.uleb128 0xd
 3286 11ba 1A       		.byte	0x1a
 3287 11bb 82       		.byte	0x82
 3288 11bc 795A0000 		.long	0x5a79
 3289 11c0 0D       		.uleb128 0xd
 3290 11c1 1A       		.byte	0x1a
 3291 11c2 83       		.byte	0x83
 3292 11c3 8F5A0000 		.long	0x5a8f
 3293 11c7 0D       		.uleb128 0xd
 3294 11c8 1A       		.byte	0x1a
 3295 11c9 84       		.byte	0x84
 3296 11ca A55A0000 		.long	0x5aa5
 3297 11ce 0D       		.uleb128 0xd
 3298 11cf 1A       		.byte	0x1a
 3299 11d0 86       		.byte	0x86
 3300 11d1 CF5A0000 		.long	0x5acf
 3301 11d5 0D       		.uleb128 0xd
 3302 11d6 1A       		.byte	0x1a
 3303 11d7 89       		.byte	0x89
 3304 11d8 EB5A0000 		.long	0x5aeb
 3305 11dc 0D       		.uleb128 0xd
 3306 11dd 1A       		.byte	0x1a
 3307 11de 8B       		.byte	0x8b
 3308 11df 015B0000 		.long	0x5b01
 3309 11e3 0D       		.uleb128 0xd
 3310 11e4 1A       		.byte	0x1a
 3311 11e5 8E       		.byte	0x8e
 3312 11e6 1C5B0000 		.long	0x5b1c
 3313 11ea 0D       		.uleb128 0xd
 3314 11eb 1A       		.byte	0x1a
 3315 11ec 8F       		.byte	0x8f
 3316 11ed 375B0000 		.long	0x5b37
 3317 11f1 0D       		.uleb128 0xd
 3318 11f2 1A       		.byte	0x1a
 3319 11f3 90       		.byte	0x90
 3320 11f4 565B0000 		.long	0x5b56
 3321 11f8 0D       		.uleb128 0xd
 3322 11f9 1A       		.byte	0x1a
 3323 11fa 92       		.byte	0x92
 3324 11fb 765B0000 		.long	0x5b76
 3325 11ff 0D       		.uleb128 0xd
 3326 1200 1A       		.byte	0x1a
 3327 1201 95       		.byte	0x95
 3328 1202 985B0000 		.long	0x5b98
 3329 1206 0D       		.uleb128 0xd
 3330 1207 1A       		.byte	0x1a
 3331 1208 98       		.byte	0x98
 3332 1209 AB5B0000 		.long	0x5bab
 3333 120d 0D       		.uleb128 0xd
 3334 120e 1A       		.byte	0x1a
 3335 120f 9A       		.byte	0x9a
 3336 1210 B75B0000 		.long	0x5bb7
 3337 1214 0D       		.uleb128 0xd
 3338 1215 1A       		.byte	0x1a
 3339 1216 9B       		.byte	0x9b
 3340 1217 CA5B0000 		.long	0x5bca
 3341 121b 0D       		.uleb128 0xd
GAS LISTING /tmp/cceISX6N.s 			page 182


 3342 121c 1A       		.byte	0x1a
 3343 121d 9C       		.byte	0x9c
 3344 121e EA5B0000 		.long	0x5bea
 3345 1222 0D       		.uleb128 0xd
 3346 1223 1A       		.byte	0x1a
 3347 1224 9D       		.byte	0x9d
 3348 1225 095C0000 		.long	0x5c09
 3349 1229 0D       		.uleb128 0xd
 3350 122a 1A       		.byte	0x1a
 3351 122b 9E       		.byte	0x9e
 3352 122c 285C0000 		.long	0x5c28
 3353 1230 0D       		.uleb128 0xd
 3354 1231 1A       		.byte	0x1a
 3355 1232 A0       		.byte	0xa0
 3356 1233 3E5C0000 		.long	0x5c3e
 3357 1237 0D       		.uleb128 0xd
 3358 1238 1A       		.byte	0x1a
 3359 1239 A1       		.byte	0xa1
 3360 123a 5D5C0000 		.long	0x5c5d
 3361 123e 0D       		.uleb128 0xd
 3362 123f 1A       		.byte	0x1a
 3363 1240 F1       		.byte	0xf1
 3364 1241 FA590000 		.long	0x59fa
 3365 1245 0D       		.uleb128 0xd
 3366 1246 1A       		.byte	0x1a
 3367 1247 F6       		.byte	0xf6
 3368 1248 4C420000 		.long	0x424c
 3369 124c 0D       		.uleb128 0xd
 3370 124d 1A       		.byte	0x1a
 3371 124e F7       		.byte	0xf7
 3372 124f 775C0000 		.long	0x5c77
 3373 1253 0D       		.uleb128 0xd
 3374 1254 1A       		.byte	0x1a
 3375 1255 F9       		.byte	0xf9
 3376 1256 925C0000 		.long	0x5c92
 3377 125a 0D       		.uleb128 0xd
 3378 125b 1A       		.byte	0x1a
 3379 125c FA       		.byte	0xfa
 3380 125d E65C0000 		.long	0x5ce6
 3381 1261 0D       		.uleb128 0xd
 3382 1262 1A       		.byte	0x1a
 3383 1263 FB       		.byte	0xfb
 3384 1264 A85C0000 		.long	0x5ca8
 3385 1268 0D       		.uleb128 0xd
 3386 1269 1A       		.byte	0x1a
 3387 126a FC       		.byte	0xfc
 3388 126b C75C0000 		.long	0x5cc7
 3389 126f 0D       		.uleb128 0xd
 3390 1270 1A       		.byte	0x1a
 3391 1271 FD       		.byte	0xfd
 3392 1272 005D0000 		.long	0x5d00
 3393 1276 0D       		.uleb128 0xd
 3394 1277 1B       		.byte	0x1b
 3395 1278 5F       		.byte	0x5f
 3396 1279 444E0000 		.long	0x4e44
 3397 127d 0D       		.uleb128 0xd
 3398 127e 1B       		.byte	0x1b
GAS LISTING /tmp/cceISX6N.s 			page 183


 3399 127f 60       		.byte	0x60
 3400 1280 B55D0000 		.long	0x5db5
 3401 1284 0D       		.uleb128 0xd
 3402 1285 1B       		.byte	0x1b
 3403 1286 62       		.byte	0x62
 3404 1287 C05D0000 		.long	0x5dc0
 3405 128b 0D       		.uleb128 0xd
 3406 128c 1B       		.byte	0x1b
 3407 128d 63       		.byte	0x63
 3408 128e D95D0000 		.long	0x5dd9
 3409 1292 0D       		.uleb128 0xd
 3410 1293 1B       		.byte	0x1b
 3411 1294 64       		.byte	0x64
 3412 1295 EE5D0000 		.long	0x5dee
 3413 1299 0D       		.uleb128 0xd
 3414 129a 1B       		.byte	0x1b
 3415 129b 65       		.byte	0x65
 3416 129c 045E0000 		.long	0x5e04
 3417 12a0 0D       		.uleb128 0xd
 3418 12a1 1B       		.byte	0x1b
 3419 12a2 66       		.byte	0x66
 3420 12a3 1A5E0000 		.long	0x5e1a
 3421 12a7 0D       		.uleb128 0xd
 3422 12a8 1B       		.byte	0x1b
 3423 12a9 67       		.byte	0x67
 3424 12aa 2F5E0000 		.long	0x5e2f
 3425 12ae 0D       		.uleb128 0xd
 3426 12af 1B       		.byte	0x1b
 3427 12b0 68       		.byte	0x68
 3428 12b1 455E0000 		.long	0x5e45
 3429 12b5 0D       		.uleb128 0xd
 3430 12b6 1B       		.byte	0x1b
 3431 12b7 69       		.byte	0x69
 3432 12b8 665E0000 		.long	0x5e66
 3433 12bc 0D       		.uleb128 0xd
 3434 12bd 1B       		.byte	0x1b
 3435 12be 6A       		.byte	0x6a
 3436 12bf 855E0000 		.long	0x5e85
 3437 12c3 0D       		.uleb128 0xd
 3438 12c4 1B       		.byte	0x1b
 3439 12c5 6E       		.byte	0x6e
 3440 12c6 A05E0000 		.long	0x5ea0
 3441 12ca 0D       		.uleb128 0xd
 3442 12cb 1B       		.byte	0x1b
 3443 12cc 6F       		.byte	0x6f
 3444 12cd C55E0000 		.long	0x5ec5
 3445 12d1 0D       		.uleb128 0xd
 3446 12d2 1B       		.byte	0x1b
 3447 12d3 71       		.byte	0x71
 3448 12d4 E55E0000 		.long	0x5ee5
 3449 12d8 0D       		.uleb128 0xd
 3450 12d9 1B       		.byte	0x1b
 3451 12da 72       		.byte	0x72
 3452 12db 055F0000 		.long	0x5f05
 3453 12df 0D       		.uleb128 0xd
 3454 12e0 1B       		.byte	0x1b
 3455 12e1 73       		.byte	0x73
GAS LISTING /tmp/cceISX6N.s 			page 184


 3456 12e2 2B5F0000 		.long	0x5f2b
 3457 12e6 0D       		.uleb128 0xd
 3458 12e7 1B       		.byte	0x1b
 3459 12e8 75       		.byte	0x75
 3460 12e9 415F0000 		.long	0x5f41
 3461 12ed 0D       		.uleb128 0xd
 3462 12ee 1B       		.byte	0x1b
 3463 12ef 76       		.byte	0x76
 3464 12f0 575F0000 		.long	0x5f57
 3465 12f4 0D       		.uleb128 0xd
 3466 12f5 1B       		.byte	0x1b
 3467 12f6 77       		.byte	0x77
 3468 12f7 625F0000 		.long	0x5f62
 3469 12fb 0D       		.uleb128 0xd
 3470 12fc 1B       		.byte	0x1b
 3471 12fd 78       		.byte	0x78
 3472 12fe 785F0000 		.long	0x5f78
 3473 1302 0D       		.uleb128 0xd
 3474 1303 1B       		.byte	0x1b
 3475 1304 7D       		.byte	0x7d
 3476 1305 8B5F0000 		.long	0x5f8b
 3477 1309 0D       		.uleb128 0xd
 3478 130a 1B       		.byte	0x1b
 3479 130b 7E       		.byte	0x7e
 3480 130c A05F0000 		.long	0x5fa0
 3481 1310 0D       		.uleb128 0xd
 3482 1311 1B       		.byte	0x1b
 3483 1312 7F       		.byte	0x7f
 3484 1313 BA5F0000 		.long	0x5fba
 3485 1317 0D       		.uleb128 0xd
 3486 1318 1B       		.byte	0x1b
 3487 1319 81       		.byte	0x81
 3488 131a CD5F0000 		.long	0x5fcd
 3489 131e 0D       		.uleb128 0xd
 3490 131f 1B       		.byte	0x1b
 3491 1320 82       		.byte	0x82
 3492 1321 E55F0000 		.long	0x5fe5
 3493 1325 0D       		.uleb128 0xd
 3494 1326 1B       		.byte	0x1b
 3495 1327 85       		.byte	0x85
 3496 1328 0A600000 		.long	0x600a
 3497 132c 0D       		.uleb128 0xd
 3498 132d 1B       		.byte	0x1b
 3499 132e 86       		.byte	0x86
 3500 132f 15600000 		.long	0x6015
 3501 1333 0D       		.uleb128 0xd
 3502 1334 1B       		.byte	0x1b
 3503 1335 87       		.byte	0x87
 3504 1336 2A600000 		.long	0x602a
 3505 133a 27       		.uleb128 0x27
 3506 133b 00000000 		.long	.LASF153
 3507 133f 08       		.byte	0x8
 3508 1340 08       		.byte	0x8
 3509 1341 70       		.byte	0x70
 3510 1342 622C0000 		.long	0x2c62
 3511 1346 1E       		.uleb128 0x1e
 3512 1347 00000000 		.long	.LASF154
GAS LISTING /tmp/cceISX6N.s 			page 185


 3513 134b 08       		.byte	0x8
 3514 134c 08       		.byte	0x8
 3515 134d 1001     		.value	0x110
 3516 134f 9B130000 		.long	0x139b
 3517 1353 3A       		.uleb128 0x3a
 3518 1354 11110000 		.long	0x1111
 3519 1358 00       		.byte	0
 3520 1359 3B       		.uleb128 0x3b
 3521 135a 00000000 		.long	.LASF156
 3522 135e 08       		.byte	0x8
 3523 135f 1501     		.value	0x115
 3524 1361 38490000 		.long	0x4938
 3525 1365 00       		.byte	0
 3526 1366 18       		.uleb128 0x18
 3527 1367 00000000 		.long	.LASF154
 3528 136b 08       		.byte	0x8
 3529 136c 1201     		.value	0x112
 3530 136e 76130000 		.long	0x1376
 3531 1372 86130000 		.long	0x1386
 3532 1376 09       		.uleb128 0x9
 3533 1377 45600000 		.long	0x6045
 3534 137b 19       		.uleb128 0x19
 3535 137c 38490000 		.long	0x4938
 3536 1380 19       		.uleb128 0x19
 3537 1381 6F590000 		.long	0x596f
 3538 1385 00       		.byte	0
 3539 1386 3C       		.uleb128 0x3c
 3540 1387 00000000 		.long	.LASF500
 3541 138b 8F130000 		.long	0x138f
 3542 138f 09       		.uleb128 0x9
 3543 1390 45600000 		.long	0x6045
 3544 1394 09       		.uleb128 0x9
 3545 1395 06490000 		.long	0x4906
 3546 1399 00       		.byte	0
 3547 139a 00       		.byte	0
 3548 139b 38       		.uleb128 0x38
 3549 139c 00000000 		.long	.LASF148
 3550 13a0 08       		.byte	0x8
 3551 13a1 79       		.byte	0x79
 3552 13a2 24110000 		.long	0x1124
 3553 13a6 01       		.byte	0x1
 3554 13a7 3D       		.uleb128 0x3d
 3555 13a8 00000000 		.long	.LASF157
 3556 13ac 08       		.byte	0x8
 3557 13ad 1D01     		.value	0x11d
 3558 13af B4130000 		.long	0x13b4
 3559 13b3 01       		.byte	0x1
 3560 13b4 0C       		.uleb128 0xc
 3561 13b5 9B130000 		.long	0x139b
 3562 13b9 3B       		.uleb128 0x3b
 3563 13ba 00000000 		.long	.LASF158
 3564 13be 08       		.byte	0x8
 3565 13bf 2101     		.value	0x121
 3566 13c1 46130000 		.long	0x1346
 3567 13c5 00       		.byte	0
 3568 13c6 38       		.uleb128 0x38
 3569 13c7 00000000 		.long	.LASF159
GAS LISTING /tmp/cceISX6N.s 			page 186


 3570 13cb 08       		.byte	0x8
 3571 13cc 78       		.byte	0x78
 3572 13cd 11110000 		.long	0x1111
 3573 13d1 01       		.byte	0x1
 3574 13d2 38       		.uleb128 0x38
 3575 13d3 00000000 		.long	.LASF149
 3576 13d7 08       		.byte	0x8
 3577 13d8 7B       		.byte	0x7b
 3578 13d9 30110000 		.long	0x1130
 3579 13dd 01       		.byte	0x1
 3580 13de 38       		.uleb128 0x38
 3581 13df 00000000 		.long	.LASF150
 3582 13e3 08       		.byte	0x8
 3583 13e4 7C       		.byte	0x7c
 3584 13e5 3C110000 		.long	0x113c
 3585 13e9 01       		.byte	0x1
 3586 13ea 38       		.uleb128 0x38
 3587 13eb 00000000 		.long	.LASF160
 3588 13ef 08       		.byte	0x8
 3589 13f0 7F       		.byte	0x7f
 3590 13f1 6A420000 		.long	0x426a
 3591 13f5 01       		.byte	0x1
 3592 13f6 38       		.uleb128 0x38
 3593 13f7 00000000 		.long	.LASF161
 3594 13fb 08       		.byte	0x8
 3595 13fc 81       		.byte	0x81
 3596 13fd 8E440000 		.long	0x448e
 3597 1401 01       		.byte	0x1
 3598 1402 38       		.uleb128 0x38
 3599 1403 00000000 		.long	.LASF162
 3600 1407 08       		.byte	0x8
 3601 1408 82       		.byte	0x82
 3602 1409 622C0000 		.long	0x2c62
 3603 140d 01       		.byte	0x1
 3604 140e 38       		.uleb128 0x38
 3605 140f 00000000 		.long	.LASF163
 3606 1413 08       		.byte	0x8
 3607 1414 83       		.byte	0x83
 3608 1415 672C0000 		.long	0x2c67
 3609 1419 01       		.byte	0x1
 3610 141a 05       		.uleb128 0x5
 3611 141b 00000000 		.long	.LASF164
 3612 141f 18       		.byte	0x18
 3613 1420 08       		.byte	0x8
 3614 1421 94       		.byte	0x94
 3615 1422 4B140000 		.long	0x144b
 3616 1426 28       		.uleb128 0x28
 3617 1427 00000000 		.long	.LASF165
 3618 142b 08       		.byte	0x8
 3619 142c 96       		.byte	0x96
 3620 142d 9B130000 		.long	0x139b
 3621 1431 00       		.byte	0
 3622 1432 28       		.uleb128 0x28
 3623 1433 00000000 		.long	.LASF166
 3624 1437 08       		.byte	0x8
 3625 1438 97       		.byte	0x97
 3626 1439 9B130000 		.long	0x139b
GAS LISTING /tmp/cceISX6N.s 			page 187


 3627 143d 08       		.byte	0x8
 3628 143e 28       		.uleb128 0x28
 3629 143f 00000000 		.long	.LASF167
 3630 1443 08       		.byte	0x8
 3631 1444 98       		.byte	0x98
 3632 1445 38590000 		.long	0x5938
 3633 1449 10       		.byte	0x10
 3634 144a 00       		.byte	0
 3635 144b 05       		.uleb128 0x5
 3636 144c 00000000 		.long	.LASF45
 3637 1450 18       		.byte	0x18
 3638 1451 08       		.byte	0x8
 3639 1452 9B       		.byte	0x9b
 3640 1453 FF150000 		.long	0x15ff
 3641 1457 3A       		.uleb128 0x3a
 3642 1458 1A140000 		.long	0x141a
 3643 145c 00       		.byte	0
 3644 145d 06       		.uleb128 0x6
 3645 145e 00000000 		.long	.LASF168
 3646 1462 1C       		.byte	0x1c
 3647 1463 32       		.byte	0x32
 3648 1464 B4130000 		.long	0x13b4
 3649 1468 06       		.uleb128 0x6
 3650 1469 00000000 		.long	.LASF169
 3651 146d 1C       		.byte	0x1c
 3652 146e 37       		.byte	0x37
 3653 146f 204D0000 		.long	0x4d20
 3654 1473 06       		.uleb128 0x6
 3655 1474 00000000 		.long	.LASF170
 3656 1478 1C       		.byte	0x1c
 3657 1479 42       		.byte	0x42
 3658 147a 81600000 		.long	0x6081
 3659 147e 3E       		.uleb128 0x3e
 3660 147f 00000000 		.long	.LASF171
 3661 1483 08       		.byte	0x8
 3662 1484 B5       		.byte	0xb5
 3663 1485 00000000 		.long	.LASF1102
 3664 1489 5D600000 		.long	0x605d
 3665 148d 08       		.uleb128 0x8
 3666 148e 00000000 		.long	.LASF172
 3667 1492 08       		.byte	0x8
 3668 1493 BF       		.byte	0xbf
 3669 1494 00000000 		.long	.LASF173
 3670 1498 BD4A0000 		.long	0x4abd
 3671 149c A4140000 		.long	0x14a4
 3672 14a0 AA140000 		.long	0x14aa
 3673 14a4 09       		.uleb128 0x9
 3674 14a5 8D600000 		.long	0x608d
 3675 14a9 00       		.byte	0
 3676 14aa 08       		.uleb128 0x8
 3677 14ab 00000000 		.long	.LASF174
 3678 14af 08       		.byte	0x8
 3679 14b0 C3       		.byte	0xc3
 3680 14b1 00000000 		.long	.LASF175
 3681 14b5 BD4A0000 		.long	0x4abd
 3682 14b9 C1140000 		.long	0x14c1
 3683 14bd C7140000 		.long	0x14c7
GAS LISTING /tmp/cceISX6N.s 			page 188


 3684 14c1 09       		.uleb128 0x9
 3685 14c2 8D600000 		.long	0x608d
 3686 14c6 00       		.byte	0
 3687 14c7 2A       		.uleb128 0x2a
 3688 14c8 00000000 		.long	.LASF176
 3689 14cc 08       		.byte	0x8
 3690 14cd C7       		.byte	0xc7
 3691 14ce 00000000 		.long	.LASF177
 3692 14d2 DA140000 		.long	0x14da
 3693 14d6 E0140000 		.long	0x14e0
 3694 14da 09       		.uleb128 0x9
 3695 14db 57600000 		.long	0x6057
 3696 14df 00       		.byte	0
 3697 14e0 2A       		.uleb128 0x2a
 3698 14e1 00000000 		.long	.LASF178
 3699 14e5 08       		.byte	0x8
 3700 14e6 CB       		.byte	0xcb
 3701 14e7 00000000 		.long	.LASF179
 3702 14eb F3140000 		.long	0x14f3
 3703 14ef F9140000 		.long	0x14f9
 3704 14f3 09       		.uleb128 0x9
 3705 14f4 57600000 		.long	0x6057
 3706 14f8 00       		.byte	0
 3707 14f9 2A       		.uleb128 0x2a
 3708 14fa 00000000 		.long	.LASF180
 3709 14fe 08       		.byte	0x8
 3710 14ff CF       		.byte	0xcf
 3711 1500 00000000 		.long	.LASF181
 3712 1504 0C150000 		.long	0x150c
 3713 1508 17150000 		.long	0x1517
 3714 150c 09       		.uleb128 0x9
 3715 150d 57600000 		.long	0x6057
 3716 1511 19       		.uleb128 0x19
 3717 1512 9B130000 		.long	0x139b
 3718 1516 00       		.byte	0
 3719 1517 08       		.uleb128 0x8
 3720 1518 00000000 		.long	.LASF182
 3721 151c 08       		.byte	0x8
 3722 151d DE       		.byte	0xde
 3723 151e 00000000 		.long	.LASF183
 3724 1522 38490000 		.long	0x4938
 3725 1526 2E150000 		.long	0x152e
 3726 152a 34150000 		.long	0x1534
 3727 152e 09       		.uleb128 0x9
 3728 152f 57600000 		.long	0x6057
 3729 1533 00       		.byte	0
 3730 1534 08       		.uleb128 0x8
 3731 1535 00000000 		.long	.LASF184
 3732 1539 08       		.byte	0x8
 3733 153a E2       		.byte	0xe2
 3734 153b 00000000 		.long	.LASF185
 3735 153f 38490000 		.long	0x4938
 3736 1543 4B150000 		.long	0x154b
 3737 1547 5B150000 		.long	0x155b
 3738 154b 09       		.uleb128 0x9
 3739 154c 57600000 		.long	0x6057
 3740 1550 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 189


 3741 1551 6F590000 		.long	0x596f
 3742 1555 19       		.uleb128 0x19
 3743 1556 6F590000 		.long	0x596f
 3744 155a 00       		.byte	0
 3745 155b 35       		.uleb128 0x35
 3746 155c 00000000 		.long	.LASF186
 3747 1560 1C       		.byte	0x1c
 3748 1561 2102     		.value	0x221
 3749 1563 00000000 		.long	.LASF187
 3750 1567 57600000 		.long	0x6057
 3751 156b 7F150000 		.long	0x157f
 3752 156f 19       		.uleb128 0x19
 3753 1570 9B130000 		.long	0x139b
 3754 1574 19       		.uleb128 0x19
 3755 1575 9B130000 		.long	0x139b
 3756 1579 19       		.uleb128 0x19
 3757 157a 6F590000 		.long	0x596f
 3758 157e 00       		.byte	0
 3759 157f 2A       		.uleb128 0x2a
 3760 1580 00000000 		.long	.LASF188
 3761 1584 08       		.byte	0x8
 3762 1585 ED       		.byte	0xed
 3763 1586 00000000 		.long	.LASF189
 3764 158a 92150000 		.long	0x1592
 3765 158e 9D150000 		.long	0x159d
 3766 1592 09       		.uleb128 0x9
 3767 1593 57600000 		.long	0x6057
 3768 1597 19       		.uleb128 0x19
 3769 1598 6F590000 		.long	0x596f
 3770 159c 00       		.byte	0
 3771 159d 3F       		.uleb128 0x3f
 3772 159e 00000000 		.long	.LASF190
 3773 15a2 1C       		.byte	0x1c
 3774 15a3 BC01     		.value	0x1bc
 3775 15a5 00000000 		.long	.LASF191
 3776 15a9 B1150000 		.long	0x15b1
 3777 15ad BC150000 		.long	0x15bc
 3778 15b1 09       		.uleb128 0x9
 3779 15b2 57600000 		.long	0x6057
 3780 15b6 19       		.uleb128 0x19
 3781 15b7 6F590000 		.long	0x596f
 3782 15bb 00       		.byte	0
 3783 15bc 1A       		.uleb128 0x1a
 3784 15bd 00000000 		.long	.LASF192
 3785 15c1 08       		.byte	0x8
 3786 15c2 0201     		.value	0x102
 3787 15c4 00000000 		.long	.LASF193
 3788 15c8 38490000 		.long	0x4938
 3789 15cc D4150000 		.long	0x15d4
 3790 15d0 DA150000 		.long	0x15da
 3791 15d4 09       		.uleb128 0x9
 3792 15d5 57600000 		.long	0x6057
 3793 15d9 00       		.byte	0
 3794 15da 40       		.uleb128 0x40
 3795 15db 00000000 		.long	.LASF194
 3796 15df 1C       		.byte	0x1c
 3797 15e0 6F02     		.value	0x26f
GAS LISTING /tmp/cceISX6N.s 			page 190


 3798 15e2 00000000 		.long	.LASF195
 3799 15e6 38490000 		.long	0x4938
 3800 15ea EE150000 		.long	0x15ee
 3801 15ee 09       		.uleb128 0x9
 3802 15ef 57600000 		.long	0x6057
 3803 15f3 19       		.uleb128 0x19
 3804 15f4 6F590000 		.long	0x596f
 3805 15f8 19       		.uleb128 0x19
 3806 15f9 9B130000 		.long	0x139b
 3807 15fd 00       		.byte	0
 3808 15fe 00       		.byte	0
 3809 15ff 1A       		.uleb128 0x1a
 3810 1600 00000000 		.long	.LASF196
 3811 1604 08       		.byte	0x8
 3812 1605 2401     		.value	0x124
 3813 1607 00000000 		.long	.LASF197
 3814 160b 38490000 		.long	0x4938
 3815 160f 17160000 		.long	0x1617
 3816 1613 1D160000 		.long	0x161d
 3817 1617 09       		.uleb128 0x9
 3818 1618 4B600000 		.long	0x604b
 3819 161c 00       		.byte	0
 3820 161d 1A       		.uleb128 0x1a
 3821 161e 00000000 		.long	.LASF196
 3822 1622 08       		.byte	0x8
 3823 1623 2801     		.value	0x128
 3824 1625 00000000 		.long	.LASF198
 3825 1629 38490000 		.long	0x4938
 3826 162d 35160000 		.long	0x1635
 3827 1631 40160000 		.long	0x1640
 3828 1635 09       		.uleb128 0x9
 3829 1636 51600000 		.long	0x6051
 3830 163a 19       		.uleb128 0x19
 3831 163b 38490000 		.long	0x4938
 3832 163f 00       		.byte	0
 3833 1640 1A       		.uleb128 0x1a
 3834 1641 00000000 		.long	.LASF199
 3835 1645 08       		.byte	0x8
 3836 1646 2C01     		.value	0x12c
 3837 1648 00000000 		.long	.LASF200
 3838 164c 57600000 		.long	0x6057
 3839 1650 58160000 		.long	0x1658
 3840 1654 5E160000 		.long	0x165e
 3841 1658 09       		.uleb128 0x9
 3842 1659 4B600000 		.long	0x604b
 3843 165d 00       		.byte	0
 3844 165e 1A       		.uleb128 0x1a
 3845 165f 00000000 		.long	.LASF201
 3846 1663 08       		.byte	0x8
 3847 1664 3201     		.value	0x132
 3848 1666 00000000 		.long	.LASF202
 3849 166a EA130000 		.long	0x13ea
 3850 166e 76160000 		.long	0x1676
 3851 1672 7C160000 		.long	0x167c
 3852 1676 09       		.uleb128 0x9
 3853 1677 4B600000 		.long	0x604b
 3854 167b 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 191


 3855 167c 1A       		.uleb128 0x1a
 3856 167d 00000000 		.long	.LASF203
 3857 1681 08       		.byte	0x8
 3858 1682 3601     		.value	0x136
 3859 1684 00000000 		.long	.LASF204
 3860 1688 EA130000 		.long	0x13ea
 3861 168c 94160000 		.long	0x1694
 3862 1690 9A160000 		.long	0x169a
 3863 1694 09       		.uleb128 0x9
 3864 1695 4B600000 		.long	0x604b
 3865 1699 00       		.byte	0
 3866 169a 3F       		.uleb128 0x3f
 3867 169b 00000000 		.long	.LASF205
 3868 169f 08       		.byte	0x8
 3869 16a0 3A01     		.value	0x13a
 3870 16a2 00000000 		.long	.LASF206
 3871 16a6 AE160000 		.long	0x16ae
 3872 16aa B4160000 		.long	0x16b4
 3873 16ae 09       		.uleb128 0x9
 3874 16af 51600000 		.long	0x6051
 3875 16b3 00       		.byte	0
 3876 16b4 1A       		.uleb128 0x1a
 3877 16b5 00000000 		.long	.LASF207
 3878 16b9 08       		.byte	0x8
 3879 16ba 4101     		.value	0x141
 3880 16bc 00000000 		.long	.LASF208
 3881 16c0 9B130000 		.long	0x139b
 3882 16c4 CC160000 		.long	0x16cc
 3883 16c8 DC160000 		.long	0x16dc
 3884 16cc 09       		.uleb128 0x9
 3885 16cd 4B600000 		.long	0x604b
 3886 16d1 19       		.uleb128 0x19
 3887 16d2 9B130000 		.long	0x139b
 3888 16d6 19       		.uleb128 0x19
 3889 16d7 1A4D0000 		.long	0x4d1a
 3890 16db 00       		.byte	0
 3891 16dc 3F       		.uleb128 0x3f
 3892 16dd 00000000 		.long	.LASF209
 3893 16e1 08       		.byte	0x8
 3894 16e2 4901     		.value	0x149
 3895 16e4 00000000 		.long	.LASF210
 3896 16e8 F0160000 		.long	0x16f0
 3897 16ec 05170000 		.long	0x1705
 3898 16f0 09       		.uleb128 0x9
 3899 16f1 4B600000 		.long	0x604b
 3900 16f5 19       		.uleb128 0x19
 3901 16f6 9B130000 		.long	0x139b
 3902 16fa 19       		.uleb128 0x19
 3903 16fb 9B130000 		.long	0x139b
 3904 16ff 19       		.uleb128 0x19
 3905 1700 1A4D0000 		.long	0x4d1a
 3906 1704 00       		.byte	0
 3907 1705 1A       		.uleb128 0x1a
 3908 1706 00000000 		.long	.LASF211
 3909 170a 08       		.byte	0x8
 3910 170b 5101     		.value	0x151
 3911 170d 00000000 		.long	.LASF212
GAS LISTING /tmp/cceISX6N.s 			page 192


 3912 1711 9B130000 		.long	0x139b
 3913 1715 1D170000 		.long	0x171d
 3914 1719 2D170000 		.long	0x172d
 3915 171d 09       		.uleb128 0x9
 3916 171e 4B600000 		.long	0x604b
 3917 1722 19       		.uleb128 0x19
 3918 1723 9B130000 		.long	0x139b
 3919 1727 19       		.uleb128 0x19
 3920 1728 9B130000 		.long	0x139b
 3921 172c 00       		.byte	0
 3922 172d 1A       		.uleb128 0x1a
 3923 172e 00000000 		.long	.LASF213
 3924 1732 08       		.byte	0x8
 3925 1733 5901     		.value	0x159
 3926 1735 00000000 		.long	.LASF214
 3927 1739 BD4A0000 		.long	0x4abd
 3928 173d 45170000 		.long	0x1745
 3929 1741 50170000 		.long	0x1750
 3930 1745 09       		.uleb128 0x9
 3931 1746 4B600000 		.long	0x604b
 3932 174a 19       		.uleb128 0x19
 3933 174b 1A4D0000 		.long	0x4d1a
 3934 174f 00       		.byte	0
 3935 1750 41       		.uleb128 0x41
 3936 1751 00000000 		.long	.LASF215
 3937 1755 08       		.byte	0x8
 3938 1756 6201     		.value	0x162
 3939 1758 00000000 		.long	.LASF217
 3940 175c 70170000 		.long	0x1770
 3941 1760 19       		.uleb128 0x19
 3942 1761 38490000 		.long	0x4938
 3943 1765 19       		.uleb128 0x19
 3944 1766 1A4D0000 		.long	0x4d1a
 3945 176a 19       		.uleb128 0x19
 3946 176b 9B130000 		.long	0x139b
 3947 176f 00       		.byte	0
 3948 1770 41       		.uleb128 0x41
 3949 1771 00000000 		.long	.LASF218
 3950 1775 08       		.byte	0x8
 3951 1776 6B01     		.value	0x16b
 3952 1778 00000000 		.long	.LASF219
 3953 177c 90170000 		.long	0x1790
 3954 1780 19       		.uleb128 0x19
 3955 1781 38490000 		.long	0x4938
 3956 1785 19       		.uleb128 0x19
 3957 1786 1A4D0000 		.long	0x4d1a
 3958 178a 19       		.uleb128 0x19
 3959 178b 9B130000 		.long	0x139b
 3960 178f 00       		.byte	0
 3961 1790 41       		.uleb128 0x41
 3962 1791 00000000 		.long	.LASF220
 3963 1795 08       		.byte	0x8
 3964 1796 7401     		.value	0x174
 3965 1798 00000000 		.long	.LASF221
 3966 179c B0170000 		.long	0x17b0
 3967 17a0 19       		.uleb128 0x19
 3968 17a1 38490000 		.long	0x4938
GAS LISTING /tmp/cceISX6N.s 			page 193


 3969 17a5 19       		.uleb128 0x19
 3970 17a6 9B130000 		.long	0x139b
 3971 17aa 19       		.uleb128 0x19
 3972 17ab 3E490000 		.long	0x493e
 3973 17af 00       		.byte	0
 3974 17b0 41       		.uleb128 0x41
 3975 17b1 00000000 		.long	.LASF222
 3976 17b5 08       		.byte	0x8
 3977 17b6 8701     		.value	0x187
 3978 17b8 00000000 		.long	.LASF223
 3979 17bc D0170000 		.long	0x17d0
 3980 17c0 19       		.uleb128 0x19
 3981 17c1 38490000 		.long	0x4938
 3982 17c5 19       		.uleb128 0x19
 3983 17c6 EA130000 		.long	0x13ea
 3984 17ca 19       		.uleb128 0x19
 3985 17cb EA130000 		.long	0x13ea
 3986 17cf 00       		.byte	0
 3987 17d0 41       		.uleb128 0x41
 3988 17d1 00000000 		.long	.LASF222
 3989 17d5 08       		.byte	0x8
 3990 17d6 8B01     		.value	0x18b
 3991 17d8 00000000 		.long	.LASF224
 3992 17dc F0170000 		.long	0x17f0
 3993 17e0 19       		.uleb128 0x19
 3994 17e1 38490000 		.long	0x4938
 3995 17e5 19       		.uleb128 0x19
 3996 17e6 F6130000 		.long	0x13f6
 3997 17ea 19       		.uleb128 0x19
 3998 17eb F6130000 		.long	0x13f6
 3999 17ef 00       		.byte	0
 4000 17f0 41       		.uleb128 0x41
 4001 17f1 00000000 		.long	.LASF222
 4002 17f5 08       		.byte	0x8
 4003 17f6 8F01     		.value	0x18f
 4004 17f8 00000000 		.long	.LASF225
 4005 17fc 10180000 		.long	0x1810
 4006 1800 19       		.uleb128 0x19
 4007 1801 38490000 		.long	0x4938
 4008 1805 19       		.uleb128 0x19
 4009 1806 38490000 		.long	0x4938
 4010 180a 19       		.uleb128 0x19
 4011 180b 38490000 		.long	0x4938
 4012 180f 00       		.byte	0
 4013 1810 41       		.uleb128 0x41
 4014 1811 00000000 		.long	.LASF222
 4015 1815 08       		.byte	0x8
 4016 1816 9301     		.value	0x193
 4017 1818 00000000 		.long	.LASF226
 4018 181c 30180000 		.long	0x1830
 4019 1820 19       		.uleb128 0x19
 4020 1821 38490000 		.long	0x4938
 4021 1825 19       		.uleb128 0x19
 4022 1826 1A4D0000 		.long	0x4d1a
 4023 182a 19       		.uleb128 0x19
 4024 182b 1A4D0000 		.long	0x4d1a
 4025 182f 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 194


 4026 1830 35       		.uleb128 0x35
 4027 1831 00000000 		.long	.LASF227
 4028 1835 08       		.byte	0x8
 4029 1836 9701     		.value	0x197
 4030 1838 00000000 		.long	.LASF228
 4031 183c 06490000 		.long	0x4906
 4032 1840 4F180000 		.long	0x184f
 4033 1844 19       		.uleb128 0x19
 4034 1845 9B130000 		.long	0x139b
 4035 1849 19       		.uleb128 0x19
 4036 184a 9B130000 		.long	0x139b
 4037 184e 00       		.byte	0
 4038 184f 3F       		.uleb128 0x3f
 4039 1850 00000000 		.long	.LASF229
 4040 1854 08       		.byte	0x8
 4041 1855 A401     		.value	0x1a4
 4042 1857 00000000 		.long	.LASF230
 4043 185b 63180000 		.long	0x1863
 4044 185f 78180000 		.long	0x1878
 4045 1863 09       		.uleb128 0x9
 4046 1864 51600000 		.long	0x6051
 4047 1868 19       		.uleb128 0x19
 4048 1869 9B130000 		.long	0x139b
 4049 186d 19       		.uleb128 0x19
 4050 186e 9B130000 		.long	0x139b
 4051 1872 19       		.uleb128 0x19
 4052 1873 9B130000 		.long	0x139b
 4053 1877 00       		.byte	0
 4054 1878 3F       		.uleb128 0x3f
 4055 1879 00000000 		.long	.LASF231
 4056 187d 08       		.byte	0x8
 4057 187e A701     		.value	0x1a7
 4058 1880 00000000 		.long	.LASF232
 4059 1884 8C180000 		.long	0x188c
 4060 1888 92180000 		.long	0x1892
 4061 188c 09       		.uleb128 0x9
 4062 188d 51600000 		.long	0x6051
 4063 1891 00       		.byte	0
 4064 1892 1B       		.uleb128 0x1b
 4065 1893 00000000 		.long	.LASF171
 4066 1897 08       		.byte	0x8
 4067 1898 AA01     		.value	0x1aa
 4068 189a 00000000 		.long	.LASF233
 4069 189e 5D600000 		.long	0x605d
 4070 18a2 42       		.uleb128 0x42
 4071 18a3 00000000 		.long	.LASF234
 4072 18a7 08       		.byte	0x8
 4073 18a8 B501     		.value	0x1b5
 4074 18aa 01       		.byte	0x1
 4075 18ab B3180000 		.long	0x18b3
 4076 18af B9180000 		.long	0x18b9
 4077 18b3 09       		.uleb128 0x9
 4078 18b4 51600000 		.long	0x6051
 4079 18b8 00       		.byte	0
 4080 18b9 43       		.uleb128 0x43
 4081 18ba 00000000 		.long	.LASF234
 4082 18be 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 195


 4083 18bf C001     		.value	0x1c0
 4084 18c1 01       		.byte	0x1
 4085 18c2 CA180000 		.long	0x18ca
 4086 18c6 D5180000 		.long	0x18d5
 4087 18ca 09       		.uleb128 0x9
 4088 18cb 51600000 		.long	0x6051
 4089 18cf 19       		.uleb128 0x19
 4090 18d0 6F590000 		.long	0x596f
 4091 18d4 00       		.byte	0
 4092 18d5 42       		.uleb128 0x42
 4093 18d6 00000000 		.long	.LASF234
 4094 18da 08       		.byte	0x8
 4095 18db C701     		.value	0x1c7
 4096 18dd 01       		.byte	0x1
 4097 18de E6180000 		.long	0x18e6
 4098 18e2 F1180000 		.long	0x18f1
 4099 18e6 09       		.uleb128 0x9
 4100 18e7 51600000 		.long	0x6051
 4101 18eb 19       		.uleb128 0x19
 4102 18ec 63600000 		.long	0x6063
 4103 18f0 00       		.byte	0
 4104 18f1 42       		.uleb128 0x42
 4105 18f2 00000000 		.long	.LASF234
 4106 18f6 08       		.byte	0x8
 4107 18f7 CE01     		.value	0x1ce
 4108 18f9 01       		.byte	0x1
 4109 18fa 02190000 		.long	0x1902
 4110 18fe 17190000 		.long	0x1917
 4111 1902 09       		.uleb128 0x9
 4112 1903 51600000 		.long	0x6051
 4113 1907 19       		.uleb128 0x19
 4114 1908 63600000 		.long	0x6063
 4115 190c 19       		.uleb128 0x19
 4116 190d 9B130000 		.long	0x139b
 4117 1911 19       		.uleb128 0x19
 4118 1912 9B130000 		.long	0x139b
 4119 1916 00       		.byte	0
 4120 1917 42       		.uleb128 0x42
 4121 1918 00000000 		.long	.LASF234
 4122 191c 08       		.byte	0x8
 4123 191d D701     		.value	0x1d7
 4124 191f 01       		.byte	0x1
 4125 1920 28190000 		.long	0x1928
 4126 1924 42190000 		.long	0x1942
 4127 1928 09       		.uleb128 0x9
 4128 1929 51600000 		.long	0x6051
 4129 192d 19       		.uleb128 0x19
 4130 192e 63600000 		.long	0x6063
 4131 1932 19       		.uleb128 0x19
 4132 1933 9B130000 		.long	0x139b
 4133 1937 19       		.uleb128 0x19
 4134 1938 9B130000 		.long	0x139b
 4135 193c 19       		.uleb128 0x19
 4136 193d 6F590000 		.long	0x596f
 4137 1941 00       		.byte	0
 4138 1942 42       		.uleb128 0x42
 4139 1943 00000000 		.long	.LASF234
GAS LISTING /tmp/cceISX6N.s 			page 196


 4140 1947 08       		.byte	0x8
 4141 1948 E301     		.value	0x1e3
 4142 194a 01       		.byte	0x1
 4143 194b 53190000 		.long	0x1953
 4144 194f 68190000 		.long	0x1968
 4145 1953 09       		.uleb128 0x9
 4146 1954 51600000 		.long	0x6051
 4147 1958 19       		.uleb128 0x19
 4148 1959 1A4D0000 		.long	0x4d1a
 4149 195d 19       		.uleb128 0x19
 4150 195e 9B130000 		.long	0x139b
 4151 1962 19       		.uleb128 0x19
 4152 1963 6F590000 		.long	0x596f
 4153 1967 00       		.byte	0
 4154 1968 42       		.uleb128 0x42
 4155 1969 00000000 		.long	.LASF234
 4156 196d 08       		.byte	0x8
 4157 196e EA01     		.value	0x1ea
 4158 1970 01       		.byte	0x1
 4159 1971 79190000 		.long	0x1979
 4160 1975 89190000 		.long	0x1989
 4161 1979 09       		.uleb128 0x9
 4162 197a 51600000 		.long	0x6051
 4163 197e 19       		.uleb128 0x19
 4164 197f 1A4D0000 		.long	0x4d1a
 4165 1983 19       		.uleb128 0x19
 4166 1984 6F590000 		.long	0x596f
 4167 1988 00       		.byte	0
 4168 1989 42       		.uleb128 0x42
 4169 198a 00000000 		.long	.LASF234
 4170 198e 08       		.byte	0x8
 4171 198f F101     		.value	0x1f1
 4172 1991 01       		.byte	0x1
 4173 1992 9A190000 		.long	0x199a
 4174 1996 AF190000 		.long	0x19af
 4175 199a 09       		.uleb128 0x9
 4176 199b 51600000 		.long	0x6051
 4177 199f 19       		.uleb128 0x19
 4178 19a0 9B130000 		.long	0x139b
 4179 19a4 19       		.uleb128 0x19
 4180 19a5 3E490000 		.long	0x493e
 4181 19a9 19       		.uleb128 0x19
 4182 19aa 6F590000 		.long	0x596f
 4183 19ae 00       		.byte	0
 4184 19af 42       		.uleb128 0x42
 4185 19b0 00000000 		.long	.LASF234
 4186 19b4 08       		.byte	0x8
 4187 19b5 FB01     		.value	0x1fb
 4188 19b7 01       		.byte	0x1
 4189 19b8 C0190000 		.long	0x19c0
 4190 19bc CB190000 		.long	0x19cb
 4191 19c0 09       		.uleb128 0x9
 4192 19c1 51600000 		.long	0x6051
 4193 19c5 19       		.uleb128 0x19
 4194 19c6 69600000 		.long	0x6069
 4195 19ca 00       		.byte	0
 4196 19cb 42       		.uleb128 0x42
GAS LISTING /tmp/cceISX6N.s 			page 197


 4197 19cc 00000000 		.long	.LASF234
 4198 19d0 08       		.byte	0x8
 4199 19d1 0A02     		.value	0x20a
 4200 19d3 01       		.byte	0x1
 4201 19d4 DC190000 		.long	0x19dc
 4202 19d8 EC190000 		.long	0x19ec
 4203 19dc 09       		.uleb128 0x9
 4204 19dd 51600000 		.long	0x6051
 4205 19e1 19       		.uleb128 0x19
 4206 19e2 712C0000 		.long	0x2c71
 4207 19e6 19       		.uleb128 0x19
 4208 19e7 6F590000 		.long	0x596f
 4209 19eb 00       		.byte	0
 4210 19ec 42       		.uleb128 0x42
 4211 19ed 00000000 		.long	.LASF235
 4212 19f1 08       		.byte	0x8
 4213 19f2 1A02     		.value	0x21a
 4214 19f4 01       		.byte	0x1
 4215 19f5 FD190000 		.long	0x19fd
 4216 19f9 081A0000 		.long	0x1a08
 4217 19fd 09       		.uleb128 0x9
 4218 19fe 51600000 		.long	0x6051
 4219 1a02 09       		.uleb128 0x9
 4220 1a03 06490000 		.long	0x4906
 4221 1a07 00       		.byte	0
 4222 1a08 44       		.uleb128 0x44
 4223 1a09 00000000 		.long	.LASF18
 4224 1a0d 08       		.byte	0x8
 4225 1a0e 2202     		.value	0x222
 4226 1a10 00000000 		.long	.LASF236
 4227 1a14 6F600000 		.long	0x606f
 4228 1a18 01       		.byte	0x1
 4229 1a19 211A0000 		.long	0x1a21
 4230 1a1d 2C1A0000 		.long	0x1a2c
 4231 1a21 09       		.uleb128 0x9
 4232 1a22 51600000 		.long	0x6051
 4233 1a26 19       		.uleb128 0x19
 4234 1a27 63600000 		.long	0x6063
 4235 1a2b 00       		.byte	0
 4236 1a2c 44       		.uleb128 0x44
 4237 1a2d 00000000 		.long	.LASF18
 4238 1a31 08       		.byte	0x8
 4239 1a32 2A02     		.value	0x22a
 4240 1a34 00000000 		.long	.LASF237
 4241 1a38 6F600000 		.long	0x606f
 4242 1a3c 01       		.byte	0x1
 4243 1a3d 451A0000 		.long	0x1a45
 4244 1a41 501A0000 		.long	0x1a50
 4245 1a45 09       		.uleb128 0x9
 4246 1a46 51600000 		.long	0x6051
 4247 1a4a 19       		.uleb128 0x19
 4248 1a4b 1A4D0000 		.long	0x4d1a
 4249 1a4f 00       		.byte	0
 4250 1a50 44       		.uleb128 0x44
 4251 1a51 00000000 		.long	.LASF18
 4252 1a55 08       		.byte	0x8
 4253 1a56 3502     		.value	0x235
GAS LISTING /tmp/cceISX6N.s 			page 198


 4254 1a58 00000000 		.long	.LASF238
 4255 1a5c 6F600000 		.long	0x606f
 4256 1a60 01       		.byte	0x1
 4257 1a61 691A0000 		.long	0x1a69
 4258 1a65 741A0000 		.long	0x1a74
 4259 1a69 09       		.uleb128 0x9
 4260 1a6a 51600000 		.long	0x6051
 4261 1a6e 19       		.uleb128 0x19
 4262 1a6f 3E490000 		.long	0x493e
 4263 1a73 00       		.byte	0
 4264 1a74 44       		.uleb128 0x44
 4265 1a75 00000000 		.long	.LASF18
 4266 1a79 08       		.byte	0x8
 4267 1a7a 4402     		.value	0x244
 4268 1a7c 00000000 		.long	.LASF239
 4269 1a80 6F600000 		.long	0x606f
 4270 1a84 01       		.byte	0x1
 4271 1a85 8D1A0000 		.long	0x1a8d
 4272 1a89 981A0000 		.long	0x1a98
 4273 1a8d 09       		.uleb128 0x9
 4274 1a8e 51600000 		.long	0x6051
 4275 1a92 19       		.uleb128 0x19
 4276 1a93 69600000 		.long	0x6069
 4277 1a97 00       		.byte	0
 4278 1a98 44       		.uleb128 0x44
 4279 1a99 00000000 		.long	.LASF18
 4280 1a9d 08       		.byte	0x8
 4281 1a9e 5002     		.value	0x250
 4282 1aa0 00000000 		.long	.LASF240
 4283 1aa4 6F600000 		.long	0x606f
 4284 1aa8 01       		.byte	0x1
 4285 1aa9 B11A0000 		.long	0x1ab1
 4286 1aad BC1A0000 		.long	0x1abc
 4287 1ab1 09       		.uleb128 0x9
 4288 1ab2 51600000 		.long	0x6051
 4289 1ab6 19       		.uleb128 0x19
 4290 1ab7 712C0000 		.long	0x2c71
 4291 1abb 00       		.byte	0
 4292 1abc 44       		.uleb128 0x44
 4293 1abd 00000000 		.long	.LASF241
 4294 1ac1 08       		.byte	0x8
 4295 1ac2 5D02     		.value	0x25d
 4296 1ac4 00000000 		.long	.LASF242
 4297 1ac8 EA130000 		.long	0x13ea
 4298 1acc 01       		.byte	0x1
 4299 1acd D51A0000 		.long	0x1ad5
 4300 1ad1 DB1A0000 		.long	0x1adb
 4301 1ad5 09       		.uleb128 0x9
 4302 1ad6 51600000 		.long	0x6051
 4303 1ada 00       		.byte	0
 4304 1adb 44       		.uleb128 0x44
 4305 1adc 00000000 		.long	.LASF241
 4306 1ae0 08       		.byte	0x8
 4307 1ae1 6802     		.value	0x268
 4308 1ae3 00000000 		.long	.LASF243
 4309 1ae7 F6130000 		.long	0x13f6
 4310 1aeb 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 199


 4311 1aec F41A0000 		.long	0x1af4
 4312 1af0 FA1A0000 		.long	0x1afa
 4313 1af4 09       		.uleb128 0x9
 4314 1af5 4B600000 		.long	0x604b
 4315 1af9 00       		.byte	0
 4316 1afa 45       		.uleb128 0x45
 4317 1afb 656E6400 		.string	"end"
 4318 1aff 08       		.byte	0x8
 4319 1b00 7002     		.value	0x270
 4320 1b02 00000000 		.long	.LASF244
 4321 1b06 EA130000 		.long	0x13ea
 4322 1b0a 01       		.byte	0x1
 4323 1b0b 131B0000 		.long	0x1b13
 4324 1b0f 191B0000 		.long	0x1b19
 4325 1b13 09       		.uleb128 0x9
 4326 1b14 51600000 		.long	0x6051
 4327 1b18 00       		.byte	0
 4328 1b19 45       		.uleb128 0x45
 4329 1b1a 656E6400 		.string	"end"
 4330 1b1e 08       		.byte	0x8
 4331 1b1f 7B02     		.value	0x27b
 4332 1b21 00000000 		.long	.LASF245
 4333 1b25 F6130000 		.long	0x13f6
 4334 1b29 01       		.byte	0x1
 4335 1b2a 321B0000 		.long	0x1b32
 4336 1b2e 381B0000 		.long	0x1b38
 4337 1b32 09       		.uleb128 0x9
 4338 1b33 4B600000 		.long	0x604b
 4339 1b37 00       		.byte	0
 4340 1b38 44       		.uleb128 0x44
 4341 1b39 00000000 		.long	.LASF246
 4342 1b3d 08       		.byte	0x8
 4343 1b3e 8402     		.value	0x284
 4344 1b40 00000000 		.long	.LASF247
 4345 1b44 0E140000 		.long	0x140e
 4346 1b48 01       		.byte	0x1
 4347 1b49 511B0000 		.long	0x1b51
 4348 1b4d 571B0000 		.long	0x1b57
 4349 1b51 09       		.uleb128 0x9
 4350 1b52 51600000 		.long	0x6051
 4351 1b56 00       		.byte	0
 4352 1b57 44       		.uleb128 0x44
 4353 1b58 00000000 		.long	.LASF246
 4354 1b5c 08       		.byte	0x8
 4355 1b5d 8D02     		.value	0x28d
 4356 1b5f 00000000 		.long	.LASF248
 4357 1b63 02140000 		.long	0x1402
 4358 1b67 01       		.byte	0x1
 4359 1b68 701B0000 		.long	0x1b70
 4360 1b6c 761B0000 		.long	0x1b76
 4361 1b70 09       		.uleb128 0x9
 4362 1b71 4B600000 		.long	0x604b
 4363 1b75 00       		.byte	0
 4364 1b76 44       		.uleb128 0x44
 4365 1b77 00000000 		.long	.LASF249
 4366 1b7b 08       		.byte	0x8
 4367 1b7c 9602     		.value	0x296
GAS LISTING /tmp/cceISX6N.s 			page 200


 4368 1b7e 00000000 		.long	.LASF250
 4369 1b82 0E140000 		.long	0x140e
 4370 1b86 01       		.byte	0x1
 4371 1b87 8F1B0000 		.long	0x1b8f
 4372 1b8b 951B0000 		.long	0x1b95
 4373 1b8f 09       		.uleb128 0x9
 4374 1b90 51600000 		.long	0x6051
 4375 1b94 00       		.byte	0
 4376 1b95 44       		.uleb128 0x44
 4377 1b96 00000000 		.long	.LASF249
 4378 1b9a 08       		.byte	0x8
 4379 1b9b 9F02     		.value	0x29f
 4380 1b9d 00000000 		.long	.LASF251
 4381 1ba1 02140000 		.long	0x1402
 4382 1ba5 01       		.byte	0x1
 4383 1ba6 AE1B0000 		.long	0x1bae
 4384 1baa B41B0000 		.long	0x1bb4
 4385 1bae 09       		.uleb128 0x9
 4386 1baf 4B600000 		.long	0x604b
 4387 1bb3 00       		.byte	0
 4388 1bb4 44       		.uleb128 0x44
 4389 1bb5 00000000 		.long	.LASF252
 4390 1bb9 08       		.byte	0x8
 4391 1bba A802     		.value	0x2a8
 4392 1bbc 00000000 		.long	.LASF253
 4393 1bc0 F6130000 		.long	0x13f6
 4394 1bc4 01       		.byte	0x1
 4395 1bc5 CD1B0000 		.long	0x1bcd
 4396 1bc9 D31B0000 		.long	0x1bd3
 4397 1bcd 09       		.uleb128 0x9
 4398 1bce 4B600000 		.long	0x604b
 4399 1bd2 00       		.byte	0
 4400 1bd3 44       		.uleb128 0x44
 4401 1bd4 00000000 		.long	.LASF254
 4402 1bd8 08       		.byte	0x8
 4403 1bd9 B002     		.value	0x2b0
 4404 1bdb 00000000 		.long	.LASF255
 4405 1bdf F6130000 		.long	0x13f6
 4406 1be3 01       		.byte	0x1
 4407 1be4 EC1B0000 		.long	0x1bec
 4408 1be8 F21B0000 		.long	0x1bf2
 4409 1bec 09       		.uleb128 0x9
 4410 1bed 4B600000 		.long	0x604b
 4411 1bf1 00       		.byte	0
 4412 1bf2 44       		.uleb128 0x44
 4413 1bf3 00000000 		.long	.LASF256
 4414 1bf7 08       		.byte	0x8
 4415 1bf8 B902     		.value	0x2b9
 4416 1bfa 00000000 		.long	.LASF257
 4417 1bfe 02140000 		.long	0x1402
 4418 1c02 01       		.byte	0x1
 4419 1c03 0B1C0000 		.long	0x1c0b
 4420 1c07 111C0000 		.long	0x1c11
 4421 1c0b 09       		.uleb128 0x9
 4422 1c0c 4B600000 		.long	0x604b
 4423 1c10 00       		.byte	0
 4424 1c11 44       		.uleb128 0x44
GAS LISTING /tmp/cceISX6N.s 			page 201


 4425 1c12 00000000 		.long	.LASF258
 4426 1c16 08       		.byte	0x8
 4427 1c17 C202     		.value	0x2c2
 4428 1c19 00000000 		.long	.LASF259
 4429 1c1d 02140000 		.long	0x1402
 4430 1c21 01       		.byte	0x1
 4431 1c22 2A1C0000 		.long	0x1c2a
 4432 1c26 301C0000 		.long	0x1c30
 4433 1c2a 09       		.uleb128 0x9
 4434 1c2b 4B600000 		.long	0x604b
 4435 1c2f 00       		.byte	0
 4436 1c30 44       		.uleb128 0x44
 4437 1c31 00000000 		.long	.LASF260
 4438 1c35 08       		.byte	0x8
 4439 1c36 CB02     		.value	0x2cb
 4440 1c38 00000000 		.long	.LASF261
 4441 1c3c 9B130000 		.long	0x139b
 4442 1c40 01       		.byte	0x1
 4443 1c41 491C0000 		.long	0x1c49
 4444 1c45 4F1C0000 		.long	0x1c4f
 4445 1c49 09       		.uleb128 0x9
 4446 1c4a 4B600000 		.long	0x604b
 4447 1c4e 00       		.byte	0
 4448 1c4f 44       		.uleb128 0x44
 4449 1c50 00000000 		.long	.LASF128
 4450 1c54 08       		.byte	0x8
 4451 1c55 D102     		.value	0x2d1
 4452 1c57 00000000 		.long	.LASF262
 4453 1c5b 9B130000 		.long	0x139b
 4454 1c5f 01       		.byte	0x1
 4455 1c60 681C0000 		.long	0x1c68
 4456 1c64 6E1C0000 		.long	0x1c6e
 4457 1c68 09       		.uleb128 0x9
 4458 1c69 4B600000 		.long	0x604b
 4459 1c6d 00       		.byte	0
 4460 1c6e 44       		.uleb128 0x44
 4461 1c6f 00000000 		.long	.LASF263
 4462 1c73 08       		.byte	0x8
 4463 1c74 D602     		.value	0x2d6
 4464 1c76 00000000 		.long	.LASF264
 4465 1c7a 9B130000 		.long	0x139b
 4466 1c7e 01       		.byte	0x1
 4467 1c7f 871C0000 		.long	0x1c87
 4468 1c83 8D1C0000 		.long	0x1c8d
 4469 1c87 09       		.uleb128 0x9
 4470 1c88 4B600000 		.long	0x604b
 4471 1c8c 00       		.byte	0
 4472 1c8d 46       		.uleb128 0x46
 4473 1c8e 00000000 		.long	.LASF265
 4474 1c92 08       		.byte	0x8
 4475 1c93 E402     		.value	0x2e4
 4476 1c95 00000000 		.long	.LASF266
 4477 1c99 01       		.byte	0x1
 4478 1c9a A21C0000 		.long	0x1ca2
 4479 1c9e B21C0000 		.long	0x1cb2
 4480 1ca2 09       		.uleb128 0x9
 4481 1ca3 51600000 		.long	0x6051
GAS LISTING /tmp/cceISX6N.s 			page 202


 4482 1ca7 19       		.uleb128 0x19
 4483 1ca8 9B130000 		.long	0x139b
 4484 1cac 19       		.uleb128 0x19
 4485 1cad 3E490000 		.long	0x493e
 4486 1cb1 00       		.byte	0
 4487 1cb2 46       		.uleb128 0x46
 4488 1cb3 00000000 		.long	.LASF265
 4489 1cb7 08       		.byte	0x8
 4490 1cb8 F102     		.value	0x2f1
 4491 1cba 00000000 		.long	.LASF267
 4492 1cbe 01       		.byte	0x1
 4493 1cbf C71C0000 		.long	0x1cc7
 4494 1cc3 D21C0000 		.long	0x1cd2
 4495 1cc7 09       		.uleb128 0x9
 4496 1cc8 51600000 		.long	0x6051
 4497 1ccc 19       		.uleb128 0x19
 4498 1ccd 9B130000 		.long	0x139b
 4499 1cd1 00       		.byte	0
 4500 1cd2 46       		.uleb128 0x46
 4501 1cd3 00000000 		.long	.LASF268
 4502 1cd7 08       		.byte	0x8
 4503 1cd8 F702     		.value	0x2f7
 4504 1cda 00000000 		.long	.LASF269
 4505 1cde 01       		.byte	0x1
 4506 1cdf E71C0000 		.long	0x1ce7
 4507 1ce3 ED1C0000 		.long	0x1ced
 4508 1ce7 09       		.uleb128 0x9
 4509 1ce8 51600000 		.long	0x6051
 4510 1cec 00       		.byte	0
 4511 1ced 44       		.uleb128 0x44
 4512 1cee 00000000 		.long	.LASF270
 4513 1cf2 08       		.byte	0x8
 4514 1cf3 0803     		.value	0x308
 4515 1cf5 00000000 		.long	.LASF271
 4516 1cf9 9B130000 		.long	0x139b
 4517 1cfd 01       		.byte	0x1
 4518 1cfe 061D0000 		.long	0x1d06
 4519 1d02 0C1D0000 		.long	0x1d0c
 4520 1d06 09       		.uleb128 0x9
 4521 1d07 4B600000 		.long	0x604b
 4522 1d0b 00       		.byte	0
 4523 1d0c 46       		.uleb128 0x46
 4524 1d0d 00000000 		.long	.LASF272
 4525 1d11 08       		.byte	0x8
 4526 1d12 1D03     		.value	0x31d
 4527 1d14 00000000 		.long	.LASF273
 4528 1d18 01       		.byte	0x1
 4529 1d19 211D0000 		.long	0x1d21
 4530 1d1d 2C1D0000 		.long	0x1d2c
 4531 1d21 09       		.uleb128 0x9
 4532 1d22 51600000 		.long	0x6051
 4533 1d26 19       		.uleb128 0x19
 4534 1d27 9B130000 		.long	0x139b
 4535 1d2b 00       		.byte	0
 4536 1d2c 46       		.uleb128 0x46
 4537 1d2d 00000000 		.long	.LASF274
 4538 1d31 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 203


 4539 1d32 2303     		.value	0x323
 4540 1d34 00000000 		.long	.LASF275
 4541 1d38 01       		.byte	0x1
 4542 1d39 411D0000 		.long	0x1d41
 4543 1d3d 471D0000 		.long	0x1d47
 4544 1d41 09       		.uleb128 0x9
 4545 1d42 51600000 		.long	0x6051
 4546 1d46 00       		.byte	0
 4547 1d47 44       		.uleb128 0x44
 4548 1d48 00000000 		.long	.LASF276
 4549 1d4c 08       		.byte	0x8
 4550 1d4d 2B03     		.value	0x32b
 4551 1d4f 00000000 		.long	.LASF277
 4552 1d53 BD4A0000 		.long	0x4abd
 4553 1d57 01       		.byte	0x1
 4554 1d58 601D0000 		.long	0x1d60
 4555 1d5c 661D0000 		.long	0x1d66
 4556 1d60 09       		.uleb128 0x9
 4557 1d61 4B600000 		.long	0x604b
 4558 1d65 00       		.byte	0
 4559 1d66 44       		.uleb128 0x44
 4560 1d67 00000000 		.long	.LASF278
 4561 1d6b 08       		.byte	0x8
 4562 1d6c 3A03     		.value	0x33a
 4563 1d6e 00000000 		.long	.LASF279
 4564 1d72 DE130000 		.long	0x13de
 4565 1d76 01       		.byte	0x1
 4566 1d77 7F1D0000 		.long	0x1d7f
 4567 1d7b 8A1D0000 		.long	0x1d8a
 4568 1d7f 09       		.uleb128 0x9
 4569 1d80 4B600000 		.long	0x604b
 4570 1d84 19       		.uleb128 0x19
 4571 1d85 9B130000 		.long	0x139b
 4572 1d89 00       		.byte	0
 4573 1d8a 44       		.uleb128 0x44
 4574 1d8b 00000000 		.long	.LASF278
 4575 1d8f 08       		.byte	0x8
 4576 1d90 4B03     		.value	0x34b
 4577 1d92 00000000 		.long	.LASF280
 4578 1d96 D2130000 		.long	0x13d2
 4579 1d9a 01       		.byte	0x1
 4580 1d9b A31D0000 		.long	0x1da3
 4581 1d9f AE1D0000 		.long	0x1dae
 4582 1da3 09       		.uleb128 0x9
 4583 1da4 51600000 		.long	0x6051
 4584 1da8 19       		.uleb128 0x19
 4585 1da9 9B130000 		.long	0x139b
 4586 1dad 00       		.byte	0
 4587 1dae 45       		.uleb128 0x45
 4588 1daf 617400   		.string	"at"
 4589 1db2 08       		.byte	0x8
 4590 1db3 6003     		.value	0x360
 4591 1db5 00000000 		.long	.LASF281
 4592 1db9 DE130000 		.long	0x13de
 4593 1dbd 01       		.byte	0x1
 4594 1dbe C61D0000 		.long	0x1dc6
 4595 1dc2 D11D0000 		.long	0x1dd1
GAS LISTING /tmp/cceISX6N.s 			page 204


 4596 1dc6 09       		.uleb128 0x9
 4597 1dc7 4B600000 		.long	0x604b
 4598 1dcb 19       		.uleb128 0x19
 4599 1dcc 9B130000 		.long	0x139b
 4600 1dd0 00       		.byte	0
 4601 1dd1 45       		.uleb128 0x45
 4602 1dd2 617400   		.string	"at"
 4603 1dd5 08       		.byte	0x8
 4604 1dd6 7303     		.value	0x373
 4605 1dd8 00000000 		.long	.LASF282
 4606 1ddc D2130000 		.long	0x13d2
 4607 1de0 01       		.byte	0x1
 4608 1de1 E91D0000 		.long	0x1de9
 4609 1de5 F41D0000 		.long	0x1df4
 4610 1de9 09       		.uleb128 0x9
 4611 1dea 51600000 		.long	0x6051
 4612 1dee 19       		.uleb128 0x19
 4613 1def 9B130000 		.long	0x139b
 4614 1df3 00       		.byte	0
 4615 1df4 44       		.uleb128 0x44
 4616 1df5 00000000 		.long	.LASF283
 4617 1df9 08       		.byte	0x8
 4618 1dfa 8103     		.value	0x381
 4619 1dfc 00000000 		.long	.LASF284
 4620 1e00 D2130000 		.long	0x13d2
 4621 1e04 01       		.byte	0x1
 4622 1e05 0D1E0000 		.long	0x1e0d
 4623 1e09 131E0000 		.long	0x1e13
 4624 1e0d 09       		.uleb128 0x9
 4625 1e0e 51600000 		.long	0x6051
 4626 1e12 00       		.byte	0
 4627 1e13 44       		.uleb128 0x44
 4628 1e14 00000000 		.long	.LASF283
 4629 1e18 08       		.byte	0x8
 4630 1e19 8903     		.value	0x389
 4631 1e1b 00000000 		.long	.LASF285
 4632 1e1f DE130000 		.long	0x13de
 4633 1e23 01       		.byte	0x1
 4634 1e24 2C1E0000 		.long	0x1e2c
 4635 1e28 321E0000 		.long	0x1e32
 4636 1e2c 09       		.uleb128 0x9
 4637 1e2d 4B600000 		.long	0x604b
 4638 1e31 00       		.byte	0
 4639 1e32 44       		.uleb128 0x44
 4640 1e33 00000000 		.long	.LASF286
 4641 1e37 08       		.byte	0x8
 4642 1e38 9103     		.value	0x391
 4643 1e3a 00000000 		.long	.LASF287
 4644 1e3e D2130000 		.long	0x13d2
 4645 1e42 01       		.byte	0x1
 4646 1e43 4B1E0000 		.long	0x1e4b
 4647 1e47 511E0000 		.long	0x1e51
 4648 1e4b 09       		.uleb128 0x9
 4649 1e4c 51600000 		.long	0x6051
 4650 1e50 00       		.byte	0
 4651 1e51 44       		.uleb128 0x44
 4652 1e52 00000000 		.long	.LASF286
GAS LISTING /tmp/cceISX6N.s 			page 205


 4653 1e56 08       		.byte	0x8
 4654 1e57 9903     		.value	0x399
 4655 1e59 00000000 		.long	.LASF288
 4656 1e5d DE130000 		.long	0x13de
 4657 1e61 01       		.byte	0x1
 4658 1e62 6A1E0000 		.long	0x1e6a
 4659 1e66 701E0000 		.long	0x1e70
 4660 1e6a 09       		.uleb128 0x9
 4661 1e6b 4B600000 		.long	0x604b
 4662 1e6f 00       		.byte	0
 4663 1e70 44       		.uleb128 0x44
 4664 1e71 00000000 		.long	.LASF32
 4665 1e75 08       		.byte	0x8
 4666 1e76 A403     		.value	0x3a4
 4667 1e78 00000000 		.long	.LASF289
 4668 1e7c 6F600000 		.long	0x606f
 4669 1e80 01       		.byte	0x1
 4670 1e81 891E0000 		.long	0x1e89
 4671 1e85 941E0000 		.long	0x1e94
 4672 1e89 09       		.uleb128 0x9
 4673 1e8a 51600000 		.long	0x6051
 4674 1e8e 19       		.uleb128 0x19
 4675 1e8f 63600000 		.long	0x6063
 4676 1e93 00       		.byte	0
 4677 1e94 44       		.uleb128 0x44
 4678 1e95 00000000 		.long	.LASF32
 4679 1e99 08       		.byte	0x8
 4680 1e9a AD03     		.value	0x3ad
 4681 1e9c 00000000 		.long	.LASF290
 4682 1ea0 6F600000 		.long	0x606f
 4683 1ea4 01       		.byte	0x1
 4684 1ea5 AD1E0000 		.long	0x1ead
 4685 1ea9 B81E0000 		.long	0x1eb8
 4686 1ead 09       		.uleb128 0x9
 4687 1eae 51600000 		.long	0x6051
 4688 1eb2 19       		.uleb128 0x19
 4689 1eb3 1A4D0000 		.long	0x4d1a
 4690 1eb7 00       		.byte	0
 4691 1eb8 44       		.uleb128 0x44
 4692 1eb9 00000000 		.long	.LASF32
 4693 1ebd 08       		.byte	0x8
 4694 1ebe B603     		.value	0x3b6
 4695 1ec0 00000000 		.long	.LASF291
 4696 1ec4 6F600000 		.long	0x606f
 4697 1ec8 01       		.byte	0x1
 4698 1ec9 D11E0000 		.long	0x1ed1
 4699 1ecd DC1E0000 		.long	0x1edc
 4700 1ed1 09       		.uleb128 0x9
 4701 1ed2 51600000 		.long	0x6051
 4702 1ed6 19       		.uleb128 0x19
 4703 1ed7 3E490000 		.long	0x493e
 4704 1edb 00       		.byte	0
 4705 1edc 44       		.uleb128 0x44
 4706 1edd 00000000 		.long	.LASF32
 4707 1ee1 08       		.byte	0x8
 4708 1ee2 C303     		.value	0x3c3
 4709 1ee4 00000000 		.long	.LASF292
GAS LISTING /tmp/cceISX6N.s 			page 206


 4710 1ee8 6F600000 		.long	0x606f
 4711 1eec 01       		.byte	0x1
 4712 1eed F51E0000 		.long	0x1ef5
 4713 1ef1 001F0000 		.long	0x1f00
 4714 1ef5 09       		.uleb128 0x9
 4715 1ef6 51600000 		.long	0x6051
 4716 1efa 19       		.uleb128 0x19
 4717 1efb 712C0000 		.long	0x2c71
 4718 1eff 00       		.byte	0
 4719 1f00 44       		.uleb128 0x44
 4720 1f01 00000000 		.long	.LASF293
 4721 1f05 08       		.byte	0x8
 4722 1f06 CD03     		.value	0x3cd
 4723 1f08 00000000 		.long	.LASF294
 4724 1f0c 6F600000 		.long	0x606f
 4725 1f10 01       		.byte	0x1
 4726 1f11 191F0000 		.long	0x1f19
 4727 1f15 241F0000 		.long	0x1f24
 4728 1f19 09       		.uleb128 0x9
 4729 1f1a 51600000 		.long	0x6051
 4730 1f1e 19       		.uleb128 0x19
 4731 1f1f 63600000 		.long	0x6063
 4732 1f23 00       		.byte	0
 4733 1f24 44       		.uleb128 0x44
 4734 1f25 00000000 		.long	.LASF293
 4735 1f29 08       		.byte	0x8
 4736 1f2a DD03     		.value	0x3dd
 4737 1f2c 00000000 		.long	.LASF295
 4738 1f30 6F600000 		.long	0x606f
 4739 1f34 01       		.byte	0x1
 4740 1f35 3D1F0000 		.long	0x1f3d
 4741 1f39 521F0000 		.long	0x1f52
 4742 1f3d 09       		.uleb128 0x9
 4743 1f3e 51600000 		.long	0x6051
 4744 1f42 19       		.uleb128 0x19
 4745 1f43 63600000 		.long	0x6063
 4746 1f47 19       		.uleb128 0x19
 4747 1f48 9B130000 		.long	0x139b
 4748 1f4c 19       		.uleb128 0x19
 4749 1f4d 9B130000 		.long	0x139b
 4750 1f51 00       		.byte	0
 4751 1f52 44       		.uleb128 0x44
 4752 1f53 00000000 		.long	.LASF293
 4753 1f57 08       		.byte	0x8
 4754 1f58 E603     		.value	0x3e6
 4755 1f5a 00000000 		.long	.LASF296
 4756 1f5e 6F600000 		.long	0x606f
 4757 1f62 01       		.byte	0x1
 4758 1f63 6B1F0000 		.long	0x1f6b
 4759 1f67 7B1F0000 		.long	0x1f7b
 4760 1f6b 09       		.uleb128 0x9
 4761 1f6c 51600000 		.long	0x6051
 4762 1f70 19       		.uleb128 0x19
 4763 1f71 1A4D0000 		.long	0x4d1a
 4764 1f75 19       		.uleb128 0x19
 4765 1f76 9B130000 		.long	0x139b
 4766 1f7a 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 207


 4767 1f7b 44       		.uleb128 0x44
 4768 1f7c 00000000 		.long	.LASF293
 4769 1f80 08       		.byte	0x8
 4770 1f81 EE03     		.value	0x3ee
 4771 1f83 00000000 		.long	.LASF297
 4772 1f87 6F600000 		.long	0x606f
 4773 1f8b 01       		.byte	0x1
 4774 1f8c 941F0000 		.long	0x1f94
 4775 1f90 9F1F0000 		.long	0x1f9f
 4776 1f94 09       		.uleb128 0x9
 4777 1f95 51600000 		.long	0x6051
 4778 1f99 19       		.uleb128 0x19
 4779 1f9a 1A4D0000 		.long	0x4d1a
 4780 1f9e 00       		.byte	0
 4781 1f9f 44       		.uleb128 0x44
 4782 1fa0 00000000 		.long	.LASF293
 4783 1fa4 08       		.byte	0x8
 4784 1fa5 FD03     		.value	0x3fd
 4785 1fa7 00000000 		.long	.LASF298
 4786 1fab 6F600000 		.long	0x606f
 4787 1faf 01       		.byte	0x1
 4788 1fb0 B81F0000 		.long	0x1fb8
 4789 1fb4 C81F0000 		.long	0x1fc8
 4790 1fb8 09       		.uleb128 0x9
 4791 1fb9 51600000 		.long	0x6051
 4792 1fbd 19       		.uleb128 0x19
 4793 1fbe 9B130000 		.long	0x139b
 4794 1fc2 19       		.uleb128 0x19
 4795 1fc3 3E490000 		.long	0x493e
 4796 1fc7 00       		.byte	0
 4797 1fc8 44       		.uleb128 0x44
 4798 1fc9 00000000 		.long	.LASF293
 4799 1fcd 08       		.byte	0x8
 4800 1fce 0604     		.value	0x406
 4801 1fd0 00000000 		.long	.LASF299
 4802 1fd4 6F600000 		.long	0x606f
 4803 1fd8 01       		.byte	0x1
 4804 1fd9 E11F0000 		.long	0x1fe1
 4805 1fdd EC1F0000 		.long	0x1fec
 4806 1fe1 09       		.uleb128 0x9
 4807 1fe2 51600000 		.long	0x6051
 4808 1fe6 19       		.uleb128 0x19
 4809 1fe7 712C0000 		.long	0x2c71
 4810 1feb 00       		.byte	0
 4811 1fec 46       		.uleb128 0x46
 4812 1fed 00000000 		.long	.LASF300
 4813 1ff1 08       		.byte	0x8
 4814 1ff2 1C04     		.value	0x41c
 4815 1ff4 00000000 		.long	.LASF301
 4816 1ff8 01       		.byte	0x1
 4817 1ff9 01200000 		.long	0x2001
 4818 1ffd 0C200000 		.long	0x200c
 4819 2001 09       		.uleb128 0x9
 4820 2002 51600000 		.long	0x6051
 4821 2006 19       		.uleb128 0x19
 4822 2007 3E490000 		.long	0x493e
 4823 200b 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 208


 4824 200c 44       		.uleb128 0x44
 4825 200d 00000000 		.long	.LASF123
 4826 2011 08       		.byte	0x8
 4827 2012 2B04     		.value	0x42b
 4828 2014 00000000 		.long	.LASF302
 4829 2018 6F600000 		.long	0x606f
 4830 201c 01       		.byte	0x1
 4831 201d 25200000 		.long	0x2025
 4832 2021 30200000 		.long	0x2030
 4833 2025 09       		.uleb128 0x9
 4834 2026 51600000 		.long	0x6051
 4835 202a 19       		.uleb128 0x19
 4836 202b 63600000 		.long	0x6063
 4837 202f 00       		.byte	0
 4838 2030 44       		.uleb128 0x44
 4839 2031 00000000 		.long	.LASF123
 4840 2035 08       		.byte	0x8
 4841 2036 3704     		.value	0x437
 4842 2038 00000000 		.long	.LASF303
 4843 203c 6F600000 		.long	0x606f
 4844 2040 01       		.byte	0x1
 4845 2041 49200000 		.long	0x2049
 4846 2045 54200000 		.long	0x2054
 4847 2049 09       		.uleb128 0x9
 4848 204a 51600000 		.long	0x6051
 4849 204e 19       		.uleb128 0x19
 4850 204f 69600000 		.long	0x6069
 4851 2053 00       		.byte	0
 4852 2054 44       		.uleb128 0x44
 4853 2055 00000000 		.long	.LASF123
 4854 2059 08       		.byte	0x8
 4855 205a 4C04     		.value	0x44c
 4856 205c 00000000 		.long	.LASF304
 4857 2060 6F600000 		.long	0x606f
 4858 2064 01       		.byte	0x1
 4859 2065 6D200000 		.long	0x206d
 4860 2069 82200000 		.long	0x2082
 4861 206d 09       		.uleb128 0x9
 4862 206e 51600000 		.long	0x6051
 4863 2072 19       		.uleb128 0x19
 4864 2073 63600000 		.long	0x6063
 4865 2077 19       		.uleb128 0x19
 4866 2078 9B130000 		.long	0x139b
 4867 207c 19       		.uleb128 0x19
 4868 207d 9B130000 		.long	0x139b
 4869 2081 00       		.byte	0
 4870 2082 44       		.uleb128 0x44
 4871 2083 00000000 		.long	.LASF123
 4872 2087 08       		.byte	0x8
 4873 2088 5C04     		.value	0x45c
 4874 208a 00000000 		.long	.LASF305
 4875 208e 6F600000 		.long	0x606f
 4876 2092 01       		.byte	0x1
 4877 2093 9B200000 		.long	0x209b
 4878 2097 AB200000 		.long	0x20ab
 4879 209b 09       		.uleb128 0x9
 4880 209c 51600000 		.long	0x6051
GAS LISTING /tmp/cceISX6N.s 			page 209


 4881 20a0 19       		.uleb128 0x19
 4882 20a1 1A4D0000 		.long	0x4d1a
 4883 20a5 19       		.uleb128 0x19
 4884 20a6 9B130000 		.long	0x139b
 4885 20aa 00       		.byte	0
 4886 20ab 44       		.uleb128 0x44
 4887 20ac 00000000 		.long	.LASF123
 4888 20b0 08       		.byte	0x8
 4889 20b1 6804     		.value	0x468
 4890 20b3 00000000 		.long	.LASF306
 4891 20b7 6F600000 		.long	0x606f
 4892 20bb 01       		.byte	0x1
 4893 20bc C4200000 		.long	0x20c4
 4894 20c0 CF200000 		.long	0x20cf
 4895 20c4 09       		.uleb128 0x9
 4896 20c5 51600000 		.long	0x6051
 4897 20c9 19       		.uleb128 0x19
 4898 20ca 1A4D0000 		.long	0x4d1a
 4899 20ce 00       		.byte	0
 4900 20cf 44       		.uleb128 0x44
 4901 20d0 00000000 		.long	.LASF123
 4902 20d4 08       		.byte	0x8
 4903 20d5 7804     		.value	0x478
 4904 20d7 00000000 		.long	.LASF307
 4905 20db 6F600000 		.long	0x606f
 4906 20df 01       		.byte	0x1
 4907 20e0 E8200000 		.long	0x20e8
 4908 20e4 F8200000 		.long	0x20f8
 4909 20e8 09       		.uleb128 0x9
 4910 20e9 51600000 		.long	0x6051
 4911 20ed 19       		.uleb128 0x19
 4912 20ee 9B130000 		.long	0x139b
 4913 20f2 19       		.uleb128 0x19
 4914 20f3 3E490000 		.long	0x493e
 4915 20f7 00       		.byte	0
 4916 20f8 44       		.uleb128 0x44
 4917 20f9 00000000 		.long	.LASF123
 4918 20fd 08       		.byte	0x8
 4919 20fe 8F04     		.value	0x48f
 4920 2100 00000000 		.long	.LASF308
 4921 2104 6F600000 		.long	0x606f
 4922 2108 01       		.byte	0x1
 4923 2109 11210000 		.long	0x2111
 4924 210d 1C210000 		.long	0x211c
 4925 2111 09       		.uleb128 0x9
 4926 2112 51600000 		.long	0x6051
 4927 2116 19       		.uleb128 0x19
 4928 2117 712C0000 		.long	0x2c71
 4929 211b 00       		.byte	0
 4930 211c 46       		.uleb128 0x46
 4931 211d 00000000 		.long	.LASF309
 4932 2121 08       		.byte	0x8
 4933 2122 A104     		.value	0x4a1
 4934 2124 00000000 		.long	.LASF310
 4935 2128 01       		.byte	0x1
 4936 2129 31210000 		.long	0x2131
 4937 212d 46210000 		.long	0x2146
GAS LISTING /tmp/cceISX6N.s 			page 210


 4938 2131 09       		.uleb128 0x9
 4939 2132 51600000 		.long	0x6051
 4940 2136 19       		.uleb128 0x19
 4941 2137 EA130000 		.long	0x13ea
 4942 213b 19       		.uleb128 0x19
 4943 213c 9B130000 		.long	0x139b
 4944 2140 19       		.uleb128 0x19
 4945 2141 3E490000 		.long	0x493e
 4946 2145 00       		.byte	0
 4947 2146 46       		.uleb128 0x46
 4948 2147 00000000 		.long	.LASF309
 4949 214b 08       		.byte	0x8
 4950 214c BD04     		.value	0x4bd
 4951 214e 00000000 		.long	.LASF311
 4952 2152 01       		.byte	0x1
 4953 2153 5B210000 		.long	0x215b
 4954 2157 6B210000 		.long	0x216b
 4955 215b 09       		.uleb128 0x9
 4956 215c 51600000 		.long	0x6051
 4957 2160 19       		.uleb128 0x19
 4958 2161 EA130000 		.long	0x13ea
 4959 2165 19       		.uleb128 0x19
 4960 2166 712C0000 		.long	0x2c71
 4961 216a 00       		.byte	0
 4962 216b 44       		.uleb128 0x44
 4963 216c 00000000 		.long	.LASF309
 4964 2170 08       		.byte	0x8
 4965 2171 D104     		.value	0x4d1
 4966 2173 00000000 		.long	.LASF312
 4967 2177 6F600000 		.long	0x606f
 4968 217b 01       		.byte	0x1
 4969 217c 84210000 		.long	0x2184
 4970 2180 94210000 		.long	0x2194
 4971 2184 09       		.uleb128 0x9
 4972 2185 51600000 		.long	0x6051
 4973 2189 19       		.uleb128 0x19
 4974 218a 9B130000 		.long	0x139b
 4975 218e 19       		.uleb128 0x19
 4976 218f 63600000 		.long	0x6063
 4977 2193 00       		.byte	0
 4978 2194 44       		.uleb128 0x44
 4979 2195 00000000 		.long	.LASF309
 4980 2199 08       		.byte	0x8
 4981 219a E704     		.value	0x4e7
 4982 219c 00000000 		.long	.LASF313
 4983 21a0 6F600000 		.long	0x606f
 4984 21a4 01       		.byte	0x1
 4985 21a5 AD210000 		.long	0x21ad
 4986 21a9 C7210000 		.long	0x21c7
 4987 21ad 09       		.uleb128 0x9
 4988 21ae 51600000 		.long	0x6051
 4989 21b2 19       		.uleb128 0x19
 4990 21b3 9B130000 		.long	0x139b
 4991 21b7 19       		.uleb128 0x19
 4992 21b8 63600000 		.long	0x6063
 4993 21bc 19       		.uleb128 0x19
 4994 21bd 9B130000 		.long	0x139b
GAS LISTING /tmp/cceISX6N.s 			page 211


 4995 21c1 19       		.uleb128 0x19
 4996 21c2 9B130000 		.long	0x139b
 4997 21c6 00       		.byte	0
 4998 21c7 44       		.uleb128 0x44
 4999 21c8 00000000 		.long	.LASF309
 5000 21cc 08       		.byte	0x8
 5001 21cd FE04     		.value	0x4fe
 5002 21cf 00000000 		.long	.LASF314
 5003 21d3 6F600000 		.long	0x606f
 5004 21d7 01       		.byte	0x1
 5005 21d8 E0210000 		.long	0x21e0
 5006 21dc F5210000 		.long	0x21f5
 5007 21e0 09       		.uleb128 0x9
 5008 21e1 51600000 		.long	0x6051
 5009 21e5 19       		.uleb128 0x19
 5010 21e6 9B130000 		.long	0x139b
 5011 21ea 19       		.uleb128 0x19
 5012 21eb 1A4D0000 		.long	0x4d1a
 5013 21ef 19       		.uleb128 0x19
 5014 21f0 9B130000 		.long	0x139b
 5015 21f4 00       		.byte	0
 5016 21f5 44       		.uleb128 0x44
 5017 21f6 00000000 		.long	.LASF309
 5018 21fa 08       		.byte	0x8
 5019 21fb 1005     		.value	0x510
 5020 21fd 00000000 		.long	.LASF315
 5021 2201 6F600000 		.long	0x606f
 5022 2205 01       		.byte	0x1
 5023 2206 0E220000 		.long	0x220e
 5024 220a 1E220000 		.long	0x221e
 5025 220e 09       		.uleb128 0x9
 5026 220f 51600000 		.long	0x6051
 5027 2213 19       		.uleb128 0x19
 5028 2214 9B130000 		.long	0x139b
 5029 2218 19       		.uleb128 0x19
 5030 2219 1A4D0000 		.long	0x4d1a
 5031 221d 00       		.byte	0
 5032 221e 44       		.uleb128 0x44
 5033 221f 00000000 		.long	.LASF309
 5034 2223 08       		.byte	0x8
 5035 2224 2705     		.value	0x527
 5036 2226 00000000 		.long	.LASF316
 5037 222a 6F600000 		.long	0x606f
 5038 222e 01       		.byte	0x1
 5039 222f 37220000 		.long	0x2237
 5040 2233 4C220000 		.long	0x224c
 5041 2237 09       		.uleb128 0x9
 5042 2238 51600000 		.long	0x6051
 5043 223c 19       		.uleb128 0x19
 5044 223d 9B130000 		.long	0x139b
 5045 2241 19       		.uleb128 0x19
 5046 2242 9B130000 		.long	0x139b
 5047 2246 19       		.uleb128 0x19
 5048 2247 3E490000 		.long	0x493e
 5049 224b 00       		.byte	0
 5050 224c 44       		.uleb128 0x44
 5051 224d 00000000 		.long	.LASF309
GAS LISTING /tmp/cceISX6N.s 			page 212


 5052 2251 08       		.byte	0x8
 5053 2252 3905     		.value	0x539
 5054 2254 00000000 		.long	.LASF317
 5055 2258 EA130000 		.long	0x13ea
 5056 225c 01       		.byte	0x1
 5057 225d 65220000 		.long	0x2265
 5058 2261 75220000 		.long	0x2275
 5059 2265 09       		.uleb128 0x9
 5060 2266 51600000 		.long	0x6051
 5061 226a 19       		.uleb128 0x19
 5062 226b EA130000 		.long	0x13ea
 5063 226f 19       		.uleb128 0x19
 5064 2270 3E490000 		.long	0x493e
 5065 2274 00       		.byte	0
 5066 2275 44       		.uleb128 0x44
 5067 2276 00000000 		.long	.LASF318
 5068 227a 08       		.byte	0x8
 5069 227b 5205     		.value	0x552
 5070 227d 00000000 		.long	.LASF319
 5071 2281 6F600000 		.long	0x606f
 5072 2285 01       		.byte	0x1
 5073 2286 8E220000 		.long	0x228e
 5074 228a 9E220000 		.long	0x229e
 5075 228e 09       		.uleb128 0x9
 5076 228f 51600000 		.long	0x6051
 5077 2293 19       		.uleb128 0x19
 5078 2294 9B130000 		.long	0x139b
 5079 2298 19       		.uleb128 0x19
 5080 2299 9B130000 		.long	0x139b
 5081 229d 00       		.byte	0
 5082 229e 44       		.uleb128 0x44
 5083 229f 00000000 		.long	.LASF318
 5084 22a3 08       		.byte	0x8
 5085 22a4 6205     		.value	0x562
 5086 22a6 00000000 		.long	.LASF320
 5087 22aa EA130000 		.long	0x13ea
 5088 22ae 01       		.byte	0x1
 5089 22af B7220000 		.long	0x22b7
 5090 22b3 C2220000 		.long	0x22c2
 5091 22b7 09       		.uleb128 0x9
 5092 22b8 51600000 		.long	0x6051
 5093 22bc 19       		.uleb128 0x19
 5094 22bd EA130000 		.long	0x13ea
 5095 22c1 00       		.byte	0
 5096 22c2 44       		.uleb128 0x44
 5097 22c3 00000000 		.long	.LASF318
 5098 22c7 08       		.byte	0x8
 5099 22c8 7605     		.value	0x576
 5100 22ca 00000000 		.long	.LASF321
 5101 22ce EA130000 		.long	0x13ea
 5102 22d2 01       		.byte	0x1
 5103 22d3 DB220000 		.long	0x22db
 5104 22d7 EB220000 		.long	0x22eb
 5105 22db 09       		.uleb128 0x9
 5106 22dc 51600000 		.long	0x6051
 5107 22e0 19       		.uleb128 0x19
 5108 22e1 EA130000 		.long	0x13ea
GAS LISTING /tmp/cceISX6N.s 			page 213


 5109 22e5 19       		.uleb128 0x19
 5110 22e6 EA130000 		.long	0x13ea
 5111 22ea 00       		.byte	0
 5112 22eb 46       		.uleb128 0x46
 5113 22ec 00000000 		.long	.LASF322
 5114 22f0 08       		.byte	0x8
 5115 22f1 7F05     		.value	0x57f
 5116 22f3 00000000 		.long	.LASF323
 5117 22f7 01       		.byte	0x1
 5118 22f8 00230000 		.long	0x2300
 5119 22fc 06230000 		.long	0x2306
 5120 2300 09       		.uleb128 0x9
 5121 2301 51600000 		.long	0x6051
 5122 2305 00       		.byte	0
 5123 2306 44       		.uleb128 0x44
 5124 2307 00000000 		.long	.LASF324
 5125 230b 08       		.byte	0x8
 5126 230c 9505     		.value	0x595
 5127 230e 00000000 		.long	.LASF325
 5128 2312 6F600000 		.long	0x606f
 5129 2316 01       		.byte	0x1
 5130 2317 1F230000 		.long	0x231f
 5131 231b 34230000 		.long	0x2334
 5132 231f 09       		.uleb128 0x9
 5133 2320 51600000 		.long	0x6051
 5134 2324 19       		.uleb128 0x19
 5135 2325 9B130000 		.long	0x139b
 5136 2329 19       		.uleb128 0x19
 5137 232a 9B130000 		.long	0x139b
 5138 232e 19       		.uleb128 0x19
 5139 232f 63600000 		.long	0x6063
 5140 2333 00       		.byte	0
 5141 2334 44       		.uleb128 0x44
 5142 2335 00000000 		.long	.LASF324
 5143 2339 08       		.byte	0x8
 5144 233a AB05     		.value	0x5ab
 5145 233c 00000000 		.long	.LASF326
 5146 2340 6F600000 		.long	0x606f
 5147 2344 01       		.byte	0x1
 5148 2345 4D230000 		.long	0x234d
 5149 2349 6C230000 		.long	0x236c
 5150 234d 09       		.uleb128 0x9
 5151 234e 51600000 		.long	0x6051
 5152 2352 19       		.uleb128 0x19
 5153 2353 9B130000 		.long	0x139b
 5154 2357 19       		.uleb128 0x19
 5155 2358 9B130000 		.long	0x139b
 5156 235c 19       		.uleb128 0x19
 5157 235d 63600000 		.long	0x6063
 5158 2361 19       		.uleb128 0x19
 5159 2362 9B130000 		.long	0x139b
 5160 2366 19       		.uleb128 0x19
 5161 2367 9B130000 		.long	0x139b
 5162 236b 00       		.byte	0
 5163 236c 44       		.uleb128 0x44
 5164 236d 00000000 		.long	.LASF324
 5165 2371 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 214


 5166 2372 C405     		.value	0x5c4
 5167 2374 00000000 		.long	.LASF327
 5168 2378 6F600000 		.long	0x606f
 5169 237c 01       		.byte	0x1
 5170 237d 85230000 		.long	0x2385
 5171 2381 9F230000 		.long	0x239f
 5172 2385 09       		.uleb128 0x9
 5173 2386 51600000 		.long	0x6051
 5174 238a 19       		.uleb128 0x19
 5175 238b 9B130000 		.long	0x139b
 5176 238f 19       		.uleb128 0x19
 5177 2390 9B130000 		.long	0x139b
 5178 2394 19       		.uleb128 0x19
 5179 2395 1A4D0000 		.long	0x4d1a
 5180 2399 19       		.uleb128 0x19
 5181 239a 9B130000 		.long	0x139b
 5182 239e 00       		.byte	0
 5183 239f 44       		.uleb128 0x44
 5184 23a0 00000000 		.long	.LASF324
 5185 23a4 08       		.byte	0x8
 5186 23a5 D805     		.value	0x5d8
 5187 23a7 00000000 		.long	.LASF328
 5188 23ab 6F600000 		.long	0x606f
 5189 23af 01       		.byte	0x1
 5190 23b0 B8230000 		.long	0x23b8
 5191 23b4 CD230000 		.long	0x23cd
 5192 23b8 09       		.uleb128 0x9
 5193 23b9 51600000 		.long	0x6051
 5194 23bd 19       		.uleb128 0x19
 5195 23be 9B130000 		.long	0x139b
 5196 23c2 19       		.uleb128 0x19
 5197 23c3 9B130000 		.long	0x139b
 5198 23c7 19       		.uleb128 0x19
 5199 23c8 1A4D0000 		.long	0x4d1a
 5200 23cc 00       		.byte	0
 5201 23cd 44       		.uleb128 0x44
 5202 23ce 00000000 		.long	.LASF324
 5203 23d2 08       		.byte	0x8
 5204 23d3 F005     		.value	0x5f0
 5205 23d5 00000000 		.long	.LASF329
 5206 23d9 6F600000 		.long	0x606f
 5207 23dd 01       		.byte	0x1
 5208 23de E6230000 		.long	0x23e6
 5209 23e2 00240000 		.long	0x2400
 5210 23e6 09       		.uleb128 0x9
 5211 23e7 51600000 		.long	0x6051
 5212 23eb 19       		.uleb128 0x19
 5213 23ec 9B130000 		.long	0x139b
 5214 23f0 19       		.uleb128 0x19
 5215 23f1 9B130000 		.long	0x139b
 5216 23f5 19       		.uleb128 0x19
 5217 23f6 9B130000 		.long	0x139b
 5218 23fa 19       		.uleb128 0x19
 5219 23fb 3E490000 		.long	0x493e
 5220 23ff 00       		.byte	0
 5221 2400 44       		.uleb128 0x44
 5222 2401 00000000 		.long	.LASF324
GAS LISTING /tmp/cceISX6N.s 			page 215


 5223 2405 08       		.byte	0x8
 5224 2406 0206     		.value	0x602
 5225 2408 00000000 		.long	.LASF330
 5226 240c 6F600000 		.long	0x606f
 5227 2410 01       		.byte	0x1
 5228 2411 19240000 		.long	0x2419
 5229 2415 2E240000 		.long	0x242e
 5230 2419 09       		.uleb128 0x9
 5231 241a 51600000 		.long	0x6051
 5232 241e 19       		.uleb128 0x19
 5233 241f EA130000 		.long	0x13ea
 5234 2423 19       		.uleb128 0x19
 5235 2424 EA130000 		.long	0x13ea
 5236 2428 19       		.uleb128 0x19
 5237 2429 63600000 		.long	0x6063
 5238 242d 00       		.byte	0
 5239 242e 44       		.uleb128 0x44
 5240 242f 00000000 		.long	.LASF324
 5241 2433 08       		.byte	0x8
 5242 2434 1506     		.value	0x615
 5243 2436 00000000 		.long	.LASF331
 5244 243a 6F600000 		.long	0x606f
 5245 243e 01       		.byte	0x1
 5246 243f 47240000 		.long	0x2447
 5247 2443 61240000 		.long	0x2461
 5248 2447 09       		.uleb128 0x9
 5249 2448 51600000 		.long	0x6051
 5250 244c 19       		.uleb128 0x19
 5251 244d EA130000 		.long	0x13ea
 5252 2451 19       		.uleb128 0x19
 5253 2452 EA130000 		.long	0x13ea
 5254 2456 19       		.uleb128 0x19
 5255 2457 1A4D0000 		.long	0x4d1a
 5256 245b 19       		.uleb128 0x19
 5257 245c 9B130000 		.long	0x139b
 5258 2460 00       		.byte	0
 5259 2461 44       		.uleb128 0x44
 5260 2462 00000000 		.long	.LASF324
 5261 2466 08       		.byte	0x8
 5262 2467 2A06     		.value	0x62a
 5263 2469 00000000 		.long	.LASF332
 5264 246d 6F600000 		.long	0x606f
 5265 2471 01       		.byte	0x1
 5266 2472 7A240000 		.long	0x247a
 5267 2476 8F240000 		.long	0x248f
 5268 247a 09       		.uleb128 0x9
 5269 247b 51600000 		.long	0x6051
 5270 247f 19       		.uleb128 0x19
 5271 2480 EA130000 		.long	0x13ea
 5272 2484 19       		.uleb128 0x19
 5273 2485 EA130000 		.long	0x13ea
 5274 2489 19       		.uleb128 0x19
 5275 248a 1A4D0000 		.long	0x4d1a
 5276 248e 00       		.byte	0
 5277 248f 44       		.uleb128 0x44
 5278 2490 00000000 		.long	.LASF324
 5279 2494 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 216


 5280 2495 3F06     		.value	0x63f
 5281 2497 00000000 		.long	.LASF333
 5282 249b 6F600000 		.long	0x606f
 5283 249f 01       		.byte	0x1
 5284 24a0 A8240000 		.long	0x24a8
 5285 24a4 C2240000 		.long	0x24c2
 5286 24a8 09       		.uleb128 0x9
 5287 24a9 51600000 		.long	0x6051
 5288 24ad 19       		.uleb128 0x19
 5289 24ae EA130000 		.long	0x13ea
 5290 24b2 19       		.uleb128 0x19
 5291 24b3 EA130000 		.long	0x13ea
 5292 24b7 19       		.uleb128 0x19
 5293 24b8 9B130000 		.long	0x139b
 5294 24bc 19       		.uleb128 0x19
 5295 24bd 3E490000 		.long	0x493e
 5296 24c1 00       		.byte	0
 5297 24c2 44       		.uleb128 0x44
 5298 24c3 00000000 		.long	.LASF324
 5299 24c7 08       		.byte	0x8
 5300 24c8 6406     		.value	0x664
 5301 24ca 00000000 		.long	.LASF334
 5302 24ce 6F600000 		.long	0x606f
 5303 24d2 01       		.byte	0x1
 5304 24d3 DB240000 		.long	0x24db
 5305 24d7 F5240000 		.long	0x24f5
 5306 24db 09       		.uleb128 0x9
 5307 24dc 51600000 		.long	0x6051
 5308 24e0 19       		.uleb128 0x19
 5309 24e1 EA130000 		.long	0x13ea
 5310 24e5 19       		.uleb128 0x19
 5311 24e6 EA130000 		.long	0x13ea
 5312 24ea 19       		.uleb128 0x19
 5313 24eb 38490000 		.long	0x4938
 5314 24ef 19       		.uleb128 0x19
 5315 24f0 38490000 		.long	0x4938
 5316 24f4 00       		.byte	0
 5317 24f5 44       		.uleb128 0x44
 5318 24f6 00000000 		.long	.LASF324
 5319 24fa 08       		.byte	0x8
 5320 24fb 6E06     		.value	0x66e
 5321 24fd 00000000 		.long	.LASF335
 5322 2501 6F600000 		.long	0x606f
 5323 2505 01       		.byte	0x1
 5324 2506 0E250000 		.long	0x250e
 5325 250a 28250000 		.long	0x2528
 5326 250e 09       		.uleb128 0x9
 5327 250f 51600000 		.long	0x6051
 5328 2513 19       		.uleb128 0x19
 5329 2514 EA130000 		.long	0x13ea
 5330 2518 19       		.uleb128 0x19
 5331 2519 EA130000 		.long	0x13ea
 5332 251d 19       		.uleb128 0x19
 5333 251e 1A4D0000 		.long	0x4d1a
 5334 2522 19       		.uleb128 0x19
 5335 2523 1A4D0000 		.long	0x4d1a
 5336 2527 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 217


 5337 2528 44       		.uleb128 0x44
 5338 2529 00000000 		.long	.LASF324
 5339 252d 08       		.byte	0x8
 5340 252e 7906     		.value	0x679
 5341 2530 00000000 		.long	.LASF336
 5342 2534 6F600000 		.long	0x606f
 5343 2538 01       		.byte	0x1
 5344 2539 41250000 		.long	0x2541
 5345 253d 5B250000 		.long	0x255b
 5346 2541 09       		.uleb128 0x9
 5347 2542 51600000 		.long	0x6051
 5348 2546 19       		.uleb128 0x19
 5349 2547 EA130000 		.long	0x13ea
 5350 254b 19       		.uleb128 0x19
 5351 254c EA130000 		.long	0x13ea
 5352 2550 19       		.uleb128 0x19
 5353 2551 EA130000 		.long	0x13ea
 5354 2555 19       		.uleb128 0x19
 5355 2556 EA130000 		.long	0x13ea
 5356 255a 00       		.byte	0
 5357 255b 44       		.uleb128 0x44
 5358 255c 00000000 		.long	.LASF324
 5359 2560 08       		.byte	0x8
 5360 2561 8306     		.value	0x683
 5361 2563 00000000 		.long	.LASF337
 5362 2567 6F600000 		.long	0x606f
 5363 256b 01       		.byte	0x1
 5364 256c 74250000 		.long	0x2574
 5365 2570 8E250000 		.long	0x258e
 5366 2574 09       		.uleb128 0x9
 5367 2575 51600000 		.long	0x6051
 5368 2579 19       		.uleb128 0x19
 5369 257a EA130000 		.long	0x13ea
 5370 257e 19       		.uleb128 0x19
 5371 257f EA130000 		.long	0x13ea
 5372 2583 19       		.uleb128 0x19
 5373 2584 F6130000 		.long	0x13f6
 5374 2588 19       		.uleb128 0x19
 5375 2589 F6130000 		.long	0x13f6
 5376 258d 00       		.byte	0
 5377 258e 44       		.uleb128 0x44
 5378 258f 00000000 		.long	.LASF324
 5379 2593 08       		.byte	0x8
 5380 2594 9C06     		.value	0x69c
 5381 2596 00000000 		.long	.LASF338
 5382 259a 6F600000 		.long	0x606f
 5383 259e 01       		.byte	0x1
 5384 259f A7250000 		.long	0x25a7
 5385 25a3 BC250000 		.long	0x25bc
 5386 25a7 09       		.uleb128 0x9
 5387 25a8 51600000 		.long	0x6051
 5388 25ac 19       		.uleb128 0x19
 5389 25ad EA130000 		.long	0x13ea
 5390 25b1 19       		.uleb128 0x19
 5391 25b2 EA130000 		.long	0x13ea
 5392 25b6 19       		.uleb128 0x19
 5393 25b7 712C0000 		.long	0x2c71
GAS LISTING /tmp/cceISX6N.s 			page 218


 5394 25bb 00       		.byte	0
 5395 25bc 1A       		.uleb128 0x1a
 5396 25bd 00000000 		.long	.LASF339
 5397 25c1 08       		.byte	0x8
 5398 25c2 AE06     		.value	0x6ae
 5399 25c4 00000000 		.long	.LASF340
 5400 25c8 6F600000 		.long	0x606f
 5401 25cc D4250000 		.long	0x25d4
 5402 25d0 EE250000 		.long	0x25ee
 5403 25d4 09       		.uleb128 0x9
 5404 25d5 51600000 		.long	0x6051
 5405 25d9 19       		.uleb128 0x19
 5406 25da 9B130000 		.long	0x139b
 5407 25de 19       		.uleb128 0x19
 5408 25df 9B130000 		.long	0x139b
 5409 25e3 19       		.uleb128 0x19
 5410 25e4 9B130000 		.long	0x139b
 5411 25e8 19       		.uleb128 0x19
 5412 25e9 3E490000 		.long	0x493e
 5413 25ed 00       		.byte	0
 5414 25ee 1A       		.uleb128 0x1a
 5415 25ef 00000000 		.long	.LASF341
 5416 25f3 08       		.byte	0x8
 5417 25f4 B206     		.value	0x6b2
 5418 25f6 00000000 		.long	.LASF342
 5419 25fa 6F600000 		.long	0x606f
 5420 25fe 06260000 		.long	0x2606
 5421 2602 20260000 		.long	0x2620
 5422 2606 09       		.uleb128 0x9
 5423 2607 51600000 		.long	0x6051
 5424 260b 19       		.uleb128 0x19
 5425 260c 9B130000 		.long	0x139b
 5426 2610 19       		.uleb128 0x19
 5427 2611 9B130000 		.long	0x139b
 5428 2615 19       		.uleb128 0x19
 5429 2616 1A4D0000 		.long	0x4d1a
 5430 261a 19       		.uleb128 0x19
 5431 261b 9B130000 		.long	0x139b
 5432 261f 00       		.byte	0
 5433 2620 35       		.uleb128 0x35
 5434 2621 00000000 		.long	.LASF343
 5435 2625 08       		.byte	0x8
 5436 2626 CA06     		.value	0x6ca
 5437 2628 00000000 		.long	.LASF344
 5438 262c 38490000 		.long	0x4938
 5439 2630 44260000 		.long	0x2644
 5440 2634 19       		.uleb128 0x19
 5441 2635 9B130000 		.long	0x139b
 5442 2639 19       		.uleb128 0x19
 5443 263a 3E490000 		.long	0x493e
 5444 263e 19       		.uleb128 0x19
 5445 263f 6F590000 		.long	0x596f
 5446 2643 00       		.byte	0
 5447 2644 35       		.uleb128 0x35
 5448 2645 00000000 		.long	.LASF345
 5449 2649 08       		.byte	0x8
 5450 264a E306     		.value	0x6e3
GAS LISTING /tmp/cceISX6N.s 			page 219


 5451 264c 00000000 		.long	.LASF346
 5452 2650 38490000 		.long	0x4938
 5453 2654 68260000 		.long	0x2668
 5454 2658 19       		.uleb128 0x19
 5455 2659 9B130000 		.long	0x139b
 5456 265d 19       		.uleb128 0x19
 5457 265e 3E490000 		.long	0x493e
 5458 2662 19       		.uleb128 0x19
 5459 2663 6F590000 		.long	0x596f
 5460 2667 00       		.byte	0
 5461 2668 44       		.uleb128 0x44
 5462 2669 00000000 		.long	.LASF134
 5463 266d 08       		.byte	0x8
 5464 266e F406     		.value	0x6f4
 5465 2670 00000000 		.long	.LASF347
 5466 2674 9B130000 		.long	0x139b
 5467 2678 01       		.byte	0x1
 5468 2679 81260000 		.long	0x2681
 5469 267d 96260000 		.long	0x2696
 5470 2681 09       		.uleb128 0x9
 5471 2682 4B600000 		.long	0x604b
 5472 2686 19       		.uleb128 0x19
 5473 2687 38490000 		.long	0x4938
 5474 268b 19       		.uleb128 0x19
 5475 268c 9B130000 		.long	0x139b
 5476 2690 19       		.uleb128 0x19
 5477 2691 9B130000 		.long	0x139b
 5478 2695 00       		.byte	0
 5479 2696 46       		.uleb128 0x46
 5480 2697 00000000 		.long	.LASF113
 5481 269b 08       		.byte	0x8
 5482 269c FE06     		.value	0x6fe
 5483 269e 00000000 		.long	.LASF348
 5484 26a2 01       		.byte	0x1
 5485 26a3 AB260000 		.long	0x26ab
 5486 26a7 B6260000 		.long	0x26b6
 5487 26ab 09       		.uleb128 0x9
 5488 26ac 51600000 		.long	0x6051
 5489 26b0 19       		.uleb128 0x19
 5490 26b1 6F600000 		.long	0x606f
 5491 26b5 00       		.byte	0
 5492 26b6 44       		.uleb128 0x44
 5493 26b7 00000000 		.long	.LASF349
 5494 26bb 08       		.byte	0x8
 5495 26bc 0807     		.value	0x708
 5496 26be 00000000 		.long	.LASF350
 5497 26c2 1A4D0000 		.long	0x4d1a
 5498 26c6 01       		.byte	0x1
 5499 26c7 CF260000 		.long	0x26cf
 5500 26cb D5260000 		.long	0x26d5
 5501 26cf 09       		.uleb128 0x9
 5502 26d0 4B600000 		.long	0x604b
 5503 26d4 00       		.byte	0
 5504 26d5 44       		.uleb128 0x44
 5505 26d6 00000000 		.long	.LASF351
 5506 26da 08       		.byte	0x8
 5507 26db 1207     		.value	0x712
GAS LISTING /tmp/cceISX6N.s 			page 220


 5508 26dd 00000000 		.long	.LASF352
 5509 26e1 1A4D0000 		.long	0x4d1a
 5510 26e5 01       		.byte	0x1
 5511 26e6 EE260000 		.long	0x26ee
 5512 26ea F4260000 		.long	0x26f4
 5513 26ee 09       		.uleb128 0x9
 5514 26ef 4B600000 		.long	0x604b
 5515 26f3 00       		.byte	0
 5516 26f4 44       		.uleb128 0x44
 5517 26f5 00000000 		.long	.LASF353
 5518 26f9 08       		.byte	0x8
 5519 26fa 1907     		.value	0x719
 5520 26fc 00000000 		.long	.LASF354
 5521 2700 C6130000 		.long	0x13c6
 5522 2704 01       		.byte	0x1
 5523 2705 0D270000 		.long	0x270d
 5524 2709 13270000 		.long	0x2713
 5525 270d 09       		.uleb128 0x9
 5526 270e 4B600000 		.long	0x604b
 5527 2712 00       		.byte	0
 5528 2713 44       		.uleb128 0x44
 5529 2714 00000000 		.long	.LASF129
 5530 2718 08       		.byte	0x8
 5531 2719 2907     		.value	0x729
 5532 271b 00000000 		.long	.LASF355
 5533 271f 9B130000 		.long	0x139b
 5534 2723 01       		.byte	0x1
 5535 2724 2C270000 		.long	0x272c
 5536 2728 41270000 		.long	0x2741
 5537 272c 09       		.uleb128 0x9
 5538 272d 4B600000 		.long	0x604b
 5539 2731 19       		.uleb128 0x19
 5540 2732 1A4D0000 		.long	0x4d1a
 5541 2736 19       		.uleb128 0x19
 5542 2737 9B130000 		.long	0x139b
 5543 273b 19       		.uleb128 0x19
 5544 273c 9B130000 		.long	0x139b
 5545 2740 00       		.byte	0
 5546 2741 44       		.uleb128 0x44
 5547 2742 00000000 		.long	.LASF129
 5548 2746 08       		.byte	0x8
 5549 2747 3607     		.value	0x736
 5550 2749 00000000 		.long	.LASF356
 5551 274d 9B130000 		.long	0x139b
 5552 2751 01       		.byte	0x1
 5553 2752 5A270000 		.long	0x275a
 5554 2756 6A270000 		.long	0x276a
 5555 275a 09       		.uleb128 0x9
 5556 275b 4B600000 		.long	0x604b
 5557 275f 19       		.uleb128 0x19
 5558 2760 63600000 		.long	0x6063
 5559 2764 19       		.uleb128 0x19
 5560 2765 9B130000 		.long	0x139b
 5561 2769 00       		.byte	0
 5562 276a 44       		.uleb128 0x44
 5563 276b 00000000 		.long	.LASF129
 5564 276f 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 221


 5565 2770 4507     		.value	0x745
 5566 2772 00000000 		.long	.LASF357
 5567 2776 9B130000 		.long	0x139b
 5568 277a 01       		.byte	0x1
 5569 277b 83270000 		.long	0x2783
 5570 277f 93270000 		.long	0x2793
 5571 2783 09       		.uleb128 0x9
 5572 2784 4B600000 		.long	0x604b
 5573 2788 19       		.uleb128 0x19
 5574 2789 1A4D0000 		.long	0x4d1a
 5575 278d 19       		.uleb128 0x19
 5576 278e 9B130000 		.long	0x139b
 5577 2792 00       		.byte	0
 5578 2793 44       		.uleb128 0x44
 5579 2794 00000000 		.long	.LASF129
 5580 2798 08       		.byte	0x8
 5581 2799 5607     		.value	0x756
 5582 279b 00000000 		.long	.LASF358
 5583 279f 9B130000 		.long	0x139b
 5584 27a3 01       		.byte	0x1
 5585 27a4 AC270000 		.long	0x27ac
 5586 27a8 BC270000 		.long	0x27bc
 5587 27ac 09       		.uleb128 0x9
 5588 27ad 4B600000 		.long	0x604b
 5589 27b1 19       		.uleb128 0x19
 5590 27b2 3E490000 		.long	0x493e
 5591 27b6 19       		.uleb128 0x19
 5592 27b7 9B130000 		.long	0x139b
 5593 27bb 00       		.byte	0
 5594 27bc 44       		.uleb128 0x44
 5595 27bd 00000000 		.long	.LASF359
 5596 27c1 08       		.byte	0x8
 5597 27c2 6307     		.value	0x763
 5598 27c4 00000000 		.long	.LASF360
 5599 27c8 9B130000 		.long	0x139b
 5600 27cc 01       		.byte	0x1
 5601 27cd D5270000 		.long	0x27d5
 5602 27d1 E5270000 		.long	0x27e5
 5603 27d5 09       		.uleb128 0x9
 5604 27d6 4B600000 		.long	0x604b
 5605 27da 19       		.uleb128 0x19
 5606 27db 63600000 		.long	0x6063
 5607 27df 19       		.uleb128 0x19
 5608 27e0 9B130000 		.long	0x139b
 5609 27e4 00       		.byte	0
 5610 27e5 44       		.uleb128 0x44
 5611 27e6 00000000 		.long	.LASF359
 5612 27ea 08       		.byte	0x8
 5613 27eb 7407     		.value	0x774
 5614 27ed 00000000 		.long	.LASF361
 5615 27f1 9B130000 		.long	0x139b
 5616 27f5 01       		.byte	0x1
 5617 27f6 FE270000 		.long	0x27fe
 5618 27fa 13280000 		.long	0x2813
 5619 27fe 09       		.uleb128 0x9
 5620 27ff 4B600000 		.long	0x604b
 5621 2803 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 222


 5622 2804 1A4D0000 		.long	0x4d1a
 5623 2808 19       		.uleb128 0x19
 5624 2809 9B130000 		.long	0x139b
 5625 280d 19       		.uleb128 0x19
 5626 280e 9B130000 		.long	0x139b
 5627 2812 00       		.byte	0
 5628 2813 44       		.uleb128 0x44
 5629 2814 00000000 		.long	.LASF359
 5630 2818 08       		.byte	0x8
 5631 2819 8107     		.value	0x781
 5632 281b 00000000 		.long	.LASF362
 5633 281f 9B130000 		.long	0x139b
 5634 2823 01       		.byte	0x1
 5635 2824 2C280000 		.long	0x282c
 5636 2828 3C280000 		.long	0x283c
 5637 282c 09       		.uleb128 0x9
 5638 282d 4B600000 		.long	0x604b
 5639 2831 19       		.uleb128 0x19
 5640 2832 1A4D0000 		.long	0x4d1a
 5641 2836 19       		.uleb128 0x19
 5642 2837 9B130000 		.long	0x139b
 5643 283b 00       		.byte	0
 5644 283c 44       		.uleb128 0x44
 5645 283d 00000000 		.long	.LASF359
 5646 2841 08       		.byte	0x8
 5647 2842 9207     		.value	0x792
 5648 2844 00000000 		.long	.LASF363
 5649 2848 9B130000 		.long	0x139b
 5650 284c 01       		.byte	0x1
 5651 284d 55280000 		.long	0x2855
 5652 2851 65280000 		.long	0x2865
 5653 2855 09       		.uleb128 0x9
 5654 2856 4B600000 		.long	0x604b
 5655 285a 19       		.uleb128 0x19
 5656 285b 3E490000 		.long	0x493e
 5657 285f 19       		.uleb128 0x19
 5658 2860 9B130000 		.long	0x139b
 5659 2864 00       		.byte	0
 5660 2865 44       		.uleb128 0x44
 5661 2866 00000000 		.long	.LASF364
 5662 286a 08       		.byte	0x8
 5663 286b A007     		.value	0x7a0
 5664 286d 00000000 		.long	.LASF365
 5665 2871 9B130000 		.long	0x139b
 5666 2875 01       		.byte	0x1
 5667 2876 7E280000 		.long	0x287e
 5668 287a 8E280000 		.long	0x288e
 5669 287e 09       		.uleb128 0x9
 5670 287f 4B600000 		.long	0x604b
 5671 2883 19       		.uleb128 0x19
 5672 2884 63600000 		.long	0x6063
 5673 2888 19       		.uleb128 0x19
 5674 2889 9B130000 		.long	0x139b
 5675 288d 00       		.byte	0
 5676 288e 44       		.uleb128 0x44
 5677 288f 00000000 		.long	.LASF364
 5678 2893 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 223


 5679 2894 B107     		.value	0x7b1
 5680 2896 00000000 		.long	.LASF366
 5681 289a 9B130000 		.long	0x139b
 5682 289e 01       		.byte	0x1
 5683 289f A7280000 		.long	0x28a7
 5684 28a3 BC280000 		.long	0x28bc
 5685 28a7 09       		.uleb128 0x9
 5686 28a8 4B600000 		.long	0x604b
 5687 28ac 19       		.uleb128 0x19
 5688 28ad 1A4D0000 		.long	0x4d1a
 5689 28b1 19       		.uleb128 0x19
 5690 28b2 9B130000 		.long	0x139b
 5691 28b6 19       		.uleb128 0x19
 5692 28b7 9B130000 		.long	0x139b
 5693 28bb 00       		.byte	0
 5694 28bc 44       		.uleb128 0x44
 5695 28bd 00000000 		.long	.LASF364
 5696 28c1 08       		.byte	0x8
 5697 28c2 BE07     		.value	0x7be
 5698 28c4 00000000 		.long	.LASF367
 5699 28c8 9B130000 		.long	0x139b
 5700 28cc 01       		.byte	0x1
 5701 28cd D5280000 		.long	0x28d5
 5702 28d1 E5280000 		.long	0x28e5
 5703 28d5 09       		.uleb128 0x9
 5704 28d6 4B600000 		.long	0x604b
 5705 28da 19       		.uleb128 0x19
 5706 28db 1A4D0000 		.long	0x4d1a
 5707 28df 19       		.uleb128 0x19
 5708 28e0 9B130000 		.long	0x139b
 5709 28e4 00       		.byte	0
 5710 28e5 44       		.uleb128 0x44
 5711 28e6 00000000 		.long	.LASF364
 5712 28ea 08       		.byte	0x8
 5713 28eb D107     		.value	0x7d1
 5714 28ed 00000000 		.long	.LASF368
 5715 28f1 9B130000 		.long	0x139b
 5716 28f5 01       		.byte	0x1
 5717 28f6 FE280000 		.long	0x28fe
 5718 28fa 0E290000 		.long	0x290e
 5719 28fe 09       		.uleb128 0x9
 5720 28ff 4B600000 		.long	0x604b
 5721 2903 19       		.uleb128 0x19
 5722 2904 3E490000 		.long	0x493e
 5723 2908 19       		.uleb128 0x19
 5724 2909 9B130000 		.long	0x139b
 5725 290d 00       		.byte	0
 5726 290e 44       		.uleb128 0x44
 5727 290f 00000000 		.long	.LASF369
 5728 2913 08       		.byte	0x8
 5729 2914 E007     		.value	0x7e0
 5730 2916 00000000 		.long	.LASF370
 5731 291a 9B130000 		.long	0x139b
 5732 291e 01       		.byte	0x1
 5733 291f 27290000 		.long	0x2927
 5734 2923 37290000 		.long	0x2937
 5735 2927 09       		.uleb128 0x9
GAS LISTING /tmp/cceISX6N.s 			page 224


 5736 2928 4B600000 		.long	0x604b
 5737 292c 19       		.uleb128 0x19
 5738 292d 63600000 		.long	0x6063
 5739 2931 19       		.uleb128 0x19
 5740 2932 9B130000 		.long	0x139b
 5741 2936 00       		.byte	0
 5742 2937 44       		.uleb128 0x44
 5743 2938 00000000 		.long	.LASF369
 5744 293c 08       		.byte	0x8
 5745 293d F107     		.value	0x7f1
 5746 293f 00000000 		.long	.LASF371
 5747 2943 9B130000 		.long	0x139b
 5748 2947 01       		.byte	0x1
 5749 2948 50290000 		.long	0x2950
 5750 294c 65290000 		.long	0x2965
 5751 2950 09       		.uleb128 0x9
 5752 2951 4B600000 		.long	0x604b
 5753 2955 19       		.uleb128 0x19
 5754 2956 1A4D0000 		.long	0x4d1a
 5755 295a 19       		.uleb128 0x19
 5756 295b 9B130000 		.long	0x139b
 5757 295f 19       		.uleb128 0x19
 5758 2960 9B130000 		.long	0x139b
 5759 2964 00       		.byte	0
 5760 2965 44       		.uleb128 0x44
 5761 2966 00000000 		.long	.LASF369
 5762 296a 08       		.byte	0x8
 5763 296b FE07     		.value	0x7fe
 5764 296d 00000000 		.long	.LASF372
 5765 2971 9B130000 		.long	0x139b
 5766 2975 01       		.byte	0x1
 5767 2976 7E290000 		.long	0x297e
 5768 297a 8E290000 		.long	0x298e
 5769 297e 09       		.uleb128 0x9
 5770 297f 4B600000 		.long	0x604b
 5771 2983 19       		.uleb128 0x19
 5772 2984 1A4D0000 		.long	0x4d1a
 5773 2988 19       		.uleb128 0x19
 5774 2989 9B130000 		.long	0x139b
 5775 298d 00       		.byte	0
 5776 298e 44       		.uleb128 0x44
 5777 298f 00000000 		.long	.LASF369
 5778 2993 08       		.byte	0x8
 5779 2994 1108     		.value	0x811
 5780 2996 00000000 		.long	.LASF373
 5781 299a 9B130000 		.long	0x139b
 5782 299e 01       		.byte	0x1
 5783 299f A7290000 		.long	0x29a7
 5784 29a3 B7290000 		.long	0x29b7
 5785 29a7 09       		.uleb128 0x9
 5786 29a8 4B600000 		.long	0x604b
 5787 29ac 19       		.uleb128 0x19
 5788 29ad 3E490000 		.long	0x493e
 5789 29b1 19       		.uleb128 0x19
 5790 29b2 9B130000 		.long	0x139b
 5791 29b6 00       		.byte	0
 5792 29b7 44       		.uleb128 0x44
GAS LISTING /tmp/cceISX6N.s 			page 225


 5793 29b8 00000000 		.long	.LASF374
 5794 29bc 08       		.byte	0x8
 5795 29bd 1F08     		.value	0x81f
 5796 29bf 00000000 		.long	.LASF375
 5797 29c3 9B130000 		.long	0x139b
 5798 29c7 01       		.byte	0x1
 5799 29c8 D0290000 		.long	0x29d0
 5800 29cc E0290000 		.long	0x29e0
 5801 29d0 09       		.uleb128 0x9
 5802 29d1 4B600000 		.long	0x604b
 5803 29d5 19       		.uleb128 0x19
 5804 29d6 63600000 		.long	0x6063
 5805 29da 19       		.uleb128 0x19
 5806 29db 9B130000 		.long	0x139b
 5807 29df 00       		.byte	0
 5808 29e0 44       		.uleb128 0x44
 5809 29e1 00000000 		.long	.LASF374
 5810 29e5 08       		.byte	0x8
 5811 29e6 3008     		.value	0x830
 5812 29e8 00000000 		.long	.LASF376
 5813 29ec 9B130000 		.long	0x139b
 5814 29f0 01       		.byte	0x1
 5815 29f1 F9290000 		.long	0x29f9
 5816 29f5 0E2A0000 		.long	0x2a0e
 5817 29f9 09       		.uleb128 0x9
 5818 29fa 4B600000 		.long	0x604b
 5819 29fe 19       		.uleb128 0x19
 5820 29ff 1A4D0000 		.long	0x4d1a
 5821 2a03 19       		.uleb128 0x19
 5822 2a04 9B130000 		.long	0x139b
 5823 2a08 19       		.uleb128 0x19
 5824 2a09 9B130000 		.long	0x139b
 5825 2a0d 00       		.byte	0
 5826 2a0e 44       		.uleb128 0x44
 5827 2a0f 00000000 		.long	.LASF374
 5828 2a13 08       		.byte	0x8
 5829 2a14 3E08     		.value	0x83e
 5830 2a16 00000000 		.long	.LASF377
 5831 2a1a 9B130000 		.long	0x139b
 5832 2a1e 01       		.byte	0x1
 5833 2a1f 272A0000 		.long	0x2a27
 5834 2a23 372A0000 		.long	0x2a37
 5835 2a27 09       		.uleb128 0x9
 5836 2a28 4B600000 		.long	0x604b
 5837 2a2c 19       		.uleb128 0x19
 5838 2a2d 1A4D0000 		.long	0x4d1a
 5839 2a31 19       		.uleb128 0x19
 5840 2a32 9B130000 		.long	0x139b
 5841 2a36 00       		.byte	0
 5842 2a37 44       		.uleb128 0x44
 5843 2a38 00000000 		.long	.LASF374
 5844 2a3c 08       		.byte	0x8
 5845 2a3d 4F08     		.value	0x84f
 5846 2a3f 00000000 		.long	.LASF378
 5847 2a43 9B130000 		.long	0x139b
 5848 2a47 01       		.byte	0x1
 5849 2a48 502A0000 		.long	0x2a50
GAS LISTING /tmp/cceISX6N.s 			page 226


 5850 2a4c 602A0000 		.long	0x2a60
 5851 2a50 09       		.uleb128 0x9
 5852 2a51 4B600000 		.long	0x604b
 5853 2a55 19       		.uleb128 0x19
 5854 2a56 3E490000 		.long	0x493e
 5855 2a5a 19       		.uleb128 0x19
 5856 2a5b 9B130000 		.long	0x139b
 5857 2a5f 00       		.byte	0
 5858 2a60 44       		.uleb128 0x44
 5859 2a61 00000000 		.long	.LASF379
 5860 2a65 08       		.byte	0x8
 5861 2a66 5E08     		.value	0x85e
 5862 2a68 00000000 		.long	.LASF380
 5863 2a6c 9B130000 		.long	0x139b
 5864 2a70 01       		.byte	0x1
 5865 2a71 792A0000 		.long	0x2a79
 5866 2a75 892A0000 		.long	0x2a89
 5867 2a79 09       		.uleb128 0x9
 5868 2a7a 4B600000 		.long	0x604b
 5869 2a7e 19       		.uleb128 0x19
 5870 2a7f 63600000 		.long	0x6063
 5871 2a83 19       		.uleb128 0x19
 5872 2a84 9B130000 		.long	0x139b
 5873 2a88 00       		.byte	0
 5874 2a89 44       		.uleb128 0x44
 5875 2a8a 00000000 		.long	.LASF379
 5876 2a8e 08       		.byte	0x8
 5877 2a8f 6F08     		.value	0x86f
 5878 2a91 00000000 		.long	.LASF381
 5879 2a95 9B130000 		.long	0x139b
 5880 2a99 01       		.byte	0x1
 5881 2a9a A22A0000 		.long	0x2aa2
 5882 2a9e B72A0000 		.long	0x2ab7
 5883 2aa2 09       		.uleb128 0x9
 5884 2aa3 4B600000 		.long	0x604b
 5885 2aa7 19       		.uleb128 0x19
 5886 2aa8 1A4D0000 		.long	0x4d1a
 5887 2aac 19       		.uleb128 0x19
 5888 2aad 9B130000 		.long	0x139b
 5889 2ab1 19       		.uleb128 0x19
 5890 2ab2 9B130000 		.long	0x139b
 5891 2ab6 00       		.byte	0
 5892 2ab7 44       		.uleb128 0x44
 5893 2ab8 00000000 		.long	.LASF379
 5894 2abc 08       		.byte	0x8
 5895 2abd 7D08     		.value	0x87d
 5896 2abf 00000000 		.long	.LASF382
 5897 2ac3 9B130000 		.long	0x139b
 5898 2ac7 01       		.byte	0x1
 5899 2ac8 D02A0000 		.long	0x2ad0
 5900 2acc E02A0000 		.long	0x2ae0
 5901 2ad0 09       		.uleb128 0x9
 5902 2ad1 4B600000 		.long	0x604b
 5903 2ad5 19       		.uleb128 0x19
 5904 2ad6 1A4D0000 		.long	0x4d1a
 5905 2ada 19       		.uleb128 0x19
 5906 2adb 9B130000 		.long	0x139b
GAS LISTING /tmp/cceISX6N.s 			page 227


 5907 2adf 00       		.byte	0
 5908 2ae0 44       		.uleb128 0x44
 5909 2ae1 00000000 		.long	.LASF379
 5910 2ae5 08       		.byte	0x8
 5911 2ae6 8E08     		.value	0x88e
 5912 2ae8 00000000 		.long	.LASF383
 5913 2aec 9B130000 		.long	0x139b
 5914 2af0 01       		.byte	0x1
 5915 2af1 F92A0000 		.long	0x2af9
 5916 2af5 092B0000 		.long	0x2b09
 5917 2af9 09       		.uleb128 0x9
 5918 2afa 4B600000 		.long	0x604b
 5919 2afe 19       		.uleb128 0x19
 5920 2aff 3E490000 		.long	0x493e
 5921 2b03 19       		.uleb128 0x19
 5922 2b04 9B130000 		.long	0x139b
 5923 2b08 00       		.byte	0
 5924 2b09 44       		.uleb128 0x44
 5925 2b0a 00000000 		.long	.LASF384
 5926 2b0e 08       		.byte	0x8
 5927 2b0f 9E08     		.value	0x89e
 5928 2b11 00000000 		.long	.LASF385
 5929 2b15 3A130000 		.long	0x133a
 5930 2b19 01       		.byte	0x1
 5931 2b1a 222B0000 		.long	0x2b22
 5932 2b1e 322B0000 		.long	0x2b32
 5933 2b22 09       		.uleb128 0x9
 5934 2b23 4B600000 		.long	0x604b
 5935 2b27 19       		.uleb128 0x19
 5936 2b28 9B130000 		.long	0x139b
 5937 2b2c 19       		.uleb128 0x19
 5938 2b2d 9B130000 		.long	0x139b
 5939 2b31 00       		.byte	0
 5940 2b32 44       		.uleb128 0x44
 5941 2b33 00000000 		.long	.LASF126
 5942 2b37 08       		.byte	0x8
 5943 2b38 B108     		.value	0x8b1
 5944 2b3a 00000000 		.long	.LASF386
 5945 2b3e 06490000 		.long	0x4906
 5946 2b42 01       		.byte	0x1
 5947 2b43 4B2B0000 		.long	0x2b4b
 5948 2b47 562B0000 		.long	0x2b56
 5949 2b4b 09       		.uleb128 0x9
 5950 2b4c 4B600000 		.long	0x604b
 5951 2b50 19       		.uleb128 0x19
 5952 2b51 63600000 		.long	0x6063
 5953 2b55 00       		.byte	0
 5954 2b56 44       		.uleb128 0x44
 5955 2b57 00000000 		.long	.LASF126
 5956 2b5b 08       		.byte	0x8
 5957 2b5c D108     		.value	0x8d1
 5958 2b5e 00000000 		.long	.LASF387
 5959 2b62 06490000 		.long	0x4906
 5960 2b66 01       		.byte	0x1
 5961 2b67 6F2B0000 		.long	0x2b6f
 5962 2b6b 842B0000 		.long	0x2b84
 5963 2b6f 09       		.uleb128 0x9
GAS LISTING /tmp/cceISX6N.s 			page 228


 5964 2b70 4B600000 		.long	0x604b
 5965 2b74 19       		.uleb128 0x19
 5966 2b75 9B130000 		.long	0x139b
 5967 2b79 19       		.uleb128 0x19
 5968 2b7a 9B130000 		.long	0x139b
 5969 2b7e 19       		.uleb128 0x19
 5970 2b7f 63600000 		.long	0x6063
 5971 2b83 00       		.byte	0
 5972 2b84 44       		.uleb128 0x44
 5973 2b85 00000000 		.long	.LASF126
 5974 2b89 08       		.byte	0x8
 5975 2b8a EB08     		.value	0x8eb
 5976 2b8c 00000000 		.long	.LASF388
 5977 2b90 06490000 		.long	0x4906
 5978 2b94 01       		.byte	0x1
 5979 2b95 9D2B0000 		.long	0x2b9d
 5980 2b99 BC2B0000 		.long	0x2bbc
 5981 2b9d 09       		.uleb128 0x9
 5982 2b9e 4B600000 		.long	0x604b
 5983 2ba2 19       		.uleb128 0x19
 5984 2ba3 9B130000 		.long	0x139b
 5985 2ba7 19       		.uleb128 0x19
 5986 2ba8 9B130000 		.long	0x139b
 5987 2bac 19       		.uleb128 0x19
 5988 2bad 63600000 		.long	0x6063
 5989 2bb1 19       		.uleb128 0x19
 5990 2bb2 9B130000 		.long	0x139b
 5991 2bb6 19       		.uleb128 0x19
 5992 2bb7 9B130000 		.long	0x139b
 5993 2bbb 00       		.byte	0
 5994 2bbc 44       		.uleb128 0x44
 5995 2bbd 00000000 		.long	.LASF126
 5996 2bc1 08       		.byte	0x8
 5997 2bc2 FD08     		.value	0x8fd
 5998 2bc4 00000000 		.long	.LASF389
 5999 2bc8 06490000 		.long	0x4906
 6000 2bcc 01       		.byte	0x1
 6001 2bcd D52B0000 		.long	0x2bd5
 6002 2bd1 E02B0000 		.long	0x2be0
 6003 2bd5 09       		.uleb128 0x9
 6004 2bd6 4B600000 		.long	0x604b
 6005 2bda 19       		.uleb128 0x19
 6006 2bdb 1A4D0000 		.long	0x4d1a
 6007 2bdf 00       		.byte	0
 6008 2be0 44       		.uleb128 0x44
 6009 2be1 00000000 		.long	.LASF126
 6010 2be5 08       		.byte	0x8
 6011 2be6 1509     		.value	0x915
 6012 2be8 00000000 		.long	.LASF390
 6013 2bec 06490000 		.long	0x4906
 6014 2bf0 01       		.byte	0x1
 6015 2bf1 F92B0000 		.long	0x2bf9
 6016 2bf5 0E2C0000 		.long	0x2c0e
 6017 2bf9 09       		.uleb128 0x9
 6018 2bfa 4B600000 		.long	0x604b
 6019 2bfe 19       		.uleb128 0x19
 6020 2bff 9B130000 		.long	0x139b
GAS LISTING /tmp/cceISX6N.s 			page 229


 6021 2c03 19       		.uleb128 0x19
 6022 2c04 9B130000 		.long	0x139b
 6023 2c08 19       		.uleb128 0x19
 6024 2c09 1A4D0000 		.long	0x4d1a
 6025 2c0d 00       		.byte	0
 6026 2c0e 44       		.uleb128 0x44
 6027 2c0f 00000000 		.long	.LASF126
 6028 2c13 08       		.byte	0x8
 6029 2c14 3009     		.value	0x930
 6030 2c16 00000000 		.long	.LASF391
 6031 2c1a 06490000 		.long	0x4906
 6032 2c1e 01       		.byte	0x1
 6033 2c1f 272C0000 		.long	0x2c27
 6034 2c23 412C0000 		.long	0x2c41
 6035 2c27 09       		.uleb128 0x9
 6036 2c28 4B600000 		.long	0x604b
 6037 2c2c 19       		.uleb128 0x19
 6038 2c2d 9B130000 		.long	0x139b
 6039 2c31 19       		.uleb128 0x19
 6040 2c32 9B130000 		.long	0x139b
 6041 2c36 19       		.uleb128 0x19
 6042 2c37 1A4D0000 		.long	0x4d1a
 6043 2c3b 19       		.uleb128 0x19
 6044 2c3c 9B130000 		.long	0x139b
 6045 2c40 00       		.byte	0
 6046 2c41 0C       		.uleb128 0xc
 6047 2c42 4B140000 		.long	0x144b
 6048 2c46 1D       		.uleb128 0x1d
 6049 2c47 00000000 		.long	.LASF392
 6050 2c4b 3E490000 		.long	0x493e
 6051 2c4f 1D       		.uleb128 0x1d
 6052 2c50 00000000 		.long	.LASF393
 6053 2c54 1F0F0000 		.long	0xf1f
 6054 2c58 1D       		.uleb128 0x1d
 6055 2c59 00000000 		.long	.LASF394
 6056 2c5d 11110000 		.long	0x1111
 6057 2c61 00       		.byte	0
 6058 2c62 2F       		.uleb128 0x2f
 6059 2c63 00000000 		.long	.LASF396
 6060 2c67 2F       		.uleb128 0x2f
 6061 2c68 00000000 		.long	.LASF397
 6062 2c6c 0C       		.uleb128 0xc
 6063 2c6d 3A130000 		.long	0x133a
 6064 2c71 27       		.uleb128 0x27
 6065 2c72 00000000 		.long	.LASF398
 6066 2c76 10       		.byte	0x10
 6067 2c77 1D       		.byte	0x1d
 6068 2c78 2F       		.byte	0x2f
 6069 2c79 512D0000 		.long	0x2d51
 6070 2c7d 38       		.uleb128 0x38
 6071 2c7e 00000000 		.long	.LASF160
 6072 2c82 1D       		.byte	0x1d
 6073 2c83 36       		.byte	0x36
 6074 2c84 1A4D0000 		.long	0x4d1a
 6075 2c88 01       		.byte	0x1
 6076 2c89 28       		.uleb128 0x28
 6077 2c8a 00000000 		.long	.LASF399
GAS LISTING /tmp/cceISX6N.s 			page 230


 6078 2c8e 1D       		.byte	0x1d
 6079 2c8f 3A       		.byte	0x3a
 6080 2c90 7D2C0000 		.long	0x2c7d
 6081 2c94 00       		.byte	0
 6082 2c95 38       		.uleb128 0x38
 6083 2c96 00000000 		.long	.LASF148
 6084 2c9a 1D       		.byte	0x1d
 6085 2c9b 35       		.byte	0x35
 6086 2c9c E6100000 		.long	0x10e6
 6087 2ca0 01       		.byte	0x1
 6088 2ca1 28       		.uleb128 0x28
 6089 2ca2 00000000 		.long	.LASF400
 6090 2ca6 1D       		.byte	0x1d
 6091 2ca7 3B       		.byte	0x3b
 6092 2ca8 952C0000 		.long	0x2c95
 6093 2cac 08       		.byte	0x8
 6094 2cad 38       		.uleb128 0x38
 6095 2cae 00000000 		.long	.LASF161
 6096 2cb2 1D       		.byte	0x1d
 6097 2cb3 37       		.byte	0x37
 6098 2cb4 1A4D0000 		.long	0x4d1a
 6099 2cb8 01       		.byte	0x1
 6100 2cb9 17       		.uleb128 0x17
 6101 2cba 00000000 		.long	.LASF401
 6102 2cbe 1D       		.byte	0x1d
 6103 2cbf 3E       		.byte	0x3e
 6104 2cc0 C82C0000 		.long	0x2cc8
 6105 2cc4 D82C0000 		.long	0x2cd8
 6106 2cc8 09       		.uleb128 0x9
 6107 2cc9 75600000 		.long	0x6075
 6108 2ccd 19       		.uleb128 0x19
 6109 2cce AD2C0000 		.long	0x2cad
 6110 2cd2 19       		.uleb128 0x19
 6111 2cd3 952C0000 		.long	0x2c95
 6112 2cd7 00       		.byte	0
 6113 2cd8 2B       		.uleb128 0x2b
 6114 2cd9 00000000 		.long	.LASF401
 6115 2cdd 1D       		.byte	0x1d
 6116 2cde 42       		.byte	0x42
 6117 2cdf 01       		.byte	0x1
 6118 2ce0 E82C0000 		.long	0x2ce8
 6119 2ce4 EE2C0000 		.long	0x2cee
 6120 2ce8 09       		.uleb128 0x9
 6121 2ce9 75600000 		.long	0x6075
 6122 2ced 00       		.byte	0
 6123 2cee 2C       		.uleb128 0x2c
 6124 2cef 00000000 		.long	.LASF260
 6125 2cf3 1D       		.byte	0x1d
 6126 2cf4 47       		.byte	0x47
 6127 2cf5 00000000 		.long	.LASF402
 6128 2cf9 952C0000 		.long	0x2c95
 6129 2cfd 01       		.byte	0x1
 6130 2cfe 062D0000 		.long	0x2d06
 6131 2d02 0C2D0000 		.long	0x2d0c
 6132 2d06 09       		.uleb128 0x9
 6133 2d07 7B600000 		.long	0x607b
 6134 2d0b 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 231


 6135 2d0c 2C       		.uleb128 0x2c
 6136 2d0d 00000000 		.long	.LASF241
 6137 2d11 1D       		.byte	0x1d
 6138 2d12 4B       		.byte	0x4b
 6139 2d13 00000000 		.long	.LASF403
 6140 2d17 AD2C0000 		.long	0x2cad
 6141 2d1b 01       		.byte	0x1
 6142 2d1c 242D0000 		.long	0x2d24
 6143 2d20 2A2D0000 		.long	0x2d2a
 6144 2d24 09       		.uleb128 0x9
 6145 2d25 7B600000 		.long	0x607b
 6146 2d29 00       		.byte	0
 6147 2d2a 47       		.uleb128 0x47
 6148 2d2b 656E6400 		.string	"end"
 6149 2d2f 1D       		.byte	0x1d
 6150 2d30 4F       		.byte	0x4f
 6151 2d31 00000000 		.long	.LASF482
 6152 2d35 AD2C0000 		.long	0x2cad
 6153 2d39 01       		.byte	0x1
 6154 2d3a 422D0000 		.long	0x2d42
 6155 2d3e 482D0000 		.long	0x2d48
 6156 2d42 09       		.uleb128 0x9
 6157 2d43 7B600000 		.long	0x607b
 6158 2d47 00       		.byte	0
 6159 2d48 0A       		.uleb128 0xa
 6160 2d49 5F4500   		.string	"_E"
 6161 2d4c 3E490000 		.long	0x493e
 6162 2d50 00       		.byte	0
 6163 2d51 0C       		.uleb128 0xc
 6164 2d52 712C0000 		.long	0x2c71
 6165 2d56 07       		.uleb128 0x7
 6166 2d57 00000000 		.long	.LASF404
 6167 2d5b 1E       		.byte	0x1e
 6168 2d5c 3E       		.byte	0x3e
 6169 2d5d 3A130000 		.long	0x133a
 6170 2d61 48       		.uleb128 0x48
 6171 2d62 00000000 		.long	.LASF424
 6172 2d66 04       		.byte	0x4
 6173 2d67 03       		.byte	0x3
 6174 2d68 33       		.byte	0x33
 6175 2d69 F02D0000 		.long	0x2df0
 6176 2d6d 49       		.uleb128 0x49
 6177 2d6e 00000000 		.long	.LASF405
 6178 2d72 01       		.sleb128 1
 6179 2d73 49       		.uleb128 0x49
 6180 2d74 00000000 		.long	.LASF406
 6181 2d78 02       		.sleb128 2
 6182 2d79 49       		.uleb128 0x49
 6183 2d7a 00000000 		.long	.LASF407
 6184 2d7e 04       		.sleb128 4
 6185 2d7f 49       		.uleb128 0x49
 6186 2d80 00000000 		.long	.LASF408
 6187 2d84 08       		.sleb128 8
 6188 2d85 49       		.uleb128 0x49
 6189 2d86 00000000 		.long	.LASF409
 6190 2d8a 10       		.sleb128 16
 6191 2d8b 49       		.uleb128 0x49
GAS LISTING /tmp/cceISX6N.s 			page 232


 6192 2d8c 00000000 		.long	.LASF410
 6193 2d90 20       		.sleb128 32
 6194 2d91 49       		.uleb128 0x49
 6195 2d92 00000000 		.long	.LASF411
 6196 2d96 C000     		.sleb128 64
 6197 2d98 49       		.uleb128 0x49
 6198 2d99 00000000 		.long	.LASF412
 6199 2d9d 8001     		.sleb128 128
 6200 2d9f 49       		.uleb128 0x49
 6201 2da0 00000000 		.long	.LASF413
 6202 2da4 8002     		.sleb128 256
 6203 2da6 49       		.uleb128 0x49
 6204 2da7 00000000 		.long	.LASF414
 6205 2dab 8004     		.sleb128 512
 6206 2dad 49       		.uleb128 0x49
 6207 2dae 00000000 		.long	.LASF415
 6208 2db2 8008     		.sleb128 1024
 6209 2db4 49       		.uleb128 0x49
 6210 2db5 00000000 		.long	.LASF416
 6211 2db9 8010     		.sleb128 2048
 6212 2dbb 49       		.uleb128 0x49
 6213 2dbc 00000000 		.long	.LASF417
 6214 2dc0 8020     		.sleb128 4096
 6215 2dc2 49       		.uleb128 0x49
 6216 2dc3 00000000 		.long	.LASF418
 6217 2dc7 80C000   		.sleb128 8192
 6218 2dca 49       		.uleb128 0x49
 6219 2dcb 00000000 		.long	.LASF419
 6220 2dcf 808001   		.sleb128 16384
 6221 2dd2 49       		.uleb128 0x49
 6222 2dd3 00000000 		.long	.LASF420
 6223 2dd7 B001     		.sleb128 176
 6224 2dd9 49       		.uleb128 0x49
 6225 2dda 00000000 		.long	.LASF421
 6226 2dde CA00     		.sleb128 74
 6227 2de0 49       		.uleb128 0x49
 6228 2de1 00000000 		.long	.LASF422
 6229 2de5 8402     		.sleb128 260
 6230 2de7 49       		.uleb128 0x49
 6231 2de8 00000000 		.long	.LASF423
 6232 2dec 808004   		.sleb128 65536
 6233 2def 00       		.byte	0
 6234 2df0 48       		.uleb128 0x48
 6235 2df1 00000000 		.long	.LASF425
 6236 2df5 04       		.byte	0x4
 6237 2df6 03       		.byte	0x3
 6238 2df7 67       		.byte	0x67
 6239 2df8 292E0000 		.long	0x2e29
 6240 2dfc 49       		.uleb128 0x49
 6241 2dfd 00000000 		.long	.LASF426
 6242 2e01 01       		.sleb128 1
 6243 2e02 49       		.uleb128 0x49
 6244 2e03 00000000 		.long	.LASF427
 6245 2e07 02       		.sleb128 2
 6246 2e08 49       		.uleb128 0x49
 6247 2e09 00000000 		.long	.LASF428
 6248 2e0d 04       		.sleb128 4
GAS LISTING /tmp/cceISX6N.s 			page 233


 6249 2e0e 49       		.uleb128 0x49
 6250 2e0f 00000000 		.long	.LASF429
 6251 2e13 08       		.sleb128 8
 6252 2e14 49       		.uleb128 0x49
 6253 2e15 00000000 		.long	.LASF430
 6254 2e19 10       		.sleb128 16
 6255 2e1a 49       		.uleb128 0x49
 6256 2e1b 00000000 		.long	.LASF431
 6257 2e1f 20       		.sleb128 32
 6258 2e20 49       		.uleb128 0x49
 6259 2e21 00000000 		.long	.LASF432
 6260 2e25 808004   		.sleb128 65536
 6261 2e28 00       		.byte	0
 6262 2e29 48       		.uleb128 0x48
 6263 2e2a 00000000 		.long	.LASF433
 6264 2e2e 04       		.byte	0x4
 6265 2e2f 03       		.byte	0x3
 6266 2e30 8F       		.byte	0x8f
 6267 2e31 562E0000 		.long	0x2e56
 6268 2e35 49       		.uleb128 0x49
 6269 2e36 00000000 		.long	.LASF434
 6270 2e3a 00       		.sleb128 0
 6271 2e3b 49       		.uleb128 0x49
 6272 2e3c 00000000 		.long	.LASF435
 6273 2e40 01       		.sleb128 1
 6274 2e41 49       		.uleb128 0x49
 6275 2e42 00000000 		.long	.LASF436
 6276 2e46 02       		.sleb128 2
 6277 2e47 49       		.uleb128 0x49
 6278 2e48 00000000 		.long	.LASF437
 6279 2e4c 04       		.sleb128 4
 6280 2e4d 49       		.uleb128 0x49
 6281 2e4e 00000000 		.long	.LASF438
 6282 2e52 808004   		.sleb128 65536
 6283 2e55 00       		.byte	0
 6284 2e56 48       		.uleb128 0x48
 6285 2e57 00000000 		.long	.LASF439
 6286 2e5b 04       		.byte	0x4
 6287 2e5c 03       		.byte	0x3
 6288 2e5d B5       		.byte	0xb5
 6289 2e5e 7D2E0000 		.long	0x2e7d
 6290 2e62 49       		.uleb128 0x49
 6291 2e63 00000000 		.long	.LASF440
 6292 2e67 00       		.sleb128 0
 6293 2e68 49       		.uleb128 0x49
 6294 2e69 00000000 		.long	.LASF441
 6295 2e6d 01       		.sleb128 1
 6296 2e6e 49       		.uleb128 0x49
 6297 2e6f 00000000 		.long	.LASF442
 6298 2e73 02       		.sleb128 2
 6299 2e74 49       		.uleb128 0x49
 6300 2e75 00000000 		.long	.LASF443
 6301 2e79 808004   		.sleb128 65536
 6302 2e7c 00       		.byte	0
 6303 2e7d 4A       		.uleb128 0x4a
 6304 2e7e 00000000 		.long	.LASF471
 6305 2e82 89300000 		.long	0x3089
GAS LISTING /tmp/cceISX6N.s 			page 234


 6306 2e86 4B       		.uleb128 0x4b
 6307 2e87 00000000 		.long	.LASF446
 6308 2e8b 01       		.byte	0x1
 6309 2e8c 03       		.byte	0x3
 6310 2e8d 1502     		.value	0x215
 6311 2e8f 01       		.byte	0x1
 6312 2e90 DC2E0000 		.long	0x2edc
 6313 2e94 4C       		.uleb128 0x4c
 6314 2e95 00000000 		.long	.LASF444
 6315 2e99 03       		.byte	0x3
 6316 2e9a 1D02     		.value	0x21d
 6317 2e9c 38590000 		.long	0x5938
 6318 2ea0 4C       		.uleb128 0x4c
 6319 2ea1 00000000 		.long	.LASF445
 6320 2ea5 03       		.byte	0x3
 6321 2ea6 1E02     		.value	0x21e
 6322 2ea8 BD4A0000 		.long	0x4abd
 6323 2eac 42       		.uleb128 0x42
 6324 2ead 00000000 		.long	.LASF446
 6325 2eb1 03       		.byte	0x3
 6326 2eb2 1902     		.value	0x219
 6327 2eb4 01       		.byte	0x1
 6328 2eb5 BD2E0000 		.long	0x2ebd
 6329 2eb9 C32E0000 		.long	0x2ec3
 6330 2ebd 09       		.uleb128 0x9
 6331 2ebe 98600000 		.long	0x6098
 6332 2ec2 00       		.byte	0
 6333 2ec3 4D       		.uleb128 0x4d
 6334 2ec4 00000000 		.long	.LASF447
 6335 2ec8 03       		.byte	0x3
 6336 2ec9 1A02     		.value	0x21a
 6337 2ecb 01       		.byte	0x1
 6338 2ecc D02E0000 		.long	0x2ed0
 6339 2ed0 09       		.uleb128 0x9
 6340 2ed1 98600000 		.long	0x6098
 6341 2ed5 09       		.uleb128 0x9
 6342 2ed6 06490000 		.long	0x4906
 6343 2eda 00       		.byte	0
 6344 2edb 00       		.byte	0
 6345 2edc 4E       		.uleb128 0x4e
 6346 2edd 00000000 		.long	.LASF448
 6347 2ee1 03       		.byte	0x3
 6348 2ee2 4A01     		.value	0x14a
 6349 2ee4 292E0000 		.long	0x2e29
 6350 2ee8 01       		.byte	0x1
 6351 2ee9 38       		.uleb128 0x38
 6352 2eea 00000000 		.long	.LASF449
 6353 2eee 03       		.byte	0x3
 6354 2eef FF       		.byte	0xff
 6355 2ef0 612D0000 		.long	0x2d61
 6356 2ef4 01       		.byte	0x1
 6357 2ef5 4F       		.uleb128 0x4f
 6358 2ef6 00000000 		.long	.LASF450
 6359 2efa 03       		.byte	0x3
 6360 2efb 0201     		.value	0x102
 6361 2efd 032F0000 		.long	0x2f03
 6362 2f01 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 235


 6363 2f02 01       		.byte	0x1
 6364 2f03 0C       		.uleb128 0xc
 6365 2f04 E92E0000 		.long	0x2ee9
 6366 2f08 50       		.uleb128 0x50
 6367 2f09 64656300 		.string	"dec"
 6368 2f0d 03       		.byte	0x3
 6369 2f0e 0501     		.value	0x105
 6370 2f10 032F0000 		.long	0x2f03
 6371 2f14 01       		.byte	0x1
 6372 2f15 02       		.byte	0x2
 6373 2f16 4F       		.uleb128 0x4f
 6374 2f17 00000000 		.long	.LASF451
 6375 2f1b 03       		.byte	0x3
 6376 2f1c 0801     		.value	0x108
 6377 2f1e 032F0000 		.long	0x2f03
 6378 2f22 01       		.byte	0x1
 6379 2f23 04       		.byte	0x4
 6380 2f24 50       		.uleb128 0x50
 6381 2f25 68657800 		.string	"hex"
 6382 2f29 03       		.byte	0x3
 6383 2f2a 0B01     		.value	0x10b
 6384 2f2c 032F0000 		.long	0x2f03
 6385 2f30 01       		.byte	0x1
 6386 2f31 08       		.byte	0x8
 6387 2f32 4F       		.uleb128 0x4f
 6388 2f33 00000000 		.long	.LASF452
 6389 2f37 03       		.byte	0x3
 6390 2f38 1001     		.value	0x110
 6391 2f3a 032F0000 		.long	0x2f03
 6392 2f3e 01       		.byte	0x1
 6393 2f3f 10       		.byte	0x10
 6394 2f40 4F       		.uleb128 0x4f
 6395 2f41 00000000 		.long	.LASF453
 6396 2f45 03       		.byte	0x3
 6397 2f46 1401     		.value	0x114
 6398 2f48 032F0000 		.long	0x2f03
 6399 2f4c 01       		.byte	0x1
 6400 2f4d 20       		.byte	0x20
 6401 2f4e 50       		.uleb128 0x50
 6402 2f4f 6F637400 		.string	"oct"
 6403 2f53 03       		.byte	0x3
 6404 2f54 1701     		.value	0x117
 6405 2f56 032F0000 		.long	0x2f03
 6406 2f5a 01       		.byte	0x1
 6407 2f5b 40       		.byte	0x40
 6408 2f5c 4F       		.uleb128 0x4f
 6409 2f5d 00000000 		.long	.LASF454
 6410 2f61 03       		.byte	0x3
 6411 2f62 1B01     		.value	0x11b
 6412 2f64 032F0000 		.long	0x2f03
 6413 2f68 01       		.byte	0x1
 6414 2f69 80       		.byte	0x80
 6415 2f6a 51       		.uleb128 0x51
 6416 2f6b 00000000 		.long	.LASF455
 6417 2f6f 03       		.byte	0x3
 6418 2f70 1E01     		.value	0x11e
 6419 2f72 032F0000 		.long	0x2f03
GAS LISTING /tmp/cceISX6N.s 			page 236


 6420 2f76 01       		.byte	0x1
 6421 2f77 0001     		.value	0x100
 6422 2f79 51       		.uleb128 0x51
 6423 2f7a 00000000 		.long	.LASF456
 6424 2f7e 03       		.byte	0x3
 6425 2f7f 2201     		.value	0x122
 6426 2f81 032F0000 		.long	0x2f03
 6427 2f85 01       		.byte	0x1
 6428 2f86 0002     		.value	0x200
 6429 2f88 51       		.uleb128 0x51
 6430 2f89 00000000 		.long	.LASF457
 6431 2f8d 03       		.byte	0x3
 6432 2f8e 2601     		.value	0x126
 6433 2f90 032F0000 		.long	0x2f03
 6434 2f94 01       		.byte	0x1
 6435 2f95 0004     		.value	0x400
 6436 2f97 51       		.uleb128 0x51
 6437 2f98 00000000 		.long	.LASF458
 6438 2f9c 03       		.byte	0x3
 6439 2f9d 2901     		.value	0x129
 6440 2f9f 032F0000 		.long	0x2f03
 6441 2fa3 01       		.byte	0x1
 6442 2fa4 0008     		.value	0x800
 6443 2fa6 51       		.uleb128 0x51
 6444 2fa7 00000000 		.long	.LASF459
 6445 2fab 03       		.byte	0x3
 6446 2fac 2C01     		.value	0x12c
 6447 2fae 032F0000 		.long	0x2f03
 6448 2fb2 01       		.byte	0x1
 6449 2fb3 0010     		.value	0x1000
 6450 2fb5 51       		.uleb128 0x51
 6451 2fb6 00000000 		.long	.LASF460
 6452 2fba 03       		.byte	0x3
 6453 2fbb 2F01     		.value	0x12f
 6454 2fbd 032F0000 		.long	0x2f03
 6455 2fc1 01       		.byte	0x1
 6456 2fc2 0020     		.value	0x2000
 6457 2fc4 51       		.uleb128 0x51
 6458 2fc5 00000000 		.long	.LASF461
 6459 2fc9 03       		.byte	0x3
 6460 2fca 3301     		.value	0x133
 6461 2fcc 032F0000 		.long	0x2f03
 6462 2fd0 01       		.byte	0x1
 6463 2fd1 0040     		.value	0x4000
 6464 2fd3 4F       		.uleb128 0x4f
 6465 2fd4 00000000 		.long	.LASF462
 6466 2fd8 03       		.byte	0x3
 6467 2fd9 3601     		.value	0x136
 6468 2fdb 032F0000 		.long	0x2f03
 6469 2fdf 01       		.byte	0x1
 6470 2fe0 B0       		.byte	0xb0
 6471 2fe1 4F       		.uleb128 0x4f
 6472 2fe2 00000000 		.long	.LASF463
 6473 2fe6 03       		.byte	0x3
 6474 2fe7 3901     		.value	0x139
 6475 2fe9 032F0000 		.long	0x2f03
 6476 2fed 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 237


 6477 2fee 4A       		.byte	0x4a
 6478 2fef 51       		.uleb128 0x51
 6479 2ff0 00000000 		.long	.LASF464
 6480 2ff4 03       		.byte	0x3
 6481 2ff5 3C01     		.value	0x13c
 6482 2ff7 032F0000 		.long	0x2f03
 6483 2ffb 01       		.byte	0x1
 6484 2ffc 0401     		.value	0x104
 6485 2ffe 4F       		.uleb128 0x4f
 6486 2fff 00000000 		.long	.LASF465
 6487 3003 03       		.byte	0x3
 6488 3004 4E01     		.value	0x14e
 6489 3006 0C300000 		.long	0x300c
 6490 300a 01       		.byte	0x1
 6491 300b 01       		.byte	0x1
 6492 300c 0C       		.uleb128 0xc
 6493 300d DC2E0000 		.long	0x2edc
 6494 3011 4F       		.uleb128 0x4f
 6495 3012 00000000 		.long	.LASF466
 6496 3016 03       		.byte	0x3
 6497 3017 5101     		.value	0x151
 6498 3019 0C300000 		.long	0x300c
 6499 301d 01       		.byte	0x1
 6500 301e 02       		.byte	0x2
 6501 301f 4F       		.uleb128 0x4f
 6502 3020 00000000 		.long	.LASF467
 6503 3024 03       		.byte	0x3
 6504 3025 5601     		.value	0x156
 6505 3027 0C300000 		.long	0x300c
 6506 302b 01       		.byte	0x1
 6507 302c 04       		.byte	0x4
 6508 302d 4F       		.uleb128 0x4f
 6509 302e 00000000 		.long	.LASF468
 6510 3032 03       		.byte	0x3
 6511 3033 5901     		.value	0x159
 6512 3035 0C300000 		.long	0x300c
 6513 3039 01       		.byte	0x1
 6514 303a 00       		.byte	0
 6515 303b 4E       		.uleb128 0x4e
 6516 303c 00000000 		.long	.LASF469
 6517 3040 03       		.byte	0x3
 6518 3041 6901     		.value	0x169
 6519 3043 F02D0000 		.long	0x2df0
 6520 3047 01       		.byte	0x1
 6521 3048 50       		.uleb128 0x50
 6522 3049 696E00   		.string	"in"
 6523 304c 03       		.byte	0x3
 6524 304d 7701     		.value	0x177
 6525 304f 55300000 		.long	0x3055
 6526 3053 01       		.byte	0x1
 6527 3054 08       		.byte	0x8
 6528 3055 0C       		.uleb128 0xc
 6529 3056 3B300000 		.long	0x303b
 6530 305a 50       		.uleb128 0x50
 6531 305b 6F757400 		.string	"out"
 6532 305f 03       		.byte	0x3
 6533 3060 7A01     		.value	0x17a
GAS LISTING /tmp/cceISX6N.s 			page 238


 6534 3062 55300000 		.long	0x3055
 6535 3066 01       		.byte	0x1
 6536 3067 10       		.byte	0x10
 6537 3068 4E       		.uleb128 0x4e
 6538 3069 00000000 		.long	.LASF470
 6539 306d 03       		.byte	0x3
 6540 306e 8901     		.value	0x189
 6541 3070 562E0000 		.long	0x2e56
 6542 3074 01       		.byte	0x1
 6543 3075 50       		.uleb128 0x50
 6544 3076 63757200 		.string	"cur"
 6545 307a 03       		.byte	0x3
 6546 307b 8F01     		.value	0x18f
 6547 307d 83300000 		.long	0x3083
 6548 3081 01       		.byte	0x1
 6549 3082 01       		.byte	0x1
 6550 3083 0C       		.uleb128 0xc
 6551 3084 68300000 		.long	0x3068
 6552 3088 00       		.byte	0
 6553 3089 0D       		.uleb128 0xd
 6554 308a 1F       		.byte	0x1f
 6555 308b 52       		.byte	0x52
 6556 308c A9600000 		.long	0x60a9
 6557 3090 0D       		.uleb128 0xd
 6558 3091 1F       		.byte	0x1f
 6559 3092 53       		.byte	0x53
 6560 3093 9E600000 		.long	0x609e
 6561 3097 0D       		.uleb128 0xd
 6562 3098 1F       		.byte	0x1f
 6563 3099 54       		.byte	0x54
 6564 309a 18500000 		.long	0x5018
 6565 309e 0D       		.uleb128 0xd
 6566 309f 1F       		.byte	0x1f
 6567 30a0 5C       		.byte	0x5c
 6568 30a1 BF600000 		.long	0x60bf
 6569 30a5 0D       		.uleb128 0xd
 6570 30a6 1F       		.byte	0x1f
 6571 30a7 65       		.byte	0x65
 6572 30a8 D9600000 		.long	0x60d9
 6573 30ac 0D       		.uleb128 0xd
 6574 30ad 1F       		.byte	0x1f
 6575 30ae 68       		.byte	0x68
 6576 30af F3600000 		.long	0x60f3
 6577 30b3 0D       		.uleb128 0xd
 6578 30b4 1F       		.byte	0x1f
 6579 30b5 69       		.byte	0x69
 6580 30b6 08610000 		.long	0x6108
 6581 30ba 4A       		.uleb128 0x4a
 6582 30bb 00000000 		.long	.LASF472
 6583 30bf A1310000 		.long	0x31a1
 6584 30c3 2C       		.uleb128 0x2c
 6585 30c4 00000000 		.long	.LASF473
 6586 30c8 02       		.byte	0x2
 6587 30c9 DC       		.byte	0xdc
 6588 30ca 00000000 		.long	.LASF474
 6589 30ce 37700000 		.long	0x7037
 6590 30d2 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 239


 6591 30d3 DB300000 		.long	0x30db
 6592 30d7 E6300000 		.long	0x30e6
 6593 30db 09       		.uleb128 0x9
 6594 30dc 3D700000 		.long	0x703d
 6595 30e0 19       		.uleb128 0x19
 6596 30e1 29000000 		.long	0x29
 6597 30e5 00       		.byte	0
 6598 30e6 38       		.uleb128 0x38
 6599 30e7 00000000 		.long	.LASF475
 6600 30eb 02       		.byte	0x2
 6601 30ec 47       		.byte	0x47
 6602 30ed BA300000 		.long	0x30ba
 6603 30f1 01       		.byte	0x1
 6604 30f2 2C       		.uleb128 0x2c
 6605 30f3 00000000 		.long	.LASF473
 6606 30f7 02       		.byte	0x2
 6607 30f8 6C       		.byte	0x6c
 6608 30f9 00000000 		.long	.LASF476
 6609 30fd 37700000 		.long	0x7037
 6610 3101 01       		.byte	0x1
 6611 3102 0A310000 		.long	0x310a
 6612 3106 15310000 		.long	0x3115
 6613 310a 09       		.uleb128 0x9
 6614 310b 3D700000 		.long	0x703d
 6615 310f 19       		.uleb128 0x19
 6616 3110 6E700000 		.long	0x706e
 6617 3114 00       		.byte	0
 6618 3115 1D       		.uleb128 0x1d
 6619 3116 00000000 		.long	.LASF392
 6620 311a 3E490000 		.long	0x493e
 6621 311e 1D       		.uleb128 0x1d
 6622 311f 00000000 		.long	.LASF393
 6623 3123 1F0F0000 		.long	0xf1f
 6624 3127 2C       		.uleb128 0x2c
 6625 3128 00000000 		.long	.LASF477
 6626 312c 20       		.byte	0x20
 6627 312d 3F       		.byte	0x3f
 6628 312e 00000000 		.long	.LASF478
 6629 3132 1D610000 		.long	0x611d
 6630 3136 02       		.byte	0x2
 6631 3137 48310000 		.long	0x3148
 6632 313b 53310000 		.long	0x3153
 6633 313f 1D       		.uleb128 0x1d
 6634 3140 00000000 		.long	.LASF479
 6635 3144 29000000 		.long	0x29
 6636 3148 09       		.uleb128 0x9
 6637 3149 3D700000 		.long	0x703d
 6638 314d 19       		.uleb128 0x19
 6639 314e 29000000 		.long	0x29
 6640 3152 00       		.byte	0
 6641 3153 2C       		.uleb128 0x2c
 6642 3154 00000000 		.long	.LASF480
 6643 3158 20       		.byte	0x20
 6644 3159 D2       		.byte	0xd2
 6645 315a 00000000 		.long	.LASF481
 6646 315e 1D610000 		.long	0x611d
 6647 3162 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 240


 6648 3163 6B310000 		.long	0x316b
 6649 3167 71310000 		.long	0x3171
 6650 316b 09       		.uleb128 0x9
 6651 316c 3D700000 		.long	0x703d
 6652 3170 00       		.byte	0
 6653 3171 47       		.uleb128 0x47
 6654 3172 70757400 		.string	"put"
 6655 3176 20       		.byte	0x20
 6656 3177 94       		.byte	0x94
 6657 3178 00000000 		.long	.LASF483
 6658 317c 1D610000 		.long	0x611d
 6659 3180 01       		.byte	0x1
 6660 3181 89310000 		.long	0x3189
 6661 3185 94310000 		.long	0x3194
 6662 3189 09       		.uleb128 0x9
 6663 318a 3D700000 		.long	0x703d
 6664 318e 19       		.uleb128 0x19
 6665 318f 94310000 		.long	0x3194
 6666 3193 00       		.byte	0
 6667 3194 38       		.uleb128 0x38
 6668 3195 00000000 		.long	.LASF121
 6669 3199 02       		.byte	0x2
 6670 319a 3E       		.byte	0x3e
 6671 319b 3E490000 		.long	0x493e
 6672 319f 01       		.byte	0x1
 6673 31a0 00       		.byte	0
 6674 31a1 4A       		.uleb128 0x4a
 6675 31a2 00000000 		.long	.LASF484
 6676 31a6 F2310000 		.long	0x31f2
 6677 31aa 44       		.uleb128 0x44
 6678 31ab 00000000 		.long	.LASF485
 6679 31af 09       		.byte	0x9
 6680 31b0 6103     		.value	0x361
 6681 31b2 00000000 		.long	.LASF486
 6682 31b6 CE310000 		.long	0x31ce
 6683 31ba 01       		.byte	0x1
 6684 31bb C3310000 		.long	0x31c3
 6685 31bf CE310000 		.long	0x31ce
 6686 31c3 09       		.uleb128 0x9
 6687 31c4 906C0000 		.long	0x6c90
 6688 31c8 19       		.uleb128 0x19
 6689 31c9 3E490000 		.long	0x493e
 6690 31cd 00       		.byte	0
 6691 31ce 4E       		.uleb128 0x4e
 6692 31cf 00000000 		.long	.LASF121
 6693 31d3 09       		.byte	0x9
 6694 31d4 A702     		.value	0x2a7
 6695 31d6 3E490000 		.long	0x493e
 6696 31da 01       		.byte	0x1
 6697 31db 52       		.uleb128 0x52
 6698 31dc 00000000 		.long	.LASF487
 6699 31e0 09       		.byte	0x9
 6700 31e1 8704     		.value	0x487
 6701 31e3 00000000 		.long	.LASF488
 6702 31e7 EB310000 		.long	0x31eb
 6703 31eb 09       		.uleb128 0x9
 6704 31ec 906C0000 		.long	0x6c90
GAS LISTING /tmp/cceISX6N.s 			page 241


 6705 31f0 00       		.byte	0
 6706 31f1 00       		.byte	0
 6707 31f2 05       		.uleb128 0x5
 6708 31f3 00000000 		.long	.LASF489
 6709 31f7 01       		.byte	0x1
 6710 31f8 0F       		.byte	0xf
 6711 31f9 39       		.byte	0x39
 6712 31fa 46320000 		.long	0x3246
 6713 31fe 06       		.uleb128 0x6
 6714 31ff 00000000 		.long	.LASF4
 6715 3203 0F       		.byte	0xf
 6716 3204 3B       		.byte	0x3b
 6717 3205 104E0000 		.long	0x4e10
 6718 3209 07       		.uleb128 0x7
 6719 320a 00000000 		.long	.LASF5
 6720 320e 0F       		.byte	0xf
 6721 320f 3C       		.byte	0x3c
 6722 3210 30000000 		.long	0x30
 6723 3214 08       		.uleb128 0x8
 6724 3215 00000000 		.long	.LASF490
 6725 3219 0F       		.byte	0xf
 6726 321a 3E       		.byte	0x3e
 6727 321b 00000000 		.long	.LASF491
 6728 321f 09320000 		.long	0x3209
 6729 3223 2B320000 		.long	0x322b
 6730 3227 31320000 		.long	0x3231
 6731 322b 09       		.uleb128 0x9
 6732 322c 48610000 		.long	0x6148
 6733 3230 00       		.byte	0
 6734 3231 0A       		.uleb128 0xa
 6735 3232 5F547000 		.string	"_Tp"
 6736 3236 30000000 		.long	0x30
 6737 323a 53       		.uleb128 0x53
 6738 323b 5F5F7600 		.string	"__v"
 6739 323f 30000000 		.long	0x30
 6740 3243 E803     		.value	0x3e8
 6741 3245 00       		.byte	0
 6742 3246 0C       		.uleb128 0xc
 6743 3247 F2310000 		.long	0x31f2
 6744 324b 1E       		.uleb128 0x1e
 6745 324c 00000000 		.long	.LASF492
 6746 3250 01       		.byte	0x1
 6747 3251 13       		.byte	0x13
 6748 3252 0701     		.value	0x107
 6749 3254 89320000 		.long	0x3289
 6750 3258 24       		.uleb128 0x24
 6751 3259 6E756D00 		.string	"num"
 6752 325d 13       		.byte	0x13
 6753 325e 0E01     		.value	0x10e
 6754 3260 214E0000 		.long	0x4e21
 6755 3264 01       		.byte	0x1
 6756 3265 54       		.uleb128 0x54
 6757 3266 64656E00 		.string	"den"
 6758 326a 13       		.byte	0x13
 6759 326b 1101     		.value	0x111
 6760 326d 214E0000 		.long	0x4e21
 6761 3271 E803     		.value	0x3e8
GAS LISTING /tmp/cceISX6N.s 			page 242


 6762 3273 20       		.uleb128 0x20
 6763 3274 00000000 		.long	.LASF96
 6764 3278 30000000 		.long	0x30
 6765 327c 01       		.byte	0x1
 6766 327d 55       		.uleb128 0x55
 6767 327e 00000000 		.long	.LASF97
 6768 3282 30000000 		.long	0x30
 6769 3286 E803     		.value	0x3e8
 6770 3288 00       		.byte	0
 6771 3289 30       		.uleb128 0x30
 6772 328a 00000000 		.long	.LASF494
 6773 328e 01       		.byte	0x1
 6774 328f 22       		.byte	0x22
 6775 3290 27       		.byte	0x27
 6776 3291 30       		.uleb128 0x30
 6777 3292 00000000 		.long	.LASF495
 6778 3296 01       		.byte	0x1
 6779 3297 22       		.byte	0x22
 6780 3298 44       		.byte	0x44
 6781 3299 05       		.uleb128 0x5
 6782 329a 00000000 		.long	.LASF496
 6783 329e 01       		.byte	0x1
 6784 329f 22       		.byte	0x22
 6785 32a0 45       		.byte	0x45
 6786 32a1 E6320000 		.long	0x32e6
 6787 32a5 05       		.uleb128 0x5
 6788 32a6 00000000 		.long	.LASF497
 6789 32aa 01       		.byte	0x1
 6790 32ab 22       		.byte	0x22
 6791 32ac 46       		.byte	0x46
 6792 32ad C4320000 		.long	0x32c4
 6793 32b1 56       		.uleb128 0x56
 6794 32b2 00000000 		.long	.LASF497
 6795 32b6 22       		.byte	0x22
 6796 32b7 46       		.byte	0x46
 6797 32b8 BC320000 		.long	0x32bc
 6798 32bc 09       		.uleb128 0x9
 6799 32bd 6C610000 		.long	0x616c
 6800 32c1 57       		.uleb128 0x57
 6801 32c2 00       		.byte	0
 6802 32c3 00       		.byte	0
 6803 32c4 3A       		.uleb128 0x3a
 6804 32c5 91320000 		.long	0x3291
 6805 32c9 00       		.byte	0
 6806 32ca 28       		.uleb128 0x28
 6807 32cb 00000000 		.long	.LASF499
 6808 32cf 22       		.byte	0x22
 6809 32d0 46       		.byte	0x46
 6810 32d1 A5320000 		.long	0x32a5
 6811 32d5 00       		.byte	0
 6812 32d6 3C       		.uleb128 0x3c
 6813 32d7 00000000 		.long	.LASF496
 6814 32db DF320000 		.long	0x32df
 6815 32df 09       		.uleb128 0x9
 6816 32e0 72610000 		.long	0x6172
 6817 32e4 00       		.byte	0
 6818 32e5 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 243


 6819 32e6 58       		.uleb128 0x58
 6820 32e7 00000000 		.long	.LASF501
 6821 32eb 01       		.byte	0x1
 6822 32ec 0C       		.byte	0xc
 6823 32ed 0002     		.value	0x200
 6824 32ef 10330000 		.long	0x3310
 6825 32f3 59       		.uleb128 0x59
 6826 32f4 00000000 		.long	.LASF113
 6827 32f8 0C       		.byte	0xc
 6828 32f9 0302     		.value	0x203
 6829 32fb 00000000 		.long	.LASF502
 6830 32ff 01       		.byte	0x1
 6831 3300 04330000 		.long	0x3304
 6832 3304 09       		.uleb128 0x9
 6833 3305 78610000 		.long	0x6178
 6834 3309 19       		.uleb128 0x19
 6835 330a 7E610000 		.long	0x617e
 6836 330e 00       		.byte	0
 6837 330f 00       		.byte	0
 6838 3310 5A       		.uleb128 0x5a
 6839 3311 00000000 		.long	.LASF503
 6840 3315 01       		.byte	0x1
 6841 3316 0C       		.byte	0xc
 6842 3317 1E04     		.value	0x41e
 6843 3319 05       		.uleb128 0x5
 6844 331a 00000000 		.long	.LASF504
 6845 331e 01       		.byte	0x1
 6846 331f 0F       		.byte	0xf
 6847 3320 39       		.byte	0x39
 6848 3321 6C330000 		.long	0x336c
 6849 3325 06       		.uleb128 0x6
 6850 3326 00000000 		.long	.LASF4
 6851 332a 0F       		.byte	0xf
 6852 332b 3B       		.byte	0x3b
 6853 332c 164C0000 		.long	0x4c16
 6854 3330 07       		.uleb128 0x7
 6855 3331 00000000 		.long	.LASF5
 6856 3335 0F       		.byte	0xf
 6857 3336 3C       		.byte	0x3c
 6858 3337 06490000 		.long	0x4906
 6859 333b 08       		.uleb128 0x8
 6860 333c 00000000 		.long	.LASF505
 6861 3340 0F       		.byte	0xf
 6862 3341 3E       		.byte	0x3e
 6863 3342 00000000 		.long	.LASF506
 6864 3346 30330000 		.long	0x3330
 6865 334a 52330000 		.long	0x3352
 6866 334e 58330000 		.long	0x3358
 6867 3352 09       		.uleb128 0x9
 6868 3353 84610000 		.long	0x6184
 6869 3357 00       		.byte	0
 6870 3358 0A       		.uleb128 0xa
 6871 3359 5F547000 		.string	"_Tp"
 6872 335d 06490000 		.long	0x4906
 6873 3361 0B       		.uleb128 0xb
 6874 3362 5F5F7600 		.string	"__v"
 6875 3366 06490000 		.long	0x4906
GAS LISTING /tmp/cceISX6N.s 			page 244


 6876 336a 00       		.byte	0
 6877 336b 00       		.byte	0
 6878 336c 0C       		.uleb128 0xc
 6879 336d 19330000 		.long	0x3319
 6880 3371 1E       		.uleb128 0x1e
 6881 3372 00000000 		.long	.LASF507
 6882 3376 01       		.byte	0x1
 6883 3377 0F       		.byte	0xf
 6884 3378 5E05     		.value	0x55e
 6885 337a 8B330000 		.long	0x338b
 6886 337e 12       		.uleb128 0x12
 6887 337f 00000000 		.long	.LASF101
 6888 3383 0F       		.byte	0xf
 6889 3384 5F05     		.value	0x55f
 6890 3386 7A640000 		.long	0x647a
 6891 338a 00       		.byte	0
 6892 338b 1E       		.uleb128 0x1e
 6893 338c 00000000 		.long	.LASF508
 6894 3390 01       		.byte	0x1
 6895 3391 06       		.byte	0x6
 6896 3392 DA04     		.value	0x4da
 6897 3394 C8330000 		.long	0x33c8
 6898 3398 12       		.uleb128 0x12
 6899 3399 00000000 		.long	.LASF101
 6900 339d 06       		.byte	0x6
 6901 339e DC04     		.value	0x4dc
 6902 33a0 C8330000 		.long	0x33c8
 6903 33a4 35       		.uleb128 0x35
 6904 33a5 00000000 		.long	.LASF509
 6905 33a9 06       		.byte	0x6
 6906 33aa DF04     		.value	0x4df
 6907 33ac 00000000 		.long	.LASF510
 6908 33b0 98330000 		.long	0x3398
 6909 33b4 BE330000 		.long	0x33be
 6910 33b8 19       		.uleb128 0x19
 6911 33b9 7A640000 		.long	0x647a
 6912 33bd 00       		.byte	0
 6913 33be 0A       		.uleb128 0xa
 6914 33bf 5F547000 		.string	"_Tp"
 6915 33c3 7A640000 		.long	0x647a
 6916 33c7 00       		.byte	0
 6917 33c8 58       		.uleb128 0x58
 6918 33c9 00000000 		.long	.LASF511
 6919 33cd 10       		.byte	0x10
 6920 33ce 06       		.byte	0x6
 6921 33cf 7102     		.value	0x271
 6922 33d1 80340000 		.long	0x3480
 6923 33d5 37       		.uleb128 0x37
 6924 33d6 10360000 		.long	0x3610
 6925 33da 00       		.byte	0
 6926 33db 01       		.byte	0x1
 6927 33dc 12       		.uleb128 0x12
 6928 33dd 00000000 		.long	.LASF512
 6929 33e1 06       		.byte	0x6
 6930 33e2 7502     		.value	0x275
 6931 33e4 7A640000 		.long	0x647a
 6932 33e8 3B       		.uleb128 0x3b
GAS LISTING /tmp/cceISX6N.s 			page 245


 6933 33e9 00000000 		.long	.LASF513
 6934 33ed 06       		.byte	0x6
 6935 33ee BB02     		.value	0x2bb
 6936 33f0 DC330000 		.long	0x33dc
 6937 33f4 00       		.byte	0
 6938 33f5 43       		.uleb128 0x43
 6939 33f6 00000000 		.long	.LASF514
 6940 33fa 06       		.byte	0x6
 6941 33fb 9602     		.value	0x296
 6942 33fd 01       		.byte	0x1
 6943 33fe 06340000 		.long	0x3406
 6944 3402 11340000 		.long	0x3411
 6945 3406 09       		.uleb128 0x9
 6946 3407 B6640000 		.long	0x64b6
 6947 340b 19       		.uleb128 0x19
 6948 340c DC330000 		.long	0x33dc
 6949 3410 00       		.byte	0
 6950 3411 5B       		.uleb128 0x5b
 6951 3412 00000000 		.long	.LASF515
 6952 3416 06       		.byte	0x6
 6953 3417 AE02     		.value	0x2ae
 6954 3419 29000000 		.long	0x29
 6955 341d 01       		.byte	0x1
 6956 341e 39340000 		.long	0x3439
 6957 3422 44340000 		.long	0x3444
 6958 3426 0A       		.uleb128 0xa
 6959 3427 5F547000 		.string	"_Tp"
 6960 342b D9640000 		.long	0x64d9
 6961 342f 5C       		.uleb128 0x5c
 6962 3430 00000000 		.long	.LASF517
 6963 3434 5D       		.uleb128 0x5d
 6964 3435 00000000 		.long	.LASF1027
 6965 3439 09       		.uleb128 0x9
 6966 343a 34710000 		.long	0x7134
 6967 343e 19       		.uleb128 0x19
 6968 343f D9640000 		.long	0x64d9
 6969 3443 00       		.byte	0
 6970 3444 5E       		.uleb128 0x5e
 6971 3445 00000000 		.long	.LASF516
 6972 3449 06       		.byte	0x6
 6973 344a 8202     		.value	0x282
 6974 344c 29000000 		.long	0x29
 6975 3450 66340000 		.long	0x3466
 6976 3454 76340000 		.long	0x3476
 6977 3458 0A       		.uleb128 0xa
 6978 3459 5F547000 		.string	"_Tp"
 6979 345d D9640000 		.long	0x64d9
 6980 3461 5C       		.uleb128 0x5c
 6981 3462 00000000 		.long	.LASF517
 6982 3466 09       		.uleb128 0x9
 6983 3467 34710000 		.long	0x7134
 6984 346b 19       		.uleb128 0x19
 6985 346c D9640000 		.long	0x64d9
 6986 3470 19       		.uleb128 0x19
 6987 3471 FD760000 		.long	0x76fd
 6988 3475 00       		.byte	0
 6989 3476 1D       		.uleb128 0x1d
GAS LISTING /tmp/cceISX6N.s 			page 246


 6990 3477 00000000 		.long	.LASF518
 6991 347b 7A640000 		.long	0x647a
 6992 347f 00       		.byte	0
 6993 3480 1E       		.uleb128 0x1e
 6994 3481 00000000 		.long	.LASF519
 6995 3485 01       		.byte	0x1
 6996 3486 0F       		.byte	0xf
 6997 3487 5E05     		.value	0x55e
 6998 3489 9A340000 		.long	0x349a
 6999 348d 12       		.uleb128 0x12
 7000 348e 00000000 		.long	.LASF101
 7001 3492 0F       		.byte	0xf
 7002 3493 5F05     		.value	0x55f
 7003 3495 69640000 		.long	0x6469
 7004 3499 00       		.byte	0
 7005 349a 1E       		.uleb128 0x1e
 7006 349b 00000000 		.long	.LASF520
 7007 349f 01       		.byte	0x1
 7008 34a0 06       		.byte	0x6
 7009 34a1 6106     		.value	0x661
 7010 34a3 D2340000 		.long	0x34d2
 7011 34a7 12       		.uleb128 0x12
 7012 34a8 00000000 		.long	.LASF101
 7013 34ac 06       		.byte	0x6
 7014 34ad 6606     		.value	0x666
 7015 34af D2340000 		.long	0x34d2
 7016 34b3 20       		.uleb128 0x20
 7017 34b4 00000000 		.long	.LASF521
 7018 34b8 BD4A0000 		.long	0x4abd
 7019 34bc 00       		.byte	0
 7020 34bd 1D       		.uleb128 0x1d
 7021 34be 00000000 		.long	.LASF522
 7022 34c2 7A640000 		.long	0x647a
 7023 34c6 5F       		.uleb128 0x5f
 7024 34c7 00000000 		.long	.LASF538
 7025 34cb 60       		.uleb128 0x60
 7026 34cc 69640000 		.long	0x6469
 7027 34d0 00       		.byte	0
 7028 34d1 00       		.byte	0
 7029 34d2 1E       		.uleb128 0x1e
 7030 34d3 00000000 		.long	.LASF523
 7031 34d7 18       		.byte	0x18
 7032 34d8 06       		.byte	0x6
 7033 34d9 0005     		.value	0x500
 7034 34db DE350000 		.long	0x35de
 7035 34df 3A       		.uleb128 0x3a
 7036 34e0 AD360000 		.long	0x36ad
 7037 34e4 00       		.byte	0
 7038 34e5 61       		.uleb128 0x61
 7039 34e6 00000000 		.long	.LASF524
 7040 34ea 06       		.byte	0x6
 7041 34eb 0705     		.value	0x507
 7042 34ed C8330000 		.long	0x33c8
 7043 34f1 00       		.byte	0
 7044 34f2 03       		.byte	0x3
 7045 34f3 61       		.uleb128 0x61
 7046 34f4 00000000 		.long	.LASF525
GAS LISTING /tmp/cceISX6N.s 			page 247


 7047 34f8 06       		.byte	0x6
 7048 34f9 0805     		.value	0x508
 7049 34fb B0390000 		.long	0x39b0
 7050 34ff 10       		.byte	0x10
 7051 3500 03       		.byte	0x3
 7052 3501 18       		.uleb128 0x18
 7053 3502 00000000 		.long	.LASF526
 7054 3506 06       		.byte	0x6
 7055 3507 3B05     		.value	0x53b
 7056 3509 11350000 		.long	0x3511
 7057 350d 1C350000 		.long	0x351c
 7058 3511 09       		.uleb128 0x9
 7059 3512 2D650000 		.long	0x652d
 7060 3516 19       		.uleb128 0x19
 7061 3517 33650000 		.long	0x6533
 7062 351b 00       		.byte	0
 7063 351c 18       		.uleb128 0x18
 7064 351d 00000000 		.long	.LASF526
 7065 3521 06       		.byte	0x6
 7066 3522 3D05     		.value	0x53d
 7067 3524 2C350000 		.long	0x352c
 7068 3528 37350000 		.long	0x3537
 7069 352c 09       		.uleb128 0x9
 7070 352d 2D650000 		.long	0x652d
 7071 3531 19       		.uleb128 0x19
 7072 3532 39650000 		.long	0x6539
 7073 3536 00       		.byte	0
 7074 3537 1C       		.uleb128 0x1c
 7075 3538 00000000 		.long	.LASF527
 7076 353c 06       		.byte	0x6
 7077 353d 3705     		.value	0x537
 7078 353f 56350000 		.long	0x3556
 7079 3543 66350000 		.long	0x3566
 7080 3547 62       		.uleb128 0x62
 7081 3548 00000000 		.long	.LASF517
 7082 354c 56350000 		.long	0x3556
 7083 3550 60       		.uleb128 0x60
 7084 3551 69640000 		.long	0x6469
 7085 3555 00       		.byte	0
 7086 3556 09       		.uleb128 0x9
 7087 3557 2D650000 		.long	0x652d
 7088 355b 19       		.uleb128 0x19
 7089 355c 27650000 		.long	0x6527
 7090 3560 19       		.uleb128 0x19
 7091 3561 3F650000 		.long	0x653f
 7092 3565 00       		.byte	0
 7093 3566 5B       		.uleb128 0x5b
 7094 3567 00000000 		.long	.LASF528
 7095 356b 06       		.byte	0x6
 7096 356c 0D05     		.value	0x50d
 7097 356e 29000000 		.long	0x29
 7098 3572 03       		.byte	0x3
 7099 3573 9C350000 		.long	0x359c
 7100 3577 AC350000 		.long	0x35ac
 7101 357b 1D       		.uleb128 0x1d
 7102 357c 00000000 		.long	.LASF529
 7103 3580 29000000 		.long	0x29
GAS LISTING /tmp/cceISX6N.s 			page 248


 7104 3584 5C       		.uleb128 0x5c
 7105 3585 00000000 		.long	.LASF517
 7106 3589 63       		.uleb128 0x63
 7107 358a 00000000 		.long	.LASF1029
 7108 358e 06       		.byte	0x6
 7109 358f 0B05     		.value	0x50b
 7110 3591 9C350000 		.long	0x359c
 7111 3595 64       		.uleb128 0x64
 7112 3596 EA480000 		.long	0x48ea
 7113 359a 00       		.byte	0
 7114 359b 00       		.byte	0
 7115 359c 09       		.uleb128 0x9
 7116 359d 2D650000 		.long	0x652d
 7117 35a1 19       		.uleb128 0x19
 7118 35a2 99710000 		.long	0x7199
 7119 35a6 19       		.uleb128 0x19
 7120 35a7 DC360000 		.long	0x36dc
 7121 35ab 00       		.byte	0
 7122 35ac 5E       		.uleb128 0x5e
 7123 35ad 00000000 		.long	.LASF530
 7124 35b1 06       		.byte	0x6
 7125 35b2 4705     		.value	0x547
 7126 35b4 29000000 		.long	0x29
 7127 35b8 CE350000 		.long	0x35ce
 7128 35bc D4350000 		.long	0x35d4
 7129 35c0 5C       		.uleb128 0x5c
 7130 35c1 00000000 		.long	.LASF517
 7131 35c5 1D       		.uleb128 0x1d
 7132 35c6 00000000 		.long	.LASF529
 7133 35ca 29000000 		.long	0x29
 7134 35ce 09       		.uleb128 0x9
 7135 35cf 2D650000 		.long	0x652d
 7136 35d3 00       		.byte	0
 7137 35d4 1D       		.uleb128 0x1d
 7138 35d5 00000000 		.long	.LASF531
 7139 35d9 4B8F0000 		.long	0x8f4b
 7140 35dd 00       		.byte	0
 7141 35de 05       		.uleb128 0x5
 7142 35df 00000000 		.long	.LASF532
 7143 35e3 01       		.byte	0x1
 7144 35e4 23       		.byte	0x23
 7145 35e5 65       		.byte	0x65
 7146 35e6 10360000 		.long	0x3610
 7147 35ea 65       		.uleb128 0x65
 7148 35eb 00000000 		.long	.LASF533
 7149 35ef F7350000 		.long	0x35f7
 7150 35f3 FD350000 		.long	0x35fd
 7151 35f7 09       		.uleb128 0x9
 7152 35f8 0E6D0000 		.long	0x6d0e
 7153 35fc 00       		.byte	0
 7154 35fd 1D       		.uleb128 0x1d
 7155 35fe 00000000 		.long	.LASF534
 7156 3602 6F640000 		.long	0x646f
 7157 3606 1D       		.uleb128 0x1d
 7158 3607 00000000 		.long	.LASF529
 7159 360b 29000000 		.long	0x29
 7160 360f 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 249


 7161 3610 1E       		.uleb128 0x1e
 7162 3611 00000000 		.long	.LASF535
 7163 3615 01       		.byte	0x1
 7164 3616 06       		.byte	0x6
 7165 3617 1302     		.value	0x213
 7166 3619 4B360000 		.long	0x364b
 7167 361d 3A       		.uleb128 0x3a
 7168 361e DE350000 		.long	0x35de
 7169 3622 00       		.byte	0
 7170 3623 65       		.uleb128 0x65
 7171 3624 00000000 		.long	.LASF536
 7172 3628 30360000 		.long	0x3630
 7173 362c 36360000 		.long	0x3636
 7174 3630 09       		.uleb128 0x9
 7175 3631 356D0000 		.long	0x6d35
 7176 3635 00       		.byte	0
 7177 3636 1D       		.uleb128 0x1d
 7178 3637 00000000 		.long	.LASF537
 7179 363b 29000000 		.long	0x29
 7180 363f 5F       		.uleb128 0x5f
 7181 3640 00000000 		.long	.LASF539
 7182 3644 60       		.uleb128 0x60
 7183 3645 6F640000 		.long	0x646f
 7184 3649 00       		.byte	0
 7185 364a 00       		.byte	0
 7186 364b 05       		.uleb128 0x5
 7187 364c 00000000 		.long	.LASF540
 7188 3650 01       		.byte	0x1
 7189 3651 06       		.byte	0x6
 7190 3652 4E       		.byte	0x4e
 7191 3653 7E360000 		.long	0x367e
 7192 3657 65       		.uleb128 0x65
 7193 3658 00000000 		.long	.LASF541
 7194 365c 64360000 		.long	0x3664
 7195 3660 6A360000 		.long	0x366a
 7196 3664 09       		.uleb128 0x9
 7197 3665 5C680000 		.long	0x685c
 7198 3669 00       		.byte	0
 7199 366a 20       		.uleb128 0x20
 7200 366b 00000000 		.long	.LASF542
 7201 366f BD4A0000 		.long	0x4abd
 7202 3673 01       		.byte	0x1
 7203 3674 1D       		.uleb128 0x1d
 7204 3675 00000000 		.long	.LASF512
 7205 3679 C8330000 		.long	0x33c8
 7206 367d 00       		.byte	0
 7207 367e 05       		.uleb128 0x5
 7208 367f 00000000 		.long	.LASF543
 7209 3683 01       		.byte	0x1
 7210 3684 06       		.byte	0x6
 7211 3685 56       		.byte	0x56
 7212 3686 AD360000 		.long	0x36ad
 7213 368a 3A       		.uleb128 0x3a
 7214 368b 4B360000 		.long	0x364b
 7215 368f 00       		.byte	0
 7216 3690 65       		.uleb128 0x65
 7217 3691 00000000 		.long	.LASF544
GAS LISTING /tmp/cceISX6N.s 			page 250


 7218 3695 9D360000 		.long	0x369d
 7219 3699 A3360000 		.long	0x36a3
 7220 369d 09       		.uleb128 0x9
 7221 369e 83680000 		.long	0x6883
 7222 36a2 00       		.byte	0
 7223 36a3 1D       		.uleb128 0x1d
 7224 36a4 00000000 		.long	.LASF512
 7225 36a8 C8330000 		.long	0x33c8
 7226 36ac 00       		.byte	0
 7227 36ad 05       		.uleb128 0x5
 7228 36ae 00000000 		.long	.LASF545
 7229 36b2 01       		.byte	0x1
 7230 36b3 06       		.byte	0x6
 7231 36b4 B8       		.byte	0xb8
 7232 36b5 DC360000 		.long	0x36dc
 7233 36b9 3A       		.uleb128 0x3a
 7234 36ba 7E360000 		.long	0x367e
 7235 36be 00       		.byte	0
 7236 36bf 65       		.uleb128 0x65
 7237 36c0 00000000 		.long	.LASF546
 7238 36c4 CC360000 		.long	0x36cc
 7239 36c8 D2360000 		.long	0x36d2
 7240 36cc 09       		.uleb128 0x9
 7241 36cd F26A0000 		.long	0x6af2
 7242 36d1 00       		.byte	0
 7243 36d2 1D       		.uleb128 0x1d
 7244 36d3 00000000 		.long	.LASF512
 7245 36d7 C8330000 		.long	0x33c8
 7246 36db 00       		.byte	0
 7247 36dc 1E       		.uleb128 0x1e
 7248 36dd 00000000 		.long	.LASF547
 7249 36e1 01       		.byte	0x1
 7250 36e2 0C       		.byte	0xc
 7251 36e3 8003     		.value	0x380
 7252 36e5 EB360000 		.long	0x36eb
 7253 36e9 66       		.uleb128 0x66
 7254 36ea 00       		.byte	0
 7255 36eb 05       		.uleb128 0x5
 7256 36ec 00000000 		.long	.LASF548
 7257 36f0 01       		.byte	0x1
 7258 36f1 0C       		.byte	0xc
 7259 36f2 BF       		.byte	0xbf
 7260 36f3 3B370000 		.long	0x373b
 7261 36f7 17       		.uleb128 0x17
 7262 36f8 00000000 		.long	.LASF549
 7263 36fc 0C       		.byte	0xc
 7264 36fd C3       		.byte	0xc3
 7265 36fe 06370000 		.long	0x3706
 7266 3702 0C370000 		.long	0x370c
 7267 3706 09       		.uleb128 0x9
 7268 3707 BC640000 		.long	0x64bc
 7269 370b 00       		.byte	0
 7270 370c 2D       		.uleb128 0x2d
 7271 370d 00000000 		.long	.LASF550
 7272 3711 0C       		.byte	0xc
 7273 3712 CF       		.byte	0xcf
 7274 3713 00000000 		.long	.LASF551
GAS LISTING /tmp/cceISX6N.s 			page 251


 7275 3717 02       		.byte	0x2
 7276 3718 20370000 		.long	0x3720
 7277 371c 2B370000 		.long	0x372b
 7278 3720 09       		.uleb128 0x9
 7279 3721 BC640000 		.long	0x64bc
 7280 3725 19       		.uleb128 0x19
 7281 3726 C2640000 		.long	0x64c2
 7282 372a 00       		.byte	0
 7283 372b 20       		.uleb128 0x20
 7284 372c 00000000 		.long	.LASF552
 7285 3730 EA480000 		.long	0x48ea
 7286 3734 01       		.byte	0x1
 7287 3735 5C       		.uleb128 0x5c
 7288 3736 00000000 		.long	.LASF553
 7289 373a 00       		.byte	0
 7290 373b 05       		.uleb128 0x5
 7291 373c 00000000 		.long	.LASF554
 7292 3740 08       		.byte	0x8
 7293 3741 0C       		.byte	0xc
 7294 3742 80       		.byte	0x80
 7295 3743 0F380000 		.long	0x380f
 7296 3747 28       		.uleb128 0x28
 7297 3748 00000000 		.long	.LASF555
 7298 374c 0C       		.byte	0xc
 7299 374d AC       		.byte	0xac
 7300 374e 69640000 		.long	0x6469
 7301 3752 00       		.byte	0
 7302 3753 17       		.uleb128 0x17
 7303 3754 00000000 		.long	.LASF556
 7304 3758 0C       		.byte	0xc
 7305 3759 82       		.byte	0x82
 7306 375a 62370000 		.long	0x3762
 7307 375e 68370000 		.long	0x3768
 7308 3762 09       		.uleb128 0x9
 7309 3763 C8640000 		.long	0x64c8
 7310 3767 00       		.byte	0
 7311 3768 17       		.uleb128 0x17
 7312 3769 00000000 		.long	.LASF556
 7313 376d 0C       		.byte	0xc
 7314 376e 85       		.byte	0x85
 7315 376f 77370000 		.long	0x3777
 7316 3773 82370000 		.long	0x3782
 7317 3777 09       		.uleb128 0x9
 7318 3778 C8640000 		.long	0x64c8
 7319 377c 19       		.uleb128 0x19
 7320 377d CE640000 		.long	0x64ce
 7321 3781 00       		.byte	0
 7322 3782 17       		.uleb128 0x17
 7323 3783 00000000 		.long	.LASF556
 7324 3787 0C       		.byte	0xc
 7325 3788 8E       		.byte	0x8e
 7326 3789 91370000 		.long	0x3791
 7327 378d 9C370000 		.long	0x379c
 7328 3791 09       		.uleb128 0x9
 7329 3792 C8640000 		.long	0x64c8
 7330 3796 19       		.uleb128 0x19
 7331 3797 99320000 		.long	0x3299
GAS LISTING /tmp/cceISX6N.s 			page 252


 7332 379b 00       		.byte	0
 7333 379c 34       		.uleb128 0x34
 7334 379d 00000000 		.long	.LASF557
 7335 37a1 0C       		.byte	0xc
 7336 37a2 A7       		.byte	0xa7
 7337 37a3 00000000 		.long	.LASF558
 7338 37a7 D9640000 		.long	0x64d9
 7339 37ab B5370000 		.long	0x37b5
 7340 37af 19       		.uleb128 0x19
 7341 37b0 DF640000 		.long	0x64df
 7342 37b4 00       		.byte	0
 7343 37b5 34       		.uleb128 0x34
 7344 37b6 00000000 		.long	.LASF557
 7345 37ba 0C       		.byte	0xc
 7346 37bb AA       		.byte	0xaa
 7347 37bc 00000000 		.long	.LASF559
 7348 37c0 CE640000 		.long	0x64ce
 7349 37c4 CE370000 		.long	0x37ce
 7350 37c8 19       		.uleb128 0x19
 7351 37c9 E5640000 		.long	0x64e5
 7352 37cd 00       		.byte	0
 7353 37ce 17       		.uleb128 0x17
 7354 37cf 00000000 		.long	.LASF560
 7355 37d3 0C       		.byte	0xc
 7356 37d4 8B       		.byte	0x8b
 7357 37d5 E6370000 		.long	0x37e6
 7358 37d9 F1370000 		.long	0x37f1
 7359 37dd 1D       		.uleb128 0x1d
 7360 37de 00000000 		.long	.LASF561
 7361 37e2 69640000 		.long	0x6469
 7362 37e6 09       		.uleb128 0x9
 7363 37e7 C8640000 		.long	0x64c8
 7364 37eb 19       		.uleb128 0x19
 7365 37ec 3F650000 		.long	0x653f
 7366 37f0 00       		.byte	0
 7367 37f1 20       		.uleb128 0x20
 7368 37f2 00000000 		.long	.LASF552
 7369 37f6 EA480000 		.long	0x48ea
 7370 37fa 00       		.byte	0
 7371 37fb 1D       		.uleb128 0x1d
 7372 37fc 00000000 		.long	.LASF562
 7373 3800 69640000 		.long	0x6469
 7374 3804 20       		.uleb128 0x20
 7375 3805 00000000 		.long	.LASF563
 7376 3809 BD4A0000 		.long	0x4abd
 7377 380d 00       		.byte	0
 7378 380e 00       		.byte	0
 7379 380f 0C       		.uleb128 0xc
 7380 3810 3B370000 		.long	0x373b
 7381 3814 05       		.uleb128 0x5
 7382 3815 00000000 		.long	.LASF564
 7383 3819 08       		.byte	0x8
 7384 381a 0C       		.byte	0xc
 7385 381b E5       		.byte	0xe5
 7386 381c AB390000 		.long	0x39ab
 7387 3820 3A       		.uleb128 0x3a
 7388 3821 EB360000 		.long	0x36eb
GAS LISTING /tmp/cceISX6N.s 			page 253


 7389 3825 00       		.byte	0
 7390 3826 37       		.uleb128 0x37
 7391 3827 3B370000 		.long	0x373b
 7392 382b 00       		.byte	0
 7393 382c 03       		.byte	0x3
 7394 382d 07       		.uleb128 0x7
 7395 382e 00000000 		.long	.LASF565
 7396 3832 0C       		.byte	0xc
 7397 3833 EB       		.byte	0xeb
 7398 3834 EB360000 		.long	0x36eb
 7399 3838 34       		.uleb128 0x34
 7400 3839 00000000 		.long	.LASF557
 7401 383d 0C       		.byte	0xc
 7402 383e EF       		.byte	0xef
 7403 383f 00000000 		.long	.LASF566
 7404 3843 D9640000 		.long	0x64d9
 7405 3847 51380000 		.long	0x3851
 7406 384b 19       		.uleb128 0x19
 7407 384c EB640000 		.long	0x64eb
 7408 3850 00       		.byte	0
 7409 3851 34       		.uleb128 0x34
 7410 3852 00000000 		.long	.LASF557
 7411 3856 0C       		.byte	0xc
 7412 3857 F2       		.byte	0xf2
 7413 3858 00000000 		.long	.LASF567
 7414 385c CE640000 		.long	0x64ce
 7415 3860 6A380000 		.long	0x386a
 7416 3864 19       		.uleb128 0x19
 7417 3865 F1640000 		.long	0x64f1
 7418 3869 00       		.byte	0
 7419 386a 34       		.uleb128 0x34
 7420 386b 00000000 		.long	.LASF568
 7421 386f 0C       		.byte	0xc
 7422 3870 F5       		.byte	0xf5
 7423 3871 00000000 		.long	.LASF569
 7424 3875 F7640000 		.long	0x64f7
 7425 3879 83380000 		.long	0x3883
 7426 387d 19       		.uleb128 0x19
 7427 387e EB640000 		.long	0x64eb
 7428 3882 00       		.byte	0
 7429 3883 34       		.uleb128 0x34
 7430 3884 00000000 		.long	.LASF568
 7431 3888 0C       		.byte	0xc
 7432 3889 F8       		.byte	0xf8
 7433 388a 00000000 		.long	.LASF570
 7434 388e FD640000 		.long	0x64fd
 7435 3892 9C380000 		.long	0x389c
 7436 3896 19       		.uleb128 0x19
 7437 3897 F1640000 		.long	0x64f1
 7438 389b 00       		.byte	0
 7439 389c 0C       		.uleb128 0xc
 7440 389d 2D380000 		.long	0x382d
 7441 38a1 17       		.uleb128 0x17
 7442 38a2 00000000 		.long	.LASF549
 7443 38a6 0C       		.byte	0xc
 7444 38a7 FA       		.byte	0xfa
 7445 38a8 B0380000 		.long	0x38b0
GAS LISTING /tmp/cceISX6N.s 			page 254


 7446 38ac B6380000 		.long	0x38b6
 7447 38b0 09       		.uleb128 0x9
 7448 38b1 03650000 		.long	0x6503
 7449 38b5 00       		.byte	0
 7450 38b6 29       		.uleb128 0x29
 7451 38b7 00000000 		.long	.LASF549
 7452 38bb 0C       		.byte	0xc
 7453 38bc FE       		.byte	0xfe
 7454 38bd C5380000 		.long	0x38c5
 7455 38c1 D0380000 		.long	0x38d0
 7456 38c5 09       		.uleb128 0x9
 7457 38c6 03650000 		.long	0x6503
 7458 38ca 19       		.uleb128 0x19
 7459 38cb CE640000 		.long	0x64ce
 7460 38cf 00       		.byte	0
 7461 38d0 18       		.uleb128 0x18
 7462 38d1 00000000 		.long	.LASF549
 7463 38d5 0C       		.byte	0xc
 7464 38d6 0801     		.value	0x108
 7465 38d8 E0380000 		.long	0x38e0
 7466 38dc EB380000 		.long	0x38eb
 7467 38e0 09       		.uleb128 0x9
 7468 38e1 03650000 		.long	0x6503
 7469 38e5 19       		.uleb128 0x19
 7470 38e6 F1640000 		.long	0x64f1
 7471 38ea 00       		.byte	0
 7472 38eb 18       		.uleb128 0x18
 7473 38ec 00000000 		.long	.LASF549
 7474 38f0 0C       		.byte	0xc
 7475 38f1 0B01     		.value	0x10b
 7476 38f3 FB380000 		.long	0x38fb
 7477 38f7 06390000 		.long	0x3906
 7478 38fb 09       		.uleb128 0x9
 7479 38fc 03650000 		.long	0x6503
 7480 3900 19       		.uleb128 0x19
 7481 3901 09650000 		.long	0x6509
 7482 3905 00       		.byte	0
 7483 3906 1A       		.uleb128 0x1a
 7484 3907 00000000 		.long	.LASF18
 7485 390b 0C       		.byte	0xc
 7486 390c 5001     		.value	0x150
 7487 390e 00000000 		.long	.LASF571
 7488 3912 EB640000 		.long	0x64eb
 7489 3916 1E390000 		.long	0x391e
 7490 391a 29390000 		.long	0x3929
 7491 391e 09       		.uleb128 0x9
 7492 391f 03650000 		.long	0x6503
 7493 3923 19       		.uleb128 0x19
 7494 3924 F1640000 		.long	0x64f1
 7495 3928 00       		.byte	0
 7496 3929 1A       		.uleb128 0x1a
 7497 392a 00000000 		.long	.LASF18
 7498 392e 0C       		.byte	0xc
 7499 392f 5801     		.value	0x158
 7500 3931 00000000 		.long	.LASF572
 7501 3935 EB640000 		.long	0x64eb
 7502 3939 41390000 		.long	0x3941
GAS LISTING /tmp/cceISX6N.s 			page 255


 7503 393d 4C390000 		.long	0x394c
 7504 3941 09       		.uleb128 0x9
 7505 3942 03650000 		.long	0x6503
 7506 3946 19       		.uleb128 0x19
 7507 3947 09650000 		.long	0x6509
 7508 394b 00       		.byte	0
 7509 394c 46       		.uleb128 0x46
 7510 394d 00000000 		.long	.LASF550
 7511 3951 0C       		.byte	0xc
 7512 3952 7701     		.value	0x177
 7513 3954 00000000 		.long	.LASF573
 7514 3958 02       		.byte	0x2
 7515 3959 61390000 		.long	0x3961
 7516 395d 6C390000 		.long	0x396c
 7517 3961 09       		.uleb128 0x9
 7518 3962 03650000 		.long	0x6503
 7519 3966 19       		.uleb128 0x19
 7520 3967 EB640000 		.long	0x64eb
 7521 396b 00       		.byte	0
 7522 396c 1C       		.uleb128 0x1c
 7523 396d 00000000 		.long	.LASF574
 7524 3971 0C       		.byte	0xc
 7525 3972 0401     		.value	0x104
 7526 3974 8A390000 		.long	0x398a
 7527 3978 95390000 		.long	0x3995
 7528 397c 1D       		.uleb128 0x1d
 7529 397d 00000000 		.long	.LASF561
 7530 3981 69640000 		.long	0x6469
 7531 3985 5C       		.uleb128 0x5c
 7532 3986 00000000 		.long	.LASF575
 7533 398a 09       		.uleb128 0x9
 7534 398b 03650000 		.long	0x6503
 7535 398f 19       		.uleb128 0x19
 7536 3990 3F650000 		.long	0x653f
 7537 3994 00       		.byte	0
 7538 3995 20       		.uleb128 0x20
 7539 3996 00000000 		.long	.LASF552
 7540 399a EA480000 		.long	0x48ea
 7541 399e 00       		.byte	0
 7542 399f 5F       		.uleb128 0x5f
 7543 39a0 00000000 		.long	.LASF553
 7544 39a4 60       		.uleb128 0x60
 7545 39a5 69640000 		.long	0x6469
 7546 39a9 00       		.byte	0
 7547 39aa 00       		.byte	0
 7548 39ab 0C       		.uleb128 0xc
 7549 39ac 14380000 		.long	0x3814
 7550 39b0 58       		.uleb128 0x58
 7551 39b1 00000000 		.long	.LASF576
 7552 39b5 08       		.byte	0x8
 7553 39b6 0C       		.byte	0xc
 7554 39b7 8401     		.value	0x184
 7555 39b9 C43A0000 		.long	0x3ac4
 7556 39bd 37       		.uleb128 0x37
 7557 39be 14380000 		.long	0x3814
 7558 39c2 00       		.byte	0
 7559 39c3 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 256


 7560 39c4 42       		.uleb128 0x42
 7561 39c5 00000000 		.long	.LASF577
 7562 39c9 0C       		.byte	0xc
 7563 39ca 8901     		.value	0x189
 7564 39cc 01       		.byte	0x1
 7565 39cd D5390000 		.long	0x39d5
 7566 39d1 DB390000 		.long	0x39db
 7567 39d5 09       		.uleb128 0x9
 7568 39d6 0F650000 		.long	0x650f
 7569 39da 00       		.byte	0
 7570 39db 43       		.uleb128 0x43
 7571 39dc 00000000 		.long	.LASF577
 7572 39e0 0C       		.byte	0xc
 7573 39e1 8D01     		.value	0x18d
 7574 39e3 01       		.byte	0x1
 7575 39e4 EC390000 		.long	0x39ec
 7576 39e8 F7390000 		.long	0x39f7
 7577 39ec 09       		.uleb128 0x9
 7578 39ed 0F650000 		.long	0x650f
 7579 39f1 19       		.uleb128 0x19
 7580 39f2 CE640000 		.long	0x64ce
 7581 39f6 00       		.byte	0
 7582 39f7 42       		.uleb128 0x42
 7583 39f8 00000000 		.long	.LASF577
 7584 39fc 0C       		.byte	0xc
 7585 39fd 9701     		.value	0x197
 7586 39ff 01       		.byte	0x1
 7587 3a00 083A0000 		.long	0x3a08
 7588 3a04 133A0000 		.long	0x3a13
 7589 3a08 09       		.uleb128 0x9
 7590 3a09 0F650000 		.long	0x650f
 7591 3a0d 19       		.uleb128 0x19
 7592 3a0e 15650000 		.long	0x6515
 7593 3a12 00       		.byte	0
 7594 3a13 42       		.uleb128 0x42
 7595 3a14 00000000 		.long	.LASF577
 7596 3a18 0C       		.byte	0xc
 7597 3a19 9901     		.value	0x199
 7598 3a1b 01       		.byte	0x1
 7599 3a1c 243A0000 		.long	0x3a24
 7600 3a20 2F3A0000 		.long	0x3a2f
 7601 3a24 09       		.uleb128 0x9
 7602 3a25 0F650000 		.long	0x650f
 7603 3a29 19       		.uleb128 0x19
 7604 3a2a 1B650000 		.long	0x651b
 7605 3a2e 00       		.byte	0
 7606 3a2f 44       		.uleb128 0x44
 7607 3a30 00000000 		.long	.LASF18
 7608 3a34 0C       		.byte	0xc
 7609 3a35 D601     		.value	0x1d6
 7610 3a37 00000000 		.long	.LASF578
 7611 3a3b 21650000 		.long	0x6521
 7612 3a3f 01       		.byte	0x1
 7613 3a40 483A0000 		.long	0x3a48
 7614 3a44 533A0000 		.long	0x3a53
 7615 3a48 09       		.uleb128 0x9
 7616 3a49 0F650000 		.long	0x650f
GAS LISTING /tmp/cceISX6N.s 			page 257


 7617 3a4d 19       		.uleb128 0x19
 7618 3a4e 15650000 		.long	0x6515
 7619 3a52 00       		.byte	0
 7620 3a53 44       		.uleb128 0x44
 7621 3a54 00000000 		.long	.LASF18
 7622 3a58 0C       		.byte	0xc
 7623 3a59 DD01     		.value	0x1dd
 7624 3a5b 00000000 		.long	.LASF579
 7625 3a5f 21650000 		.long	0x6521
 7626 3a63 01       		.byte	0x1
 7627 3a64 6C3A0000 		.long	0x3a6c
 7628 3a68 773A0000 		.long	0x3a77
 7629 3a6c 09       		.uleb128 0x9
 7630 3a6d 0F650000 		.long	0x650f
 7631 3a71 19       		.uleb128 0x19
 7632 3a72 1B650000 		.long	0x651b
 7633 3a76 00       		.byte	0
 7634 3a77 46       		.uleb128 0x46
 7635 3a78 00000000 		.long	.LASF113
 7636 3a7c 0C       		.byte	0xc
 7637 3a7d F901     		.value	0x1f9
 7638 3a7f 00000000 		.long	.LASF580
 7639 3a83 01       		.byte	0x1
 7640 3a84 8C3A0000 		.long	0x3a8c
 7641 3a88 973A0000 		.long	0x3a97
 7642 3a8c 09       		.uleb128 0x9
 7643 3a8d 0F650000 		.long	0x650f
 7644 3a91 19       		.uleb128 0x19
 7645 3a92 21650000 		.long	0x6521
 7646 3a96 00       		.byte	0
 7647 3a97 43       		.uleb128 0x43
 7648 3a98 00000000 		.long	.LASF581
 7649 3a9c 0C       		.byte	0xc
 7650 3a9d 9401     		.value	0x194
 7651 3a9f 01       		.byte	0x1
 7652 3aa0 B73A0000 		.long	0x3ab7
 7653 3aa4 C23A0000 		.long	0x3ac2
 7654 3aa8 62       		.uleb128 0x62
 7655 3aa9 00000000 		.long	.LASF582
 7656 3aad B73A0000 		.long	0x3ab7
 7657 3ab1 60       		.uleb128 0x60
 7658 3ab2 69640000 		.long	0x6469
 7659 3ab6 00       		.byte	0
 7660 3ab7 09       		.uleb128 0x9
 7661 3ab8 0F650000 		.long	0x650f
 7662 3abc 19       		.uleb128 0x19
 7663 3abd 3F650000 		.long	0x653f
 7664 3ac1 00       		.byte	0
 7665 3ac2 66       		.uleb128 0x66
 7666 3ac3 00       		.byte	0
 7667 3ac4 0C       		.uleb128 0xc
 7668 3ac5 B0390000 		.long	0x39b0
 7669 3ac9 0C       		.uleb128 0xc
 7670 3aca C8330000 		.long	0x33c8
 7671 3ace 0C       		.uleb128 0xc
 7672 3acf D2340000 		.long	0x34d2
 7673 3ad3 1E       		.uleb128 0x1e
GAS LISTING /tmp/cceISX6N.s 			page 258


 7674 3ad4 00000000 		.long	.LASF583
 7675 3ad8 01       		.byte	0x1
 7676 3ad9 0F       		.byte	0xf
 7677 3ada 6205     		.value	0x562
 7678 3adc ED3A0000 		.long	0x3aed
 7679 3ae0 12       		.uleb128 0x12
 7680 3ae1 00000000 		.long	.LASF101
 7681 3ae5 0F       		.byte	0xf
 7682 3ae6 6305     		.value	0x563
 7683 3ae8 C8330000 		.long	0x33c8
 7684 3aec 00       		.byte	0
 7685 3aed 58       		.uleb128 0x58
 7686 3aee 00000000 		.long	.LASF584
 7687 3af2 01       		.byte	0x1
 7688 3af3 06       		.byte	0x6
 7689 3af4 AF04     		.value	0x4af
 7690 3af6 4F3B0000 		.long	0x3b4f
 7691 3afa 5B       		.uleb128 0x5b
 7692 3afb 00000000 		.long	.LASF585
 7693 3aff 06       		.byte	0x6
 7694 3b00 BD04     		.value	0x4bd
 7695 3b02 D9640000 		.long	0x64d9
 7696 3b06 01       		.byte	0x1
 7697 3b07 213B0000 		.long	0x3b21
 7698 3b0b 313B0000 		.long	0x3b31
 7699 3b0f 1D       		.uleb128 0x1d
 7700 3b10 00000000 		.long	.LASF586
 7701 3b14 D9640000 		.long	0x64d9
 7702 3b18 1D       		.uleb128 0x1d
 7703 3b19 00000000 		.long	.LASF587
 7704 3b1d E6320000 		.long	0x32e6
 7705 3b21 09       		.uleb128 0x9
 7706 3b22 E1700000 		.long	0x70e1
 7707 3b26 19       		.uleb128 0x19
 7708 3b27 D9640000 		.long	0x64d9
 7709 3b2b 19       		.uleb128 0x19
 7710 3b2c 7E610000 		.long	0x617e
 7711 3b30 00       		.byte	0
 7712 3b31 1D       		.uleb128 0x1d
 7713 3b32 00000000 		.long	.LASF534
 7714 3b36 69640000 		.long	0x6469
 7715 3b3a 20       		.uleb128 0x20
 7716 3b3b 00000000 		.long	.LASF588
 7717 3b3f BD4A0000 		.long	0x4abd
 7718 3b43 00       		.byte	0
 7719 3b44 20       		.uleb128 0x20
 7720 3b45 00000000 		.long	.LASF589
 7721 3b49 BD4A0000 		.long	0x4abd
 7722 3b4d 00       		.byte	0
 7723 3b4e 00       		.byte	0
 7724 3b4f 1E       		.uleb128 0x1e
 7725 3b50 00000000 		.long	.LASF590
 7726 3b54 01       		.byte	0x1
 7727 3b55 0F       		.byte	0xf
 7728 3b56 6205     		.value	0x562
 7729 3b58 693B0000 		.long	0x3b69
 7730 3b5c 12       		.uleb128 0x12
GAS LISTING /tmp/cceISX6N.s 			page 259


 7731 3b5d 00000000 		.long	.LASF101
 7732 3b61 0F       		.byte	0xf
 7733 3b62 6305     		.value	0x563
 7734 3b64 69640000 		.long	0x6469
 7735 3b68 00       		.byte	0
 7736 3b69 1E       		.uleb128 0x1e
 7737 3b6a 00000000 		.long	.LASF591
 7738 3b6e 01       		.byte	0x1
 7739 3b6f 13       		.byte	0x13
 7740 3b70 0701     		.value	0x107
 7741 3b72 A73B0000 		.long	0x3ba7
 7742 3b76 54       		.uleb128 0x54
 7743 3b77 6E756D00 		.string	"num"
 7744 3b7b 13       		.byte	0x13
 7745 3b7c 0E01     		.value	0x10e
 7746 3b7e 214E0000 		.long	0x4e21
 7747 3b82 E803     		.value	0x3e8
 7748 3b84 24       		.uleb128 0x24
 7749 3b85 64656E00 		.string	"den"
 7750 3b89 13       		.byte	0x13
 7751 3b8a 1101     		.value	0x111
 7752 3b8c 214E0000 		.long	0x4e21
 7753 3b90 01       		.byte	0x1
 7754 3b91 55       		.uleb128 0x55
 7755 3b92 00000000 		.long	.LASF96
 7756 3b96 30000000 		.long	0x30
 7757 3b9a E803     		.value	0x3e8
 7758 3b9c 20       		.uleb128 0x20
 7759 3b9d 00000000 		.long	.LASF97
 7760 3ba1 30000000 		.long	0x30
 7761 3ba5 01       		.byte	0x1
 7762 3ba6 00       		.byte	0
 7763 3ba7 05       		.uleb128 0x5
 7764 3ba8 00000000 		.long	.LASF592
 7765 3bac 01       		.byte	0x1
 7766 3bad 0F       		.byte	0xf
 7767 3bae 39       		.byte	0x39
 7768 3baf FD3B0000 		.long	0x3bfd
 7769 3bb3 06       		.uleb128 0x6
 7770 3bb4 00000000 		.long	.LASF4
 7771 3bb8 0F       		.byte	0xf
 7772 3bb9 3B       		.byte	0x3b
 7773 3bba 104E0000 		.long	0x4e10
 7774 3bbe 07       		.uleb128 0x7
 7775 3bbf 00000000 		.long	.LASF5
 7776 3bc3 0F       		.byte	0xf
 7777 3bc4 3C       		.byte	0x3c
 7778 3bc5 30000000 		.long	0x30
 7779 3bc9 08       		.uleb128 0x8
 7780 3bca 00000000 		.long	.LASF593
 7781 3bce 0F       		.byte	0xf
 7782 3bcf 3E       		.byte	0x3e
 7783 3bd0 00000000 		.long	.LASF594
 7784 3bd4 BE3B0000 		.long	0x3bbe
 7785 3bd8 E03B0000 		.long	0x3be0
 7786 3bdc E63B0000 		.long	0x3be6
 7787 3be0 09       		.uleb128 0x9
GAS LISTING /tmp/cceISX6N.s 			page 260


 7788 3be1 45650000 		.long	0x6545
 7789 3be5 00       		.byte	0
 7790 3be6 0A       		.uleb128 0xa
 7791 3be7 5F547000 		.string	"_Tp"
 7792 3beb 30000000 		.long	0x30
 7793 3bef 23       		.uleb128 0x23
 7794 3bf0 5F5F7600 		.string	"__v"
 7795 3bf4 30000000 		.long	0x30
 7796 3bf8 40420F00 		.long	0xf4240
 7797 3bfc 00       		.byte	0
 7798 3bfd 0C       		.uleb128 0xc
 7799 3bfe A73B0000 		.long	0x3ba7
 7800 3c02 1E       		.uleb128 0x1e
 7801 3c03 00000000 		.long	.LASF595
 7802 3c07 01       		.byte	0x1
 7803 3c08 13       		.byte	0x13
 7804 3c09 0701     		.value	0x107
 7805 3c0b 443C0000 		.long	0x3c44
 7806 3c0f 24       		.uleb128 0x24
 7807 3c10 6E756D00 		.string	"num"
 7808 3c14 13       		.byte	0x13
 7809 3c15 0E01     		.value	0x10e
 7810 3c17 214E0000 		.long	0x4e21
 7811 3c1b 01       		.byte	0x1
 7812 3c1c 25       		.uleb128 0x25
 7813 3c1d 64656E00 		.string	"den"
 7814 3c21 13       		.byte	0x13
 7815 3c22 1101     		.value	0x111
 7816 3c24 214E0000 		.long	0x4e21
 7817 3c28 40420F00 		.long	0xf4240
 7818 3c2c 20       		.uleb128 0x20
 7819 3c2d 00000000 		.long	.LASF96
 7820 3c31 30000000 		.long	0x30
 7821 3c35 01       		.byte	0x1
 7822 3c36 26       		.uleb128 0x26
 7823 3c37 00000000 		.long	.LASF97
 7824 3c3b 30000000 		.long	0x30
 7825 3c3f 40420F00 		.long	0xf4240
 7826 3c43 00       		.byte	0
 7827 3c44 1E       		.uleb128 0x1e
 7828 3c45 00000000 		.long	.LASF596
 7829 3c49 01       		.byte	0x1
 7830 3c4a 0F       		.byte	0xf
 7831 3c4b EB06     		.value	0x6eb
 7832 3c4d 673C0000 		.long	0x3c67
 7833 3c51 12       		.uleb128 0x12
 7834 3c52 00000000 		.long	.LASF101
 7835 3c56 0F       		.byte	0xf
 7836 3c57 EC06     		.value	0x6ec
 7837 3c59 2A060000 		.long	0x62a
 7838 3c5d 0A       		.uleb128 0xa
 7839 3c5e 5F547000 		.string	"_Tp"
 7840 3c62 2A060000 		.long	0x62a
 7841 3c66 00       		.byte	0
 7842 3c67 05       		.uleb128 0x5
 7843 3c68 00000000 		.long	.LASF597
 7844 3c6c 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 261


 7845 3c6d 0C       		.byte	0xc
 7846 3c6e 3E       		.byte	0x3e
 7847 3c6f 883C0000 		.long	0x3c88
 7848 3c73 07       		.uleb128 0x7
 7849 3c74 00000000 		.long	.LASF101
 7850 3c78 0C       		.byte	0xc
 7851 3c79 3F       		.byte	0x3f
 7852 3c7a D9640000 		.long	0x64d9
 7853 3c7e 0A       		.uleb128 0xa
 7854 3c7f 5F547000 		.string	"_Tp"
 7855 3c83 69640000 		.long	0x6469
 7856 3c87 00       		.byte	0
 7857 3c88 05       		.uleb128 0x5
 7858 3c89 00000000 		.long	.LASF598
 7859 3c8d 01       		.byte	0x1
 7860 3c8e 24       		.byte	0x24
 7861 3c8f AF       		.byte	0xaf
 7862 3c90 BF3C0000 		.long	0x3cbf
 7863 3c94 07       		.uleb128 0x7
 7864 3c95 00000000 		.long	.LASF599
 7865 3c99 24       		.byte	0x24
 7866 3c9a B3       		.byte	0xb3
 7867 3c9b 06110000 		.long	0x1106
 7868 3c9f 07       		.uleb128 0x7
 7869 3ca0 00000000 		.long	.LASF600
 7870 3ca4 24       		.byte	0x24
 7871 3ca5 B4       		.byte	0xb4
 7872 3ca6 38490000 		.long	0x4938
 7873 3caa 07       		.uleb128 0x7
 7874 3cab 00000000 		.long	.LASF149
 7875 3caf 24       		.byte	0x24
 7876 3cb0 B5       		.byte	0xb5
 7877 3cb1 4B590000 		.long	0x594b
 7878 3cb5 1D       		.uleb128 0x1d
 7879 3cb6 00000000 		.long	.LASF601
 7880 3cba 38490000 		.long	0x4938
 7881 3cbe 00       		.byte	0
 7882 3cbf 05       		.uleb128 0x5
 7883 3cc0 00000000 		.long	.LASF602
 7884 3cc4 01       		.byte	0x1
 7885 3cc5 24       		.byte	0x24
 7886 3cc6 BA       		.byte	0xba
 7887 3cc7 F63C0000 		.long	0x3cf6
 7888 3ccb 07       		.uleb128 0x7
 7889 3ccc 00000000 		.long	.LASF599
 7890 3cd0 24       		.byte	0x24
 7891 3cd1 BE       		.byte	0xbe
 7892 3cd2 06110000 		.long	0x1106
 7893 3cd6 07       		.uleb128 0x7
 7894 3cd7 00000000 		.long	.LASF600
 7895 3cdb 24       		.byte	0x24
 7896 3cdc BF       		.byte	0xbf
 7897 3cdd 1A4D0000 		.long	0x4d1a
 7898 3ce1 07       		.uleb128 0x7
 7899 3ce2 00000000 		.long	.LASF149
 7900 3ce6 24       		.byte	0x24
 7901 3ce7 C0       		.byte	0xc0
GAS LISTING /tmp/cceISX6N.s 			page 262


 7902 3ce8 51590000 		.long	0x5951
 7903 3cec 1D       		.uleb128 0x1d
 7904 3ced 00000000 		.long	.LASF601
 7905 3cf1 1A4D0000 		.long	0x4d1a
 7906 3cf5 00       		.byte	0
 7907 3cf6 4A       		.uleb128 0x4a
 7908 3cf7 00000000 		.long	.LASF603
 7909 3cfb 9A3D0000 		.long	0x3d9a
 7910 3cff 2C       		.uleb128 0x2c
 7911 3d00 00000000 		.long	.LASF604
 7912 3d04 04       		.byte	0x4
 7913 3d05 83       		.byte	0x83
 7914 3d06 00000000 		.long	.LASF605
 7915 3d0a DC2E0000 		.long	0x2edc
 7916 3d0e 01       		.byte	0x1
 7917 3d0f 173D0000 		.long	0x3d17
 7918 3d13 1D3D0000 		.long	0x3d1d
 7919 3d17 09       		.uleb128 0x9
 7920 3d18 AB650000 		.long	0x65ab
 7921 3d1c 00       		.byte	0
 7922 3d1d 2D       		.uleb128 0x2d
 7923 3d1e 00000000 		.long	.LASF606
 7924 3d22 04       		.byte	0x4
 7925 3d23 97       		.byte	0x97
 7926 3d24 00000000 		.long	.LASF607
 7927 3d28 01       		.byte	0x1
 7928 3d29 313D0000 		.long	0x3d31
 7929 3d2d 3C3D0000 		.long	0x3d3c
 7930 3d31 09       		.uleb128 0x9
 7931 3d32 DE670000 		.long	0x67de
 7932 3d36 19       		.uleb128 0x19
 7933 3d37 DC2E0000 		.long	0x2edc
 7934 3d3b 00       		.byte	0
 7935 3d3c 44       		.uleb128 0x44
 7936 3d3d 00000000 		.long	.LASF485
 7937 3d41 04       		.byte	0x4
 7938 3d42 BB01     		.value	0x1bb
 7939 3d44 00000000 		.long	.LASF608
 7940 3d48 603D0000 		.long	0x3d60
 7941 3d4c 01       		.byte	0x1
 7942 3d4d 553D0000 		.long	0x3d55
 7943 3d51 603D0000 		.long	0x3d60
 7944 3d55 09       		.uleb128 0x9
 7945 3d56 AB650000 		.long	0x65ab
 7946 3d5a 19       		.uleb128 0x19
 7947 3d5b 3E490000 		.long	0x493e
 7948 3d5f 00       		.byte	0
 7949 3d60 38       		.uleb128 0x38
 7950 3d61 00000000 		.long	.LASF121
 7951 3d65 04       		.byte	0x4
 7952 3d66 4B       		.byte	0x4b
 7953 3d67 3E490000 		.long	0x493e
 7954 3d6b 01       		.byte	0x1
 7955 3d6c 1D       		.uleb128 0x1d
 7956 3d6d 00000000 		.long	.LASF392
 7957 3d71 3E490000 		.long	0x493e
 7958 3d75 1D       		.uleb128 0x1d
GAS LISTING /tmp/cceISX6N.s 			page 263


 7959 3d76 00000000 		.long	.LASF393
 7960 3d7a 1F0F0000 		.long	0xf1f
 7961 3d7e 67       		.uleb128 0x67
 7962 3d7f 00000000 		.long	.LASF274
 7963 3d83 25       		.byte	0x25
 7964 3d84 29       		.byte	0x29
 7965 3d85 00000000 		.long	.LASF609
 7966 3d89 01       		.byte	0x1
 7967 3d8a 8E3D0000 		.long	0x3d8e
 7968 3d8e 09       		.uleb128 0x9
 7969 3d8f DE670000 		.long	0x67de
 7970 3d93 19       		.uleb128 0x19
 7971 3d94 DC2E0000 		.long	0x2edc
 7972 3d98 00       		.byte	0
 7973 3d99 00       		.byte	0
 7974 3d9a 0C       		.uleb128 0xc
 7975 3d9b F63C0000 		.long	0x3cf6
 7976 3d9f 1F       		.uleb128 0x1f
 7977 3da0 00000000 		.long	.LASF610
 7978 3da4 03       		.byte	0x3
 7979 3da5 9D       		.byte	0x9d
 7980 3da6 292E0000 		.long	0x2e29
 7981 3daa B93D0000 		.long	0x3db9
 7982 3dae 19       		.uleb128 0x19
 7983 3daf 292E0000 		.long	0x2e29
 7984 3db3 19       		.uleb128 0x19
 7985 3db4 292E0000 		.long	0x2e29
 7986 3db8 00       		.byte	0
 7987 3db9 21       		.uleb128 0x21
 7988 3dba 00000000 		.long	.LASF611
 7989 3dbe 02       		.byte	0x2
 7990 3dbf 1202     		.value	0x212
 7991 3dc1 1D610000 		.long	0x611d
 7992 3dc5 DD3D0000 		.long	0x3ddd
 7993 3dc9 1D       		.uleb128 0x1d
 7994 3dca 00000000 		.long	.LASF393
 7995 3dce 1F0F0000 		.long	0xf1f
 7996 3dd2 19       		.uleb128 0x19
 7997 3dd3 1D610000 		.long	0x611d
 7998 3dd7 19       		.uleb128 0x19
 7999 3dd8 1A4D0000 		.long	0x4d1a
 8000 3ddc 00       		.byte	0
 8001 3ddd 1F       		.uleb128 0x1f
 8002 3dde 00000000 		.long	.LASF612
 8003 3de2 26       		.byte	0x26
 8004 3de3 4C       		.byte	0x4c
 8005 3de4 3F650000 		.long	0x653f
 8006 3de8 FB3D0000 		.long	0x3dfb
 8007 3dec 0A       		.uleb128 0xa
 8008 3ded 5F547000 		.string	"_Tp"
 8009 3df1 69640000 		.long	0x6469
 8010 3df5 19       		.uleb128 0x19
 8011 3df6 C7680000 		.long	0x68c7
 8012 3dfa 00       		.byte	0
 8013 3dfb 1F       		.uleb128 0x1f
 8014 3dfc 00000000 		.long	.LASF613
 8015 3e00 26       		.byte	0x26
GAS LISTING /tmp/cceISX6N.s 			page 264


 8016 3e01 65       		.byte	0x65
 8017 3e02 196B0000 		.long	0x6b19
 8018 3e06 193E0000 		.long	0x3e19
 8019 3e0a 0A       		.uleb128 0xa
 8020 3e0b 5F547000 		.string	"_Tp"
 8021 3e0f 1F6B0000 		.long	0x6b1f
 8022 3e13 19       		.uleb128 0x19
 8023 3e14 1F6B0000 		.long	0x6b1f
 8024 3e18 00       		.byte	0
 8025 3e19 1F       		.uleb128 0x1f
 8026 3e1a 00000000 		.long	.LASF614
 8027 3e1e 04       		.byte	0x4
 8028 3e1f 2E       		.byte	0x2e
 8029 3e20 8A6C0000 		.long	0x6c8a
 8030 3e24 373E0000 		.long	0x3e37
 8031 3e28 1D       		.uleb128 0x1d
 8032 3e29 00000000 		.long	.LASF615
 8033 3e2d A1310000 		.long	0x31a1
 8034 3e31 19       		.uleb128 0x19
 8035 3e32 906C0000 		.long	0x6c90
 8036 3e36 00       		.byte	0
 8037 3e37 0C       		.uleb128 0xc
 8038 3e38 A1310000 		.long	0x31a1
 8039 3e3c 21       		.uleb128 0x21
 8040 3e3d 00000000 		.long	.LASF616
 8041 3e41 02       		.byte	0x2
 8042 3e42 4A02     		.value	0x24a
 8043 3e44 1D610000 		.long	0x611d
 8044 3e48 643E0000 		.long	0x3e64
 8045 3e4c 1D       		.uleb128 0x1d
 8046 3e4d 00000000 		.long	.LASF392
 8047 3e51 3E490000 		.long	0x493e
 8048 3e55 1D       		.uleb128 0x1d
 8049 3e56 00000000 		.long	.LASF393
 8050 3e5a 1F0F0000 		.long	0xf1f
 8051 3e5e 19       		.uleb128 0x19
 8052 3e5f 1D610000 		.long	0x611d
 8053 3e63 00       		.byte	0
 8054 3e64 1F       		.uleb128 0x1f
 8055 3e65 00000000 		.long	.LASF617
 8056 3e69 26       		.byte	0x26
 8057 3e6a 4C       		.byte	0x4c
 8058 3e6b 896D0000 		.long	0x6d89
 8059 3e6f 823E0000 		.long	0x3e82
 8060 3e73 0A       		.uleb128 0xa
 8061 3e74 5F547000 		.string	"_Tp"
 8062 3e78 7A640000 		.long	0x647a
 8063 3e7c 19       		.uleb128 0x19
 8064 3e7d 8F6D0000 		.long	0x6d8f
 8065 3e81 00       		.byte	0
 8066 3e82 21       		.uleb128 0x21
 8067 3e83 00000000 		.long	.LASF618
 8068 3e87 0C       		.byte	0xc
 8069 3e88 E602     		.value	0x2e6
 8070 3e8a 733C0000 		.long	0x3c73
 8071 3e8e B03E0000 		.long	0x3eb0
 8072 3e92 0B       		.uleb128 0xb
GAS LISTING /tmp/cceISX6N.s 			page 265


 8073 3e93 5F5F6900 		.string	"__i"
 8074 3e97 EA480000 		.long	0x48ea
 8075 3e9b 00       		.byte	0
 8076 3e9c 1D       		.uleb128 0x1d
 8077 3e9d 00000000 		.long	.LASF562
 8078 3ea1 69640000 		.long	0x6469
 8079 3ea5 5C       		.uleb128 0x5c
 8080 3ea6 00000000 		.long	.LASF619
 8081 3eaa 19       		.uleb128 0x19
 8082 3eab EB640000 		.long	0x64eb
 8083 3eaf 00       		.byte	0
 8084 3eb0 1F       		.uleb128 0x1f
 8085 3eb1 00000000 		.long	.LASF620
 8086 3eb5 26       		.byte	0x26
 8087 3eb6 4C       		.byte	0x4c
 8088 3eb7 D9640000 		.long	0x64d9
 8089 3ebb CE3E0000 		.long	0x3ece
 8090 3ebf 0A       		.uleb128 0xa
 8091 3ec0 5F547000 		.string	"_Tp"
 8092 3ec4 D9640000 		.long	0x64d9
 8093 3ec8 19       		.uleb128 0x19
 8094 3ec9 776E0000 		.long	0x6e77
 8095 3ecd 00       		.byte	0
 8096 3ece 21       		.uleb128 0x21
 8097 3ecf 00000000 		.long	.LASF621
 8098 3ed3 08       		.byte	0x8
 8099 3ed4 C10A     		.value	0xac1
 8100 3ed6 1D610000 		.long	0x611d
 8101 3eda 043F0000 		.long	0x3f04
 8102 3ede 1D       		.uleb128 0x1d
 8103 3edf 00000000 		.long	.LASF392
 8104 3ee3 3E490000 		.long	0x493e
 8105 3ee7 1D       		.uleb128 0x1d
 8106 3ee8 00000000 		.long	.LASF393
 8107 3eec 1F0F0000 		.long	0xf1f
 8108 3ef0 1D       		.uleb128 0x1d
 8109 3ef1 00000000 		.long	.LASF394
 8110 3ef5 11110000 		.long	0x1111
 8111 3ef9 19       		.uleb128 0x19
 8112 3efa 1D610000 		.long	0x611d
 8113 3efe 19       		.uleb128 0x19
 8114 3eff 63600000 		.long	0x6063
 8115 3f03 00       		.byte	0
 8116 3f04 21       		.uleb128 0x21
 8117 3f05 00000000 		.long	.LASF622
 8118 3f09 0C       		.byte	0xc
 8119 3f0a F502     		.value	0x2f5
 8120 3f0c 733C0000 		.long	0x3c73
 8121 3f10 333F0000 		.long	0x3f33
 8122 3f14 0B       		.uleb128 0xb
 8123 3f15 5F5F6900 		.string	"__i"
 8124 3f19 EA480000 		.long	0x48ea
 8125 3f1d 00       		.byte	0
 8126 3f1e 62       		.uleb128 0x62
 8127 3f1f 00000000 		.long	.LASF553
 8128 3f23 2D3F0000 		.long	0x3f2d
 8129 3f27 60       		.uleb128 0x60
GAS LISTING /tmp/cceISX6N.s 			page 266


 8130 3f28 69640000 		.long	0x6469
 8131 3f2c 00       		.byte	0
 8132 3f2d 19       		.uleb128 0x19
 8133 3f2e 21650000 		.long	0x6521
 8134 3f32 00       		.byte	0
 8135 3f33 0C       		.uleb128 0xc
 8136 3f34 383F0000 		.long	0x3f38
 8137 3f38 68       		.uleb128 0x68
 8138 3f39 ED3A0000 		.long	0x3aed
 8139 3f3d 21       		.uleb128 0x21
 8140 3f3e 00000000 		.long	.LASF623
 8141 3f42 0C       		.byte	0xc
 8142 3f43 6303     		.value	0x363
 8143 3f45 E6320000 		.long	0x32e6
 8144 3f49 533F0000 		.long	0x3f53
 8145 3f4d 5C       		.uleb128 0x5c
 8146 3f4e 00000000 		.long	.LASF553
 8147 3f52 00       		.byte	0
 8148 3f53 21       		.uleb128 0x21
 8149 3f54 00000000 		.long	.LASF624
 8150 3f58 06       		.byte	0x6
 8151 3f59 7706     		.value	0x677
 8152 3f5b A7340000 		.long	0x34a7
 8153 3f5f 863F0000 		.long	0x3f86
 8154 3f63 1D       		.uleb128 0x1d
 8155 3f64 00000000 		.long	.LASF522
 8156 3f68 7A640000 		.long	0x647a
 8157 3f6c 62       		.uleb128 0x62
 8158 3f6d 00000000 		.long	.LASF538
 8159 3f71 7B3F0000 		.long	0x3f7b
 8160 3f75 60       		.uleb128 0x60
 8161 3f76 69640000 		.long	0x6469
 8162 3f7a 00       		.byte	0
 8163 3f7b 19       		.uleb128 0x19
 8164 3f7c 896D0000 		.long	0x6d89
 8165 3f80 19       		.uleb128 0x19
 8166 3f81 3F650000 		.long	0x653f
 8167 3f85 00       		.byte	0
 8168 3f86 21       		.uleb128 0x21
 8169 3f87 00000000 		.long	.LASF625
 8170 3f8b 02       		.byte	0x2
 8171 3f8c 3402     		.value	0x234
 8172 3f8e 1D610000 		.long	0x611d
 8173 3f92 AE3F0000 		.long	0x3fae
 8174 3f96 1D       		.uleb128 0x1d
 8175 3f97 00000000 		.long	.LASF392
 8176 3f9b 3E490000 		.long	0x493e
 8177 3f9f 1D       		.uleb128 0x1d
 8178 3fa0 00000000 		.long	.LASF393
 8179 3fa4 1F0F0000 		.long	0xf1f
 8180 3fa8 19       		.uleb128 0x19
 8181 3fa9 1D610000 		.long	0x611d
 8182 3fad 00       		.byte	0
 8183 3fae 69       		.uleb128 0x69
 8184 3faf 00000000 		.long	.LASF627
 8185 3fb3 21       		.byte	0x21
 8186 3fb4 4F       		.byte	0x4f
GAS LISTING /tmp/cceISX6N.s 			page 267


 8187 3fb5 BB3F0000 		.long	0x3fbb
 8188 3fb9 01       		.byte	0x1
 8189 3fba 00       		.byte	0
 8190 3fbb 0C       		.uleb128 0xc
 8191 3fbc 100F0000 		.long	0xf10
 8192 3fc0 07       		.uleb128 0x7
 8193 3fc1 00000000 		.long	.LASF626
 8194 3fc5 27       		.byte	0x27
 8195 3fc6 88       		.byte	0x88
 8196 3fc7 BA300000 		.long	0x30ba
 8197 3fcb 6A       		.uleb128 0x6a
 8198 3fcc 00000000 		.long	.LASF1103
 8199 3fd0 0D       		.byte	0xd
 8200 3fd1 3D       		.byte	0x3d
 8201 3fd2 00000000 		.long	.LASF1104
 8202 3fd6 C03F0000 		.long	0x3fc0
 8203 3fda 6B       		.uleb128 0x6b
 8204 3fdb 00000000 		.long	.LASF1042
 8205 3fdf 0D       		.byte	0xd
 8206 3fe0 4A       		.byte	0x4a
 8207 3fe1 862E0000 		.long	0x2e86
 8208 3fe5 69       		.uleb128 0x69
 8209 3fe6 00000000 		.long	.LASF628
 8210 3fea 22       		.byte	0x22
 8211 3feb 29       		.byte	0x29
 8212 3fec F23F0000 		.long	0x3ff2
 8213 3ff0 01       		.byte	0x1
 8214 3ff1 00       		.byte	0
 8215 3ff2 0C       		.uleb128 0xc
 8216 3ff3 89320000 		.long	0x3289
 8217 3ff7 6C       		.uleb128 0x6c
 8218 3ff8 00000000 		.long	.LASF629
 8219 3ffc 0C       		.byte	0xc
 8220 3ffd 2604     		.value	0x426
 8221 3fff 05400000 		.long	0x4005
 8222 4003 01       		.byte	0x1
 8223 4004 00       		.byte	0
 8224 4005 0C       		.uleb128 0xc
 8225 4006 10330000 		.long	0x3310
 8226 400a 34       		.uleb128 0x34
 8227 400b 00000000 		.long	.LASF630
 8228 400f 28       		.byte	0x28
 8229 4010 4C       		.byte	0x4c
 8230 4011 00000000 		.long	.LASF631
 8231 4015 1D610000 		.long	0x611d
 8232 4019 3F400000 		.long	0x403f
 8233 401d 1D       		.uleb128 0x1d
 8234 401e 00000000 		.long	.LASF392
 8235 4022 3E490000 		.long	0x493e
 8236 4026 1D       		.uleb128 0x1d
 8237 4027 00000000 		.long	.LASF393
 8238 402b 1F0F0000 		.long	0xf1f
 8239 402f 19       		.uleb128 0x19
 8240 4030 1D610000 		.long	0x611d
 8241 4034 19       		.uleb128 0x19
 8242 4035 1A4D0000 		.long	0x4d1a
 8243 4039 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 268


 8244 403a 3F400000 		.long	0x403f
 8245 403e 00       		.byte	0
 8246 403f 07       		.uleb128 0x7
 8247 4040 00000000 		.long	.LASF632
 8248 4044 29       		.byte	0x29
 8249 4045 62       		.byte	0x62
 8250 4046 06110000 		.long	0x1106
 8251 404a 6D       		.uleb128 0x6d
 8252 404b 00000000 		.long	.LASF772
 8253 404f 34       		.byte	0x34
 8254 4050 38       		.byte	0x38
 8255 4051 00000000 		.long	.LASF1105
 8256 4055 00       		.byte	0
 8257 4056 0E       		.uleb128 0xe
 8258 4057 00000000 		.long	.LASF633
 8259 405b 2A       		.byte	0x2a
 8260 405c 45       		.byte	0x45
 8261 405d D5480000 		.long	0x48d5
 8262 4061 0D       		.uleb128 0xd
 8263 4062 14       		.byte	0x14
 8264 4063 F8       		.byte	0xf8
 8265 4064 18570000 		.long	0x5718
 8266 4068 04       		.uleb128 0x4
 8267 4069 14       		.byte	0x14
 8268 406a 0101     		.value	0x101
 8269 406c 33570000 		.long	0x5733
 8270 4070 04       		.uleb128 0x4
 8271 4071 14       		.byte	0x14
 8272 4072 0201     		.value	0x102
 8273 4074 53570000 		.long	0x5753
 8274 4078 0D       		.uleb128 0xd
 8275 4079 2B       		.byte	0x2b
 8276 407a 2C       		.byte	0x2c
 8277 407b E6100000 		.long	0x10e6
 8278 407f 0D       		.uleb128 0xd
 8279 4080 2B       		.byte	0x2b
 8280 4081 2D       		.byte	0x2d
 8281 4082 06110000 		.long	0x1106
 8282 4086 27       		.uleb128 0x27
 8283 4087 00000000 		.long	.LASF634
 8284 408b 01       		.byte	0x1
 8285 408c 2B       		.byte	0x2b
 8286 408d 3A       		.byte	0x3a
 8287 408e D4410000 		.long	0x41d4
 8288 4092 38       		.uleb128 0x38
 8289 4093 00000000 		.long	.LASF148
 8290 4097 2B       		.byte	0x2b
 8291 4098 3D       		.byte	0x3d
 8292 4099 E6100000 		.long	0x10e6
 8293 409d 01       		.byte	0x1
 8294 409e 38       		.uleb128 0x38
 8295 409f 00000000 		.long	.LASF600
 8296 40a3 2B       		.byte	0x2b
 8297 40a4 3F       		.byte	0x3f
 8298 40a5 38490000 		.long	0x4938
 8299 40a9 01       		.byte	0x1
 8300 40aa 38       		.uleb128 0x38
GAS LISTING /tmp/cceISX6N.s 			page 269


 8301 40ab 00000000 		.long	.LASF635
 8302 40af 2B       		.byte	0x2b
 8303 40b0 40       		.byte	0x40
 8304 40b1 1A4D0000 		.long	0x4d1a
 8305 40b5 01       		.byte	0x1
 8306 40b6 38       		.uleb128 0x38
 8307 40b7 00000000 		.long	.LASF149
 8308 40bb 2B       		.byte	0x2b
 8309 40bc 41       		.byte	0x41
 8310 40bd 4B590000 		.long	0x594b
 8311 40c1 01       		.byte	0x1
 8312 40c2 38       		.uleb128 0x38
 8313 40c3 00000000 		.long	.LASF150
 8314 40c7 2B       		.byte	0x2b
 8315 40c8 42       		.byte	0x42
 8316 40c9 51590000 		.long	0x5951
 8317 40cd 01       		.byte	0x1
 8318 40ce 2B       		.uleb128 0x2b
 8319 40cf 00000000 		.long	.LASF636
 8320 40d3 2B       		.byte	0x2b
 8321 40d4 4F       		.byte	0x4f
 8322 40d5 01       		.byte	0x1
 8323 40d6 DE400000 		.long	0x40de
 8324 40da E4400000 		.long	0x40e4
 8325 40de 09       		.uleb128 0x9
 8326 40df 57590000 		.long	0x5957
 8327 40e3 00       		.byte	0
 8328 40e4 2B       		.uleb128 0x2b
 8329 40e5 00000000 		.long	.LASF636
 8330 40e9 2B       		.byte	0x2b
 8331 40ea 51       		.byte	0x51
 8332 40eb 01       		.byte	0x1
 8333 40ec F4400000 		.long	0x40f4
 8334 40f0 FF400000 		.long	0x40ff
 8335 40f4 09       		.uleb128 0x9
 8336 40f5 57590000 		.long	0x5957
 8337 40f9 19       		.uleb128 0x19
 8338 40fa 5D590000 		.long	0x595d
 8339 40fe 00       		.byte	0
 8340 40ff 2B       		.uleb128 0x2b
 8341 4100 00000000 		.long	.LASF637
 8342 4104 2B       		.byte	0x2b
 8343 4105 56       		.byte	0x56
 8344 4106 01       		.byte	0x1
 8345 4107 0F410000 		.long	0x410f
 8346 410b 1A410000 		.long	0x411a
 8347 410f 09       		.uleb128 0x9
 8348 4110 57590000 		.long	0x5957
 8349 4114 09       		.uleb128 0x9
 8350 4115 06490000 		.long	0x4906
 8351 4119 00       		.byte	0
 8352 411a 2C       		.uleb128 0x2c
 8353 411b 00000000 		.long	.LASF638
 8354 411f 2B       		.byte	0x2b
 8355 4120 59       		.byte	0x59
 8356 4121 00000000 		.long	.LASF639
 8357 4125 9E400000 		.long	0x409e
GAS LISTING /tmp/cceISX6N.s 			page 270


 8358 4129 01       		.byte	0x1
 8359 412a 32410000 		.long	0x4132
 8360 412e 3D410000 		.long	0x413d
 8361 4132 09       		.uleb128 0x9
 8362 4133 63590000 		.long	0x5963
 8363 4137 19       		.uleb128 0x19
 8364 4138 B6400000 		.long	0x40b6
 8365 413c 00       		.byte	0
 8366 413d 2C       		.uleb128 0x2c
 8367 413e 00000000 		.long	.LASF638
 8368 4142 2B       		.byte	0x2b
 8369 4143 5D       		.byte	0x5d
 8370 4144 00000000 		.long	.LASF640
 8371 4148 AA400000 		.long	0x40aa
 8372 414c 01       		.byte	0x1
 8373 414d 55410000 		.long	0x4155
 8374 4151 60410000 		.long	0x4160
 8375 4155 09       		.uleb128 0x9
 8376 4156 63590000 		.long	0x5963
 8377 415a 19       		.uleb128 0x19
 8378 415b C2400000 		.long	0x40c2
 8379 415f 00       		.byte	0
 8380 4160 2C       		.uleb128 0x2c
 8381 4161 00000000 		.long	.LASF641
 8382 4165 2B       		.byte	0x2b
 8383 4166 63       		.byte	0x63
 8384 4167 00000000 		.long	.LASF642
 8385 416b 9E400000 		.long	0x409e
 8386 416f 01       		.byte	0x1
 8387 4170 78410000 		.long	0x4178
 8388 4174 88410000 		.long	0x4188
 8389 4178 09       		.uleb128 0x9
 8390 4179 57590000 		.long	0x5957
 8391 417d 19       		.uleb128 0x19
 8392 417e 92400000 		.long	0x4092
 8393 4182 19       		.uleb128 0x19
 8394 4183 43590000 		.long	0x5943
 8395 4187 00       		.byte	0
 8396 4188 2D       		.uleb128 0x2d
 8397 4189 00000000 		.long	.LASF643
 8398 418d 2B       		.byte	0x2b
 8399 418e 6D       		.byte	0x6d
 8400 418f 00000000 		.long	.LASF644
 8401 4193 01       		.byte	0x1
 8402 4194 9C410000 		.long	0x419c
 8403 4198 AC410000 		.long	0x41ac
 8404 419c 09       		.uleb128 0x9
 8405 419d 57590000 		.long	0x5957
 8406 41a1 19       		.uleb128 0x19
 8407 41a2 9E400000 		.long	0x409e
 8408 41a6 19       		.uleb128 0x19
 8409 41a7 92400000 		.long	0x4092
 8410 41ab 00       		.byte	0
 8411 41ac 2C       		.uleb128 0x2c
 8412 41ad 00000000 		.long	.LASF263
 8413 41b1 2B       		.byte	0x2b
 8414 41b2 71       		.byte	0x71
GAS LISTING /tmp/cceISX6N.s 			page 271


 8415 41b3 00000000 		.long	.LASF645
 8416 41b7 92400000 		.long	0x4092
 8417 41bb 01       		.byte	0x1
 8418 41bc C4410000 		.long	0x41c4
 8419 41c0 CA410000 		.long	0x41ca
 8420 41c4 09       		.uleb128 0x9
 8421 41c5 63590000 		.long	0x5963
 8422 41c9 00       		.byte	0
 8423 41ca 0A       		.uleb128 0xa
 8424 41cb 5F547000 		.string	"_Tp"
 8425 41cf 3E490000 		.long	0x493e
 8426 41d3 00       		.byte	0
 8427 41d4 0C       		.uleb128 0xc
 8428 41d5 86400000 		.long	0x4086
 8429 41d9 05       		.uleb128 0x5
 8430 41da 00000000 		.long	.LASF646
 8431 41de 01       		.byte	0x1
 8432 41df 2C       		.byte	0x2c
 8433 41e0 37       		.byte	0x37
 8434 41e1 1B420000 		.long	0x421b
 8435 41e5 06       		.uleb128 0x6
 8436 41e6 00000000 		.long	.LASF647
 8437 41ea 2C       		.byte	0x2c
 8438 41eb 3A       		.byte	0x3a
 8439 41ec 164C0000 		.long	0x4c16
 8440 41f0 06       		.uleb128 0x6
 8441 41f1 00000000 		.long	.LASF648
 8442 41f5 2C       		.byte	0x2c
 8443 41f6 3B       		.byte	0x3b
 8444 41f7 164C0000 		.long	0x4c16
 8445 41fb 06       		.uleb128 0x6
 8446 41fc 00000000 		.long	.LASF649
 8447 4200 2C       		.byte	0x2c
 8448 4201 3F       		.byte	0x3f
 8449 4202 B84A0000 		.long	0x4ab8
 8450 4206 06       		.uleb128 0x6
 8451 4207 00000000 		.long	.LASF650
 8452 420b 2C       		.byte	0x2c
 8453 420c 40       		.byte	0x40
 8454 420d 164C0000 		.long	0x4c16
 8455 4211 1D       		.uleb128 0x1d
 8456 4212 00000000 		.long	.LASF651
 8457 4216 06490000 		.long	0x4906
 8458 421a 00       		.byte	0
 8459 421b 0D       		.uleb128 0xd
 8460 421c 1A       		.byte	0x1a
 8461 421d C9       		.byte	0xc9
 8462 421e FA590000 		.long	0x59fa
 8463 4222 0D       		.uleb128 0xd
 8464 4223 1A       		.byte	0x1a
 8465 4224 D9       		.byte	0xd9
 8466 4225 775C0000 		.long	0x5c77
 8467 4229 0D       		.uleb128 0xd
 8468 422a 1A       		.byte	0x1a
 8469 422b E4       		.byte	0xe4
 8470 422c 925C0000 		.long	0x5c92
 8471 4230 0D       		.uleb128 0xd
GAS LISTING /tmp/cceISX6N.s 			page 272


 8472 4231 1A       		.byte	0x1a
 8473 4232 E5       		.byte	0xe5
 8474 4233 A85C0000 		.long	0x5ca8
 8475 4237 0D       		.uleb128 0xd
 8476 4238 1A       		.byte	0x1a
 8477 4239 E6       		.byte	0xe6
 8478 423a C75C0000 		.long	0x5cc7
 8479 423e 0D       		.uleb128 0xd
 8480 423f 1A       		.byte	0x1a
 8481 4240 E8       		.byte	0xe8
 8482 4241 E65C0000 		.long	0x5ce6
 8483 4245 0D       		.uleb128 0xd
 8484 4246 1A       		.byte	0x1a
 8485 4247 E9       		.byte	0xe9
 8486 4248 005D0000 		.long	0x5d00
 8487 424c 33       		.uleb128 0x33
 8488 424d 64697600 		.string	"div"
 8489 4251 1A       		.byte	0x1a
 8490 4252 D6       		.byte	0xd6
 8491 4253 00000000 		.long	.LASF652
 8492 4257 FA590000 		.long	0x59fa
 8493 425b 6A420000 		.long	0x426a
 8494 425f 19       		.uleb128 0x19
 8495 4260 0D490000 		.long	0x490d
 8496 4264 19       		.uleb128 0x19
 8497 4265 0D490000 		.long	0x490d
 8498 4269 00       		.byte	0
 8499 426a 58       		.uleb128 0x58
 8500 426b 00000000 		.long	.LASF653
 8501 426f 08       		.byte	0x8
 8502 4270 2D       		.byte	0x2d
 8503 4271 C402     		.value	0x2c4
 8504 4273 8E440000 		.long	0x448e
 8505 4277 61       		.uleb128 0x61
 8506 4278 00000000 		.long	.LASF654
 8507 427c 2D       		.byte	0x2d
 8508 427d C702     		.value	0x2c7
 8509 427f 38490000 		.long	0x4938
 8510 4283 00       		.byte	0
 8511 4284 02       		.byte	0x2
 8512 4285 4E       		.uleb128 0x4e
 8513 4286 00000000 		.long	.LASF599
 8514 428a 2D       		.byte	0x2d
 8515 428b CF02     		.value	0x2cf
 8516 428d 943C0000 		.long	0x3c94
 8517 4291 01       		.byte	0x1
 8518 4292 4E       		.uleb128 0x4e
 8519 4293 00000000 		.long	.LASF149
 8520 4297 2D       		.byte	0x2d
 8521 4298 D002     		.value	0x2d0
 8522 429a AA3C0000 		.long	0x3caa
 8523 429e 01       		.byte	0x1
 8524 429f 4E       		.uleb128 0x4e
 8525 42a0 00000000 		.long	.LASF600
 8526 42a4 2D       		.byte	0x2d
 8527 42a5 D102     		.value	0x2d1
 8528 42a7 9F3C0000 		.long	0x3c9f
GAS LISTING /tmp/cceISX6N.s 			page 273


 8529 42ab 01       		.byte	0x1
 8530 42ac 42       		.uleb128 0x42
 8531 42ad 00000000 		.long	.LASF655
 8532 42b1 2D       		.byte	0x2d
 8533 42b2 D302     		.value	0x2d3
 8534 42b4 01       		.byte	0x1
 8535 42b5 BD420000 		.long	0x42bd
 8536 42b9 C3420000 		.long	0x42c3
 8537 42bd 09       		.uleb128 0x9
 8538 42be 69650000 		.long	0x6569
 8539 42c2 00       		.byte	0
 8540 42c3 43       		.uleb128 0x43
 8541 42c4 00000000 		.long	.LASF655
 8542 42c8 2D       		.byte	0x2d
 8543 42c9 D602     		.value	0x2d6
 8544 42cb 01       		.byte	0x1
 8545 42cc D4420000 		.long	0x42d4
 8546 42d0 DF420000 		.long	0x42df
 8547 42d4 09       		.uleb128 0x9
 8548 42d5 69650000 		.long	0x6569
 8549 42d9 19       		.uleb128 0x19
 8550 42da 6F650000 		.long	0x656f
 8551 42de 00       		.byte	0
 8552 42df 44       		.uleb128 0x44
 8553 42e0 00000000 		.long	.LASF656
 8554 42e4 2D       		.byte	0x2d
 8555 42e5 E202     		.value	0x2e2
 8556 42e7 00000000 		.long	.LASF657
 8557 42eb 92420000 		.long	0x4292
 8558 42ef 01       		.byte	0x1
 8559 42f0 F8420000 		.long	0x42f8
 8560 42f4 FE420000 		.long	0x42fe
 8561 42f8 09       		.uleb128 0x9
 8562 42f9 7A650000 		.long	0x657a
 8563 42fd 00       		.byte	0
 8564 42fe 44       		.uleb128 0x44
 8565 42ff 00000000 		.long	.LASF658
 8566 4303 2D       		.byte	0x2d
 8567 4304 E602     		.value	0x2e6
 8568 4306 00000000 		.long	.LASF659
 8569 430a 9F420000 		.long	0x429f
 8570 430e 01       		.byte	0x1
 8571 430f 17430000 		.long	0x4317
 8572 4313 1D430000 		.long	0x431d
 8573 4317 09       		.uleb128 0x9
 8574 4318 7A650000 		.long	0x657a
 8575 431c 00       		.byte	0
 8576 431d 44       		.uleb128 0x44
 8577 431e 00000000 		.long	.LASF26
 8578 4322 2D       		.byte	0x2d
 8579 4323 EA02     		.value	0x2ea
 8580 4325 00000000 		.long	.LASF660
 8581 4329 80650000 		.long	0x6580
 8582 432d 01       		.byte	0x1
 8583 432e 36430000 		.long	0x4336
 8584 4332 3C430000 		.long	0x433c
 8585 4336 09       		.uleb128 0x9
GAS LISTING /tmp/cceISX6N.s 			page 274


 8586 4337 69650000 		.long	0x6569
 8587 433b 00       		.byte	0
 8588 433c 44       		.uleb128 0x44
 8589 433d 00000000 		.long	.LASF26
 8590 4341 2D       		.byte	0x2d
 8591 4342 F102     		.value	0x2f1
 8592 4344 00000000 		.long	.LASF661
 8593 4348 6A420000 		.long	0x426a
 8594 434c 01       		.byte	0x1
 8595 434d 55430000 		.long	0x4355
 8596 4351 60430000 		.long	0x4360
 8597 4355 09       		.uleb128 0x9
 8598 4356 69650000 		.long	0x6569
 8599 435a 19       		.uleb128 0x19
 8600 435b 06490000 		.long	0x4906
 8601 435f 00       		.byte	0
 8602 4360 44       		.uleb128 0x44
 8603 4361 00000000 		.long	.LASF29
 8604 4365 2D       		.byte	0x2d
 8605 4366 F602     		.value	0x2f6
 8606 4368 00000000 		.long	.LASF662
 8607 436c 80650000 		.long	0x6580
 8608 4370 01       		.byte	0x1
 8609 4371 79430000 		.long	0x4379
 8610 4375 7F430000 		.long	0x437f
 8611 4379 09       		.uleb128 0x9
 8612 437a 69650000 		.long	0x6569
 8613 437e 00       		.byte	0
 8614 437f 44       		.uleb128 0x44
 8615 4380 00000000 		.long	.LASF29
 8616 4384 2D       		.byte	0x2d
 8617 4385 FD02     		.value	0x2fd
 8618 4387 00000000 		.long	.LASF663
 8619 438b 6A420000 		.long	0x426a
 8620 438f 01       		.byte	0x1
 8621 4390 98430000 		.long	0x4398
 8622 4394 A3430000 		.long	0x43a3
 8623 4398 09       		.uleb128 0x9
 8624 4399 69650000 		.long	0x6569
 8625 439d 19       		.uleb128 0x19
 8626 439e 06490000 		.long	0x4906
 8627 43a2 00       		.byte	0
 8628 43a3 44       		.uleb128 0x44
 8629 43a4 00000000 		.long	.LASF278
 8630 43a8 2D       		.byte	0x2d
 8631 43a9 0203     		.value	0x302
 8632 43ab 00000000 		.long	.LASF664
 8633 43af 92420000 		.long	0x4292
 8634 43b3 01       		.byte	0x1
 8635 43b4 BC430000 		.long	0x43bc
 8636 43b8 C7430000 		.long	0x43c7
 8637 43bc 09       		.uleb128 0x9
 8638 43bd 7A650000 		.long	0x657a
 8639 43c1 19       		.uleb128 0x19
 8640 43c2 86650000 		.long	0x6586
 8641 43c6 00       		.byte	0
 8642 43c7 0C       		.uleb128 0xc
GAS LISTING /tmp/cceISX6N.s 			page 275


 8643 43c8 85420000 		.long	0x4285
 8644 43cc 44       		.uleb128 0x44
 8645 43cd 00000000 		.long	.LASF32
 8646 43d1 2D       		.byte	0x2d
 8647 43d2 0603     		.value	0x306
 8648 43d4 00000000 		.long	.LASF665
 8649 43d8 80650000 		.long	0x6580
 8650 43dc 01       		.byte	0x1
 8651 43dd E5430000 		.long	0x43e5
 8652 43e1 F0430000 		.long	0x43f0
 8653 43e5 09       		.uleb128 0x9
 8654 43e6 69650000 		.long	0x6569
 8655 43ea 19       		.uleb128 0x19
 8656 43eb 86650000 		.long	0x6586
 8657 43ef 00       		.byte	0
 8658 43f0 44       		.uleb128 0x44
 8659 43f1 00000000 		.long	.LASF22
 8660 43f5 2D       		.byte	0x2d
 8661 43f6 0A03     		.value	0x30a
 8662 43f8 00000000 		.long	.LASF666
 8663 43fc 6A420000 		.long	0x426a
 8664 4400 01       		.byte	0x1
 8665 4401 09440000 		.long	0x4409
 8666 4405 14440000 		.long	0x4414
 8667 4409 09       		.uleb128 0x9
 8668 440a 7A650000 		.long	0x657a
 8669 440e 19       		.uleb128 0x19
 8670 440f 86650000 		.long	0x6586
 8671 4413 00       		.byte	0
 8672 4414 44       		.uleb128 0x44
 8673 4415 00000000 		.long	.LASF34
 8674 4419 2D       		.byte	0x2d
 8675 441a 0E03     		.value	0x30e
 8676 441c 00000000 		.long	.LASF667
 8677 4420 80650000 		.long	0x6580
 8678 4424 01       		.byte	0x1
 8679 4425 2D440000 		.long	0x442d
 8680 4429 38440000 		.long	0x4438
 8681 442d 09       		.uleb128 0x9
 8682 442e 69650000 		.long	0x6569
 8683 4432 19       		.uleb128 0x19
 8684 4433 86650000 		.long	0x6586
 8685 4437 00       		.byte	0
 8686 4438 44       		.uleb128 0x44
 8687 4439 00000000 		.long	.LASF24
 8688 443d 2D       		.byte	0x2d
 8689 443e 1203     		.value	0x312
 8690 4440 00000000 		.long	.LASF668
 8691 4444 6A420000 		.long	0x426a
 8692 4448 01       		.byte	0x1
 8693 4449 51440000 		.long	0x4451
 8694 444d 5C440000 		.long	0x445c
 8695 4451 09       		.uleb128 0x9
 8696 4452 7A650000 		.long	0x657a
 8697 4456 19       		.uleb128 0x19
 8698 4457 86650000 		.long	0x6586
 8699 445b 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 276


 8700 445c 44       		.uleb128 0x44
 8701 445d 00000000 		.long	.LASF669
 8702 4461 2D       		.byte	0x2d
 8703 4462 1603     		.value	0x316
 8704 4464 00000000 		.long	.LASF670
 8705 4468 6F650000 		.long	0x656f
 8706 446c 01       		.byte	0x1
 8707 446d 75440000 		.long	0x4475
 8708 4471 7B440000 		.long	0x447b
 8709 4475 09       		.uleb128 0x9
 8710 4476 7A650000 		.long	0x657a
 8711 447a 00       		.byte	0
 8712 447b 1D       		.uleb128 0x1d
 8713 447c 00000000 		.long	.LASF601
 8714 4480 38490000 		.long	0x4938
 8715 4484 1D       		.uleb128 0x1d
 8716 4485 00000000 		.long	.LASF671
 8717 4489 3A130000 		.long	0x133a
 8718 448d 00       		.byte	0
 8719 448e 58       		.uleb128 0x58
 8720 448f 00000000 		.long	.LASF672
 8721 4493 08       		.byte	0x8
 8722 4494 2D       		.byte	0x2d
 8723 4495 C402     		.value	0x2c4
 8724 4497 B2460000 		.long	0x46b2
 8725 449b 61       		.uleb128 0x61
 8726 449c 00000000 		.long	.LASF654
 8727 44a0 2D       		.byte	0x2d
 8728 44a1 C702     		.value	0x2c7
 8729 44a3 1A4D0000 		.long	0x4d1a
 8730 44a7 00       		.byte	0
 8731 44a8 02       		.byte	0x2
 8732 44a9 4E       		.uleb128 0x4e
 8733 44aa 00000000 		.long	.LASF599
 8734 44ae 2D       		.byte	0x2d
 8735 44af CF02     		.value	0x2cf
 8736 44b1 CB3C0000 		.long	0x3ccb
 8737 44b5 01       		.byte	0x1
 8738 44b6 4E       		.uleb128 0x4e
 8739 44b7 00000000 		.long	.LASF149
 8740 44bb 2D       		.byte	0x2d
 8741 44bc D002     		.value	0x2d0
 8742 44be E13C0000 		.long	0x3ce1
 8743 44c2 01       		.byte	0x1
 8744 44c3 4E       		.uleb128 0x4e
 8745 44c4 00000000 		.long	.LASF600
 8746 44c8 2D       		.byte	0x2d
 8747 44c9 D102     		.value	0x2d1
 8748 44cb D63C0000 		.long	0x3cd6
 8749 44cf 01       		.byte	0x1
 8750 44d0 42       		.uleb128 0x42
 8751 44d1 00000000 		.long	.LASF655
 8752 44d5 2D       		.byte	0x2d
 8753 44d6 D302     		.value	0x2d3
 8754 44d8 01       		.byte	0x1
 8755 44d9 E1440000 		.long	0x44e1
 8756 44dd E7440000 		.long	0x44e7
GAS LISTING /tmp/cceISX6N.s 			page 277


 8757 44e1 09       		.uleb128 0x9
 8758 44e2 4B650000 		.long	0x654b
 8759 44e6 00       		.byte	0
 8760 44e7 43       		.uleb128 0x43
 8761 44e8 00000000 		.long	.LASF655
 8762 44ec 2D       		.byte	0x2d
 8763 44ed D602     		.value	0x2d6
 8764 44ef 01       		.byte	0x1
 8765 44f0 F8440000 		.long	0x44f8
 8766 44f4 03450000 		.long	0x4503
 8767 44f8 09       		.uleb128 0x9
 8768 44f9 4B650000 		.long	0x654b
 8769 44fd 19       		.uleb128 0x19
 8770 44fe 51650000 		.long	0x6551
 8771 4502 00       		.byte	0
 8772 4503 44       		.uleb128 0x44
 8773 4504 00000000 		.long	.LASF656
 8774 4508 2D       		.byte	0x2d
 8775 4509 E202     		.value	0x2e2
 8776 450b 00000000 		.long	.LASF673
 8777 450f B6440000 		.long	0x44b6
 8778 4513 01       		.byte	0x1
 8779 4514 1C450000 		.long	0x451c
 8780 4518 22450000 		.long	0x4522
 8781 451c 09       		.uleb128 0x9
 8782 451d 57650000 		.long	0x6557
 8783 4521 00       		.byte	0
 8784 4522 44       		.uleb128 0x44
 8785 4523 00000000 		.long	.LASF658
 8786 4527 2D       		.byte	0x2d
 8787 4528 E602     		.value	0x2e6
 8788 452a 00000000 		.long	.LASF674
 8789 452e C3440000 		.long	0x44c3
 8790 4532 01       		.byte	0x1
 8791 4533 3B450000 		.long	0x453b
 8792 4537 41450000 		.long	0x4541
 8793 453b 09       		.uleb128 0x9
 8794 453c 57650000 		.long	0x6557
 8795 4540 00       		.byte	0
 8796 4541 44       		.uleb128 0x44
 8797 4542 00000000 		.long	.LASF26
 8798 4546 2D       		.byte	0x2d
 8799 4547 EA02     		.value	0x2ea
 8800 4549 00000000 		.long	.LASF675
 8801 454d 5D650000 		.long	0x655d
 8802 4551 01       		.byte	0x1
 8803 4552 5A450000 		.long	0x455a
 8804 4556 60450000 		.long	0x4560
 8805 455a 09       		.uleb128 0x9
 8806 455b 4B650000 		.long	0x654b
 8807 455f 00       		.byte	0
 8808 4560 44       		.uleb128 0x44
 8809 4561 00000000 		.long	.LASF26
 8810 4565 2D       		.byte	0x2d
 8811 4566 F102     		.value	0x2f1
 8812 4568 00000000 		.long	.LASF676
 8813 456c 8E440000 		.long	0x448e
GAS LISTING /tmp/cceISX6N.s 			page 278


 8814 4570 01       		.byte	0x1
 8815 4571 79450000 		.long	0x4579
 8816 4575 84450000 		.long	0x4584
 8817 4579 09       		.uleb128 0x9
 8818 457a 4B650000 		.long	0x654b
 8819 457e 19       		.uleb128 0x19
 8820 457f 06490000 		.long	0x4906
 8821 4583 00       		.byte	0
 8822 4584 44       		.uleb128 0x44
 8823 4585 00000000 		.long	.LASF29
 8824 4589 2D       		.byte	0x2d
 8825 458a F602     		.value	0x2f6
 8826 458c 00000000 		.long	.LASF677
 8827 4590 5D650000 		.long	0x655d
 8828 4594 01       		.byte	0x1
 8829 4595 9D450000 		.long	0x459d
 8830 4599 A3450000 		.long	0x45a3
 8831 459d 09       		.uleb128 0x9
 8832 459e 4B650000 		.long	0x654b
 8833 45a2 00       		.byte	0
 8834 45a3 44       		.uleb128 0x44
 8835 45a4 00000000 		.long	.LASF29
 8836 45a8 2D       		.byte	0x2d
 8837 45a9 FD02     		.value	0x2fd
 8838 45ab 00000000 		.long	.LASF678
 8839 45af 8E440000 		.long	0x448e
 8840 45b3 01       		.byte	0x1
 8841 45b4 BC450000 		.long	0x45bc
 8842 45b8 C7450000 		.long	0x45c7
 8843 45bc 09       		.uleb128 0x9
 8844 45bd 4B650000 		.long	0x654b
 8845 45c1 19       		.uleb128 0x19
 8846 45c2 06490000 		.long	0x4906
 8847 45c6 00       		.byte	0
 8848 45c7 44       		.uleb128 0x44
 8849 45c8 00000000 		.long	.LASF278
 8850 45cc 2D       		.byte	0x2d
 8851 45cd 0203     		.value	0x302
 8852 45cf 00000000 		.long	.LASF679
 8853 45d3 B6440000 		.long	0x44b6
 8854 45d7 01       		.byte	0x1
 8855 45d8 E0450000 		.long	0x45e0
 8856 45dc EB450000 		.long	0x45eb
 8857 45e0 09       		.uleb128 0x9
 8858 45e1 57650000 		.long	0x6557
 8859 45e5 19       		.uleb128 0x19
 8860 45e6 63650000 		.long	0x6563
 8861 45ea 00       		.byte	0
 8862 45eb 0C       		.uleb128 0xc
 8863 45ec A9440000 		.long	0x44a9
 8864 45f0 44       		.uleb128 0x44
 8865 45f1 00000000 		.long	.LASF32
 8866 45f5 2D       		.byte	0x2d
 8867 45f6 0603     		.value	0x306
 8868 45f8 00000000 		.long	.LASF680
 8869 45fc 5D650000 		.long	0x655d
 8870 4600 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 279


 8871 4601 09460000 		.long	0x4609
 8872 4605 14460000 		.long	0x4614
 8873 4609 09       		.uleb128 0x9
 8874 460a 4B650000 		.long	0x654b
 8875 460e 19       		.uleb128 0x19
 8876 460f 63650000 		.long	0x6563
 8877 4613 00       		.byte	0
 8878 4614 44       		.uleb128 0x44
 8879 4615 00000000 		.long	.LASF22
 8880 4619 2D       		.byte	0x2d
 8881 461a 0A03     		.value	0x30a
 8882 461c 00000000 		.long	.LASF681
 8883 4620 8E440000 		.long	0x448e
 8884 4624 01       		.byte	0x1
 8885 4625 2D460000 		.long	0x462d
 8886 4629 38460000 		.long	0x4638
 8887 462d 09       		.uleb128 0x9
 8888 462e 57650000 		.long	0x6557
 8889 4632 19       		.uleb128 0x19
 8890 4633 63650000 		.long	0x6563
 8891 4637 00       		.byte	0
 8892 4638 44       		.uleb128 0x44
 8893 4639 00000000 		.long	.LASF34
 8894 463d 2D       		.byte	0x2d
 8895 463e 0E03     		.value	0x30e
 8896 4640 00000000 		.long	.LASF682
 8897 4644 5D650000 		.long	0x655d
 8898 4648 01       		.byte	0x1
 8899 4649 51460000 		.long	0x4651
 8900 464d 5C460000 		.long	0x465c
 8901 4651 09       		.uleb128 0x9
 8902 4652 4B650000 		.long	0x654b
 8903 4656 19       		.uleb128 0x19
 8904 4657 63650000 		.long	0x6563
 8905 465b 00       		.byte	0
 8906 465c 44       		.uleb128 0x44
 8907 465d 00000000 		.long	.LASF24
 8908 4661 2D       		.byte	0x2d
 8909 4662 1203     		.value	0x312
 8910 4664 00000000 		.long	.LASF683
 8911 4668 8E440000 		.long	0x448e
 8912 466c 01       		.byte	0x1
 8913 466d 75460000 		.long	0x4675
 8914 4671 80460000 		.long	0x4680
 8915 4675 09       		.uleb128 0x9
 8916 4676 57650000 		.long	0x6557
 8917 467a 19       		.uleb128 0x19
 8918 467b 63650000 		.long	0x6563
 8919 467f 00       		.byte	0
 8920 4680 44       		.uleb128 0x44
 8921 4681 00000000 		.long	.LASF669
 8922 4685 2D       		.byte	0x2d
 8923 4686 1603     		.value	0x316
 8924 4688 00000000 		.long	.LASF684
 8925 468c 51650000 		.long	0x6551
 8926 4690 01       		.byte	0x1
 8927 4691 99460000 		.long	0x4699
GAS LISTING /tmp/cceISX6N.s 			page 280


 8928 4695 9F460000 		.long	0x469f
 8929 4699 09       		.uleb128 0x9
 8930 469a 57650000 		.long	0x6557
 8931 469e 00       		.byte	0
 8932 469f 1D       		.uleb128 0x1d
 8933 46a0 00000000 		.long	.LASF601
 8934 46a4 1A4D0000 		.long	0x4d1a
 8935 46a8 1D       		.uleb128 0x1d
 8936 46a9 00000000 		.long	.LASF671
 8937 46ad 3A130000 		.long	0x133a
 8938 46b1 00       		.byte	0
 8939 46b2 05       		.uleb128 0x5
 8940 46b3 00000000 		.long	.LASF685
 8941 46b7 01       		.byte	0x1
 8942 46b8 2C       		.byte	0x2c
 8943 46b9 64       		.byte	0x64
 8944 46ba F4460000 		.long	0x46f4
 8945 46be 06       		.uleb128 0x6
 8946 46bf 00000000 		.long	.LASF686
 8947 46c3 2C       		.byte	0x2c
 8948 46c4 67       		.byte	0x67
 8949 46c5 164C0000 		.long	0x4c16
 8950 46c9 06       		.uleb128 0x6
 8951 46ca 00000000 		.long	.LASF649
 8952 46ce 2C       		.byte	0x2c
 8953 46cf 6A       		.byte	0x6a
 8954 46d0 B84A0000 		.long	0x4ab8
 8955 46d4 06       		.uleb128 0x6
 8956 46d5 00000000 		.long	.LASF687
 8957 46d9 2C       		.byte	0x2c
 8958 46da 6B       		.byte	0x6b
 8959 46db 164C0000 		.long	0x4c16
 8960 46df 06       		.uleb128 0x6
 8961 46e0 00000000 		.long	.LASF688
 8962 46e4 2C       		.byte	0x2c
 8963 46e5 6C       		.byte	0x6c
 8964 46e6 164C0000 		.long	0x4c16
 8965 46ea 1D       		.uleb128 0x1d
 8966 46eb 00000000 		.long	.LASF651
 8967 46ef 1B490000 		.long	0x491b
 8968 46f3 00       		.byte	0
 8969 46f4 05       		.uleb128 0x5
 8970 46f5 00000000 		.long	.LASF689
 8971 46f9 01       		.byte	0x1
 8972 46fa 2C       		.byte	0x2c
 8973 46fb 64       		.byte	0x64
 8974 46fc 36470000 		.long	0x4736
 8975 4700 06       		.uleb128 0x6
 8976 4701 00000000 		.long	.LASF686
 8977 4705 2C       		.byte	0x2c
 8978 4706 67       		.byte	0x67
 8979 4707 164C0000 		.long	0x4c16
 8980 470b 06       		.uleb128 0x6
 8981 470c 00000000 		.long	.LASF649
 8982 4710 2C       		.byte	0x2c
 8983 4711 6A       		.byte	0x6a
 8984 4712 B84A0000 		.long	0x4ab8
GAS LISTING /tmp/cceISX6N.s 			page 281


 8985 4716 06       		.uleb128 0x6
 8986 4717 00000000 		.long	.LASF687
 8987 471b 2C       		.byte	0x2c
 8988 471c 6B       		.byte	0x6b
 8989 471d 164C0000 		.long	0x4c16
 8990 4721 06       		.uleb128 0x6
 8991 4722 00000000 		.long	.LASF688
 8992 4726 2C       		.byte	0x2c
 8993 4727 6C       		.byte	0x6c
 8994 4728 164C0000 		.long	0x4c16
 8995 472c 1D       		.uleb128 0x1d
 8996 472d 00000000 		.long	.LASF651
 8997 4731 29000000 		.long	0x29
 8998 4735 00       		.byte	0
 8999 4736 05       		.uleb128 0x5
 9000 4737 00000000 		.long	.LASF690
 9001 473b 01       		.byte	0x1
 9002 473c 2C       		.byte	0x2c
 9003 473d 64       		.byte	0x64
 9004 473e 78470000 		.long	0x4778
 9005 4742 06       		.uleb128 0x6
 9006 4743 00000000 		.long	.LASF686
 9007 4747 2C       		.byte	0x2c
 9008 4748 67       		.byte	0x67
 9009 4749 164C0000 		.long	0x4c16
 9010 474d 06       		.uleb128 0x6
 9011 474e 00000000 		.long	.LASF649
 9012 4752 2C       		.byte	0x2c
 9013 4753 6A       		.byte	0x6a
 9014 4754 B84A0000 		.long	0x4ab8
 9015 4758 06       		.uleb128 0x6
 9016 4759 00000000 		.long	.LASF687
 9017 475d 2C       		.byte	0x2c
 9018 475e 6B       		.byte	0x6b
 9019 475f 164C0000 		.long	0x4c16
 9020 4763 06       		.uleb128 0x6
 9021 4764 00000000 		.long	.LASF688
 9022 4768 2C       		.byte	0x2c
 9023 4769 6C       		.byte	0x6c
 9024 476a 164C0000 		.long	0x4c16
 9025 476e 1D       		.uleb128 0x1d
 9026 476f 00000000 		.long	.LASF651
 9027 4773 14490000 		.long	0x4914
 9028 4777 00       		.byte	0
 9029 4778 05       		.uleb128 0x5
 9030 4779 00000000 		.long	.LASF691
 9031 477d 01       		.byte	0x1
 9032 477e 2C       		.byte	0x2c
 9033 477f 37       		.byte	0x37
 9034 4780 BA470000 		.long	0x47ba
 9035 4784 06       		.uleb128 0x6
 9036 4785 00000000 		.long	.LASF647
 9037 4789 2C       		.byte	0x2c
 9038 478a 3A       		.byte	0x3a
 9039 478b D74A0000 		.long	0x4ad7
 9040 478f 06       		.uleb128 0x6
 9041 4790 00000000 		.long	.LASF648
GAS LISTING /tmp/cceISX6N.s 			page 282


 9042 4794 2C       		.byte	0x2c
 9043 4795 3B       		.byte	0x3b
 9044 4796 D74A0000 		.long	0x4ad7
 9045 479a 06       		.uleb128 0x6
 9046 479b 00000000 		.long	.LASF649
 9047 479f 2C       		.byte	0x2c
 9048 47a0 3F       		.byte	0x3f
 9049 47a1 B84A0000 		.long	0x4ab8
 9050 47a5 06       		.uleb128 0x6
 9051 47a6 00000000 		.long	.LASF650
 9052 47aa 2C       		.byte	0x2c
 9053 47ab 40       		.byte	0x40
 9054 47ac 164C0000 		.long	0x4c16
 9055 47b0 1D       		.uleb128 0x1d
 9056 47b1 00000000 		.long	.LASF651
 9057 47b5 EA480000 		.long	0x48ea
 9058 47b9 00       		.byte	0
 9059 47ba 05       		.uleb128 0x5
 9060 47bb 00000000 		.long	.LASF692
 9061 47bf 01       		.byte	0x1
 9062 47c0 2C       		.byte	0x2c
 9063 47c1 37       		.byte	0x37
 9064 47c2 FC470000 		.long	0x47fc
 9065 47c6 06       		.uleb128 0x6
 9066 47c7 00000000 		.long	.LASF647
 9067 47cb 2C       		.byte	0x2c
 9068 47cc 3A       		.byte	0x3a
 9069 47cd 204D0000 		.long	0x4d20
 9070 47d1 06       		.uleb128 0x6
 9071 47d2 00000000 		.long	.LASF648
 9072 47d6 2C       		.byte	0x2c
 9073 47d7 3B       		.byte	0x3b
 9074 47d8 204D0000 		.long	0x4d20
 9075 47dc 06       		.uleb128 0x6
 9076 47dd 00000000 		.long	.LASF649
 9077 47e1 2C       		.byte	0x2c
 9078 47e2 3F       		.byte	0x3f
 9079 47e3 B84A0000 		.long	0x4ab8
 9080 47e7 06       		.uleb128 0x6
 9081 47e8 00000000 		.long	.LASF650
 9082 47ec 2C       		.byte	0x2c
 9083 47ed 40       		.byte	0x40
 9084 47ee 164C0000 		.long	0x4c16
 9085 47f2 1D       		.uleb128 0x1d
 9086 47f3 00000000 		.long	.LASF651
 9087 47f7 3E490000 		.long	0x493e
 9088 47fb 00       		.byte	0
 9089 47fc 05       		.uleb128 0x5
 9090 47fd 00000000 		.long	.LASF693
 9091 4801 01       		.byte	0x1
 9092 4802 2C       		.byte	0x2c
 9093 4803 37       		.byte	0x37
 9094 4804 3E480000 		.long	0x483e
 9095 4808 06       		.uleb128 0x6
 9096 4809 00000000 		.long	.LASF647
 9097 480d 2C       		.byte	0x2c
 9098 480e 3A       		.byte	0x3a
GAS LISTING /tmp/cceISX6N.s 			page 283


 9099 480f 23610000 		.long	0x6123
 9100 4813 06       		.uleb128 0x6
 9101 4814 00000000 		.long	.LASF648
 9102 4818 2C       		.byte	0x2c
 9103 4819 3B       		.byte	0x3b
 9104 481a 23610000 		.long	0x6123
 9105 481e 06       		.uleb128 0x6
 9106 481f 00000000 		.long	.LASF649
 9107 4823 2C       		.byte	0x2c
 9108 4824 3F       		.byte	0x3f
 9109 4825 B84A0000 		.long	0x4ab8
 9110 4829 06       		.uleb128 0x6
 9111 482a 00000000 		.long	.LASF650
 9112 482e 2C       		.byte	0x2c
 9113 482f 40       		.byte	0x40
 9114 4830 164C0000 		.long	0x4c16
 9115 4834 1D       		.uleb128 0x1d
 9116 4835 00000000 		.long	.LASF651
 9117 4839 FF480000 		.long	0x48ff
 9118 483d 00       		.byte	0
 9119 483e 05       		.uleb128 0x5
 9120 483f 00000000 		.long	.LASF694
 9121 4843 01       		.byte	0x1
 9122 4844 2C       		.byte	0x2c
 9123 4845 37       		.byte	0x37
 9124 4846 80480000 		.long	0x4880
 9125 484a 06       		.uleb128 0x6
 9126 484b 00000000 		.long	.LASF647
 9127 484f 2C       		.byte	0x2c
 9128 4850 3A       		.byte	0x3a
 9129 4851 104E0000 		.long	0x4e10
 9130 4855 06       		.uleb128 0x6
 9131 4856 00000000 		.long	.LASF648
 9132 485a 2C       		.byte	0x2c
 9133 485b 3B       		.byte	0x3b
 9134 485c 104E0000 		.long	0x4e10
 9135 4860 06       		.uleb128 0x6
 9136 4861 00000000 		.long	.LASF649
 9137 4865 2C       		.byte	0x2c
 9138 4866 3F       		.byte	0x3f
 9139 4867 B84A0000 		.long	0x4ab8
 9140 486b 06       		.uleb128 0x6
 9141 486c 00000000 		.long	.LASF650
 9142 4870 2C       		.byte	0x2c
 9143 4871 40       		.byte	0x40
 9144 4872 164C0000 		.long	0x4c16
 9145 4876 1D       		.uleb128 0x1d
 9146 4877 00000000 		.long	.LASF651
 9147 487b 30000000 		.long	0x30
 9148 487f 00       		.byte	0
 9149 4880 0C       		.uleb128 0xc
 9150 4881 8E440000 		.long	0x448e
 9151 4885 0C       		.uleb128 0xc
 9152 4886 6A420000 		.long	0x426a
 9153 488a 6E       		.uleb128 0x6e
 9154 488b 00000000 		.long	.LASF695
 9155 488f 2E       		.byte	0x2e
GAS LISTING /tmp/cceISX6N.s 			page 284


 9156 4890 30       		.byte	0x30
 9157 4891 38590000 		.long	0x5938
 9158 4895 A4480000 		.long	0x48a4
 9159 4899 19       		.uleb128 0x19
 9160 489a 44660000 		.long	0x6644
 9161 489e 19       		.uleb128 0x19
 9162 489f 06490000 		.long	0x4906
 9163 48a3 00       		.byte	0
 9164 48a4 6E       		.uleb128 0x6e
 9165 48a5 00000000 		.long	.LASF696
 9166 48a9 2E       		.byte	0x2e
 9167 48aa 41       		.byte	0x41
 9168 48ab 38590000 		.long	0x5938
 9169 48af BE480000 		.long	0x48be
 9170 48b3 19       		.uleb128 0x19
 9171 48b4 73660000 		.long	0x6673
 9172 48b8 19       		.uleb128 0x19
 9173 48b9 06490000 		.long	0x4906
 9174 48bd 00       		.byte	0
 9175 48be 6F       		.uleb128 0x6f
 9176 48bf 00000000 		.long	.LASF1045
 9177 48c3 2E       		.byte	0x2e
 9178 48c4 4E       		.byte	0x4e
 9179 48c5 38590000 		.long	0x5938
 9180 48c9 19       		.uleb128 0x19
 9181 48ca 73660000 		.long	0x6673
 9182 48ce 19       		.uleb128 0x19
 9183 48cf 06490000 		.long	0x4906
 9184 48d3 00       		.byte	0
 9185 48d4 00       		.byte	0
 9186 48d5 02       		.uleb128 0x2
 9187 48d6 01       		.byte	0x1
 9188 48d7 08       		.byte	0x8
 9189 48d8 00000000 		.long	.LASF697
 9190 48dc 02       		.uleb128 0x2
 9191 48dd 02       		.byte	0x2
 9192 48de 07       		.byte	0x7
 9193 48df 00000000 		.long	.LASF698
 9194 48e3 02       		.uleb128 0x2
 9195 48e4 04       		.byte	0x4
 9196 48e5 07       		.byte	0x7
 9197 48e6 00000000 		.long	.LASF699
 9198 48ea 02       		.uleb128 0x2
 9199 48eb 08       		.byte	0x8
 9200 48ec 07       		.byte	0x7
 9201 48ed 00000000 		.long	.LASF700
 9202 48f1 02       		.uleb128 0x2
 9203 48f2 08       		.byte	0x8
 9204 48f3 07       		.byte	0x7
 9205 48f4 00000000 		.long	.LASF701
 9206 48f8 02       		.uleb128 0x2
 9207 48f9 01       		.byte	0x1
 9208 48fa 06       		.byte	0x6
 9209 48fb 00000000 		.long	.LASF702
 9210 48ff 02       		.uleb128 0x2
 9211 4900 02       		.byte	0x2
 9212 4901 05       		.byte	0x5
GAS LISTING /tmp/cceISX6N.s 			page 285


 9213 4902 00000000 		.long	.LASF703
 9214 4906 70       		.uleb128 0x70
 9215 4907 04       		.byte	0x4
 9216 4908 05       		.byte	0x5
 9217 4909 696E7400 		.string	"int"
 9218 490d 02       		.uleb128 0x2
 9219 490e 08       		.byte	0x8
 9220 490f 05       		.byte	0x5
 9221 4910 00000000 		.long	.LASF704
 9222 4914 02       		.uleb128 0x2
 9223 4915 10       		.byte	0x10
 9224 4916 04       		.byte	0x4
 9225 4917 00000000 		.long	.LASF705
 9226 491b 02       		.uleb128 0x2
 9227 491c 04       		.byte	0x4
 9228 491d 04       		.byte	0x4
 9229 491e 00000000 		.long	.LASF706
 9230 4922 07       		.uleb128 0x7
 9231 4923 00000000 		.long	.LASF707
 9232 4927 2F       		.byte	0x2f
 9233 4928 1C       		.byte	0x1c
 9234 4929 1B490000 		.long	0x491b
 9235 492d 07       		.uleb128 0x7
 9236 492e 00000000 		.long	.LASF708
 9237 4932 2F       		.byte	0x2f
 9238 4933 1D       		.byte	0x1d
 9239 4934 29000000 		.long	0x29
 9240 4938 71       		.uleb128 0x71
 9241 4939 08       		.byte	0x8
 9242 493a 3E490000 		.long	0x493e
 9243 493e 02       		.uleb128 0x2
 9244 493f 01       		.byte	0x1
 9245 4940 06       		.byte	0x6
 9246 4941 00000000 		.long	.LASF709
 9247 4945 27       		.uleb128 0x27
 9248 4946 00000000 		.long	.LASF710
 9249 494a 08       		.byte	0x8
 9250 494b 01       		.byte	0x1
 9251 494c 20       		.byte	0x20
 9252 494d 92490000 		.long	0x4992
 9253 4951 72       		.uleb128 0x72
 9254 4952 765F00   		.string	"v_"
 9255 4955 01       		.byte	0x1
 9256 4956 21       		.byte	0x21
 9257 4957 92490000 		.long	0x4992
 9258 495b 00       		.byte	0
 9259 495c 2B       		.uleb128 0x2b
 9260 495d 00000000 		.long	.LASF710
 9261 4961 01       		.byte	0x1
 9262 4962 23       		.byte	0x23
 9263 4963 01       		.byte	0x1
 9264 4964 6C490000 		.long	0x496c
 9265 4968 77490000 		.long	0x4977
 9266 496c 09       		.uleb128 0x9
 9267 496d 9D490000 		.long	0x499d
 9268 4971 19       		.uleb128 0x19
 9269 4972 97490000 		.long	0x4997
GAS LISTING /tmp/cceISX6N.s 			page 286


 9270 4976 00       		.byte	0
 9271 4977 2E       		.uleb128 0x2e
 9272 4978 00000000 		.long	.LASF711
 9273 497c 01       		.byte	0x1
 9274 497d 24       		.byte	0x24
 9275 497e 00000000 		.long	.LASF712
 9276 4982 29000000 		.long	0x29
 9277 4986 01       		.byte	0x1
 9278 4987 8B490000 		.long	0x498b
 9279 498b 09       		.uleb128 0x9
 9280 498c A3490000 		.long	0x49a3
 9281 4990 00       		.byte	0
 9282 4991 00       		.byte	0
 9283 4992 0C       		.uleb128 0xc
 9284 4993 97490000 		.long	0x4997
 9285 4997 73       		.uleb128 0x73
 9286 4998 08       		.byte	0x8
 9287 4999 29000000 		.long	0x29
 9288 499d 71       		.uleb128 0x71
 9289 499e 08       		.byte	0x8
 9290 499f 45490000 		.long	0x4945
 9291 49a3 71       		.uleb128 0x71
 9292 49a4 08       		.byte	0x8
 9293 49a5 A9490000 		.long	0x49a9
 9294 49a9 0C       		.uleb128 0xc
 9295 49aa 45490000 		.long	0x4945
 9296 49ae 27       		.uleb128 0x27
 9297 49af 00000000 		.long	.LASF713
 9298 49b3 08       		.byte	0x8
 9299 49b4 01       		.byte	0x1
 9300 49b5 27       		.byte	0x27
 9301 49b6 FB490000 		.long	0x49fb
 9302 49ba 72       		.uleb128 0x72
 9303 49bb 635F00   		.string	"c_"
 9304 49be 01       		.byte	0x1
 9305 49bf 28       		.byte	0x28
 9306 49c0 29000000 		.long	0x29
 9307 49c4 00       		.byte	0
 9308 49c5 2B       		.uleb128 0x2b
 9309 49c6 00000000 		.long	.LASF713
 9310 49ca 01       		.byte	0x1
 9311 49cb 2A       		.byte	0x2a
 9312 49cc 01       		.byte	0x1
 9313 49cd D5490000 		.long	0x49d5
 9314 49d1 E0490000 		.long	0x49e0
 9315 49d5 09       		.uleb128 0x9
 9316 49d6 FB490000 		.long	0x49fb
 9317 49da 19       		.uleb128 0x19
 9318 49db 29000000 		.long	0x29
 9319 49df 00       		.byte	0
 9320 49e0 2E       		.uleb128 0x2e
 9321 49e1 00000000 		.long	.LASF711
 9322 49e5 01       		.byte	0x1
 9323 49e6 2B       		.byte	0x2b
 9324 49e7 00000000 		.long	.LASF714
 9325 49eb 29000000 		.long	0x29
 9326 49ef 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 287


 9327 49f0 F4490000 		.long	0x49f4
 9328 49f4 09       		.uleb128 0x9
 9329 49f5 014A0000 		.long	0x4a01
 9330 49f9 00       		.byte	0
 9331 49fa 00       		.byte	0
 9332 49fb 71       		.uleb128 0x71
 9333 49fc 08       		.byte	0x8
 9334 49fd AE490000 		.long	0x49ae
 9335 4a01 71       		.uleb128 0x71
 9336 4a02 08       		.byte	0x8
 9337 4a03 074A0000 		.long	0x4a07
 9338 4a07 0C       		.uleb128 0xc
 9339 4a08 AE490000 		.long	0x49ae
 9340 4a0c 74       		.uleb128 0x74
 9341 4a0d 53756D00 		.string	"Sum"
 9342 4a11 01       		.byte	0x1
 9343 4a12 01       		.byte	0x1
 9344 4a13 2E       		.byte	0x2e
 9345 4a14 3C4A0000 		.long	0x4a3c
 9346 4a18 75       		.uleb128 0x75
 9347 4a19 00000000 		.long	.LASF715
 9348 4a1d 01       		.byte	0x1
 9349 4a1e 2F       		.byte	0x2f
 9350 4a1f 00000000 		.long	.LASF716
 9351 4a23 29000000 		.long	0x29
 9352 4a27 2B4A0000 		.long	0x4a2b
 9353 4a2b 09       		.uleb128 0x9
 9354 4a2c 3C4A0000 		.long	0x4a3c
 9355 4a30 19       		.uleb128 0x19
 9356 4a31 29000000 		.long	0x29
 9357 4a35 19       		.uleb128 0x19
 9358 4a36 29000000 		.long	0x29
 9359 4a3a 00       		.byte	0
 9360 4a3b 00       		.byte	0
 9361 4a3c 71       		.uleb128 0x71
 9362 4a3d 08       		.byte	0x8
 9363 4a3e 424A0000 		.long	0x4a42
 9364 4a42 0C       		.uleb128 0xc
 9365 4a43 0C4A0000 		.long	0x4a0c
 9366 4a47 05       		.uleb128 0x5
 9367 4a48 00000000 		.long	.LASF717
 9368 4a4c 01       		.byte	0x1
 9369 4a4d 01       		.byte	0x1
 9370 4a4e 3A       		.byte	0x3a
 9371 4a4f 774A0000 		.long	0x4a77
 9372 4a53 75       		.uleb128 0x75
 9373 4a54 00000000 		.long	.LASF715
 9374 4a58 01       		.byte	0x1
 9375 4a59 3B       		.byte	0x3b
 9376 4a5a 00000000 		.long	.LASF718
 9377 4a5e 29000000 		.long	0x29
 9378 4a62 664A0000 		.long	0x4a66
 9379 4a66 09       		.uleb128 0x9
 9380 4a67 774A0000 		.long	0x4a77
 9381 4a6b 19       		.uleb128 0x19
 9382 4a6c 29000000 		.long	0x29
 9383 4a70 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 288


 9384 4a71 29000000 		.long	0x29
 9385 4a75 00       		.byte	0
 9386 4a76 00       		.byte	0
 9387 4a77 71       		.uleb128 0x71
 9388 4a78 08       		.byte	0x8
 9389 4a79 7D4A0000 		.long	0x4a7d
 9390 4a7d 0C       		.uleb128 0xc
 9391 4a7e 474A0000 		.long	0x4a47
 9392 4a82 05       		.uleb128 0x5
 9393 4a83 00000000 		.long	.LASF719
 9394 4a87 01       		.byte	0x1
 9395 4a88 01       		.byte	0x1
 9396 4a89 46       		.byte	0x46
 9397 4a8a AD4A0000 		.long	0x4aad
 9398 4a8e 75       		.uleb128 0x75
 9399 4a8f 00000000 		.long	.LASF715
 9400 4a93 01       		.byte	0x1
 9401 4a94 47       		.byte	0x47
 9402 4a95 00000000 		.long	.LASF720
 9403 4a99 29000000 		.long	0x29
 9404 4a9d A14A0000 		.long	0x4aa1
 9405 4aa1 09       		.uleb128 0x9
 9406 4aa2 AD4A0000 		.long	0x4aad
 9407 4aa6 19       		.uleb128 0x19
 9408 4aa7 29000000 		.long	0x29
 9409 4aab 00       		.byte	0
 9410 4aac 00       		.byte	0
 9411 4aad 71       		.uleb128 0x71
 9412 4aae 08       		.byte	0x8
 9413 4aaf B34A0000 		.long	0x4ab3
 9414 4ab3 0C       		.uleb128 0xc
 9415 4ab4 824A0000 		.long	0x4a82
 9416 4ab8 0C       		.uleb128 0xc
 9417 4ab9 BD4A0000 		.long	0x4abd
 9418 4abd 02       		.uleb128 0x2
 9419 4abe 01       		.byte	0x1
 9420 4abf 02       		.byte	0x2
 9421 4ac0 00000000 		.long	.LASF721
 9422 4ac4 71       		.uleb128 0x71
 9423 4ac5 08       		.byte	0x8
 9424 4ac6 A5000000 		.long	0xa5
 9425 4aca 71       		.uleb128 0x71
 9426 4acb 08       		.byte	0x8
 9427 4acc FD000000 		.long	0xfd
 9428 4ad0 02       		.uleb128 0x2
 9429 4ad1 08       		.byte	0x8
 9430 4ad2 07       		.byte	0x7
 9431 4ad3 00000000 		.long	.LASF722
 9432 4ad7 0C       		.uleb128 0xc
 9433 4ad8 EA480000 		.long	0x48ea
 9434 4adc 71       		.uleb128 0x71
 9435 4add 08       		.byte	0x8
 9436 4ade 55010000 		.long	0x155
 9437 4ae2 07       		.uleb128 0x7
 9438 4ae3 00000000 		.long	.LASF723
 9439 4ae7 30       		.byte	0x30
 9440 4ae8 24       		.byte	0x24
GAS LISTING /tmp/cceISX6N.s 			page 289


 9441 4ae9 F8480000 		.long	0x48f8
 9442 4aed 07       		.uleb128 0x7
 9443 4aee 00000000 		.long	.LASF724
 9444 4af2 30       		.byte	0x30
 9445 4af3 25       		.byte	0x25
 9446 4af4 FF480000 		.long	0x48ff
 9447 4af8 07       		.uleb128 0x7
 9448 4af9 00000000 		.long	.LASF725
 9449 4afd 30       		.byte	0x30
 9450 4afe 26       		.byte	0x26
 9451 4aff 06490000 		.long	0x4906
 9452 4b03 07       		.uleb128 0x7
 9453 4b04 00000000 		.long	.LASF726
 9454 4b08 30       		.byte	0x30
 9455 4b09 28       		.byte	0x28
 9456 4b0a 30000000 		.long	0x30
 9457 4b0e 07       		.uleb128 0x7
 9458 4b0f 00000000 		.long	.LASF727
 9459 4b13 30       		.byte	0x30
 9460 4b14 30       		.byte	0x30
 9461 4b15 D5480000 		.long	0x48d5
 9462 4b19 07       		.uleb128 0x7
 9463 4b1a 00000000 		.long	.LASF728
 9464 4b1e 30       		.byte	0x30
 9465 4b1f 31       		.byte	0x31
 9466 4b20 DC480000 		.long	0x48dc
 9467 4b24 07       		.uleb128 0x7
 9468 4b25 00000000 		.long	.LASF729
 9469 4b29 30       		.byte	0x30
 9470 4b2a 33       		.byte	0x33
 9471 4b2b E3480000 		.long	0x48e3
 9472 4b2f 07       		.uleb128 0x7
 9473 4b30 00000000 		.long	.LASF730
 9474 4b34 30       		.byte	0x30
 9475 4b35 37       		.byte	0x37
 9476 4b36 EA480000 		.long	0x48ea
 9477 4b3a 07       		.uleb128 0x7
 9478 4b3b 00000000 		.long	.LASF731
 9479 4b3f 30       		.byte	0x30
 9480 4b40 41       		.byte	0x41
 9481 4b41 F8480000 		.long	0x48f8
 9482 4b45 07       		.uleb128 0x7
 9483 4b46 00000000 		.long	.LASF732
 9484 4b4a 30       		.byte	0x30
 9485 4b4b 42       		.byte	0x42
 9486 4b4c FF480000 		.long	0x48ff
 9487 4b50 07       		.uleb128 0x7
 9488 4b51 00000000 		.long	.LASF733
 9489 4b55 30       		.byte	0x30
 9490 4b56 43       		.byte	0x43
 9491 4b57 06490000 		.long	0x4906
 9492 4b5b 07       		.uleb128 0x7
 9493 4b5c 00000000 		.long	.LASF734
 9494 4b60 30       		.byte	0x30
 9495 4b61 45       		.byte	0x45
 9496 4b62 30000000 		.long	0x30
 9497 4b66 07       		.uleb128 0x7
GAS LISTING /tmp/cceISX6N.s 			page 290


 9498 4b67 00000000 		.long	.LASF735
 9499 4b6b 30       		.byte	0x30
 9500 4b6c 4C       		.byte	0x4c
 9501 4b6d D5480000 		.long	0x48d5
 9502 4b71 07       		.uleb128 0x7
 9503 4b72 00000000 		.long	.LASF736
 9504 4b76 30       		.byte	0x30
 9505 4b77 4D       		.byte	0x4d
 9506 4b78 DC480000 		.long	0x48dc
 9507 4b7c 07       		.uleb128 0x7
 9508 4b7d 00000000 		.long	.LASF737
 9509 4b81 30       		.byte	0x30
 9510 4b82 4E       		.byte	0x4e
 9511 4b83 E3480000 		.long	0x48e3
 9512 4b87 07       		.uleb128 0x7
 9513 4b88 00000000 		.long	.LASF738
 9514 4b8c 30       		.byte	0x30
 9515 4b8d 50       		.byte	0x50
 9516 4b8e EA480000 		.long	0x48ea
 9517 4b92 07       		.uleb128 0x7
 9518 4b93 00000000 		.long	.LASF739
 9519 4b97 30       		.byte	0x30
 9520 4b98 5A       		.byte	0x5a
 9521 4b99 F8480000 		.long	0x48f8
 9522 4b9d 07       		.uleb128 0x7
 9523 4b9e 00000000 		.long	.LASF740
 9524 4ba2 30       		.byte	0x30
 9525 4ba3 5C       		.byte	0x5c
 9526 4ba4 30000000 		.long	0x30
 9527 4ba8 07       		.uleb128 0x7
 9528 4ba9 00000000 		.long	.LASF741
 9529 4bad 30       		.byte	0x30
 9530 4bae 5D       		.byte	0x5d
 9531 4baf 30000000 		.long	0x30
 9532 4bb3 07       		.uleb128 0x7
 9533 4bb4 00000000 		.long	.LASF742
 9534 4bb8 30       		.byte	0x30
 9535 4bb9 5E       		.byte	0x5e
 9536 4bba 30000000 		.long	0x30
 9537 4bbe 07       		.uleb128 0x7
 9538 4bbf 00000000 		.long	.LASF743
 9539 4bc3 30       		.byte	0x30
 9540 4bc4 67       		.byte	0x67
 9541 4bc5 D5480000 		.long	0x48d5
 9542 4bc9 07       		.uleb128 0x7
 9543 4bca 00000000 		.long	.LASF744
 9544 4bce 30       		.byte	0x30
 9545 4bcf 69       		.byte	0x69
 9546 4bd0 EA480000 		.long	0x48ea
 9547 4bd4 07       		.uleb128 0x7
 9548 4bd5 00000000 		.long	.LASF745
 9549 4bd9 30       		.byte	0x30
 9550 4bda 6A       		.byte	0x6a
 9551 4bdb EA480000 		.long	0x48ea
 9552 4bdf 07       		.uleb128 0x7
 9553 4be0 00000000 		.long	.LASF746
 9554 4be4 30       		.byte	0x30
GAS LISTING /tmp/cceISX6N.s 			page 291


 9555 4be5 6B       		.byte	0x6b
 9556 4be6 EA480000 		.long	0x48ea
 9557 4bea 07       		.uleb128 0x7
 9558 4beb 00000000 		.long	.LASF747
 9559 4bef 30       		.byte	0x30
 9560 4bf0 77       		.byte	0x77
 9561 4bf1 30000000 		.long	0x30
 9562 4bf5 07       		.uleb128 0x7
 9563 4bf6 00000000 		.long	.LASF748
 9564 4bfa 30       		.byte	0x30
 9565 4bfb 7A       		.byte	0x7a
 9566 4bfc EA480000 		.long	0x48ea
 9567 4c00 07       		.uleb128 0x7
 9568 4c01 00000000 		.long	.LASF749
 9569 4c05 30       		.byte	0x30
 9570 4c06 86       		.byte	0x86
 9571 4c07 30000000 		.long	0x30
 9572 4c0b 07       		.uleb128 0x7
 9573 4c0c 00000000 		.long	.LASF750
 9574 4c10 30       		.byte	0x30
 9575 4c11 87       		.byte	0x87
 9576 4c12 EA480000 		.long	0x48ea
 9577 4c16 0C       		.uleb128 0xc
 9578 4c17 06490000 		.long	0x4906
 9579 4c1b 02       		.uleb128 0x2
 9580 4c1c 04       		.byte	0x4
 9581 4c1d 05       		.byte	0x5
 9582 4c1e 00000000 		.long	.LASF751
 9583 4c22 02       		.uleb128 0x2
 9584 4c23 02       		.byte	0x2
 9585 4c24 10       		.byte	0x10
 9586 4c25 00000000 		.long	.LASF752
 9587 4c29 02       		.uleb128 0x2
 9588 4c2a 04       		.byte	0x4
 9589 4c2b 10       		.byte	0x10
 9590 4c2c 00000000 		.long	.LASF753
 9591 4c30 07       		.uleb128 0x7
 9592 4c31 00000000 		.long	.LASF145
 9593 4c35 31       		.byte	0x31
 9594 4c36 D4       		.byte	0xd4
 9595 4c37 EA480000 		.long	0x48ea
 9596 4c3b 07       		.uleb128 0x7
 9597 4c3c 00000000 		.long	.LASF754
 9598 4c40 32       		.byte	0x32
 9599 4c41 28       		.byte	0x28
 9600 4c42 06490000 		.long	0x4906
 9601 4c46 07       		.uleb128 0x7
 9602 4c47 00000000 		.long	.LASF755
 9603 4c4b 32       		.byte	0x32
 9604 4c4c 8C       		.byte	0x8c
 9605 4c4d 30000000 		.long	0x30
 9606 4c51 07       		.uleb128 0x7
 9607 4c52 00000000 		.long	.LASF756
 9608 4c56 32       		.byte	0x32
 9609 4c57 8D       		.byte	0x8d
 9610 4c58 30000000 		.long	0x30
 9611 4c5c 07       		.uleb128 0x7
GAS LISTING /tmp/cceISX6N.s 			page 292


 9612 4c5d 00000000 		.long	.LASF757
 9613 4c61 32       		.byte	0x32
 9614 4c62 90       		.byte	0x90
 9615 4c63 30000000 		.long	0x30
 9616 4c67 07       		.uleb128 0x7
 9617 4c68 00000000 		.long	.LASF758
 9618 4c6c 32       		.byte	0x32
 9619 4c6d 94       		.byte	0x94
 9620 4c6e 30000000 		.long	0x30
 9621 4c72 76       		.uleb128 0x76
 9622 4c73 08       		.byte	0x8
 9623 4c74 07       		.uleb128 0x7
 9624 4c75 00000000 		.long	.LASF759
 9625 4c79 33       		.byte	0x33
 9626 4c7a 3B       		.byte	0x3b
 9627 4c7b 5C4C0000 		.long	0x4c5c
 9628 4c7f 07       		.uleb128 0x7
 9629 4c80 00000000 		.long	.LASF760
 9630 4c84 33       		.byte	0x33
 9631 4c85 4B       		.byte	0x4b
 9632 4c86 674C0000 		.long	0x4c67
 9633 4c8a 74       		.uleb128 0x74
 9634 4c8b 746D00   		.string	"tm"
 9635 4c8e 38       		.byte	0x38
 9636 4c8f 33       		.byte	0x33
 9637 4c90 85       		.byte	0x85
 9638 4c91 1A4D0000 		.long	0x4d1a
 9639 4c95 28       		.uleb128 0x28
 9640 4c96 00000000 		.long	.LASF761
 9641 4c9a 33       		.byte	0x33
 9642 4c9b 87       		.byte	0x87
 9643 4c9c 06490000 		.long	0x4906
 9644 4ca0 00       		.byte	0
 9645 4ca1 28       		.uleb128 0x28
 9646 4ca2 00000000 		.long	.LASF762
 9647 4ca6 33       		.byte	0x33
 9648 4ca7 88       		.byte	0x88
 9649 4ca8 06490000 		.long	0x4906
 9650 4cac 04       		.byte	0x4
 9651 4cad 28       		.uleb128 0x28
 9652 4cae 00000000 		.long	.LASF763
 9653 4cb2 33       		.byte	0x33
 9654 4cb3 89       		.byte	0x89
 9655 4cb4 06490000 		.long	0x4906
 9656 4cb8 08       		.byte	0x8
 9657 4cb9 28       		.uleb128 0x28
 9658 4cba 00000000 		.long	.LASF764
 9659 4cbe 33       		.byte	0x33
 9660 4cbf 8A       		.byte	0x8a
 9661 4cc0 06490000 		.long	0x4906
 9662 4cc4 0C       		.byte	0xc
 9663 4cc5 28       		.uleb128 0x28
 9664 4cc6 00000000 		.long	.LASF765
 9665 4cca 33       		.byte	0x33
 9666 4ccb 8B       		.byte	0x8b
 9667 4ccc 06490000 		.long	0x4906
 9668 4cd0 10       		.byte	0x10
GAS LISTING /tmp/cceISX6N.s 			page 293


 9669 4cd1 28       		.uleb128 0x28
 9670 4cd2 00000000 		.long	.LASF766
 9671 4cd6 33       		.byte	0x33
 9672 4cd7 8C       		.byte	0x8c
 9673 4cd8 06490000 		.long	0x4906
 9674 4cdc 14       		.byte	0x14
 9675 4cdd 28       		.uleb128 0x28
 9676 4cde 00000000 		.long	.LASF767
 9677 4ce2 33       		.byte	0x33
 9678 4ce3 8D       		.byte	0x8d
 9679 4ce4 06490000 		.long	0x4906
 9680 4ce8 18       		.byte	0x18
 9681 4ce9 28       		.uleb128 0x28
 9682 4cea 00000000 		.long	.LASF768
 9683 4cee 33       		.byte	0x33
 9684 4cef 8E       		.byte	0x8e
 9685 4cf0 06490000 		.long	0x4906
 9686 4cf4 1C       		.byte	0x1c
 9687 4cf5 28       		.uleb128 0x28
 9688 4cf6 00000000 		.long	.LASF769
 9689 4cfa 33       		.byte	0x33
 9690 4cfb 8F       		.byte	0x8f
 9691 4cfc 06490000 		.long	0x4906
 9692 4d00 20       		.byte	0x20
 9693 4d01 28       		.uleb128 0x28
 9694 4d02 00000000 		.long	.LASF770
 9695 4d06 33       		.byte	0x33
 9696 4d07 92       		.byte	0x92
 9697 4d08 30000000 		.long	0x30
 9698 4d0c 28       		.byte	0x28
 9699 4d0d 28       		.uleb128 0x28
 9700 4d0e 00000000 		.long	.LASF771
 9701 4d12 33       		.byte	0x33
 9702 4d13 93       		.byte	0x93
 9703 4d14 1A4D0000 		.long	0x4d1a
 9704 4d18 30       		.byte	0x30
 9705 4d19 00       		.byte	0
 9706 4d1a 71       		.uleb128 0x71
 9707 4d1b 08       		.byte	0x8
 9708 4d1c 204D0000 		.long	0x4d20
 9709 4d20 0C       		.uleb128 0xc
 9710 4d21 3E490000 		.long	0x493e
 9711 4d25 77       		.uleb128 0x77
 9712 4d26 00000000 		.long	.LASF773
 9713 4d2a 33       		.byte	0x33
 9714 4d2b BD       		.byte	0xbd
 9715 4d2c 744C0000 		.long	0x4c74
 9716 4d30 1F       		.uleb128 0x1f
 9717 4d31 00000000 		.long	.LASF774
 9718 4d35 33       		.byte	0x33
 9719 4d36 C3       		.byte	0xc3
 9720 4d37 29000000 		.long	0x29
 9721 4d3b 4A4D0000 		.long	0x4d4a
 9722 4d3f 19       		.uleb128 0x19
 9723 4d40 7F4C0000 		.long	0x4c7f
 9724 4d44 19       		.uleb128 0x19
 9725 4d45 7F4C0000 		.long	0x4c7f
GAS LISTING /tmp/cceISX6N.s 			page 294


 9726 4d49 00       		.byte	0
 9727 4d4a 1F       		.uleb128 0x1f
 9728 4d4b 00000000 		.long	.LASF775
 9729 4d4f 33       		.byte	0x33
 9730 4d50 C7       		.byte	0xc7
 9731 4d51 7F4C0000 		.long	0x4c7f
 9732 4d55 5F4D0000 		.long	0x4d5f
 9733 4d59 19       		.uleb128 0x19
 9734 4d5a 5F4D0000 		.long	0x4d5f
 9735 4d5e 00       		.byte	0
 9736 4d5f 71       		.uleb128 0x71
 9737 4d60 08       		.byte	0x8
 9738 4d61 8A4C0000 		.long	0x4c8a
 9739 4d65 1F       		.uleb128 0x1f
 9740 4d66 00000000 		.long	.LASF776
 9741 4d6a 33       		.byte	0x33
 9742 4d6b C0       		.byte	0xc0
 9743 4d6c 7F4C0000 		.long	0x4c7f
 9744 4d70 7A4D0000 		.long	0x4d7a
 9745 4d74 19       		.uleb128 0x19
 9746 4d75 7A4D0000 		.long	0x4d7a
 9747 4d79 00       		.byte	0
 9748 4d7a 71       		.uleb128 0x71
 9749 4d7b 08       		.byte	0x8
 9750 4d7c 7F4C0000 		.long	0x4c7f
 9751 4d80 21       		.uleb128 0x21
 9752 4d81 00000000 		.long	.LASF777
 9753 4d85 33       		.byte	0x33
 9754 4d86 0501     		.value	0x105
 9755 4d88 38490000 		.long	0x4938
 9756 4d8c 964D0000 		.long	0x4d96
 9757 4d90 19       		.uleb128 0x19
 9758 4d91 964D0000 		.long	0x4d96
 9759 4d95 00       		.byte	0
 9760 4d96 71       		.uleb128 0x71
 9761 4d97 08       		.byte	0x8
 9762 4d98 9C4D0000 		.long	0x4d9c
 9763 4d9c 0C       		.uleb128 0xc
 9764 4d9d 8A4C0000 		.long	0x4c8a
 9765 4da1 21       		.uleb128 0x21
 9766 4da2 00000000 		.long	.LASF778
 9767 4da6 33       		.byte	0x33
 9768 4da7 0801     		.value	0x108
 9769 4da9 38490000 		.long	0x4938
 9770 4dad B74D0000 		.long	0x4db7
 9771 4db1 19       		.uleb128 0x19
 9772 4db2 B74D0000 		.long	0x4db7
 9773 4db6 00       		.byte	0
 9774 4db7 71       		.uleb128 0x71
 9775 4db8 08       		.byte	0x8
 9776 4db9 BD4D0000 		.long	0x4dbd
 9777 4dbd 0C       		.uleb128 0xc
 9778 4dbe 7F4C0000 		.long	0x4c7f
 9779 4dc2 1F       		.uleb128 0x1f
 9780 4dc3 00000000 		.long	.LASF779
 9781 4dc7 33       		.byte	0x33
 9782 4dc8 EF       		.byte	0xef
GAS LISTING /tmp/cceISX6N.s 			page 295


 9783 4dc9 5F4D0000 		.long	0x4d5f
 9784 4dcd D74D0000 		.long	0x4dd7
 9785 4dd1 19       		.uleb128 0x19
 9786 4dd2 B74D0000 		.long	0x4db7
 9787 4dd6 00       		.byte	0
 9788 4dd7 1F       		.uleb128 0x1f
 9789 4dd8 00000000 		.long	.LASF780
 9790 4ddc 33       		.byte	0x33
 9791 4ddd F3       		.byte	0xf3
 9792 4dde 5F4D0000 		.long	0x4d5f
 9793 4de2 EC4D0000 		.long	0x4dec
 9794 4de6 19       		.uleb128 0x19
 9795 4de7 B74D0000 		.long	0x4db7
 9796 4deb 00       		.byte	0
 9797 4dec 1F       		.uleb128 0x1f
 9798 4ded 00000000 		.long	.LASF781
 9799 4df1 33       		.byte	0x33
 9800 4df2 CD       		.byte	0xcd
 9801 4df3 304C0000 		.long	0x4c30
 9802 4df7 104E0000 		.long	0x4e10
 9803 4dfb 19       		.uleb128 0x19
 9804 4dfc 38490000 		.long	0x4938
 9805 4e00 19       		.uleb128 0x19
 9806 4e01 304C0000 		.long	0x4c30
 9807 4e05 19       		.uleb128 0x19
 9808 4e06 1A4D0000 		.long	0x4d1a
 9809 4e0a 19       		.uleb128 0x19
 9810 4e0b 964D0000 		.long	0x4d96
 9811 4e0f 00       		.byte	0
 9812 4e10 0C       		.uleb128 0xc
 9813 4e11 30000000 		.long	0x30
 9814 4e15 71       		.uleb128 0x71
 9815 4e16 08       		.byte	0x8
 9816 4e17 1B0A0000 		.long	0xa1b
 9817 4e1b 71       		.uleb128 0x71
 9818 4e1c 08       		.byte	0x8
 9819 4e1d 760A0000 		.long	0xa76
 9820 4e21 0C       		.uleb128 0xc
 9821 4e22 004C0000 		.long	0x4c00
 9822 4e26 71       		.uleb128 0x71
 9823 4e27 08       		.byte	0x8
 9824 4e28 C5020000 		.long	0x2c5
 9825 4e2c 73       		.uleb128 0x73
 9826 4e2d 08       		.byte	0x8
 9827 4e2e 2C050000 		.long	0x52c
 9828 4e32 73       		.uleb128 0x73
 9829 4e33 08       		.byte	0x8
 9830 4e34 C5020000 		.long	0x2c5
 9831 4e38 71       		.uleb128 0x71
 9832 4e39 08       		.byte	0x8
 9833 4e3a 2C050000 		.long	0x52c
 9834 4e3e 73       		.uleb128 0x73
 9835 4e3f 08       		.byte	0x8
 9836 4e40 9D040000 		.long	0x49d
 9837 4e44 07       		.uleb128 0x7
 9838 4e45 00000000 		.long	.LASF782
 9839 4e49 35       		.byte	0x35
GAS LISTING /tmp/cceISX6N.s 			page 296


 9840 4e4a 30       		.byte	0x30
 9841 4e4b 4F4E0000 		.long	0x4e4f
 9842 4e4f 05       		.uleb128 0x5
 9843 4e50 00000000 		.long	.LASF783
 9844 4e54 D8       		.byte	0xd8
 9845 4e55 36       		.byte	0x36
 9846 4e56 F6       		.byte	0xf6
 9847 4e57 D04F0000 		.long	0x4fd0
 9848 4e5b 28       		.uleb128 0x28
 9849 4e5c 00000000 		.long	.LASF784
 9850 4e60 36       		.byte	0x36
 9851 4e61 F7       		.byte	0xf7
 9852 4e62 06490000 		.long	0x4906
 9853 4e66 00       		.byte	0
 9854 4e67 28       		.uleb128 0x28
 9855 4e68 00000000 		.long	.LASF785
 9856 4e6c 36       		.byte	0x36
 9857 4e6d FC       		.byte	0xfc
 9858 4e6e 38490000 		.long	0x4938
 9859 4e72 08       		.byte	0x8
 9860 4e73 28       		.uleb128 0x28
 9861 4e74 00000000 		.long	.LASF786
 9862 4e78 36       		.byte	0x36
 9863 4e79 FD       		.byte	0xfd
 9864 4e7a 38490000 		.long	0x4938
 9865 4e7e 10       		.byte	0x10
 9866 4e7f 28       		.uleb128 0x28
 9867 4e80 00000000 		.long	.LASF787
 9868 4e84 36       		.byte	0x36
 9869 4e85 FE       		.byte	0xfe
 9870 4e86 38490000 		.long	0x4938
 9871 4e8a 18       		.byte	0x18
 9872 4e8b 28       		.uleb128 0x28
 9873 4e8c 00000000 		.long	.LASF788
 9874 4e90 36       		.byte	0x36
 9875 4e91 FF       		.byte	0xff
 9876 4e92 38490000 		.long	0x4938
 9877 4e96 20       		.byte	0x20
 9878 4e97 3B       		.uleb128 0x3b
 9879 4e98 00000000 		.long	.LASF789
 9880 4e9c 36       		.byte	0x36
 9881 4e9d 0001     		.value	0x100
 9882 4e9f 38490000 		.long	0x4938
 9883 4ea3 28       		.byte	0x28
 9884 4ea4 3B       		.uleb128 0x3b
 9885 4ea5 00000000 		.long	.LASF790
 9886 4ea9 36       		.byte	0x36
 9887 4eaa 0101     		.value	0x101
 9888 4eac 38490000 		.long	0x4938
 9889 4eb0 30       		.byte	0x30
 9890 4eb1 3B       		.uleb128 0x3b
 9891 4eb2 00000000 		.long	.LASF791
 9892 4eb6 36       		.byte	0x36
 9893 4eb7 0201     		.value	0x102
 9894 4eb9 38490000 		.long	0x4938
 9895 4ebd 38       		.byte	0x38
 9896 4ebe 3B       		.uleb128 0x3b
GAS LISTING /tmp/cceISX6N.s 			page 297


 9897 4ebf 00000000 		.long	.LASF792
 9898 4ec3 36       		.byte	0x36
 9899 4ec4 0301     		.value	0x103
 9900 4ec6 38490000 		.long	0x4938
 9901 4eca 40       		.byte	0x40
 9902 4ecb 3B       		.uleb128 0x3b
 9903 4ecc 00000000 		.long	.LASF793
 9904 4ed0 36       		.byte	0x36
 9905 4ed1 0501     		.value	0x105
 9906 4ed3 38490000 		.long	0x4938
 9907 4ed7 48       		.byte	0x48
 9908 4ed8 3B       		.uleb128 0x3b
 9909 4ed9 00000000 		.long	.LASF794
 9910 4edd 36       		.byte	0x36
 9911 4ede 0601     		.value	0x106
 9912 4ee0 38490000 		.long	0x4938
 9913 4ee4 50       		.byte	0x50
 9914 4ee5 3B       		.uleb128 0x3b
 9915 4ee6 00000000 		.long	.LASF795
 9916 4eea 36       		.byte	0x36
 9917 4eeb 0701     		.value	0x107
 9918 4eed 38490000 		.long	0x4938
 9919 4ef1 58       		.byte	0x58
 9920 4ef2 3B       		.uleb128 0x3b
 9921 4ef3 00000000 		.long	.LASF796
 9922 4ef7 36       		.byte	0x36
 9923 4ef8 0901     		.value	0x109
 9924 4efa 835D0000 		.long	0x5d83
 9925 4efe 60       		.byte	0x60
 9926 4eff 3B       		.uleb128 0x3b
 9927 4f00 00000000 		.long	.LASF797
 9928 4f04 36       		.byte	0x36
 9929 4f05 0B01     		.value	0x10b
 9930 4f07 895D0000 		.long	0x5d89
 9931 4f0b 68       		.byte	0x68
 9932 4f0c 3B       		.uleb128 0x3b
 9933 4f0d 00000000 		.long	.LASF798
 9934 4f11 36       		.byte	0x36
 9935 4f12 0D01     		.value	0x10d
 9936 4f14 06490000 		.long	0x4906
 9937 4f18 70       		.byte	0x70
 9938 4f19 3B       		.uleb128 0x3b
 9939 4f1a 00000000 		.long	.LASF799
 9940 4f1e 36       		.byte	0x36
 9941 4f1f 1101     		.value	0x111
 9942 4f21 06490000 		.long	0x4906
 9943 4f25 74       		.byte	0x74
 9944 4f26 3B       		.uleb128 0x3b
 9945 4f27 00000000 		.long	.LASF800
 9946 4f2b 36       		.byte	0x36
 9947 4f2c 1301     		.value	0x113
 9948 4f2e 464C0000 		.long	0x4c46
 9949 4f32 78       		.byte	0x78
 9950 4f33 3B       		.uleb128 0x3b
 9951 4f34 00000000 		.long	.LASF801
 9952 4f38 36       		.byte	0x36
 9953 4f39 1701     		.value	0x117
GAS LISTING /tmp/cceISX6N.s 			page 298


 9954 4f3b DC480000 		.long	0x48dc
 9955 4f3f 80       		.byte	0x80
 9956 4f40 3B       		.uleb128 0x3b
 9957 4f41 00000000 		.long	.LASF802
 9958 4f45 36       		.byte	0x36
 9959 4f46 1801     		.value	0x118
 9960 4f48 F8480000 		.long	0x48f8
 9961 4f4c 82       		.byte	0x82
 9962 4f4d 3B       		.uleb128 0x3b
 9963 4f4e 00000000 		.long	.LASF803
 9964 4f52 36       		.byte	0x36
 9965 4f53 1901     		.value	0x119
 9966 4f55 8F5D0000 		.long	0x5d8f
 9967 4f59 83       		.byte	0x83
 9968 4f5a 3B       		.uleb128 0x3b
 9969 4f5b 00000000 		.long	.LASF804
 9970 4f5f 36       		.byte	0x36
 9971 4f60 1D01     		.value	0x11d
 9972 4f62 9F5D0000 		.long	0x5d9f
 9973 4f66 88       		.byte	0x88
 9974 4f67 3B       		.uleb128 0x3b
 9975 4f68 00000000 		.long	.LASF805
 9976 4f6c 36       		.byte	0x36
 9977 4f6d 2601     		.value	0x126
 9978 4f6f 514C0000 		.long	0x4c51
 9979 4f73 90       		.byte	0x90
 9980 4f74 3B       		.uleb128 0x3b
 9981 4f75 00000000 		.long	.LASF806
 9982 4f79 36       		.byte	0x36
 9983 4f7a 2F01     		.value	0x12f
 9984 4f7c 724C0000 		.long	0x4c72
 9985 4f80 98       		.byte	0x98
 9986 4f81 3B       		.uleb128 0x3b
 9987 4f82 00000000 		.long	.LASF807
 9988 4f86 36       		.byte	0x36
 9989 4f87 3001     		.value	0x130
 9990 4f89 724C0000 		.long	0x4c72
 9991 4f8d A0       		.byte	0xa0
 9992 4f8e 3B       		.uleb128 0x3b
 9993 4f8f 00000000 		.long	.LASF808
 9994 4f93 36       		.byte	0x36
 9995 4f94 3101     		.value	0x131
 9996 4f96 724C0000 		.long	0x4c72
 9997 4f9a A8       		.byte	0xa8
 9998 4f9b 3B       		.uleb128 0x3b
 9999 4f9c 00000000 		.long	.LASF809
 10000 4fa0 36       		.byte	0x36
 10001 4fa1 3201     		.value	0x132
 10002 4fa3 724C0000 		.long	0x4c72
 10003 4fa7 B0       		.byte	0xb0
 10004 4fa8 3B       		.uleb128 0x3b
 10005 4fa9 00000000 		.long	.LASF810
 10006 4fad 36       		.byte	0x36
 10007 4fae 3301     		.value	0x133
 10008 4fb0 304C0000 		.long	0x4c30
 10009 4fb4 B8       		.byte	0xb8
 10010 4fb5 3B       		.uleb128 0x3b
GAS LISTING /tmp/cceISX6N.s 			page 299


 10011 4fb6 00000000 		.long	.LASF811
 10012 4fba 36       		.byte	0x36
 10013 4fbb 3501     		.value	0x135
 10014 4fbd 06490000 		.long	0x4906
 10015 4fc1 C0       		.byte	0xc0
 10016 4fc2 3B       		.uleb128 0x3b
 10017 4fc3 00000000 		.long	.LASF812
 10018 4fc7 36       		.byte	0x36
 10019 4fc8 3701     		.value	0x137
 10020 4fca A55D0000 		.long	0x5da5
 10021 4fce C4       		.byte	0xc4
 10022 4fcf 00       		.byte	0
 10023 4fd0 07       		.uleb128 0x7
 10024 4fd1 00000000 		.long	.LASF813
 10025 4fd5 35       		.byte	0x35
 10026 4fd6 40       		.byte	0x40
 10027 4fd7 4F4E0000 		.long	0x4e4f
 10028 4fdb 05       		.uleb128 0x5
 10029 4fdc 00000000 		.long	.LASF814
 10030 4fe0 18       		.byte	0x18
 10031 4fe1 12       		.byte	0x12
 10032 4fe2 00       		.byte	0
 10033 4fe3 18500000 		.long	0x5018
 10034 4fe7 28       		.uleb128 0x28
 10035 4fe8 00000000 		.long	.LASF815
 10036 4fec 12       		.byte	0x12
 10037 4fed 00       		.byte	0
 10038 4fee E3480000 		.long	0x48e3
 10039 4ff2 00       		.byte	0
 10040 4ff3 28       		.uleb128 0x28
 10041 4ff4 00000000 		.long	.LASF816
 10042 4ff8 12       		.byte	0x12
 10043 4ff9 00       		.byte	0
 10044 4ffa E3480000 		.long	0x48e3
 10045 4ffe 04       		.byte	0x4
 10046 4fff 28       		.uleb128 0x28
 10047 5000 00000000 		.long	.LASF817
 10048 5004 12       		.byte	0x12
 10049 5005 00       		.byte	0
 10050 5006 724C0000 		.long	0x4c72
 10051 500a 08       		.byte	0x8
 10052 500b 28       		.uleb128 0x28
 10053 500c 00000000 		.long	.LASF818
 10054 5010 12       		.byte	0x12
 10055 5011 00       		.byte	0
 10056 5012 724C0000 		.long	0x4c72
 10057 5016 10       		.byte	0x10
 10058 5017 00       		.byte	0
 10059 5018 12       		.uleb128 0x12
 10060 5019 00000000 		.long	.LASF819
 10061 501d 31       		.byte	0x31
 10062 501e 6101     		.value	0x161
 10063 5020 E3480000 		.long	0x48e3
 10064 5024 78       		.uleb128 0x78
 10065 5025 08       		.byte	0x8
 10066 5026 37       		.byte	0x37
 10067 5027 53       		.byte	0x53
GAS LISTING /tmp/cceISX6N.s 			page 300


 10068 5028 00000000 		.long	.LASF914
 10069 502c 68500000 		.long	0x5068
 10070 5030 79       		.uleb128 0x79
 10071 5031 04       		.byte	0x4
 10072 5032 37       		.byte	0x37
 10073 5033 56       		.byte	0x56
 10074 5034 4F500000 		.long	0x504f
 10075 5038 7A       		.uleb128 0x7a
 10076 5039 00000000 		.long	.LASF820
 10077 503d 37       		.byte	0x37
 10078 503e 58       		.byte	0x58
 10079 503f E3480000 		.long	0x48e3
 10080 5043 7A       		.uleb128 0x7a
 10081 5044 00000000 		.long	.LASF821
 10082 5048 37       		.byte	0x37
 10083 5049 5C       		.byte	0x5c
 10084 504a 68500000 		.long	0x5068
 10085 504e 00       		.byte	0
 10086 504f 28       		.uleb128 0x28
 10087 5050 00000000 		.long	.LASF822
 10088 5054 37       		.byte	0x37
 10089 5055 54       		.byte	0x54
 10090 5056 06490000 		.long	0x4906
 10091 505a 00       		.byte	0
 10092 505b 28       		.uleb128 0x28
 10093 505c 00000000 		.long	.LASF823
 10094 5060 37       		.byte	0x37
 10095 5061 5D       		.byte	0x5d
 10096 5062 30500000 		.long	0x5030
 10097 5066 04       		.byte	0x4
 10098 5067 00       		.byte	0
 10099 5068 7B       		.uleb128 0x7b
 10100 5069 3E490000 		.long	0x493e
 10101 506d 78500000 		.long	0x5078
 10102 5071 7C       		.uleb128 0x7c
 10103 5072 D04A0000 		.long	0x4ad0
 10104 5076 03       		.byte	0x3
 10105 5077 00       		.byte	0
 10106 5078 07       		.uleb128 0x7
 10107 5079 00000000 		.long	.LASF824
 10108 507d 37       		.byte	0x37
 10109 507e 5E       		.byte	0x5e
 10110 507f 24500000 		.long	0x5024
 10111 5083 07       		.uleb128 0x7
 10112 5084 00000000 		.long	.LASF825
 10113 5088 37       		.byte	0x37
 10114 5089 6A       		.byte	0x6a
 10115 508a 78500000 		.long	0x5078
 10116 508e 21       		.uleb128 0x21
 10117 508f 00000000 		.long	.LASF826
 10118 5093 37       		.byte	0x37
 10119 5094 8401     		.value	0x184
 10120 5096 18500000 		.long	0x5018
 10121 509a A4500000 		.long	0x50a4
 10122 509e 19       		.uleb128 0x19
 10123 509f 06490000 		.long	0x4906
 10124 50a3 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 301


 10125 50a4 21       		.uleb128 0x21
 10126 50a5 00000000 		.long	.LASF827
 10127 50a9 37       		.byte	0x37
 10128 50aa E902     		.value	0x2e9
 10129 50ac 18500000 		.long	0x5018
 10130 50b0 BA500000 		.long	0x50ba
 10131 50b4 19       		.uleb128 0x19
 10132 50b5 BA500000 		.long	0x50ba
 10133 50b9 00       		.byte	0
 10134 50ba 71       		.uleb128 0x71
 10135 50bb 08       		.byte	0x8
 10136 50bc D04F0000 		.long	0x4fd0
 10137 50c0 21       		.uleb128 0x21
 10138 50c1 00000000 		.long	.LASF828
 10139 50c5 38       		.byte	0x38
 10140 50c6 8001     		.value	0x180
 10141 50c8 E0500000 		.long	0x50e0
 10142 50cc E0500000 		.long	0x50e0
 10143 50d0 19       		.uleb128 0x19
 10144 50d1 E0500000 		.long	0x50e0
 10145 50d5 19       		.uleb128 0x19
 10146 50d6 06490000 		.long	0x4906
 10147 50da 19       		.uleb128 0x19
 10148 50db BA500000 		.long	0x50ba
 10149 50df 00       		.byte	0
 10150 50e0 71       		.uleb128 0x71
 10151 50e1 08       		.byte	0x8
 10152 50e2 1B4C0000 		.long	0x4c1b
 10153 50e6 21       		.uleb128 0x21
 10154 50e7 00000000 		.long	.LASF829
 10155 50eb 37       		.byte	0x37
 10156 50ec F702     		.value	0x2f7
 10157 50ee 18500000 		.long	0x5018
 10158 50f2 01510000 		.long	0x5101
 10159 50f6 19       		.uleb128 0x19
 10160 50f7 1B4C0000 		.long	0x4c1b
 10161 50fb 19       		.uleb128 0x19
 10162 50fc BA500000 		.long	0x50ba
 10163 5100 00       		.byte	0
 10164 5101 21       		.uleb128 0x21
 10165 5102 00000000 		.long	.LASF830
 10166 5106 37       		.byte	0x37
 10167 5107 0D03     		.value	0x30d
 10168 5109 06490000 		.long	0x4906
 10169 510d 1C510000 		.long	0x511c
 10170 5111 19       		.uleb128 0x19
 10171 5112 1C510000 		.long	0x511c
 10172 5116 19       		.uleb128 0x19
 10173 5117 BA500000 		.long	0x50ba
 10174 511b 00       		.byte	0
 10175 511c 71       		.uleb128 0x71
 10176 511d 08       		.byte	0x8
 10177 511e 22510000 		.long	0x5122
 10178 5122 0C       		.uleb128 0xc
 10179 5123 1B4C0000 		.long	0x4c1b
 10180 5127 21       		.uleb128 0x21
 10181 5128 00000000 		.long	.LASF831
GAS LISTING /tmp/cceISX6N.s 			page 302


 10182 512c 37       		.byte	0x37
 10183 512d 4B02     		.value	0x24b
 10184 512f 06490000 		.long	0x4906
 10185 5133 42510000 		.long	0x5142
 10186 5137 19       		.uleb128 0x19
 10187 5138 BA500000 		.long	0x50ba
 10188 513c 19       		.uleb128 0x19
 10189 513d 06490000 		.long	0x4906
 10190 5141 00       		.byte	0
 10191 5142 21       		.uleb128 0x21
 10192 5143 00000000 		.long	.LASF832
 10193 5147 38       		.byte	0x38
 10194 5148 5901     		.value	0x159
 10195 514a 06490000 		.long	0x4906
 10196 514e 5E510000 		.long	0x515e
 10197 5152 19       		.uleb128 0x19
 10198 5153 BA500000 		.long	0x50ba
 10199 5157 19       		.uleb128 0x19
 10200 5158 1C510000 		.long	0x511c
 10201 515c 57       		.uleb128 0x57
 10202 515d 00       		.byte	0
 10203 515e 21       		.uleb128 0x21
 10204 515f 00000000 		.long	.LASF833
 10205 5163 37       		.byte	0x37
 10206 5164 7B02     		.value	0x27b
 10207 5166 06490000 		.long	0x4906
 10208 516a 7A510000 		.long	0x517a
 10209 516e 19       		.uleb128 0x19
 10210 516f BA500000 		.long	0x50ba
 10211 5173 19       		.uleb128 0x19
 10212 5174 1C510000 		.long	0x511c
 10213 5178 57       		.uleb128 0x57
 10214 5179 00       		.byte	0
 10215 517a 21       		.uleb128 0x21
 10216 517b 00000000 		.long	.LASF834
 10217 517f 37       		.byte	0x37
 10218 5180 EA02     		.value	0x2ea
 10219 5182 18500000 		.long	0x5018
 10220 5186 90510000 		.long	0x5190
 10221 518a 19       		.uleb128 0x19
 10222 518b BA500000 		.long	0x50ba
 10223 518f 00       		.byte	0
 10224 5190 7D       		.uleb128 0x7d
 10225 5191 00000000 		.long	.LASF835
 10226 5195 37       		.byte	0x37
 10227 5196 F002     		.value	0x2f0
 10228 5198 18500000 		.long	0x5018
 10229 519c 21       		.uleb128 0x21
 10230 519d 00000000 		.long	.LASF836
 10231 51a1 37       		.byte	0x37
 10232 51a2 8F01     		.value	0x18f
 10233 51a4 304C0000 		.long	0x4c30
 10234 51a8 BC510000 		.long	0x51bc
 10235 51ac 19       		.uleb128 0x19
 10236 51ad 1A4D0000 		.long	0x4d1a
 10237 51b1 19       		.uleb128 0x19
 10238 51b2 304C0000 		.long	0x4c30
GAS LISTING /tmp/cceISX6N.s 			page 303


 10239 51b6 19       		.uleb128 0x19
 10240 51b7 BC510000 		.long	0x51bc
 10241 51bb 00       		.byte	0
 10242 51bc 71       		.uleb128 0x71
 10243 51bd 08       		.byte	0x8
 10244 51be 83500000 		.long	0x5083
 10245 51c2 21       		.uleb128 0x21
 10246 51c3 00000000 		.long	.LASF837
 10247 51c7 37       		.byte	0x37
 10248 51c8 6D01     		.value	0x16d
 10249 51ca 304C0000 		.long	0x4c30
 10250 51ce E7510000 		.long	0x51e7
 10251 51d2 19       		.uleb128 0x19
 10252 51d3 E0500000 		.long	0x50e0
 10253 51d7 19       		.uleb128 0x19
 10254 51d8 1A4D0000 		.long	0x4d1a
 10255 51dc 19       		.uleb128 0x19
 10256 51dd 304C0000 		.long	0x4c30
 10257 51e1 19       		.uleb128 0x19
 10258 51e2 BC510000 		.long	0x51bc
 10259 51e6 00       		.byte	0
 10260 51e7 21       		.uleb128 0x21
 10261 51e8 00000000 		.long	.LASF838
 10262 51ec 37       		.byte	0x37
 10263 51ed 6901     		.value	0x169
 10264 51ef 06490000 		.long	0x4906
 10265 51f3 FD510000 		.long	0x51fd
 10266 51f7 19       		.uleb128 0x19
 10267 51f8 FD510000 		.long	0x51fd
 10268 51fc 00       		.byte	0
 10269 51fd 71       		.uleb128 0x71
 10270 51fe 08       		.byte	0x8
 10271 51ff 03520000 		.long	0x5203
 10272 5203 0C       		.uleb128 0xc
 10273 5204 83500000 		.long	0x5083
 10274 5208 21       		.uleb128 0x21
 10275 5209 00000000 		.long	.LASF839
 10276 520d 38       		.byte	0x38
 10277 520e DA01     		.value	0x1da
 10278 5210 304C0000 		.long	0x4c30
 10279 5214 2D520000 		.long	0x522d
 10280 5218 19       		.uleb128 0x19
 10281 5219 E0500000 		.long	0x50e0
 10282 521d 19       		.uleb128 0x19
 10283 521e 2D520000 		.long	0x522d
 10284 5222 19       		.uleb128 0x19
 10285 5223 304C0000 		.long	0x4c30
 10286 5227 19       		.uleb128 0x19
 10287 5228 BC510000 		.long	0x51bc
 10288 522c 00       		.byte	0
 10289 522d 71       		.uleb128 0x71
 10290 522e 08       		.byte	0x8
 10291 522f 1A4D0000 		.long	0x4d1a
 10292 5233 21       		.uleb128 0x21
 10293 5234 00000000 		.long	.LASF840
 10294 5238 37       		.byte	0x37
 10295 5239 F802     		.value	0x2f8
GAS LISTING /tmp/cceISX6N.s 			page 304


 10296 523b 18500000 		.long	0x5018
 10297 523f 4E520000 		.long	0x524e
 10298 5243 19       		.uleb128 0x19
 10299 5244 1B4C0000 		.long	0x4c1b
 10300 5248 19       		.uleb128 0x19
 10301 5249 BA500000 		.long	0x50ba
 10302 524d 00       		.byte	0
 10303 524e 21       		.uleb128 0x21
 10304 524f 00000000 		.long	.LASF841
 10305 5253 37       		.byte	0x37
 10306 5254 FE02     		.value	0x2fe
 10307 5256 18500000 		.long	0x5018
 10308 525a 64520000 		.long	0x5264
 10309 525e 19       		.uleb128 0x19
 10310 525f 1B4C0000 		.long	0x4c1b
 10311 5263 00       		.byte	0
 10312 5264 21       		.uleb128 0x21
 10313 5265 00000000 		.long	.LASF842
 10314 5269 38       		.byte	0x38
 10315 526a 1D01     		.value	0x11d
 10316 526c 06490000 		.long	0x4906
 10317 5270 85520000 		.long	0x5285
 10318 5274 19       		.uleb128 0x19
 10319 5275 E0500000 		.long	0x50e0
 10320 5279 19       		.uleb128 0x19
 10321 527a 304C0000 		.long	0x4c30
 10322 527e 19       		.uleb128 0x19
 10323 527f 1C510000 		.long	0x511c
 10324 5283 57       		.uleb128 0x57
 10325 5284 00       		.byte	0
 10326 5285 21       		.uleb128 0x21
 10327 5286 00000000 		.long	.LASF843
 10328 528a 37       		.byte	0x37
 10329 528b 8502     		.value	0x285
 10330 528d 06490000 		.long	0x4906
 10331 5291 A1520000 		.long	0x52a1
 10332 5295 19       		.uleb128 0x19
 10333 5296 1C510000 		.long	0x511c
 10334 529a 19       		.uleb128 0x19
 10335 529b 1C510000 		.long	0x511c
 10336 529f 57       		.uleb128 0x57
 10337 52a0 00       		.byte	0
 10338 52a1 21       		.uleb128 0x21
 10339 52a2 00000000 		.long	.LASF844
 10340 52a6 37       		.byte	0x37
 10341 52a7 1503     		.value	0x315
 10342 52a9 18500000 		.long	0x5018
 10343 52ad BC520000 		.long	0x52bc
 10344 52b1 19       		.uleb128 0x19
 10345 52b2 18500000 		.long	0x5018
 10346 52b6 19       		.uleb128 0x19
 10347 52b7 BA500000 		.long	0x50ba
 10348 52bb 00       		.byte	0
 10349 52bc 21       		.uleb128 0x21
 10350 52bd 00000000 		.long	.LASF845
 10351 52c1 38       		.byte	0x38
 10352 52c2 6C01     		.value	0x16c
GAS LISTING /tmp/cceISX6N.s 			page 305


 10353 52c4 06490000 		.long	0x4906
 10354 52c8 DC520000 		.long	0x52dc
 10355 52cc 19       		.uleb128 0x19
 10356 52cd BA500000 		.long	0x50ba
 10357 52d1 19       		.uleb128 0x19
 10358 52d2 1C510000 		.long	0x511c
 10359 52d6 19       		.uleb128 0x19
 10360 52d7 DC520000 		.long	0x52dc
 10361 52db 00       		.byte	0
 10362 52dc 71       		.uleb128 0x71
 10363 52dd 08       		.byte	0x8
 10364 52de DB4F0000 		.long	0x4fdb
 10365 52e2 21       		.uleb128 0x21
 10366 52e3 00000000 		.long	.LASF846
 10367 52e7 37       		.byte	0x37
 10368 52e8 B102     		.value	0x2b1
 10369 52ea 06490000 		.long	0x4906
 10370 52ee 02530000 		.long	0x5302
 10371 52f2 19       		.uleb128 0x19
 10372 52f3 BA500000 		.long	0x50ba
 10373 52f7 19       		.uleb128 0x19
 10374 52f8 1C510000 		.long	0x511c
 10375 52fc 19       		.uleb128 0x19
 10376 52fd DC520000 		.long	0x52dc
 10377 5301 00       		.byte	0
 10378 5302 21       		.uleb128 0x21
 10379 5303 00000000 		.long	.LASF847
 10380 5307 38       		.byte	0x38
 10381 5308 3B01     		.value	0x13b
 10382 530a 06490000 		.long	0x4906
 10383 530e 27530000 		.long	0x5327
 10384 5312 19       		.uleb128 0x19
 10385 5313 E0500000 		.long	0x50e0
 10386 5317 19       		.uleb128 0x19
 10387 5318 304C0000 		.long	0x4c30
 10388 531c 19       		.uleb128 0x19
 10389 531d 1C510000 		.long	0x511c
 10390 5321 19       		.uleb128 0x19
 10391 5322 DC520000 		.long	0x52dc
 10392 5326 00       		.byte	0
 10393 5327 21       		.uleb128 0x21
 10394 5328 00000000 		.long	.LASF848
 10395 532c 37       		.byte	0x37
 10396 532d BD02     		.value	0x2bd
 10397 532f 06490000 		.long	0x4906
 10398 5333 47530000 		.long	0x5347
 10399 5337 19       		.uleb128 0x19
 10400 5338 1C510000 		.long	0x511c
 10401 533c 19       		.uleb128 0x19
 10402 533d 1C510000 		.long	0x511c
 10403 5341 19       		.uleb128 0x19
 10404 5342 DC520000 		.long	0x52dc
 10405 5346 00       		.byte	0
 10406 5347 21       		.uleb128 0x21
 10407 5348 00000000 		.long	.LASF849
 10408 534c 38       		.byte	0x38
 10409 534d 6601     		.value	0x166
GAS LISTING /tmp/cceISX6N.s 			page 306


 10410 534f 06490000 		.long	0x4906
 10411 5353 62530000 		.long	0x5362
 10412 5357 19       		.uleb128 0x19
 10413 5358 1C510000 		.long	0x511c
 10414 535c 19       		.uleb128 0x19
 10415 535d DC520000 		.long	0x52dc
 10416 5361 00       		.byte	0
 10417 5362 21       		.uleb128 0x21
 10418 5363 00000000 		.long	.LASF850
 10419 5367 37       		.byte	0x37
 10420 5368 B902     		.value	0x2b9
 10421 536a 06490000 		.long	0x4906
 10422 536e 7D530000 		.long	0x537d
 10423 5372 19       		.uleb128 0x19
 10424 5373 1C510000 		.long	0x511c
 10425 5377 19       		.uleb128 0x19
 10426 5378 DC520000 		.long	0x52dc
 10427 537c 00       		.byte	0
 10428 537d 21       		.uleb128 0x21
 10429 537e 00000000 		.long	.LASF851
 10430 5382 38       		.byte	0x38
 10431 5383 B801     		.value	0x1b8
 10432 5385 304C0000 		.long	0x4c30
 10433 5389 9D530000 		.long	0x539d
 10434 538d 19       		.uleb128 0x19
 10435 538e 38490000 		.long	0x4938
 10436 5392 19       		.uleb128 0x19
 10437 5393 1B4C0000 		.long	0x4c1b
 10438 5397 19       		.uleb128 0x19
 10439 5398 BC510000 		.long	0x51bc
 10440 539c 00       		.byte	0
 10441 539d 1F       		.uleb128 0x1f
 10442 539e 00000000 		.long	.LASF852
 10443 53a2 38       		.byte	0x38
 10444 53a3 F6       		.byte	0xf6
 10445 53a4 E0500000 		.long	0x50e0
 10446 53a8 B7530000 		.long	0x53b7
 10447 53ac 19       		.uleb128 0x19
 10448 53ad E0500000 		.long	0x50e0
 10449 53b1 19       		.uleb128 0x19
 10450 53b2 1C510000 		.long	0x511c
 10451 53b6 00       		.byte	0
 10452 53b7 1F       		.uleb128 0x1f
 10453 53b8 00000000 		.long	.LASF853
 10454 53bc 37       		.byte	0x37
 10455 53bd A3       		.byte	0xa3
 10456 53be 06490000 		.long	0x4906
 10457 53c2 D1530000 		.long	0x53d1
 10458 53c6 19       		.uleb128 0x19
 10459 53c7 1C510000 		.long	0x511c
 10460 53cb 19       		.uleb128 0x19
 10461 53cc 1C510000 		.long	0x511c
 10462 53d0 00       		.byte	0
 10463 53d1 1F       		.uleb128 0x1f
 10464 53d2 00000000 		.long	.LASF854
 10465 53d6 37       		.byte	0x37
 10466 53d7 C0       		.byte	0xc0
GAS LISTING /tmp/cceISX6N.s 			page 307


 10467 53d8 06490000 		.long	0x4906
 10468 53dc EB530000 		.long	0x53eb
 10469 53e0 19       		.uleb128 0x19
 10470 53e1 1C510000 		.long	0x511c
 10471 53e5 19       		.uleb128 0x19
 10472 53e6 1C510000 		.long	0x511c
 10473 53ea 00       		.byte	0
 10474 53eb 1F       		.uleb128 0x1f
 10475 53ec 00000000 		.long	.LASF855
 10476 53f0 38       		.byte	0x38
 10477 53f1 98       		.byte	0x98
 10478 53f2 E0500000 		.long	0x50e0
 10479 53f6 05540000 		.long	0x5405
 10480 53fa 19       		.uleb128 0x19
 10481 53fb E0500000 		.long	0x50e0
 10482 53ff 19       		.uleb128 0x19
 10483 5400 1C510000 		.long	0x511c
 10484 5404 00       		.byte	0
 10485 5405 1F       		.uleb128 0x1f
 10486 5406 00000000 		.long	.LASF856
 10487 540a 37       		.byte	0x37
 10488 540b FC       		.byte	0xfc
 10489 540c 304C0000 		.long	0x4c30
 10490 5410 1F540000 		.long	0x541f
 10491 5414 19       		.uleb128 0x19
 10492 5415 1C510000 		.long	0x511c
 10493 5419 19       		.uleb128 0x19
 10494 541a 1C510000 		.long	0x511c
 10495 541e 00       		.byte	0
 10496 541f 21       		.uleb128 0x21
 10497 5420 00000000 		.long	.LASF857
 10498 5424 37       		.byte	0x37
 10499 5425 5703     		.value	0x357
 10500 5427 304C0000 		.long	0x4c30
 10501 542b 44540000 		.long	0x5444
 10502 542f 19       		.uleb128 0x19
 10503 5430 E0500000 		.long	0x50e0
 10504 5434 19       		.uleb128 0x19
 10505 5435 304C0000 		.long	0x4c30
 10506 5439 19       		.uleb128 0x19
 10507 543a 1C510000 		.long	0x511c
 10508 543e 19       		.uleb128 0x19
 10509 543f 964D0000 		.long	0x4d96
 10510 5443 00       		.byte	0
 10511 5444 21       		.uleb128 0x21
 10512 5445 00000000 		.long	.LASF858
 10513 5449 37       		.byte	0x37
 10514 544a 1F01     		.value	0x11f
 10515 544c 304C0000 		.long	0x4c30
 10516 5450 5A540000 		.long	0x545a
 10517 5454 19       		.uleb128 0x19
 10518 5455 1C510000 		.long	0x511c
 10519 5459 00       		.byte	0
 10520 545a 21       		.uleb128 0x21
 10521 545b 00000000 		.long	.LASF859
 10522 545f 38       		.byte	0x38
 10523 5460 0701     		.value	0x107
GAS LISTING /tmp/cceISX6N.s 			page 308


 10524 5462 E0500000 		.long	0x50e0
 10525 5466 7A540000 		.long	0x547a
 10526 546a 19       		.uleb128 0x19
 10527 546b E0500000 		.long	0x50e0
 10528 546f 19       		.uleb128 0x19
 10529 5470 1C510000 		.long	0x511c
 10530 5474 19       		.uleb128 0x19
 10531 5475 304C0000 		.long	0x4c30
 10532 5479 00       		.byte	0
 10533 547a 1F       		.uleb128 0x1f
 10534 547b 00000000 		.long	.LASF860
 10535 547f 37       		.byte	0x37
 10536 5480 A6       		.byte	0xa6
 10537 5481 06490000 		.long	0x4906
 10538 5485 99540000 		.long	0x5499
 10539 5489 19       		.uleb128 0x19
 10540 548a 1C510000 		.long	0x511c
 10541 548e 19       		.uleb128 0x19
 10542 548f 1C510000 		.long	0x511c
 10543 5493 19       		.uleb128 0x19
 10544 5494 304C0000 		.long	0x4c30
 10545 5498 00       		.byte	0
 10546 5499 1F       		.uleb128 0x1f
 10547 549a 00000000 		.long	.LASF861
 10548 549e 38       		.byte	0x38
 10549 549f BF       		.byte	0xbf
 10550 54a0 E0500000 		.long	0x50e0
 10551 54a4 B8540000 		.long	0x54b8
 10552 54a8 19       		.uleb128 0x19
 10553 54a9 E0500000 		.long	0x50e0
 10554 54ad 19       		.uleb128 0x19
 10555 54ae 1C510000 		.long	0x511c
 10556 54b2 19       		.uleb128 0x19
 10557 54b3 304C0000 		.long	0x4c30
 10558 54b7 00       		.byte	0
 10559 54b8 21       		.uleb128 0x21
 10560 54b9 00000000 		.long	.LASF862
 10561 54bd 38       		.byte	0x38
 10562 54be FC01     		.value	0x1fc
 10563 54c0 304C0000 		.long	0x4c30
 10564 54c4 DD540000 		.long	0x54dd
 10565 54c8 19       		.uleb128 0x19
 10566 54c9 38490000 		.long	0x4938
 10567 54cd 19       		.uleb128 0x19
 10568 54ce DD540000 		.long	0x54dd
 10569 54d2 19       		.uleb128 0x19
 10570 54d3 304C0000 		.long	0x4c30
 10571 54d7 19       		.uleb128 0x19
 10572 54d8 BC510000 		.long	0x51bc
 10573 54dc 00       		.byte	0
 10574 54dd 71       		.uleb128 0x71
 10575 54de 08       		.byte	0x8
 10576 54df 1C510000 		.long	0x511c
 10577 54e3 21       		.uleb128 0x21
 10578 54e4 00000000 		.long	.LASF863
 10579 54e8 37       		.byte	0x37
 10580 54e9 0001     		.value	0x100
GAS LISTING /tmp/cceISX6N.s 			page 309


 10581 54eb 304C0000 		.long	0x4c30
 10582 54ef FE540000 		.long	0x54fe
 10583 54f3 19       		.uleb128 0x19
 10584 54f4 1C510000 		.long	0x511c
 10585 54f8 19       		.uleb128 0x19
 10586 54f9 1C510000 		.long	0x511c
 10587 54fd 00       		.byte	0
 10588 54fe 21       		.uleb128 0x21
 10589 54ff 00000000 		.long	.LASF864
 10590 5503 37       		.byte	0x37
 10591 5504 C201     		.value	0x1c2
 10592 5506 29000000 		.long	0x29
 10593 550a 19550000 		.long	0x5519
 10594 550e 19       		.uleb128 0x19
 10595 550f 1C510000 		.long	0x511c
 10596 5513 19       		.uleb128 0x19
 10597 5514 19550000 		.long	0x5519
 10598 5518 00       		.byte	0
 10599 5519 71       		.uleb128 0x71
 10600 551a 08       		.byte	0x8
 10601 551b E0500000 		.long	0x50e0
 10602 551f 21       		.uleb128 0x21
 10603 5520 00000000 		.long	.LASF865
 10604 5524 37       		.byte	0x37
 10605 5525 C901     		.value	0x1c9
 10606 5527 1B490000 		.long	0x491b
 10607 552b 3A550000 		.long	0x553a
 10608 552f 19       		.uleb128 0x19
 10609 5530 1C510000 		.long	0x511c
 10610 5534 19       		.uleb128 0x19
 10611 5535 19550000 		.long	0x5519
 10612 5539 00       		.byte	0
 10613 553a 21       		.uleb128 0x21
 10614 553b 00000000 		.long	.LASF866
 10615 553f 37       		.byte	0x37
 10616 5540 1A01     		.value	0x11a
 10617 5542 E0500000 		.long	0x50e0
 10618 5546 5A550000 		.long	0x555a
 10619 554a 19       		.uleb128 0x19
 10620 554b E0500000 		.long	0x50e0
 10621 554f 19       		.uleb128 0x19
 10622 5550 1C510000 		.long	0x511c
 10623 5554 19       		.uleb128 0x19
 10624 5555 19550000 		.long	0x5519
 10625 5559 00       		.byte	0
 10626 555a 21       		.uleb128 0x21
 10627 555b 00000000 		.long	.LASF867
 10628 555f 37       		.byte	0x37
 10629 5560 D401     		.value	0x1d4
 10630 5562 30000000 		.long	0x30
 10631 5566 7A550000 		.long	0x557a
 10632 556a 19       		.uleb128 0x19
 10633 556b 1C510000 		.long	0x511c
 10634 556f 19       		.uleb128 0x19
 10635 5570 19550000 		.long	0x5519
 10636 5574 19       		.uleb128 0x19
 10637 5575 06490000 		.long	0x4906
GAS LISTING /tmp/cceISX6N.s 			page 310


 10638 5579 00       		.byte	0
 10639 557a 21       		.uleb128 0x21
 10640 557b 00000000 		.long	.LASF868
 10641 557f 37       		.byte	0x37
 10642 5580 D901     		.value	0x1d9
 10643 5582 EA480000 		.long	0x48ea
 10644 5586 9A550000 		.long	0x559a
 10645 558a 19       		.uleb128 0x19
 10646 558b 1C510000 		.long	0x511c
 10647 558f 19       		.uleb128 0x19
 10648 5590 19550000 		.long	0x5519
 10649 5594 19       		.uleb128 0x19
 10650 5595 06490000 		.long	0x4906
 10651 5599 00       		.byte	0
 10652 559a 1F       		.uleb128 0x1f
 10653 559b 00000000 		.long	.LASF869
 10654 559f 37       		.byte	0x37
 10655 55a0 C4       		.byte	0xc4
 10656 55a1 304C0000 		.long	0x4c30
 10657 55a5 B9550000 		.long	0x55b9
 10658 55a9 19       		.uleb128 0x19
 10659 55aa E0500000 		.long	0x50e0
 10660 55ae 19       		.uleb128 0x19
 10661 55af 1C510000 		.long	0x511c
 10662 55b3 19       		.uleb128 0x19
 10663 55b4 304C0000 		.long	0x4c30
 10664 55b8 00       		.byte	0
 10665 55b9 21       		.uleb128 0x21
 10666 55ba 00000000 		.long	.LASF870
 10667 55be 37       		.byte	0x37
 10668 55bf 8A01     		.value	0x18a
 10669 55c1 06490000 		.long	0x4906
 10670 55c5 CF550000 		.long	0x55cf
 10671 55c9 19       		.uleb128 0x19
 10672 55ca 18500000 		.long	0x5018
 10673 55ce 00       		.byte	0
 10674 55cf 21       		.uleb128 0x21
 10675 55d0 00000000 		.long	.LASF871
 10676 55d4 37       		.byte	0x37
 10677 55d5 4501     		.value	0x145
 10678 55d7 06490000 		.long	0x4906
 10679 55db EF550000 		.long	0x55ef
 10680 55df 19       		.uleb128 0x19
 10681 55e0 1C510000 		.long	0x511c
 10682 55e4 19       		.uleb128 0x19
 10683 55e5 1C510000 		.long	0x511c
 10684 55e9 19       		.uleb128 0x19
 10685 55ea 304C0000 		.long	0x4c30
 10686 55ee 00       		.byte	0
 10687 55ef 1F       		.uleb128 0x1f
 10688 55f0 00000000 		.long	.LASF872
 10689 55f4 38       		.byte	0x38
 10690 55f5 27       		.byte	0x27
 10691 55f6 E0500000 		.long	0x50e0
 10692 55fa 0E560000 		.long	0x560e
 10693 55fe 19       		.uleb128 0x19
 10694 55ff E0500000 		.long	0x50e0
GAS LISTING /tmp/cceISX6N.s 			page 311


 10695 5603 19       		.uleb128 0x19
 10696 5604 1C510000 		.long	0x511c
 10697 5608 19       		.uleb128 0x19
 10698 5609 304C0000 		.long	0x4c30
 10699 560d 00       		.byte	0
 10700 560e 1F       		.uleb128 0x1f
 10701 560f 00000000 		.long	.LASF873
 10702 5613 38       		.byte	0x38
 10703 5614 44       		.byte	0x44
 10704 5615 E0500000 		.long	0x50e0
 10705 5619 2D560000 		.long	0x562d
 10706 561d 19       		.uleb128 0x19
 10707 561e E0500000 		.long	0x50e0
 10708 5622 19       		.uleb128 0x19
 10709 5623 1C510000 		.long	0x511c
 10710 5627 19       		.uleb128 0x19
 10711 5628 304C0000 		.long	0x4c30
 10712 562c 00       		.byte	0
 10713 562d 1F       		.uleb128 0x1f
 10714 562e 00000000 		.long	.LASF874
 10715 5632 38       		.byte	0x38
 10716 5633 81       		.byte	0x81
 10717 5634 E0500000 		.long	0x50e0
 10718 5638 4C560000 		.long	0x564c
 10719 563c 19       		.uleb128 0x19
 10720 563d E0500000 		.long	0x50e0
 10721 5641 19       		.uleb128 0x19
 10722 5642 1B4C0000 		.long	0x4c1b
 10723 5646 19       		.uleb128 0x19
 10724 5647 304C0000 		.long	0x4c30
 10725 564b 00       		.byte	0
 10726 564c 21       		.uleb128 0x21
 10727 564d 00000000 		.long	.LASF875
 10728 5651 38       		.byte	0x38
 10729 5652 5301     		.value	0x153
 10730 5654 06490000 		.long	0x4906
 10731 5658 63560000 		.long	0x5663
 10732 565c 19       		.uleb128 0x19
 10733 565d 1C510000 		.long	0x511c
 10734 5661 57       		.uleb128 0x57
 10735 5662 00       		.byte	0
 10736 5663 21       		.uleb128 0x21
 10737 5664 00000000 		.long	.LASF876
 10738 5668 37       		.byte	0x37
 10739 5669 8202     		.value	0x282
 10740 566b 06490000 		.long	0x4906
 10741 566f 7A560000 		.long	0x567a
 10742 5673 19       		.uleb128 0x19
 10743 5674 1C510000 		.long	0x511c
 10744 5678 57       		.uleb128 0x57
 10745 5679 00       		.byte	0
 10746 567a 34       		.uleb128 0x34
 10747 567b 00000000 		.long	.LASF877
 10748 567f 37       		.byte	0x37
 10749 5680 E0       		.byte	0xe0
 10750 5681 00000000 		.long	.LASF877
 10751 5685 1C510000 		.long	0x511c
GAS LISTING /tmp/cceISX6N.s 			page 312


 10752 5689 98560000 		.long	0x5698
 10753 568d 19       		.uleb128 0x19
 10754 568e 1C510000 		.long	0x511c
 10755 5692 19       		.uleb128 0x19
 10756 5693 1B4C0000 		.long	0x4c1b
 10757 5697 00       		.byte	0
 10758 5698 35       		.uleb128 0x35
 10759 5699 00000000 		.long	.LASF878
 10760 569d 37       		.byte	0x37
 10761 569e 0601     		.value	0x106
 10762 56a0 00000000 		.long	.LASF878
 10763 56a4 1C510000 		.long	0x511c
 10764 56a8 B7560000 		.long	0x56b7
 10765 56ac 19       		.uleb128 0x19
 10766 56ad 1C510000 		.long	0x511c
 10767 56b1 19       		.uleb128 0x19
 10768 56b2 1C510000 		.long	0x511c
 10769 56b6 00       		.byte	0
 10770 56b7 34       		.uleb128 0x34
 10771 56b8 00000000 		.long	.LASF879
 10772 56bc 37       		.byte	0x37
 10773 56bd EA       		.byte	0xea
 10774 56be 00000000 		.long	.LASF879
 10775 56c2 1C510000 		.long	0x511c
 10776 56c6 D5560000 		.long	0x56d5
 10777 56ca 19       		.uleb128 0x19
 10778 56cb 1C510000 		.long	0x511c
 10779 56cf 19       		.uleb128 0x19
 10780 56d0 1B4C0000 		.long	0x4c1b
 10781 56d4 00       		.byte	0
 10782 56d5 35       		.uleb128 0x35
 10783 56d6 00000000 		.long	.LASF880
 10784 56da 37       		.byte	0x37
 10785 56db 1101     		.value	0x111
 10786 56dd 00000000 		.long	.LASF880
 10787 56e1 1C510000 		.long	0x511c
 10788 56e5 F4560000 		.long	0x56f4
 10789 56e9 19       		.uleb128 0x19
 10790 56ea 1C510000 		.long	0x511c
 10791 56ee 19       		.uleb128 0x19
 10792 56ef 1C510000 		.long	0x511c
 10793 56f3 00       		.byte	0
 10794 56f4 35       		.uleb128 0x35
 10795 56f5 00000000 		.long	.LASF881
 10796 56f9 37       		.byte	0x37
 10797 56fa 3C01     		.value	0x13c
 10798 56fc 00000000 		.long	.LASF881
 10799 5700 1C510000 		.long	0x511c
 10800 5704 18570000 		.long	0x5718
 10801 5708 19       		.uleb128 0x19
 10802 5709 1C510000 		.long	0x511c
 10803 570d 19       		.uleb128 0x19
 10804 570e 1B4C0000 		.long	0x4c1b
 10805 5712 19       		.uleb128 0x19
 10806 5713 304C0000 		.long	0x4c30
 10807 5717 00       		.byte	0
 10808 5718 21       		.uleb128 0x21
GAS LISTING /tmp/cceISX6N.s 			page 313


 10809 5719 00000000 		.long	.LASF882
 10810 571d 37       		.byte	0x37
 10811 571e CB01     		.value	0x1cb
 10812 5720 14490000 		.long	0x4914
 10813 5724 33570000 		.long	0x5733
 10814 5728 19       		.uleb128 0x19
 10815 5729 1C510000 		.long	0x511c
 10816 572d 19       		.uleb128 0x19
 10817 572e 19550000 		.long	0x5519
 10818 5732 00       		.byte	0
 10819 5733 21       		.uleb128 0x21
 10820 5734 00000000 		.long	.LASF883
 10821 5738 37       		.byte	0x37
 10822 5739 E301     		.value	0x1e3
 10823 573b 0D490000 		.long	0x490d
 10824 573f 53570000 		.long	0x5753
 10825 5743 19       		.uleb128 0x19
 10826 5744 1C510000 		.long	0x511c
 10827 5748 19       		.uleb128 0x19
 10828 5749 19550000 		.long	0x5519
 10829 574d 19       		.uleb128 0x19
 10830 574e 06490000 		.long	0x4906
 10831 5752 00       		.byte	0
 10832 5753 21       		.uleb128 0x21
 10833 5754 00000000 		.long	.LASF884
 10834 5758 37       		.byte	0x37
 10835 5759 EA01     		.value	0x1ea
 10836 575b F1480000 		.long	0x48f1
 10837 575f 73570000 		.long	0x5773
 10838 5763 19       		.uleb128 0x19
 10839 5764 1C510000 		.long	0x511c
 10840 5768 19       		.uleb128 0x19
 10841 5769 19550000 		.long	0x5519
 10842 576d 19       		.uleb128 0x19
 10843 576e 06490000 		.long	0x4906
 10844 5772 00       		.byte	0
 10845 5773 71       		.uleb128 0x71
 10846 5774 08       		.byte	0x8
 10847 5775 4D0D0000 		.long	0xd4d
 10848 5779 71       		.uleb128 0x71
 10849 577a 08       		.byte	0x8
 10850 577b EE0E0000 		.long	0xeee
 10851 577f 73       		.uleb128 0x73
 10852 5780 08       		.byte	0x8
 10853 5781 EE0E0000 		.long	0xeee
 10854 5785 7E       		.uleb128 0x7e
 10855 5786 00000000 		.long	.LASF1106
 10856 578a 7F       		.uleb128 0x7f
 10857 578b 08       		.byte	0x8
 10858 578c 4D0D0000 		.long	0xd4d
 10859 5790 73       		.uleb128 0x73
 10860 5791 08       		.byte	0x8
 10861 5792 4D0D0000 		.long	0xd4d
 10862 5796 71       		.uleb128 0x71
 10863 5797 08       		.byte	0x8
 10864 5798 0B0F0000 		.long	0xf0b
 10865 579c 0E       		.uleb128 0xe
GAS LISTING /tmp/cceISX6N.s 			page 314


 10866 579d 00000000 		.long	.LASF885
 10867 57a1 39       		.byte	0x39
 10868 57a2 37       		.byte	0x37
 10869 57a3 B0570000 		.long	0x57b0
 10870 57a7 8001     		.uleb128 0x80
 10871 57a9 39       		.byte	0x39
 10872 57aa 38       		.byte	0x38
 10873 57ab 180F0000 		.long	0xf18
 10874 57af 00       		.byte	0
 10875 57b0 73       		.uleb128 0x73
 10876 57b1 08       		.byte	0x8
 10877 57b2 2B0F0000 		.long	0xf2b
 10878 57b6 73       		.uleb128 0x73
 10879 57b7 08       		.byte	0x8
 10880 57b8 5B0F0000 		.long	0xf5b
 10881 57bc 71       		.uleb128 0x71
 10882 57bd 08       		.byte	0x8
 10883 57be 5B0F0000 		.long	0xf5b
 10884 57c2 71       		.uleb128 0x71
 10885 57c3 08       		.byte	0x8
 10886 57c4 2B0F0000 		.long	0xf2b
 10887 57c8 73       		.uleb128 0x73
 10888 57c9 08       		.byte	0x8
 10889 57ca 81100000 		.long	0x1081
 10890 57ce 05       		.uleb128 0x5
 10891 57cf 00000000 		.long	.LASF886
 10892 57d3 60       		.byte	0x60
 10893 57d4 3A       		.byte	0x3a
 10894 57d5 36       		.byte	0x36
 10895 57d6 FB580000 		.long	0x58fb
 10896 57da 28       		.uleb128 0x28
 10897 57db 00000000 		.long	.LASF887
 10898 57df 3A       		.byte	0x3a
 10899 57e0 3A       		.byte	0x3a
 10900 57e1 38490000 		.long	0x4938
 10901 57e5 00       		.byte	0
 10902 57e6 28       		.uleb128 0x28
 10903 57e7 00000000 		.long	.LASF888
 10904 57eb 3A       		.byte	0x3a
 10905 57ec 3B       		.byte	0x3b
 10906 57ed 38490000 		.long	0x4938
 10907 57f1 08       		.byte	0x8
 10908 57f2 28       		.uleb128 0x28
 10909 57f3 00000000 		.long	.LASF889
 10910 57f7 3A       		.byte	0x3a
 10911 57f8 41       		.byte	0x41
 10912 57f9 38490000 		.long	0x4938
 10913 57fd 10       		.byte	0x10
 10914 57fe 28       		.uleb128 0x28
 10915 57ff 00000000 		.long	.LASF890
 10916 5803 3A       		.byte	0x3a
 10917 5804 47       		.byte	0x47
 10918 5805 38490000 		.long	0x4938
 10919 5809 18       		.byte	0x18
 10920 580a 28       		.uleb128 0x28
 10921 580b 00000000 		.long	.LASF891
 10922 580f 3A       		.byte	0x3a
GAS LISTING /tmp/cceISX6N.s 			page 315


 10923 5810 48       		.byte	0x48
 10924 5811 38490000 		.long	0x4938
 10925 5815 20       		.byte	0x20
 10926 5816 28       		.uleb128 0x28
 10927 5817 00000000 		.long	.LASF892
 10928 581b 3A       		.byte	0x3a
 10929 581c 49       		.byte	0x49
 10930 581d 38490000 		.long	0x4938
 10931 5821 28       		.byte	0x28
 10932 5822 28       		.uleb128 0x28
 10933 5823 00000000 		.long	.LASF893
 10934 5827 3A       		.byte	0x3a
 10935 5828 4A       		.byte	0x4a
 10936 5829 38490000 		.long	0x4938
 10937 582d 30       		.byte	0x30
 10938 582e 28       		.uleb128 0x28
 10939 582f 00000000 		.long	.LASF894
 10940 5833 3A       		.byte	0x3a
 10941 5834 4B       		.byte	0x4b
 10942 5835 38490000 		.long	0x4938
 10943 5839 38       		.byte	0x38
 10944 583a 28       		.uleb128 0x28
 10945 583b 00000000 		.long	.LASF895
 10946 583f 3A       		.byte	0x3a
 10947 5840 4C       		.byte	0x4c
 10948 5841 38490000 		.long	0x4938
 10949 5845 40       		.byte	0x40
 10950 5846 28       		.uleb128 0x28
 10951 5847 00000000 		.long	.LASF896
 10952 584b 3A       		.byte	0x3a
 10953 584c 4D       		.byte	0x4d
 10954 584d 38490000 		.long	0x4938
 10955 5851 48       		.byte	0x48
 10956 5852 28       		.uleb128 0x28
 10957 5853 00000000 		.long	.LASF897
 10958 5857 3A       		.byte	0x3a
 10959 5858 4E       		.byte	0x4e
 10960 5859 3E490000 		.long	0x493e
 10961 585d 50       		.byte	0x50
 10962 585e 28       		.uleb128 0x28
 10963 585f 00000000 		.long	.LASF898
 10964 5863 3A       		.byte	0x3a
 10965 5864 4F       		.byte	0x4f
 10966 5865 3E490000 		.long	0x493e
 10967 5869 51       		.byte	0x51
 10968 586a 28       		.uleb128 0x28
 10969 586b 00000000 		.long	.LASF899
 10970 586f 3A       		.byte	0x3a
 10971 5870 51       		.byte	0x51
 10972 5871 3E490000 		.long	0x493e
 10973 5875 52       		.byte	0x52
 10974 5876 28       		.uleb128 0x28
 10975 5877 00000000 		.long	.LASF900
 10976 587b 3A       		.byte	0x3a
 10977 587c 53       		.byte	0x53
 10978 587d 3E490000 		.long	0x493e
 10979 5881 53       		.byte	0x53
GAS LISTING /tmp/cceISX6N.s 			page 316


 10980 5882 28       		.uleb128 0x28
 10981 5883 00000000 		.long	.LASF901
 10982 5887 3A       		.byte	0x3a
 10983 5888 55       		.byte	0x55
 10984 5889 3E490000 		.long	0x493e
 10985 588d 54       		.byte	0x54
 10986 588e 28       		.uleb128 0x28
 10987 588f 00000000 		.long	.LASF902
 10988 5893 3A       		.byte	0x3a
 10989 5894 57       		.byte	0x57
 10990 5895 3E490000 		.long	0x493e
 10991 5899 55       		.byte	0x55
 10992 589a 28       		.uleb128 0x28
 10993 589b 00000000 		.long	.LASF903
 10994 589f 3A       		.byte	0x3a
 10995 58a0 5E       		.byte	0x5e
 10996 58a1 3E490000 		.long	0x493e
 10997 58a5 56       		.byte	0x56
 10998 58a6 28       		.uleb128 0x28
 10999 58a7 00000000 		.long	.LASF904
 11000 58ab 3A       		.byte	0x3a
 11001 58ac 5F       		.byte	0x5f
 11002 58ad 3E490000 		.long	0x493e
 11003 58b1 57       		.byte	0x57
 11004 58b2 28       		.uleb128 0x28
 11005 58b3 00000000 		.long	.LASF905
 11006 58b7 3A       		.byte	0x3a
 11007 58b8 62       		.byte	0x62
 11008 58b9 3E490000 		.long	0x493e
 11009 58bd 58       		.byte	0x58
 11010 58be 28       		.uleb128 0x28
 11011 58bf 00000000 		.long	.LASF906
 11012 58c3 3A       		.byte	0x3a
 11013 58c4 64       		.byte	0x64
 11014 58c5 3E490000 		.long	0x493e
 11015 58c9 59       		.byte	0x59
 11016 58ca 28       		.uleb128 0x28
 11017 58cb 00000000 		.long	.LASF907
 11018 58cf 3A       		.byte	0x3a
 11019 58d0 66       		.byte	0x66
 11020 58d1 3E490000 		.long	0x493e
 11021 58d5 5A       		.byte	0x5a
 11022 58d6 28       		.uleb128 0x28
 11023 58d7 00000000 		.long	.LASF908
 11024 58db 3A       		.byte	0x3a
 11025 58dc 68       		.byte	0x68
 11026 58dd 3E490000 		.long	0x493e
 11027 58e1 5B       		.byte	0x5b
 11028 58e2 28       		.uleb128 0x28
 11029 58e3 00000000 		.long	.LASF909
 11030 58e7 3A       		.byte	0x3a
 11031 58e8 6F       		.byte	0x6f
 11032 58e9 3E490000 		.long	0x493e
 11033 58ed 5C       		.byte	0x5c
 11034 58ee 28       		.uleb128 0x28
 11035 58ef 00000000 		.long	.LASF910
 11036 58f3 3A       		.byte	0x3a
GAS LISTING /tmp/cceISX6N.s 			page 317


 11037 58f4 70       		.byte	0x70
 11038 58f5 3E490000 		.long	0x493e
 11039 58f9 5D       		.byte	0x5d
 11040 58fa 00       		.byte	0
 11041 58fb 1F       		.uleb128 0x1f
 11042 58fc 00000000 		.long	.LASF911
 11043 5900 3A       		.byte	0x3a
 11044 5901 7D       		.byte	0x7d
 11045 5902 38490000 		.long	0x4938
 11046 5906 15590000 		.long	0x5915
 11047 590a 19       		.uleb128 0x19
 11048 590b 06490000 		.long	0x4906
 11049 590f 19       		.uleb128 0x19
 11050 5910 1A4D0000 		.long	0x4d1a
 11051 5914 00       		.byte	0
 11052 5915 77       		.uleb128 0x77
 11053 5916 00000000 		.long	.LASF912
 11054 591a 3A       		.byte	0x3a
 11055 591b 80       		.byte	0x80
 11056 591c 20590000 		.long	0x5920
 11057 5920 71       		.uleb128 0x71
 11058 5921 08       		.byte	0x8
 11059 5922 CE570000 		.long	0x57ce
 11060 5926 8101     		.uleb128 0x81
 11061 5928 32590000 		.long	0x5932
 11062 592c 19       		.uleb128 0x19
 11063 592d 724C0000 		.long	0x4c72
 11064 5931 00       		.byte	0
 11065 5932 71       		.uleb128 0x71
 11066 5933 08       		.byte	0x8
 11067 5934 26590000 		.long	0x5926
 11068 5938 07       		.uleb128 0x7
 11069 5939 00000000 		.long	.LASF913
 11070 593d 3B       		.byte	0x3b
 11071 593e 20       		.byte	0x20
 11072 593f 06490000 		.long	0x4906
 11073 5943 71       		.uleb128 0x71
 11074 5944 08       		.byte	0x8
 11075 5945 49590000 		.long	0x5949
 11076 5949 8201     		.uleb128 0x82
 11077 594b 73       		.uleb128 0x73
 11078 594c 08       		.byte	0x8
 11079 594d 3E490000 		.long	0x493e
 11080 5951 73       		.uleb128 0x73
 11081 5952 08       		.byte	0x8
 11082 5953 204D0000 		.long	0x4d20
 11083 5957 71       		.uleb128 0x71
 11084 5958 08       		.byte	0x8
 11085 5959 86400000 		.long	0x4086
 11086 595d 73       		.uleb128 0x73
 11087 595e 08       		.byte	0x8
 11088 595f D4410000 		.long	0x41d4
 11089 5963 71       		.uleb128 0x71
 11090 5964 08       		.byte	0x8
 11091 5965 D4410000 		.long	0x41d4
 11092 5969 71       		.uleb128 0x71
 11093 596a 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 318


 11094 596b 11110000 		.long	0x1111
 11095 596f 73       		.uleb128 0x73
 11096 5970 08       		.byte	0x8
 11097 5971 91110000 		.long	0x1191
 11098 5975 78       		.uleb128 0x78
 11099 5976 08       		.byte	0x8
 11100 5977 3C       		.byte	0x3c
 11101 5978 62       		.byte	0x62
 11102 5979 00000000 		.long	.LASF915
 11103 597d 9A590000 		.long	0x599a
 11104 5981 28       		.uleb128 0x28
 11105 5982 00000000 		.long	.LASF916
 11106 5986 3C       		.byte	0x3c
 11107 5987 63       		.byte	0x63
 11108 5988 06490000 		.long	0x4906
 11109 598c 00       		.byte	0
 11110 598d 72       		.uleb128 0x72
 11111 598e 72656D00 		.string	"rem"
 11112 5992 3C       		.byte	0x3c
 11113 5993 64       		.byte	0x64
 11114 5994 06490000 		.long	0x4906
 11115 5998 04       		.byte	0x4
 11116 5999 00       		.byte	0
 11117 599a 07       		.uleb128 0x7
 11118 599b 00000000 		.long	.LASF917
 11119 599f 3C       		.byte	0x3c
 11120 59a0 65       		.byte	0x65
 11121 59a1 75590000 		.long	0x5975
 11122 59a5 78       		.uleb128 0x78
 11123 59a6 10       		.byte	0x10
 11124 59a7 3C       		.byte	0x3c
 11125 59a8 6A       		.byte	0x6a
 11126 59a9 00000000 		.long	.LASF918
 11127 59ad CA590000 		.long	0x59ca
 11128 59b1 28       		.uleb128 0x28
 11129 59b2 00000000 		.long	.LASF916
 11130 59b6 3C       		.byte	0x3c
 11131 59b7 6B       		.byte	0x6b
 11132 59b8 30000000 		.long	0x30
 11133 59bc 00       		.byte	0
 11134 59bd 72       		.uleb128 0x72
 11135 59be 72656D00 		.string	"rem"
 11136 59c2 3C       		.byte	0x3c
 11137 59c3 6C       		.byte	0x6c
 11138 59c4 30000000 		.long	0x30
 11139 59c8 08       		.byte	0x8
 11140 59c9 00       		.byte	0
 11141 59ca 07       		.uleb128 0x7
 11142 59cb 00000000 		.long	.LASF919
 11143 59cf 3C       		.byte	0x3c
 11144 59d0 6D       		.byte	0x6d
 11145 59d1 A5590000 		.long	0x59a5
 11146 59d5 78       		.uleb128 0x78
 11147 59d6 10       		.byte	0x10
 11148 59d7 3C       		.byte	0x3c
 11149 59d8 76       		.byte	0x76
 11150 59d9 00000000 		.long	.LASF920
GAS LISTING /tmp/cceISX6N.s 			page 319


 11151 59dd FA590000 		.long	0x59fa
 11152 59e1 28       		.uleb128 0x28
 11153 59e2 00000000 		.long	.LASF916
 11154 59e6 3C       		.byte	0x3c
 11155 59e7 77       		.byte	0x77
 11156 59e8 0D490000 		.long	0x490d
 11157 59ec 00       		.byte	0
 11158 59ed 72       		.uleb128 0x72
 11159 59ee 72656D00 		.string	"rem"
 11160 59f2 3C       		.byte	0x3c
 11161 59f3 78       		.byte	0x78
 11162 59f4 0D490000 		.long	0x490d
 11163 59f8 08       		.byte	0x8
 11164 59f9 00       		.byte	0
 11165 59fa 07       		.uleb128 0x7
 11166 59fb 00000000 		.long	.LASF921
 11167 59ff 3C       		.byte	0x3c
 11168 5a00 79       		.byte	0x79
 11169 5a01 D5590000 		.long	0x59d5
 11170 5a05 12       		.uleb128 0x12
 11171 5a06 00000000 		.long	.LASF922
 11172 5a0a 3C       		.byte	0x3c
 11173 5a0b E502     		.value	0x2e5
 11174 5a0d 115A0000 		.long	0x5a11
 11175 5a11 71       		.uleb128 0x71
 11176 5a12 08       		.byte	0x8
 11177 5a13 175A0000 		.long	0x5a17
 11178 5a17 8301     		.uleb128 0x83
 11179 5a19 06490000 		.long	0x4906
 11180 5a1d 2C5A0000 		.long	0x5a2c
 11181 5a21 19       		.uleb128 0x19
 11182 5a22 43590000 		.long	0x5943
 11183 5a26 19       		.uleb128 0x19
 11184 5a27 43590000 		.long	0x5943
 11185 5a2b 00       		.byte	0
 11186 5a2c 21       		.uleb128 0x21
 11187 5a2d 00000000 		.long	.LASF923
 11188 5a31 3C       		.byte	0x3c
 11189 5a32 0602     		.value	0x206
 11190 5a34 06490000 		.long	0x4906
 11191 5a38 425A0000 		.long	0x5a42
 11192 5a3c 19       		.uleb128 0x19
 11193 5a3d 425A0000 		.long	0x5a42
 11194 5a41 00       		.byte	0
 11195 5a42 71       		.uleb128 0x71
 11196 5a43 08       		.byte	0x8
 11197 5a44 485A0000 		.long	0x5a48
 11198 5a48 8401     		.uleb128 0x84
 11199 5a4a 35       		.uleb128 0x35
 11200 5a4b 00000000 		.long	.LASF924
 11201 5a4f 3C       		.byte	0x3c
 11202 5a50 0B02     		.value	0x20b
 11203 5a52 00000000 		.long	.LASF924
 11204 5a56 06490000 		.long	0x4906
 11205 5a5a 645A0000 		.long	0x5a64
 11206 5a5e 19       		.uleb128 0x19
 11207 5a5f 425A0000 		.long	0x5a42
GAS LISTING /tmp/cceISX6N.s 			page 320


 11208 5a63 00       		.byte	0
 11209 5a64 1F       		.uleb128 0x1f
 11210 5a65 00000000 		.long	.LASF925
 11211 5a69 3D       		.byte	0x3d
 11212 5a6a 1A       		.byte	0x1a
 11213 5a6b 29000000 		.long	0x29
 11214 5a6f 795A0000 		.long	0x5a79
 11215 5a73 19       		.uleb128 0x19
 11216 5a74 1A4D0000 		.long	0x4d1a
 11217 5a78 00       		.byte	0
 11218 5a79 21       		.uleb128 0x21
 11219 5a7a 00000000 		.long	.LASF926
 11220 5a7e 3C       		.byte	0x3c
 11221 5a7f 1601     		.value	0x116
 11222 5a81 06490000 		.long	0x4906
 11223 5a85 8F5A0000 		.long	0x5a8f
 11224 5a89 19       		.uleb128 0x19
 11225 5a8a 1A4D0000 		.long	0x4d1a
 11226 5a8e 00       		.byte	0
 11227 5a8f 21       		.uleb128 0x21
 11228 5a90 00000000 		.long	.LASF927
 11229 5a94 3C       		.byte	0x3c
 11230 5a95 1B01     		.value	0x11b
 11231 5a97 30000000 		.long	0x30
 11232 5a9b A55A0000 		.long	0x5aa5
 11233 5a9f 19       		.uleb128 0x19
 11234 5aa0 1A4D0000 		.long	0x4d1a
 11235 5aa4 00       		.byte	0
 11236 5aa5 21       		.uleb128 0x21
 11237 5aa6 00000000 		.long	.LASF928
 11238 5aaa 3C       		.byte	0x3c
 11239 5aab F202     		.value	0x2f2
 11240 5aad 724C0000 		.long	0x4c72
 11241 5ab1 CF5A0000 		.long	0x5acf
 11242 5ab5 19       		.uleb128 0x19
 11243 5ab6 43590000 		.long	0x5943
 11244 5aba 19       		.uleb128 0x19
 11245 5abb 43590000 		.long	0x5943
 11246 5abf 19       		.uleb128 0x19
 11247 5ac0 304C0000 		.long	0x4c30
 11248 5ac4 19       		.uleb128 0x19
 11249 5ac5 304C0000 		.long	0x4c30
 11250 5ac9 19       		.uleb128 0x19
 11251 5aca 055A0000 		.long	0x5a05
 11252 5ace 00       		.byte	0
 11253 5acf 8501     		.uleb128 0x85
 11254 5ad1 64697600 		.string	"div"
 11255 5ad5 3C       		.byte	0x3c
 11256 5ad6 1003     		.value	0x310
 11257 5ad8 9A590000 		.long	0x599a
 11258 5adc EB5A0000 		.long	0x5aeb
 11259 5ae0 19       		.uleb128 0x19
 11260 5ae1 06490000 		.long	0x4906
 11261 5ae5 19       		.uleb128 0x19
 11262 5ae6 06490000 		.long	0x4906
 11263 5aea 00       		.byte	0
 11264 5aeb 21       		.uleb128 0x21
GAS LISTING /tmp/cceISX6N.s 			page 321


 11265 5aec 00000000 		.long	.LASF929
 11266 5af0 3C       		.byte	0x3c
 11267 5af1 3302     		.value	0x233
 11268 5af3 38490000 		.long	0x4938
 11269 5af7 015B0000 		.long	0x5b01
 11270 5afb 19       		.uleb128 0x19
 11271 5afc 1A4D0000 		.long	0x4d1a
 11272 5b00 00       		.byte	0
 11273 5b01 21       		.uleb128 0x21
 11274 5b02 00000000 		.long	.LASF930
 11275 5b06 3C       		.byte	0x3c
 11276 5b07 1203     		.value	0x312
 11277 5b09 CA590000 		.long	0x59ca
 11278 5b0d 1C5B0000 		.long	0x5b1c
 11279 5b11 19       		.uleb128 0x19
 11280 5b12 30000000 		.long	0x30
 11281 5b16 19       		.uleb128 0x19
 11282 5b17 30000000 		.long	0x30
 11283 5b1b 00       		.byte	0
 11284 5b1c 21       		.uleb128 0x21
 11285 5b1d 00000000 		.long	.LASF931
 11286 5b21 3C       		.byte	0x3c
 11287 5b22 5B03     		.value	0x35b
 11288 5b24 06490000 		.long	0x4906
 11289 5b28 375B0000 		.long	0x5b37
 11290 5b2c 19       		.uleb128 0x19
 11291 5b2d 1A4D0000 		.long	0x4d1a
 11292 5b31 19       		.uleb128 0x19
 11293 5b32 304C0000 		.long	0x4c30
 11294 5b36 00       		.byte	0
 11295 5b37 1F       		.uleb128 0x1f
 11296 5b38 00000000 		.long	.LASF932
 11297 5b3c 3E       		.byte	0x3e
 11298 5b3d 71       		.byte	0x71
 11299 5b3e 304C0000 		.long	0x4c30
 11300 5b42 565B0000 		.long	0x5b56
 11301 5b46 19       		.uleb128 0x19
 11302 5b47 E0500000 		.long	0x50e0
 11303 5b4b 19       		.uleb128 0x19
 11304 5b4c 1A4D0000 		.long	0x4d1a
 11305 5b50 19       		.uleb128 0x19
 11306 5b51 304C0000 		.long	0x4c30
 11307 5b55 00       		.byte	0
 11308 5b56 21       		.uleb128 0x21
 11309 5b57 00000000 		.long	.LASF933
 11310 5b5b 3C       		.byte	0x3c
 11311 5b5c 5E03     		.value	0x35e
 11312 5b5e 06490000 		.long	0x4906
 11313 5b62 765B0000 		.long	0x5b76
 11314 5b66 19       		.uleb128 0x19
 11315 5b67 E0500000 		.long	0x50e0
 11316 5b6b 19       		.uleb128 0x19
 11317 5b6c 1A4D0000 		.long	0x4d1a
 11318 5b70 19       		.uleb128 0x19
 11319 5b71 304C0000 		.long	0x4c30
 11320 5b75 00       		.byte	0
 11321 5b76 8601     		.uleb128 0x86
GAS LISTING /tmp/cceISX6N.s 			page 322


 11322 5b78 00000000 		.long	.LASF934
 11323 5b7c 3C       		.byte	0x3c
 11324 5b7d F802     		.value	0x2f8
 11325 5b7f 985B0000 		.long	0x5b98
 11326 5b83 19       		.uleb128 0x19
 11327 5b84 724C0000 		.long	0x4c72
 11328 5b88 19       		.uleb128 0x19
 11329 5b89 304C0000 		.long	0x4c30
 11330 5b8d 19       		.uleb128 0x19
 11331 5b8e 304C0000 		.long	0x4c30
 11332 5b92 19       		.uleb128 0x19
 11333 5b93 055A0000 		.long	0x5a05
 11334 5b97 00       		.byte	0
 11335 5b98 8601     		.uleb128 0x86
 11336 5b9a 00000000 		.long	.LASF935
 11337 5b9e 3C       		.byte	0x3c
 11338 5b9f 2402     		.value	0x224
 11339 5ba1 AB5B0000 		.long	0x5bab
 11340 5ba5 19       		.uleb128 0x19
 11341 5ba6 06490000 		.long	0x4906
 11342 5baa 00       		.byte	0
 11343 5bab 7D       		.uleb128 0x7d
 11344 5bac 00000000 		.long	.LASF936
 11345 5bb0 3C       		.byte	0x3c
 11346 5bb1 7601     		.value	0x176
 11347 5bb3 06490000 		.long	0x4906
 11348 5bb7 8601     		.uleb128 0x86
 11349 5bb9 00000000 		.long	.LASF937
 11350 5bbd 3C       		.byte	0x3c
 11351 5bbe 7801     		.value	0x178
 11352 5bc0 CA5B0000 		.long	0x5bca
 11353 5bc4 19       		.uleb128 0x19
 11354 5bc5 E3480000 		.long	0x48e3
 11355 5bc9 00       		.byte	0
 11356 5bca 1F       		.uleb128 0x1f
 11357 5bcb 00000000 		.long	.LASF938
 11358 5bcf 3C       		.byte	0x3c
 11359 5bd0 A4       		.byte	0xa4
 11360 5bd1 29000000 		.long	0x29
 11361 5bd5 E45B0000 		.long	0x5be4
 11362 5bd9 19       		.uleb128 0x19
 11363 5bda 1A4D0000 		.long	0x4d1a
 11364 5bde 19       		.uleb128 0x19
 11365 5bdf E45B0000 		.long	0x5be4
 11366 5be3 00       		.byte	0
 11367 5be4 71       		.uleb128 0x71
 11368 5be5 08       		.byte	0x8
 11369 5be6 38490000 		.long	0x4938
 11370 5bea 1F       		.uleb128 0x1f
 11371 5beb 00000000 		.long	.LASF939
 11372 5bef 3C       		.byte	0x3c
 11373 5bf0 B7       		.byte	0xb7
 11374 5bf1 30000000 		.long	0x30
 11375 5bf5 095C0000 		.long	0x5c09
 11376 5bf9 19       		.uleb128 0x19
 11377 5bfa 1A4D0000 		.long	0x4d1a
 11378 5bfe 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 323


 11379 5bff E45B0000 		.long	0x5be4
 11380 5c03 19       		.uleb128 0x19
 11381 5c04 06490000 		.long	0x4906
 11382 5c08 00       		.byte	0
 11383 5c09 1F       		.uleb128 0x1f
 11384 5c0a 00000000 		.long	.LASF940
 11385 5c0e 3C       		.byte	0x3c
 11386 5c0f BB       		.byte	0xbb
 11387 5c10 EA480000 		.long	0x48ea
 11388 5c14 285C0000 		.long	0x5c28
 11389 5c18 19       		.uleb128 0x19
 11390 5c19 1A4D0000 		.long	0x4d1a
 11391 5c1d 19       		.uleb128 0x19
 11392 5c1e E45B0000 		.long	0x5be4
 11393 5c22 19       		.uleb128 0x19
 11394 5c23 06490000 		.long	0x4906
 11395 5c27 00       		.byte	0
 11396 5c28 21       		.uleb128 0x21
 11397 5c29 00000000 		.long	.LASF941
 11398 5c2d 3C       		.byte	0x3c
 11399 5c2e CC02     		.value	0x2cc
 11400 5c30 06490000 		.long	0x4906
 11401 5c34 3E5C0000 		.long	0x5c3e
 11402 5c38 19       		.uleb128 0x19
 11403 5c39 1A4D0000 		.long	0x4d1a
 11404 5c3d 00       		.byte	0
 11405 5c3e 1F       		.uleb128 0x1f
 11406 5c3f 00000000 		.long	.LASF942
 11407 5c43 3E       		.byte	0x3e
 11408 5c44 90       		.byte	0x90
 11409 5c45 304C0000 		.long	0x4c30
 11410 5c49 5D5C0000 		.long	0x5c5d
 11411 5c4d 19       		.uleb128 0x19
 11412 5c4e 38490000 		.long	0x4938
 11413 5c52 19       		.uleb128 0x19
 11414 5c53 1C510000 		.long	0x511c
 11415 5c57 19       		.uleb128 0x19
 11416 5c58 304C0000 		.long	0x4c30
 11417 5c5c 00       		.byte	0
 11418 5c5d 1F       		.uleb128 0x1f
 11419 5c5e 00000000 		.long	.LASF943
 11420 5c62 3E       		.byte	0x3e
 11421 5c63 53       		.byte	0x53
 11422 5c64 06490000 		.long	0x4906
 11423 5c68 775C0000 		.long	0x5c77
 11424 5c6c 19       		.uleb128 0x19
 11425 5c6d 38490000 		.long	0x4938
 11426 5c71 19       		.uleb128 0x19
 11427 5c72 1B4C0000 		.long	0x4c1b
 11428 5c76 00       		.byte	0
 11429 5c77 21       		.uleb128 0x21
 11430 5c78 00000000 		.long	.LASF944
 11431 5c7c 3C       		.byte	0x3c
 11432 5c7d 1803     		.value	0x318
 11433 5c7f FA590000 		.long	0x59fa
 11434 5c83 925C0000 		.long	0x5c92
 11435 5c87 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 324


 11436 5c88 0D490000 		.long	0x490d
 11437 5c8c 19       		.uleb128 0x19
 11438 5c8d 0D490000 		.long	0x490d
 11439 5c91 00       		.byte	0
 11440 5c92 21       		.uleb128 0x21
 11441 5c93 00000000 		.long	.LASF945
 11442 5c97 3C       		.byte	0x3c
 11443 5c98 2401     		.value	0x124
 11444 5c9a 0D490000 		.long	0x490d
 11445 5c9e A85C0000 		.long	0x5ca8
 11446 5ca2 19       		.uleb128 0x19
 11447 5ca3 1A4D0000 		.long	0x4d1a
 11448 5ca7 00       		.byte	0
 11449 5ca8 1F       		.uleb128 0x1f
 11450 5ca9 00000000 		.long	.LASF946
 11451 5cad 3C       		.byte	0x3c
 11452 5cae D1       		.byte	0xd1
 11453 5caf 0D490000 		.long	0x490d
 11454 5cb3 C75C0000 		.long	0x5cc7
 11455 5cb7 19       		.uleb128 0x19
 11456 5cb8 1A4D0000 		.long	0x4d1a
 11457 5cbc 19       		.uleb128 0x19
 11458 5cbd E45B0000 		.long	0x5be4
 11459 5cc1 19       		.uleb128 0x19
 11460 5cc2 06490000 		.long	0x4906
 11461 5cc6 00       		.byte	0
 11462 5cc7 1F       		.uleb128 0x1f
 11463 5cc8 00000000 		.long	.LASF947
 11464 5ccc 3C       		.byte	0x3c
 11465 5ccd D6       		.byte	0xd6
 11466 5cce F1480000 		.long	0x48f1
 11467 5cd2 E65C0000 		.long	0x5ce6
 11468 5cd6 19       		.uleb128 0x19
 11469 5cd7 1A4D0000 		.long	0x4d1a
 11470 5cdb 19       		.uleb128 0x19
 11471 5cdc E45B0000 		.long	0x5be4
 11472 5ce0 19       		.uleb128 0x19
 11473 5ce1 06490000 		.long	0x4906
 11474 5ce5 00       		.byte	0
 11475 5ce6 1F       		.uleb128 0x1f
 11476 5ce7 00000000 		.long	.LASF948
 11477 5ceb 3C       		.byte	0x3c
 11478 5cec AC       		.byte	0xac
 11479 5ced 1B490000 		.long	0x491b
 11480 5cf1 005D0000 		.long	0x5d00
 11481 5cf5 19       		.uleb128 0x19
 11482 5cf6 1A4D0000 		.long	0x4d1a
 11483 5cfa 19       		.uleb128 0x19
 11484 5cfb E45B0000 		.long	0x5be4
 11485 5cff 00       		.byte	0
 11486 5d00 1F       		.uleb128 0x1f
 11487 5d01 00000000 		.long	.LASF949
 11488 5d05 3C       		.byte	0x3c
 11489 5d06 AF       		.byte	0xaf
 11490 5d07 14490000 		.long	0x4914
 11491 5d0b 1A5D0000 		.long	0x5d1a
 11492 5d0f 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 325


 11493 5d10 1A4D0000 		.long	0x4d1a
 11494 5d14 19       		.uleb128 0x19
 11495 5d15 E45B0000 		.long	0x5be4
 11496 5d19 00       		.byte	0
 11497 5d1a 78       		.uleb128 0x78
 11498 5d1b 10       		.byte	0x10
 11499 5d1c 3F       		.byte	0x3f
 11500 5d1d 16       		.byte	0x16
 11501 5d1e 00000000 		.long	.LASF950
 11502 5d22 3F5D0000 		.long	0x5d3f
 11503 5d26 28       		.uleb128 0x28
 11504 5d27 00000000 		.long	.LASF951
 11505 5d2b 3F       		.byte	0x3f
 11506 5d2c 17       		.byte	0x17
 11507 5d2d 464C0000 		.long	0x4c46
 11508 5d31 00       		.byte	0
 11509 5d32 28       		.uleb128 0x28
 11510 5d33 00000000 		.long	.LASF952
 11511 5d37 3F       		.byte	0x3f
 11512 5d38 18       		.byte	0x18
 11513 5d39 78500000 		.long	0x5078
 11514 5d3d 08       		.byte	0x8
 11515 5d3e 00       		.byte	0
 11516 5d3f 07       		.uleb128 0x7
 11517 5d40 00000000 		.long	.LASF953
 11518 5d44 3F       		.byte	0x3f
 11519 5d45 19       		.byte	0x19
 11520 5d46 1A5D0000 		.long	0x5d1a
 11521 5d4a 8701     		.uleb128 0x87
 11522 5d4c 00000000 		.long	.LASF1107
 11523 5d50 36       		.byte	0x36
 11524 5d51 9B       		.byte	0x9b
 11525 5d52 05       		.uleb128 0x5
 11526 5d53 00000000 		.long	.LASF954
 11527 5d57 18       		.byte	0x18
 11528 5d58 36       		.byte	0x36
 11529 5d59 A1       		.byte	0xa1
 11530 5d5a 835D0000 		.long	0x5d83
 11531 5d5e 28       		.uleb128 0x28
 11532 5d5f 00000000 		.long	.LASF955
 11533 5d63 36       		.byte	0x36
 11534 5d64 A2       		.byte	0xa2
 11535 5d65 835D0000 		.long	0x5d83
 11536 5d69 00       		.byte	0
 11537 5d6a 28       		.uleb128 0x28
 11538 5d6b 00000000 		.long	.LASF956
 11539 5d6f 36       		.byte	0x36
 11540 5d70 A3       		.byte	0xa3
 11541 5d71 895D0000 		.long	0x5d89
 11542 5d75 08       		.byte	0x8
 11543 5d76 28       		.uleb128 0x28
 11544 5d77 00000000 		.long	.LASF957
 11545 5d7b 36       		.byte	0x36
 11546 5d7c A7       		.byte	0xa7
 11547 5d7d 06490000 		.long	0x4906
 11548 5d81 10       		.byte	0x10
 11549 5d82 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 326


 11550 5d83 71       		.uleb128 0x71
 11551 5d84 08       		.byte	0x8
 11552 5d85 525D0000 		.long	0x5d52
 11553 5d89 71       		.uleb128 0x71
 11554 5d8a 08       		.byte	0x8
 11555 5d8b 4F4E0000 		.long	0x4e4f
 11556 5d8f 7B       		.uleb128 0x7b
 11557 5d90 3E490000 		.long	0x493e
 11558 5d94 9F5D0000 		.long	0x5d9f
 11559 5d98 7C       		.uleb128 0x7c
 11560 5d99 D04A0000 		.long	0x4ad0
 11561 5d9d 00       		.byte	0
 11562 5d9e 00       		.byte	0
 11563 5d9f 71       		.uleb128 0x71
 11564 5da0 08       		.byte	0x8
 11565 5da1 4A5D0000 		.long	0x5d4a
 11566 5da5 7B       		.uleb128 0x7b
 11567 5da6 3E490000 		.long	0x493e
 11568 5daa B55D0000 		.long	0x5db5
 11569 5dae 7C       		.uleb128 0x7c
 11570 5daf D04A0000 		.long	0x4ad0
 11571 5db3 13       		.byte	0x13
 11572 5db4 00       		.byte	0
 11573 5db5 07       		.uleb128 0x7
 11574 5db6 00000000 		.long	.LASF958
 11575 5dba 35       		.byte	0x35
 11576 5dbb 6E       		.byte	0x6e
 11577 5dbc 3F5D0000 		.long	0x5d3f
 11578 5dc0 8601     		.uleb128 0x86
 11579 5dc2 00000000 		.long	.LASF959
 11580 5dc6 35       		.byte	0x35
 11581 5dc7 3A03     		.value	0x33a
 11582 5dc9 D35D0000 		.long	0x5dd3
 11583 5dcd 19       		.uleb128 0x19
 11584 5dce D35D0000 		.long	0x5dd3
 11585 5dd2 00       		.byte	0
 11586 5dd3 71       		.uleb128 0x71
 11587 5dd4 08       		.byte	0x8
 11588 5dd5 444E0000 		.long	0x4e44
 11589 5dd9 1F       		.uleb128 0x1f
 11590 5dda 00000000 		.long	.LASF960
 11591 5dde 35       		.byte	0x35
 11592 5ddf ED       		.byte	0xed
 11593 5de0 06490000 		.long	0x4906
 11594 5de4 EE5D0000 		.long	0x5dee
 11595 5de8 19       		.uleb128 0x19
 11596 5de9 D35D0000 		.long	0x5dd3
 11597 5ded 00       		.byte	0
 11598 5dee 21       		.uleb128 0x21
 11599 5def 00000000 		.long	.LASF961
 11600 5df3 35       		.byte	0x35
 11601 5df4 3C03     		.value	0x33c
 11602 5df6 06490000 		.long	0x4906
 11603 5dfa 045E0000 		.long	0x5e04
 11604 5dfe 19       		.uleb128 0x19
 11605 5dff D35D0000 		.long	0x5dd3
 11606 5e03 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 327


 11607 5e04 21       		.uleb128 0x21
 11608 5e05 00000000 		.long	.LASF962
 11609 5e09 35       		.byte	0x35
 11610 5e0a 3E03     		.value	0x33e
 11611 5e0c 06490000 		.long	0x4906
 11612 5e10 1A5E0000 		.long	0x5e1a
 11613 5e14 19       		.uleb128 0x19
 11614 5e15 D35D0000 		.long	0x5dd3
 11615 5e19 00       		.byte	0
 11616 5e1a 1F       		.uleb128 0x1f
 11617 5e1b 00000000 		.long	.LASF963
 11618 5e1f 35       		.byte	0x35
 11619 5e20 F2       		.byte	0xf2
 11620 5e21 06490000 		.long	0x4906
 11621 5e25 2F5E0000 		.long	0x5e2f
 11622 5e29 19       		.uleb128 0x19
 11623 5e2a D35D0000 		.long	0x5dd3
 11624 5e2e 00       		.byte	0
 11625 5e2f 21       		.uleb128 0x21
 11626 5e30 00000000 		.long	.LASF964
 11627 5e34 35       		.byte	0x35
 11628 5e35 1302     		.value	0x213
 11629 5e37 06490000 		.long	0x4906
 11630 5e3b 455E0000 		.long	0x5e45
 11631 5e3f 19       		.uleb128 0x19
 11632 5e40 D35D0000 		.long	0x5dd3
 11633 5e44 00       		.byte	0
 11634 5e45 21       		.uleb128 0x21
 11635 5e46 00000000 		.long	.LASF965
 11636 5e4a 35       		.byte	0x35
 11637 5e4b 1E03     		.value	0x31e
 11638 5e4d 06490000 		.long	0x4906
 11639 5e51 605E0000 		.long	0x5e60
 11640 5e55 19       		.uleb128 0x19
 11641 5e56 D35D0000 		.long	0x5dd3
 11642 5e5a 19       		.uleb128 0x19
 11643 5e5b 605E0000 		.long	0x5e60
 11644 5e5f 00       		.byte	0
 11645 5e60 71       		.uleb128 0x71
 11646 5e61 08       		.byte	0x8
 11647 5e62 B55D0000 		.long	0x5db5
 11648 5e66 1F       		.uleb128 0x1f
 11649 5e67 00000000 		.long	.LASF966
 11650 5e6b 0B       		.byte	0xb
 11651 5e6c FD       		.byte	0xfd
 11652 5e6d 38490000 		.long	0x4938
 11653 5e71 855E0000 		.long	0x5e85
 11654 5e75 19       		.uleb128 0x19
 11655 5e76 38490000 		.long	0x4938
 11656 5e7a 19       		.uleb128 0x19
 11657 5e7b 06490000 		.long	0x4906
 11658 5e7f 19       		.uleb128 0x19
 11659 5e80 D35D0000 		.long	0x5dd3
 11660 5e84 00       		.byte	0
 11661 5e85 21       		.uleb128 0x21
 11662 5e86 00000000 		.long	.LASF967
 11663 5e8a 35       		.byte	0x35
GAS LISTING /tmp/cceISX6N.s 			page 328


 11664 5e8b 1001     		.value	0x110
 11665 5e8d D35D0000 		.long	0x5dd3
 11666 5e91 A05E0000 		.long	0x5ea0
 11667 5e95 19       		.uleb128 0x19
 11668 5e96 1A4D0000 		.long	0x4d1a
 11669 5e9a 19       		.uleb128 0x19
 11670 5e9b 1A4D0000 		.long	0x4d1a
 11671 5e9f 00       		.byte	0
 11672 5ea0 21       		.uleb128 0x21
 11673 5ea1 00000000 		.long	.LASF968
 11674 5ea5 0B       		.byte	0xb
 11675 5ea6 1A01     		.value	0x11a
 11676 5ea8 304C0000 		.long	0x4c30
 11677 5eac C55E0000 		.long	0x5ec5
 11678 5eb0 19       		.uleb128 0x19
 11679 5eb1 724C0000 		.long	0x4c72
 11680 5eb5 19       		.uleb128 0x19
 11681 5eb6 304C0000 		.long	0x4c30
 11682 5eba 19       		.uleb128 0x19
 11683 5ebb 304C0000 		.long	0x4c30
 11684 5ebf 19       		.uleb128 0x19
 11685 5ec0 D35D0000 		.long	0x5dd3
 11686 5ec4 00       		.byte	0
 11687 5ec5 21       		.uleb128 0x21
 11688 5ec6 00000000 		.long	.LASF969
 11689 5eca 35       		.byte	0x35
 11690 5ecb 1601     		.value	0x116
 11691 5ecd D35D0000 		.long	0x5dd3
 11692 5ed1 E55E0000 		.long	0x5ee5
 11693 5ed5 19       		.uleb128 0x19
 11694 5ed6 1A4D0000 		.long	0x4d1a
 11695 5eda 19       		.uleb128 0x19
 11696 5edb 1A4D0000 		.long	0x4d1a
 11697 5edf 19       		.uleb128 0x19
 11698 5ee0 D35D0000 		.long	0x5dd3
 11699 5ee4 00       		.byte	0
 11700 5ee5 21       		.uleb128 0x21
 11701 5ee6 00000000 		.long	.LASF970
 11702 5eea 35       		.byte	0x35
 11703 5eeb ED02     		.value	0x2ed
 11704 5eed 06490000 		.long	0x4906
 11705 5ef1 055F0000 		.long	0x5f05
 11706 5ef5 19       		.uleb128 0x19
 11707 5ef6 D35D0000 		.long	0x5dd3
 11708 5efa 19       		.uleb128 0x19
 11709 5efb 30000000 		.long	0x30
 11710 5eff 19       		.uleb128 0x19
 11711 5f00 06490000 		.long	0x4906
 11712 5f04 00       		.byte	0
 11713 5f05 21       		.uleb128 0x21
 11714 5f06 00000000 		.long	.LASF971
 11715 5f0a 35       		.byte	0x35
 11716 5f0b 2303     		.value	0x323
 11717 5f0d 06490000 		.long	0x4906
 11718 5f11 205F0000 		.long	0x5f20
 11719 5f15 19       		.uleb128 0x19
 11720 5f16 D35D0000 		.long	0x5dd3
GAS LISTING /tmp/cceISX6N.s 			page 329


 11721 5f1a 19       		.uleb128 0x19
 11722 5f1b 205F0000 		.long	0x5f20
 11723 5f1f 00       		.byte	0
 11724 5f20 71       		.uleb128 0x71
 11725 5f21 08       		.byte	0x8
 11726 5f22 265F0000 		.long	0x5f26
 11727 5f26 0C       		.uleb128 0xc
 11728 5f27 B55D0000 		.long	0x5db5
 11729 5f2b 21       		.uleb128 0x21
 11730 5f2c 00000000 		.long	.LASF972
 11731 5f30 35       		.byte	0x35
 11732 5f31 F202     		.value	0x2f2
 11733 5f33 30000000 		.long	0x30
 11734 5f37 415F0000 		.long	0x5f41
 11735 5f3b 19       		.uleb128 0x19
 11736 5f3c D35D0000 		.long	0x5dd3
 11737 5f40 00       		.byte	0
 11738 5f41 21       		.uleb128 0x21
 11739 5f42 00000000 		.long	.LASF973
 11740 5f46 35       		.byte	0x35
 11741 5f47 1402     		.value	0x214
 11742 5f49 06490000 		.long	0x4906
 11743 5f4d 575F0000 		.long	0x5f57
 11744 5f51 19       		.uleb128 0x19
 11745 5f52 D35D0000 		.long	0x5dd3
 11746 5f56 00       		.byte	0
 11747 5f57 77       		.uleb128 0x77
 11748 5f58 00000000 		.long	.LASF974
 11749 5f5c 40       		.byte	0x40
 11750 5f5d 2C       		.byte	0x2c
 11751 5f5e 06490000 		.long	0x4906
 11752 5f62 21       		.uleb128 0x21
 11753 5f63 00000000 		.long	.LASF975
 11754 5f67 35       		.byte	0x35
 11755 5f68 7E02     		.value	0x27e
 11756 5f6a 38490000 		.long	0x4938
 11757 5f6e 785F0000 		.long	0x5f78
 11758 5f72 19       		.uleb128 0x19
 11759 5f73 38490000 		.long	0x4938
 11760 5f77 00       		.byte	0
 11761 5f78 8601     		.uleb128 0x86
 11762 5f7a 00000000 		.long	.LASF976
 11763 5f7e 35       		.byte	0x35
 11764 5f7f 4E03     		.value	0x34e
 11765 5f81 8B5F0000 		.long	0x5f8b
 11766 5f85 19       		.uleb128 0x19
 11767 5f86 1A4D0000 		.long	0x4d1a
 11768 5f8a 00       		.byte	0
 11769 5f8b 1F       		.uleb128 0x1f
 11770 5f8c 00000000 		.long	.LASF977
 11771 5f90 35       		.byte	0x35
 11772 5f91 B2       		.byte	0xb2
 11773 5f92 06490000 		.long	0x4906
 11774 5f96 A05F0000 		.long	0x5fa0
 11775 5f9a 19       		.uleb128 0x19
 11776 5f9b 1A4D0000 		.long	0x4d1a
 11777 5f9f 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 330


 11778 5fa0 1F       		.uleb128 0x1f
 11779 5fa1 00000000 		.long	.LASF978
 11780 5fa5 35       		.byte	0x35
 11781 5fa6 B4       		.byte	0xb4
 11782 5fa7 06490000 		.long	0x4906
 11783 5fab BA5F0000 		.long	0x5fba
 11784 5faf 19       		.uleb128 0x19
 11785 5fb0 1A4D0000 		.long	0x4d1a
 11786 5fb4 19       		.uleb128 0x19
 11787 5fb5 1A4D0000 		.long	0x4d1a
 11788 5fb9 00       		.byte	0
 11789 5fba 8601     		.uleb128 0x86
 11790 5fbc 00000000 		.long	.LASF979
 11791 5fc0 35       		.byte	0x35
 11792 5fc1 F702     		.value	0x2f7
 11793 5fc3 CD5F0000 		.long	0x5fcd
 11794 5fc7 19       		.uleb128 0x19
 11795 5fc8 D35D0000 		.long	0x5dd3
 11796 5fcc 00       		.byte	0
 11797 5fcd 8601     		.uleb128 0x86
 11798 5fcf 00000000 		.long	.LASF980
 11799 5fd3 35       		.byte	0x35
 11800 5fd4 4C01     		.value	0x14c
 11801 5fd6 E55F0000 		.long	0x5fe5
 11802 5fda 19       		.uleb128 0x19
 11803 5fdb D35D0000 		.long	0x5dd3
 11804 5fdf 19       		.uleb128 0x19
 11805 5fe0 38490000 		.long	0x4938
 11806 5fe4 00       		.byte	0
 11807 5fe5 21       		.uleb128 0x21
 11808 5fe6 00000000 		.long	.LASF981
 11809 5fea 35       		.byte	0x35
 11810 5feb 5001     		.value	0x150
 11811 5fed 06490000 		.long	0x4906
 11812 5ff1 0A600000 		.long	0x600a
 11813 5ff5 19       		.uleb128 0x19
 11814 5ff6 D35D0000 		.long	0x5dd3
 11815 5ffa 19       		.uleb128 0x19
 11816 5ffb 38490000 		.long	0x4938
 11817 5fff 19       		.uleb128 0x19
 11818 6000 06490000 		.long	0x4906
 11819 6004 19       		.uleb128 0x19
 11820 6005 304C0000 		.long	0x4c30
 11821 6009 00       		.byte	0
 11822 600a 77       		.uleb128 0x77
 11823 600b 00000000 		.long	.LASF982
 11824 600f 35       		.byte	0x35
 11825 6010 C3       		.byte	0xc3
 11826 6011 D35D0000 		.long	0x5dd3
 11827 6015 1F       		.uleb128 0x1f
 11828 6016 00000000 		.long	.LASF983
 11829 601a 35       		.byte	0x35
 11830 601b D1       		.byte	0xd1
 11831 601c 38490000 		.long	0x4938
 11832 6020 2A600000 		.long	0x602a
 11833 6024 19       		.uleb128 0x19
 11834 6025 38490000 		.long	0x4938
GAS LISTING /tmp/cceISX6N.s 			page 331


 11835 6029 00       		.byte	0
 11836 602a 21       		.uleb128 0x21
 11837 602b 00000000 		.long	.LASF984
 11838 602f 35       		.byte	0x35
 11839 6030 BE02     		.value	0x2be
 11840 6032 06490000 		.long	0x4906
 11841 6036 45600000 		.long	0x6045
 11842 603a 19       		.uleb128 0x19
 11843 603b 06490000 		.long	0x4906
 11844 603f 19       		.uleb128 0x19
 11845 6040 D35D0000 		.long	0x5dd3
 11846 6044 00       		.byte	0
 11847 6045 71       		.uleb128 0x71
 11848 6046 08       		.byte	0x8
 11849 6047 46130000 		.long	0x1346
 11850 604b 71       		.uleb128 0x71
 11851 604c 08       		.byte	0x8
 11852 604d 6C2C0000 		.long	0x2c6c
 11853 6051 71       		.uleb128 0x71
 11854 6052 08       		.byte	0x8
 11855 6053 3A130000 		.long	0x133a
 11856 6057 71       		.uleb128 0x71
 11857 6058 08       		.byte	0x8
 11858 6059 4B140000 		.long	0x144b
 11859 605d 73       		.uleb128 0x73
 11860 605e 08       		.byte	0x8
 11861 605f 4B140000 		.long	0x144b
 11862 6063 73       		.uleb128 0x73
 11863 6064 08       		.byte	0x8
 11864 6065 6C2C0000 		.long	0x2c6c
 11865 6069 7F       		.uleb128 0x7f
 11866 606a 08       		.byte	0x8
 11867 606b 3A130000 		.long	0x133a
 11868 606f 73       		.uleb128 0x73
 11869 6070 08       		.byte	0x8
 11870 6071 3A130000 		.long	0x133a
 11871 6075 71       		.uleb128 0x71
 11872 6076 08       		.byte	0x8
 11873 6077 712C0000 		.long	0x2c71
 11874 607b 71       		.uleb128 0x71
 11875 607c 08       		.byte	0x8
 11876 607d 512D0000 		.long	0x2d51
 11877 6081 7B       		.uleb128 0x7b
 11878 6082 EA480000 		.long	0x48ea
 11879 6086 8D600000 		.long	0x608d
 11880 608a 8801     		.uleb128 0x88
 11881 608c 00       		.byte	0
 11882 608d 71       		.uleb128 0x71
 11883 608e 08       		.byte	0x8
 11884 608f 412C0000 		.long	0x2c41
 11885 6093 0C       		.uleb128 0xc
 11886 6094 1A4D0000 		.long	0x4d1a
 11887 6098 71       		.uleb128 0x71
 11888 6099 08       		.byte	0x8
 11889 609a 862E0000 		.long	0x2e86
 11890 609e 07       		.uleb128 0x7
 11891 609f 00000000 		.long	.LASF985
GAS LISTING /tmp/cceISX6N.s 			page 332


 11892 60a3 41       		.byte	0x41
 11893 60a4 34       		.byte	0x34
 11894 60a5 EA480000 		.long	0x48ea
 11895 60a9 07       		.uleb128 0x7
 11896 60aa 00000000 		.long	.LASF986
 11897 60ae 41       		.byte	0x41
 11898 60af BA       		.byte	0xba
 11899 60b0 B4600000 		.long	0x60b4
 11900 60b4 71       		.uleb128 0x71
 11901 60b5 08       		.byte	0x8
 11902 60b6 BA600000 		.long	0x60ba
 11903 60ba 0C       		.uleb128 0xc
 11904 60bb 3B4C0000 		.long	0x4c3b
 11905 60bf 1F       		.uleb128 0x1f
 11906 60c0 00000000 		.long	.LASF987
 11907 60c4 41       		.byte	0x41
 11908 60c5 AF       		.byte	0xaf
 11909 60c6 06490000 		.long	0x4906
 11910 60ca D9600000 		.long	0x60d9
 11911 60ce 19       		.uleb128 0x19
 11912 60cf 18500000 		.long	0x5018
 11913 60d3 19       		.uleb128 0x19
 11914 60d4 9E600000 		.long	0x609e
 11915 60d8 00       		.byte	0
 11916 60d9 1F       		.uleb128 0x1f
 11917 60da 00000000 		.long	.LASF988
 11918 60de 41       		.byte	0x41
 11919 60df DD       		.byte	0xdd
 11920 60e0 18500000 		.long	0x5018
 11921 60e4 F3600000 		.long	0x60f3
 11922 60e8 19       		.uleb128 0x19
 11923 60e9 18500000 		.long	0x5018
 11924 60ed 19       		.uleb128 0x19
 11925 60ee A9600000 		.long	0x60a9
 11926 60f2 00       		.byte	0
 11927 60f3 1F       		.uleb128 0x1f
 11928 60f4 00000000 		.long	.LASF989
 11929 60f8 41       		.byte	0x41
 11930 60f9 DA       		.byte	0xda
 11931 60fa A9600000 		.long	0x60a9
 11932 60fe 08610000 		.long	0x6108
 11933 6102 19       		.uleb128 0x19
 11934 6103 1A4D0000 		.long	0x4d1a
 11935 6107 00       		.byte	0
 11936 6108 1F       		.uleb128 0x1f
 11937 6109 00000000 		.long	.LASF990
 11938 610d 41       		.byte	0x41
 11939 610e AB       		.byte	0xab
 11940 610f 9E600000 		.long	0x609e
 11941 6113 1D610000 		.long	0x611d
 11942 6117 19       		.uleb128 0x19
 11943 6118 1A4D0000 		.long	0x4d1a
 11944 611c 00       		.byte	0
 11945 611d 73       		.uleb128 0x73
 11946 611e 08       		.byte	0x8
 11947 611f BA300000 		.long	0x30ba
 11948 6123 0C       		.uleb128 0xc
GAS LISTING /tmp/cceISX6N.s 			page 333


 11949 6124 FF480000 		.long	0x48ff
 11950 6128 8001     		.uleb128 0x80
 11951 612a 05       		.byte	0x5
 11952 612b 0D       		.byte	0xd
 11953 612c 37000000 		.long	0x37
 11954 6130 71       		.uleb128 0x71
 11955 6131 08       		.byte	0x8
 11956 6132 31050000 		.long	0x531
 11957 6136 73       		.uleb128 0x73
 11958 6137 08       		.byte	0x8
 11959 6138 89050000 		.long	0x589
 11960 613c 71       		.uleb128 0x71
 11961 613d 08       		.byte	0x8
 11962 613e 25060000 		.long	0x625
 11963 6142 73       		.uleb128 0x73
 11964 6143 08       		.byte	0x8
 11965 6144 31050000 		.long	0x531
 11966 6148 71       		.uleb128 0x71
 11967 6149 08       		.byte	0x8
 11968 614a 46320000 		.long	0x3246
 11969 614e 71       		.uleb128 0x71
 11970 614f 08       		.byte	0x8
 11971 6150 2A060000 		.long	0x62a
 11972 6154 73       		.uleb128 0x73
 11973 6155 08       		.byte	0x8
 11974 6156 BE080000 		.long	0x8be
 11975 615a 73       		.uleb128 0x73
 11976 615b 08       		.byte	0x8
 11977 615c 2A060000 		.long	0x62a
 11978 6160 71       		.uleb128 0x71
 11979 6161 08       		.byte	0x8
 11980 6162 BE080000 		.long	0x8be
 11981 6166 73       		.uleb128 0x73
 11982 6167 08       		.byte	0x8
 11983 6168 02080000 		.long	0x802
 11984 616c 71       		.uleb128 0x71
 11985 616d 08       		.byte	0x8
 11986 616e A5320000 		.long	0x32a5
 11987 6172 71       		.uleb128 0x71
 11988 6173 08       		.byte	0x8
 11989 6174 99320000 		.long	0x3299
 11990 6178 71       		.uleb128 0x71
 11991 6179 08       		.byte	0x8
 11992 617a E6320000 		.long	0x32e6
 11993 617e 73       		.uleb128 0x73
 11994 617f 08       		.byte	0x8
 11995 6180 E6320000 		.long	0x32e6
 11996 6184 71       		.uleb128 0x71
 11997 6185 08       		.byte	0x8
 11998 6186 6C330000 		.long	0x336c
 11999 618a 8001     		.uleb128 0x80
 12000 618c 0A       		.byte	0xa
 12001 618d 0C       		.byte	0xc
 12002 618e 37000000 		.long	0x37
 12003 6192 27       		.uleb128 0x27
 12004 6193 00000000 		.long	.LASF991
 12005 6197 18       		.byte	0x18
GAS LISTING /tmp/cceISX6N.s 			page 334


 12006 6198 01       		.byte	0x1
 12007 6199 0E       		.byte	0xe
 12008 619a 1B620000 		.long	0x621b
 12009 619e 28       		.uleb128 0x28
 12010 619f 00000000 		.long	.LASF992
 12011 61a3 01       		.byte	0x1
 12012 61a4 0F       		.byte	0xf
 12013 61a5 45490000 		.long	0x4945
 12014 61a9 00       		.byte	0
 12015 61aa 28       		.uleb128 0x28
 12016 61ab 00000000 		.long	.LASF993
 12017 61af 01       		.byte	0x1
 12018 61b0 10       		.byte	0x10
 12019 61b1 AE490000 		.long	0x49ae
 12020 61b5 08       		.byte	0x8
 12021 61b6 72       		.uleb128 0x72
 12022 61b7 6F705F00 		.string	"op_"
 12023 61bb 01       		.byte	0x1
 12024 61bc 11       		.byte	0x11
 12025 61bd 474A0000 		.long	0x4a47
 12026 61c1 10       		.byte	0x10
 12027 61c2 2B       		.uleb128 0x2b
 12028 61c3 00000000 		.long	.LASF994
 12029 61c7 01       		.byte	0x1
 12030 61c8 13       		.byte	0x13
 12031 61c9 01       		.byte	0x1
 12032 61ca D2610000 		.long	0x61d2
 12033 61ce E2610000 		.long	0x61e2
 12034 61d2 09       		.uleb128 0x9
 12035 61d3 1B620000 		.long	0x621b
 12036 61d7 19       		.uleb128 0x19
 12037 61d8 45490000 		.long	0x4945
 12038 61dc 19       		.uleb128 0x19
 12039 61dd AE490000 		.long	0x49ae
 12040 61e1 00       		.byte	0
 12041 61e2 2C       		.uleb128 0x2c
 12042 61e3 00000000 		.long	.LASF711
 12043 61e7 01       		.byte	0x1
 12044 61e8 14       		.byte	0x14
 12045 61e9 00000000 		.long	.LASF995
 12046 61ed 29000000 		.long	0x29
 12047 61f1 01       		.byte	0x1
 12048 61f2 FA610000 		.long	0x61fa
 12049 61f6 00620000 		.long	0x6200
 12050 61fa 09       		.uleb128 0x9
 12051 61fb 21620000 		.long	0x6221
 12052 61ff 00       		.byte	0
 12053 6200 1D       		.uleb128 0x1d
 12054 6201 00000000 		.long	.LASF996
 12055 6205 45490000 		.long	0x4945
 12056 6209 1D       		.uleb128 0x1d
 12057 620a 00000000 		.long	.LASF997
 12058 620e AE490000 		.long	0x49ae
 12059 6212 0A       		.uleb128 0xa
 12060 6213 4F7000   		.string	"Op"
 12061 6216 474A0000 		.long	0x4a47
 12062 621a 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 335


 12063 621b 71       		.uleb128 0x71
 12064 621c 08       		.byte	0x8
 12065 621d 92610000 		.long	0x6192
 12066 6221 71       		.uleb128 0x71
 12067 6222 08       		.byte	0x8
 12068 6223 27620000 		.long	0x6227
 12069 6227 0C       		.uleb128 0xc
 12070 6228 92610000 		.long	0x6192
 12071 622c 27       		.uleb128 0x27
 12072 622d 00000000 		.long	.LASF998
 12073 6231 28       		.byte	0x28
 12074 6232 01       		.byte	0x1
 12075 6233 0E       		.byte	0xe
 12076 6234 B5620000 		.long	0x62b5
 12077 6238 28       		.uleb128 0x28
 12078 6239 00000000 		.long	.LASF992
 12079 623d 01       		.byte	0x1
 12080 623e 0F       		.byte	0xf
 12081 623f 92610000 		.long	0x6192
 12082 6243 00       		.byte	0
 12083 6244 28       		.uleb128 0x28
 12084 6245 00000000 		.long	.LASF993
 12085 6249 01       		.byte	0x1
 12086 624a 10       		.byte	0x10
 12087 624b AE490000 		.long	0x49ae
 12088 624f 18       		.byte	0x18
 12089 6250 72       		.uleb128 0x72
 12090 6251 6F705F00 		.string	"op_"
 12091 6255 01       		.byte	0x1
 12092 6256 11       		.byte	0x11
 12093 6257 0C4A0000 		.long	0x4a0c
 12094 625b 20       		.byte	0x20
 12095 625c 2B       		.uleb128 0x2b
 12096 625d 00000000 		.long	.LASF994
 12097 6261 01       		.byte	0x1
 12098 6262 13       		.byte	0x13
 12099 6263 01       		.byte	0x1
 12100 6264 6C620000 		.long	0x626c
 12101 6268 7C620000 		.long	0x627c
 12102 626c 09       		.uleb128 0x9
 12103 626d B5620000 		.long	0x62b5
 12104 6271 19       		.uleb128 0x19
 12105 6272 92610000 		.long	0x6192
 12106 6276 19       		.uleb128 0x19
 12107 6277 AE490000 		.long	0x49ae
 12108 627b 00       		.byte	0
 12109 627c 2C       		.uleb128 0x2c
 12110 627d 00000000 		.long	.LASF711
 12111 6281 01       		.byte	0x1
 12112 6282 14       		.byte	0x14
 12113 6283 00000000 		.long	.LASF999
 12114 6287 29000000 		.long	0x29
 12115 628b 01       		.byte	0x1
 12116 628c 94620000 		.long	0x6294
 12117 6290 9A620000 		.long	0x629a
 12118 6294 09       		.uleb128 0x9
 12119 6295 BB620000 		.long	0x62bb
GAS LISTING /tmp/cceISX6N.s 			page 336


 12120 6299 00       		.byte	0
 12121 629a 1D       		.uleb128 0x1d
 12122 629b 00000000 		.long	.LASF996
 12123 629f 92610000 		.long	0x6192
 12124 62a3 1D       		.uleb128 0x1d
 12125 62a4 00000000 		.long	.LASF997
 12126 62a8 AE490000 		.long	0x49ae
 12127 62ac 0A       		.uleb128 0xa
 12128 62ad 4F7000   		.string	"Op"
 12129 62b0 0C4A0000 		.long	0x4a0c
 12130 62b4 00       		.byte	0
 12131 62b5 71       		.uleb128 0x71
 12132 62b6 08       		.byte	0x8
 12133 62b7 2C620000 		.long	0x622c
 12134 62bb 71       		.uleb128 0x71
 12135 62bc 08       		.byte	0x8
 12136 62bd C1620000 		.long	0x62c1
 12137 62c1 0C       		.uleb128 0xc
 12138 62c2 2C620000 		.long	0x622c
 12139 62c6 27       		.uleb128 0x27
 12140 62c7 00000000 		.long	.LASF1000
 12141 62cb 38       		.byte	0x38
 12142 62cc 01       		.byte	0x1
 12143 62cd 0E       		.byte	0xe
 12144 62ce 4F630000 		.long	0x634f
 12145 62d2 28       		.uleb128 0x28
 12146 62d3 00000000 		.long	.LASF992
 12147 62d7 01       		.byte	0x1
 12148 62d8 0F       		.byte	0xf
 12149 62d9 2C620000 		.long	0x622c
 12150 62dd 00       		.byte	0
 12151 62de 28       		.uleb128 0x28
 12152 62df 00000000 		.long	.LASF993
 12153 62e3 01       		.byte	0x1
 12154 62e4 10       		.byte	0x10
 12155 62e5 AE490000 		.long	0x49ae
 12156 62e9 28       		.byte	0x28
 12157 62ea 72       		.uleb128 0x72
 12158 62eb 6F705F00 		.string	"op_"
 12159 62ef 01       		.byte	0x1
 12160 62f0 11       		.byte	0x11
 12161 62f1 474A0000 		.long	0x4a47
 12162 62f5 30       		.byte	0x30
 12163 62f6 2B       		.uleb128 0x2b
 12164 62f7 00000000 		.long	.LASF994
 12165 62fb 01       		.byte	0x1
 12166 62fc 13       		.byte	0x13
 12167 62fd 01       		.byte	0x1
 12168 62fe 06630000 		.long	0x6306
 12169 6302 16630000 		.long	0x6316
 12170 6306 09       		.uleb128 0x9
 12171 6307 4F630000 		.long	0x634f
 12172 630b 19       		.uleb128 0x19
 12173 630c 2C620000 		.long	0x622c
 12174 6310 19       		.uleb128 0x19
 12175 6311 AE490000 		.long	0x49ae
 12176 6315 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 337


 12177 6316 2C       		.uleb128 0x2c
 12178 6317 00000000 		.long	.LASF711
 12179 631b 01       		.byte	0x1
 12180 631c 14       		.byte	0x14
 12181 631d 00000000 		.long	.LASF1001
 12182 6321 29000000 		.long	0x29
 12183 6325 01       		.byte	0x1
 12184 6326 2E630000 		.long	0x632e
 12185 632a 34630000 		.long	0x6334
 12186 632e 09       		.uleb128 0x9
 12187 632f 55630000 		.long	0x6355
 12188 6333 00       		.byte	0
 12189 6334 1D       		.uleb128 0x1d
 12190 6335 00000000 		.long	.LASF996
 12191 6339 2C620000 		.long	0x622c
 12192 633d 1D       		.uleb128 0x1d
 12193 633e 00000000 		.long	.LASF997
 12194 6342 AE490000 		.long	0x49ae
 12195 6346 0A       		.uleb128 0xa
 12196 6347 4F7000   		.string	"Op"
 12197 634a 474A0000 		.long	0x4a47
 12198 634e 00       		.byte	0
 12199 634f 71       		.uleb128 0x71
 12200 6350 08       		.byte	0x8
 12201 6351 C6620000 		.long	0x62c6
 12202 6355 71       		.uleb128 0x71
 12203 6356 08       		.byte	0x8
 12204 6357 5B630000 		.long	0x635b
 12205 635b 0C       		.uleb128 0xc
 12206 635c C6620000 		.long	0x62c6
 12207 6360 27       		.uleb128 0x27
 12208 6361 00000000 		.long	.LASF1002
 12209 6365 48       		.byte	0x48
 12210 6366 01       		.byte	0x1
 12211 6367 0E       		.byte	0xe
 12212 6368 E9630000 		.long	0x63e9
 12213 636c 28       		.uleb128 0x28
 12214 636d 00000000 		.long	.LASF992
 12215 6371 01       		.byte	0x1
 12216 6372 0F       		.byte	0xf
 12217 6373 C6620000 		.long	0x62c6
 12218 6377 00       		.byte	0
 12219 6378 28       		.uleb128 0x28
 12220 6379 00000000 		.long	.LASF993
 12221 637d 01       		.byte	0x1
 12222 637e 10       		.byte	0x10
 12223 637f AE490000 		.long	0x49ae
 12224 6383 38       		.byte	0x38
 12225 6384 72       		.uleb128 0x72
 12226 6385 6F705F00 		.string	"op_"
 12227 6389 01       		.byte	0x1
 12228 638a 11       		.byte	0x11
 12229 638b 0C4A0000 		.long	0x4a0c
 12230 638f 40       		.byte	0x40
 12231 6390 2B       		.uleb128 0x2b
 12232 6391 00000000 		.long	.LASF994
 12233 6395 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 338


 12234 6396 13       		.byte	0x13
 12235 6397 01       		.byte	0x1
 12236 6398 A0630000 		.long	0x63a0
 12237 639c B0630000 		.long	0x63b0
 12238 63a0 09       		.uleb128 0x9
 12239 63a1 E9630000 		.long	0x63e9
 12240 63a5 19       		.uleb128 0x19
 12241 63a6 C6620000 		.long	0x62c6
 12242 63aa 19       		.uleb128 0x19
 12243 63ab AE490000 		.long	0x49ae
 12244 63af 00       		.byte	0
 12245 63b0 2C       		.uleb128 0x2c
 12246 63b1 00000000 		.long	.LASF711
 12247 63b5 01       		.byte	0x1
 12248 63b6 14       		.byte	0x14
 12249 63b7 00000000 		.long	.LASF1003
 12250 63bb 29000000 		.long	0x29
 12251 63bf 01       		.byte	0x1
 12252 63c0 C8630000 		.long	0x63c8
 12253 63c4 CE630000 		.long	0x63ce
 12254 63c8 09       		.uleb128 0x9
 12255 63c9 EF630000 		.long	0x63ef
 12256 63cd 00       		.byte	0
 12257 63ce 1D       		.uleb128 0x1d
 12258 63cf 00000000 		.long	.LASF996
 12259 63d3 C6620000 		.long	0x62c6
 12260 63d7 1D       		.uleb128 0x1d
 12261 63d8 00000000 		.long	.LASF997
 12262 63dc AE490000 		.long	0x49ae
 12263 63e0 0A       		.uleb128 0xa
 12264 63e1 4F7000   		.string	"Op"
 12265 63e4 0C4A0000 		.long	0x4a0c
 12266 63e8 00       		.byte	0
 12267 63e9 71       		.uleb128 0x71
 12268 63ea 08       		.byte	0x8
 12269 63eb 60630000 		.long	0x6360
 12270 63ef 71       		.uleb128 0x71
 12271 63f0 08       		.byte	0x8
 12272 63f1 F5630000 		.long	0x63f5
 12273 63f5 0C       		.uleb128 0xc
 12274 63f6 60630000 		.long	0x6360
 12275 63fa 27       		.uleb128 0x27
 12276 63fb 00000000 		.long	.LASF1004
 12277 63ff 50       		.byte	0x50
 12278 6400 01       		.byte	0x1
 12279 6401 18       		.byte	0x18
 12280 6402 69640000 		.long	0x6469
 12281 6406 28       		.uleb128 0x28
 12282 6407 00000000 		.long	.LASF1005
 12283 640b 01       		.byte	0x1
 12284 640c 19       		.byte	0x19
 12285 640d 60630000 		.long	0x6360
 12286 6411 00       		.byte	0
 12287 6412 72       		.uleb128 0x72
 12288 6413 6F705F00 		.string	"op_"
 12289 6417 01       		.byte	0x1
 12290 6418 1A       		.byte	0x1a
GAS LISTING /tmp/cceISX6N.s 			page 339


 12291 6419 824A0000 		.long	0x4a82
 12292 641d 48       		.byte	0x48
 12293 641e 2B       		.uleb128 0x2b
 12294 641f 00000000 		.long	.LASF1006
 12295 6423 01       		.byte	0x1
 12296 6424 1C       		.byte	0x1c
 12297 6425 01       		.byte	0x1
 12298 6426 2E640000 		.long	0x642e
 12299 642a 39640000 		.long	0x6439
 12300 642e 09       		.uleb128 0x9
 12301 642f 69640000 		.long	0x6469
 12302 6433 19       		.uleb128 0x19
 12303 6434 60630000 		.long	0x6360
 12304 6438 00       		.byte	0
 12305 6439 2C       		.uleb128 0x2c
 12306 643a 00000000 		.long	.LASF711
 12307 643e 01       		.byte	0x1
 12308 643f 1D       		.byte	0x1d
 12309 6440 00000000 		.long	.LASF1007
 12310 6444 29000000 		.long	0x29
 12311 6448 01       		.byte	0x1
 12312 6449 51640000 		.long	0x6451
 12313 644d 57640000 		.long	0x6457
 12314 6451 09       		.uleb128 0x9
 12315 6452 6F640000 		.long	0x646f
 12316 6456 00       		.byte	0
 12317 6457 0A       		.uleb128 0xa
 12318 6458 45787000 		.string	"Exp"
 12319 645c 60630000 		.long	0x6360
 12320 6460 0A       		.uleb128 0xa
 12321 6461 4F7000   		.string	"Op"
 12322 6464 824A0000 		.long	0x4a82
 12323 6468 00       		.byte	0
 12324 6469 71       		.uleb128 0x71
 12325 646a 08       		.byte	0x8
 12326 646b FA630000 		.long	0x63fa
 12327 646f 71       		.uleb128 0x71
 12328 6470 08       		.byte	0x8
 12329 6471 75640000 		.long	0x6475
 12330 6475 0C       		.uleb128 0xc
 12331 6476 FA630000 		.long	0x63fa
 12332 647a 8901     		.uleb128 0x89
 12333 647c 10       		.byte	0x10
 12334 647d 12       		.byte	0x12
 12335 647e 00       		.byte	0
 12336 647f 9C640000 		.long	0x649c
 12337 6483 28       		.uleb128 0x28
 12338 6484 00000000 		.long	.LASF1008
 12339 6488 0A       		.byte	0xa
 12340 6489 27       		.byte	0x27
 12341 648a B0640000 		.long	0x64b0
 12342 648e 00       		.byte	0
 12343 648f 28       		.uleb128 0x28
 12344 6490 00000000 		.long	.LASF1009
 12345 6494 0A       		.byte	0xa
 12346 6495 27       		.byte	0x27
 12347 6496 30000000 		.long	0x30
GAS LISTING /tmp/cceISX6N.s 			page 340


 12348 649a 08       		.byte	0x8
 12349 649b 00       		.byte	0
 12350 649c 8A01     		.uleb128 0x8a
 12351 649e 29000000 		.long	0x29
 12352 64a2 AA640000 		.long	0x64aa
 12353 64a6 B0640000 		.long	0x64b0
 12354 64aa 09       		.uleb128 0x9
 12355 64ab 6F640000 		.long	0x646f
 12356 64af 00       		.byte	0
 12357 64b0 71       		.uleb128 0x71
 12358 64b1 08       		.byte	0x8
 12359 64b2 9C640000 		.long	0x649c
 12360 64b6 71       		.uleb128 0x71
 12361 64b7 08       		.byte	0x8
 12362 64b8 C8330000 		.long	0x33c8
 12363 64bc 71       		.uleb128 0x71
 12364 64bd 08       		.byte	0x8
 12365 64be EB360000 		.long	0x36eb
 12366 64c2 73       		.uleb128 0x73
 12367 64c3 08       		.byte	0x8
 12368 64c4 EB360000 		.long	0x36eb
 12369 64c8 71       		.uleb128 0x71
 12370 64c9 08       		.byte	0x8
 12371 64ca 3B370000 		.long	0x373b
 12372 64ce 73       		.uleb128 0x73
 12373 64cf 08       		.byte	0x8
 12374 64d0 D4640000 		.long	0x64d4
 12375 64d4 0C       		.uleb128 0xc
 12376 64d5 69640000 		.long	0x6469
 12377 64d9 73       		.uleb128 0x73
 12378 64da 08       		.byte	0x8
 12379 64db 69640000 		.long	0x6469
 12380 64df 73       		.uleb128 0x73
 12381 64e0 08       		.byte	0x8
 12382 64e1 3B370000 		.long	0x373b
 12383 64e5 73       		.uleb128 0x73
 12384 64e6 08       		.byte	0x8
 12385 64e7 0F380000 		.long	0x380f
 12386 64eb 73       		.uleb128 0x73
 12387 64ec 08       		.byte	0x8
 12388 64ed 14380000 		.long	0x3814
 12389 64f1 73       		.uleb128 0x73
 12390 64f2 08       		.byte	0x8
 12391 64f3 AB390000 		.long	0x39ab
 12392 64f7 73       		.uleb128 0x73
 12393 64f8 08       		.byte	0x8
 12394 64f9 2D380000 		.long	0x382d
 12395 64fd 73       		.uleb128 0x73
 12396 64fe 08       		.byte	0x8
 12397 64ff 9C380000 		.long	0x389c
 12398 6503 71       		.uleb128 0x71
 12399 6504 08       		.byte	0x8
 12400 6505 14380000 		.long	0x3814
 12401 6509 7F       		.uleb128 0x7f
 12402 650a 08       		.byte	0x8
 12403 650b 14380000 		.long	0x3814
 12404 650f 71       		.uleb128 0x71
GAS LISTING /tmp/cceISX6N.s 			page 341


 12405 6510 08       		.byte	0x8
 12406 6511 B0390000 		.long	0x39b0
 12407 6515 73       		.uleb128 0x73
 12408 6516 08       		.byte	0x8
 12409 6517 C43A0000 		.long	0x3ac4
 12410 651b 7F       		.uleb128 0x7f
 12411 651c 08       		.byte	0x8
 12412 651d B0390000 		.long	0x39b0
 12413 6521 73       		.uleb128 0x73
 12414 6522 08       		.byte	0x8
 12415 6523 B0390000 		.long	0x39b0
 12416 6527 7F       		.uleb128 0x7f
 12417 6528 08       		.byte	0x8
 12418 6529 C8330000 		.long	0x33c8
 12419 652d 71       		.uleb128 0x71
 12420 652e 08       		.byte	0x8
 12421 652f D2340000 		.long	0x34d2
 12422 6533 73       		.uleb128 0x73
 12423 6534 08       		.byte	0x8
 12424 6535 CE3A0000 		.long	0x3ace
 12425 6539 7F       		.uleb128 0x7f
 12426 653a 08       		.byte	0x8
 12427 653b D2340000 		.long	0x34d2
 12428 653f 7F       		.uleb128 0x7f
 12429 6540 08       		.byte	0x8
 12430 6541 69640000 		.long	0x6469
 12431 6545 71       		.uleb128 0x71
 12432 6546 08       		.byte	0x8
 12433 6547 FD3B0000 		.long	0x3bfd
 12434 654b 71       		.uleb128 0x71
 12435 654c 08       		.byte	0x8
 12436 654d 8E440000 		.long	0x448e
 12437 6551 73       		.uleb128 0x73
 12438 6552 08       		.byte	0x8
 12439 6553 93600000 		.long	0x6093
 12440 6557 71       		.uleb128 0x71
 12441 6558 08       		.byte	0x8
 12442 6559 80480000 		.long	0x4880
 12443 655d 73       		.uleb128 0x73
 12444 655e 08       		.byte	0x8
 12445 655f 8E440000 		.long	0x448e
 12446 6563 73       		.uleb128 0x73
 12447 6564 08       		.byte	0x8
 12448 6565 EB450000 		.long	0x45eb
 12449 6569 71       		.uleb128 0x71
 12450 656a 08       		.byte	0x8
 12451 656b 6A420000 		.long	0x426a
 12452 656f 73       		.uleb128 0x73
 12453 6570 08       		.byte	0x8
 12454 6571 75650000 		.long	0x6575
 12455 6575 0C       		.uleb128 0xc
 12456 6576 38490000 		.long	0x4938
 12457 657a 71       		.uleb128 0x71
 12458 657b 08       		.byte	0x8
 12459 657c 85480000 		.long	0x4885
 12460 6580 73       		.uleb128 0x73
 12461 6581 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 342


 12462 6582 6A420000 		.long	0x426a
 12463 6586 73       		.uleb128 0x73
 12464 6587 08       		.byte	0x8
 12465 6588 C7430000 		.long	0x43c7
 12466 658c 8B01     		.uleb128 0x8b
 12467 658e FF150000 		.long	0x15ff
 12468 6592 03       		.byte	0x3
 12469 6593 9B650000 		.long	0x659b
 12470 6597 A6650000 		.long	0x65a6
 12471 659b 8C01     		.uleb128 0x8c
 12472 659d 00000000 		.long	.LASF1010
 12473 65a1 A6650000 		.long	0x65a6
 12474 65a5 00       		.byte	0
 12475 65a6 0C       		.uleb128 0xc
 12476 65a7 4B600000 		.long	0x604b
 12477 65ab 71       		.uleb128 0x71
 12478 65ac 08       		.byte	0x8
 12479 65ad 9A3D0000 		.long	0x3d9a
 12480 65b1 8B01     		.uleb128 0x8b
 12481 65b3 FF3C0000 		.long	0x3cff
 12482 65b7 03       		.byte	0x3
 12483 65b8 C0650000 		.long	0x65c0
 12484 65bc CB650000 		.long	0x65cb
 12485 65c0 8C01     		.uleb128 0x8c
 12486 65c2 00000000 		.long	.LASF1010
 12487 65c6 CB650000 		.long	0x65cb
 12488 65ca 00       		.byte	0
 12489 65cb 0C       		.uleb128 0xc
 12490 65cc AB650000 		.long	0x65ab
 12491 65d0 8B01     		.uleb128 0x8b
 12492 65d2 40160000 		.long	0x1640
 12493 65d6 03       		.byte	0x3
 12494 65d7 DF650000 		.long	0x65df
 12495 65db EA650000 		.long	0x65ea
 12496 65df 8C01     		.uleb128 0x8c
 12497 65e1 00000000 		.long	.LASF1010
 12498 65e5 A6650000 		.long	0x65a6
 12499 65e9 00       		.byte	0
 12500 65ea 8B01     		.uleb128 0x8b
 12501 65ec 301C0000 		.long	0x1c30
 12502 65f0 03       		.byte	0x3
 12503 65f1 F9650000 		.long	0x65f9
 12504 65f5 04660000 		.long	0x6604
 12505 65f9 8C01     		.uleb128 0x8c
 12506 65fb 00000000 		.long	.LASF1010
 12507 65ff A6650000 		.long	0x65a6
 12508 6603 00       		.byte	0
 12509 6604 8B01     		.uleb128 0x8b
 12510 6606 D5260000 		.long	0x26d5
 12511 660a 03       		.byte	0x3
 12512 660b 13660000 		.long	0x6613
 12513 660f 1E660000 		.long	0x661e
 12514 6613 8C01     		.uleb128 0x8c
 12515 6615 00000000 		.long	.LASF1010
 12516 6619 A6650000 		.long	0x65a6
 12517 661d 00       		.byte	0
 12518 661e 8D01     		.uleb128 0x8d
GAS LISTING /tmp/cceISX6N.s 			page 343


 12519 6620 00000000 		.long	.LASF1011
 12520 6624 42       		.byte	0x42
 12521 6625 F7       		.byte	0xf7
 12522 6626 06490000 		.long	0x4906
 12523 662a 03       		.byte	0x3
 12524 662b 3F660000 		.long	0x663f
 12525 662f 8E01     		.uleb128 0x8e
 12526 6631 8F01     		.uleb128 0x8f
 12527 6633 00000000 		.long	.LASF1014
 12528 6637 42       		.byte	0x42
 12529 6638 F9       		.byte	0xf9
 12530 6639 3F660000 		.long	0x663f
 12531 663d 00       		.byte	0
 12532 663e 00       		.byte	0
 12533 663f 0C       		.uleb128 0xc
 12534 6640 724C0000 		.long	0x4c72
 12535 6644 71       		.uleb128 0x71
 12536 6645 08       		.byte	0x8
 12537 6646 4A660000 		.long	0x664a
 12538 664a 68       		.uleb128 0x68
 12539 664b 38590000 		.long	0x5938
 12540 664f 9001     		.uleb128 0x90
 12541 6651 8A480000 		.long	0x488a
 12542 6655 03       		.byte	0x3
 12543 6656 73660000 		.long	0x6673
 12544 665a 9101     		.uleb128 0x91
 12545 665c 00000000 		.long	.LASF1012
 12546 6660 2E       		.byte	0x2e
 12547 6661 30       		.byte	0x30
 12548 6662 44660000 		.long	0x6644
 12549 6666 9101     		.uleb128 0x91
 12550 6668 00000000 		.long	.LASF1013
 12551 666c 2E       		.byte	0x2e
 12552 666d 30       		.byte	0x30
 12553 666e 06490000 		.long	0x4906
 12554 6672 00       		.byte	0
 12555 6673 71       		.uleb128 0x71
 12556 6674 08       		.byte	0x8
 12557 6675 38590000 		.long	0x5938
 12558 6679 9001     		.uleb128 0x90
 12559 667b A4480000 		.long	0x48a4
 12560 667f 03       		.byte	0x3
 12561 6680 AC660000 		.long	0x66ac
 12562 6684 9101     		.uleb128 0x91
 12563 6686 00000000 		.long	.LASF1012
 12564 668a 2E       		.byte	0x2e
 12565 668b 41       		.byte	0x41
 12566 668c 73660000 		.long	0x6673
 12567 6690 9101     		.uleb128 0x91
 12568 6692 00000000 		.long	.LASF1013
 12569 6696 2E       		.byte	0x2e
 12570 6697 41       		.byte	0x41
 12571 6698 06490000 		.long	0x4906
 12572 669c 8E01     		.uleb128 0x8e
 12573 669e 8F01     		.uleb128 0x8f
 12574 66a0 00000000 		.long	.LASF1015
 12575 66a4 2E       		.byte	0x2e
GAS LISTING /tmp/cceISX6N.s 			page 344


 12576 66a5 43       		.byte	0x43
 12577 66a6 38590000 		.long	0x5938
 12578 66aa 00       		.byte	0
 12579 66ab 00       		.byte	0
 12580 66ac 9001     		.uleb128 0x90
 12581 66ae 7E140000 		.long	0x147e
 12582 66b2 03       		.byte	0x3
 12583 66b3 C7660000 		.long	0x66c7
 12584 66b7 8E01     		.uleb128 0x8e
 12585 66b9 9201     		.uleb128 0x92
 12586 66bb 5F5F7000 		.string	"__p"
 12587 66bf 08       		.byte	0x8
 12588 66c0 BA       		.byte	0xba
 12589 66c1 724C0000 		.long	0x4c72
 12590 66c5 00       		.byte	0
 12591 66c6 00       		.byte	0
 12592 66c7 9001     		.uleb128 0x90
 12593 66c9 BE480000 		.long	0x48be
 12594 66cd 03       		.byte	0x3
 12595 66ce EB660000 		.long	0x66eb
 12596 66d2 9101     		.uleb128 0x91
 12597 66d4 00000000 		.long	.LASF1012
 12598 66d8 2E       		.byte	0x2e
 12599 66d9 4E       		.byte	0x4e
 12600 66da 73660000 		.long	0x6673
 12601 66de 9101     		.uleb128 0x91
 12602 66e0 00000000 		.long	.LASF1013
 12603 66e4 2E       		.byte	0x2e
 12604 66e5 4E       		.byte	0x4e
 12605 66e6 06490000 		.long	0x4906
 12606 66ea 00       		.byte	0
 12607 66eb 8B01     		.uleb128 0x8b
 12608 66ed 184A0000 		.long	0x4a18
 12609 66f1 03       		.byte	0x3
 12610 66f2 FA660000 		.long	0x66fa
 12611 66f6 19670000 		.long	0x6719
 12612 66fa 8C01     		.uleb128 0x8c
 12613 66fc 00000000 		.long	.LASF1010
 12614 6700 19670000 		.long	0x6719
 12615 6704 9301     		.uleb128 0x93
 12616 6706 6100     		.string	"a"
 12617 6708 01       		.byte	0x1
 12618 6709 2F       		.byte	0x2f
 12619 670a 29000000 		.long	0x29
 12620 670e 9301     		.uleb128 0x93
 12621 6710 6200     		.string	"b"
 12622 6712 01       		.byte	0x1
 12623 6713 2F       		.byte	0x2f
 12624 6714 29000000 		.long	0x29
 12625 6718 00       		.byte	0
 12626 6719 0C       		.uleb128 0xc
 12627 671a 3C4A0000 		.long	0x4a3c
 12628 671e 8B01     		.uleb128 0x8b
 12629 6720 534A0000 		.long	0x4a53
 12630 6724 03       		.byte	0x3
 12631 6725 2D670000 		.long	0x672d
 12632 6729 4C670000 		.long	0x674c
GAS LISTING /tmp/cceISX6N.s 			page 345


 12633 672d 8C01     		.uleb128 0x8c
 12634 672f 00000000 		.long	.LASF1010
 12635 6733 4C670000 		.long	0x674c
 12636 6737 9301     		.uleb128 0x93
 12637 6739 6100     		.string	"a"
 12638 673b 01       		.byte	0x1
 12639 673c 3B       		.byte	0x3b
 12640 673d 29000000 		.long	0x29
 12641 6741 9301     		.uleb128 0x93
 12642 6743 6200     		.string	"b"
 12643 6745 01       		.byte	0x1
 12644 6746 3B       		.byte	0x3b
 12645 6747 29000000 		.long	0x29
 12646 674b 00       		.byte	0
 12647 674c 0C       		.uleb128 0xc
 12648 674d 774A0000 		.long	0x4a77
 12649 6751 8B01     		.uleb128 0x8b
 12650 6753 8E4A0000 		.long	0x4a8e
 12651 6757 03       		.byte	0x3
 12652 6758 60670000 		.long	0x6760
 12653 675c 75670000 		.long	0x6775
 12654 6760 8C01     		.uleb128 0x8c
 12655 6762 00000000 		.long	.LASF1010
 12656 6766 75670000 		.long	0x6775
 12657 676a 9301     		.uleb128 0x93
 12658 676c 7800     		.string	"x"
 12659 676e 01       		.byte	0x1
 12660 676f 47       		.byte	0x47
 12661 6770 29000000 		.long	0x29
 12662 6774 00       		.byte	0
 12663 6775 0C       		.uleb128 0xc
 12664 6776 AD4A0000 		.long	0x4aad
 12665 677a 73       		.uleb128 0x73
 12666 677b 08       		.byte	0x8
 12667 677c 104E0000 		.long	0x4e10
 12668 6780 8B01     		.uleb128 0x8b
 12669 6782 F5040000 		.long	0x4f5
 12670 6786 03       		.byte	0x3
 12671 6787 98670000 		.long	0x6798
 12672 678b B0670000 		.long	0x67b0
 12673 678f 1D       		.uleb128 0x1d
 12674 6790 00000000 		.long	.LASF44
 12675 6794 30000000 		.long	0x30
 12676 6798 8C01     		.uleb128 0x8c
 12677 679a 00000000 		.long	.LASF1010
 12678 679e B0670000 		.long	0x67b0
 12679 67a2 9401     		.uleb128 0x94
 12680 67a4 00000000 		.long	.LASF1016
 12681 67a8 07       		.byte	0x7
 12682 67a9 0601     		.value	0x106
 12683 67ab B5670000 		.long	0x67b5
 12684 67af 00       		.byte	0
 12685 67b0 0C       		.uleb128 0xc
 12686 67b1 264E0000 		.long	0x4e26
 12687 67b5 0C       		.uleb128 0xc
 12688 67b6 7A670000 		.long	0x677a
 12689 67ba 9001     		.uleb128 0x90
GAS LISTING /tmp/cceISX6N.s 			page 346


 12690 67bc 9F3D0000 		.long	0x3d9f
 12691 67c0 03       		.byte	0x3
 12692 67c1 DE670000 		.long	0x67de
 12693 67c5 9301     		.uleb128 0x93
 12694 67c7 5F5F6100 		.string	"__a"
 12695 67cb 03       		.byte	0x3
 12696 67cc 9D       		.byte	0x9d
 12697 67cd 292E0000 		.long	0x2e29
 12698 67d1 9301     		.uleb128 0x93
 12699 67d3 5F5F6200 		.string	"__b"
 12700 67d7 03       		.byte	0x3
 12701 67d8 9D       		.byte	0x9d
 12702 67d9 292E0000 		.long	0x2e29
 12703 67dd 00       		.byte	0
 12704 67de 71       		.uleb128 0x71
 12705 67df 08       		.byte	0x8
 12706 67e0 F63C0000 		.long	0x3cf6
 12707 67e4 8B01     		.uleb128 0x8b
 12708 67e6 1D3D0000 		.long	0x3d1d
 12709 67ea 03       		.byte	0x3
 12710 67eb F3670000 		.long	0x67f3
 12711 67ef 0A680000 		.long	0x680a
 12712 67f3 8C01     		.uleb128 0x8c
 12713 67f5 00000000 		.long	.LASF1010
 12714 67f9 0A680000 		.long	0x680a
 12715 67fd 9101     		.uleb128 0x91
 12716 67ff 00000000 		.long	.LASF952
 12717 6803 04       		.byte	0x4
 12718 6804 97       		.byte	0x97
 12719 6805 DC2E0000 		.long	0x2edc
 12720 6809 00       		.byte	0
 12721 680a 0C       		.uleb128 0xc
 12722 680b DE670000 		.long	0x67de
 12723 680f 9001     		.uleb128 0x90
 12724 6811 BD0F0000 		.long	0xfbd
 12725 6815 03       		.byte	0x3
 12726 6816 28680000 		.long	0x6828
 12727 681a 9501     		.uleb128 0x95
 12728 681c 5F5F7300 		.string	"__s"
 12729 6820 17       		.byte	0x17
 12730 6821 0201     		.value	0x102
 12731 6823 BC570000 		.long	0x57bc
 12732 6827 00       		.byte	0
 12733 6828 9001     		.uleb128 0x90
 12734 682a B93D0000 		.long	0x3db9
 12735 682e 03       		.byte	0x3
 12736 682f 57680000 		.long	0x6857
 12737 6833 1D       		.uleb128 0x1d
 12738 6834 00000000 		.long	.LASF393
 12739 6838 1F0F0000 		.long	0xf1f
 12740 683c 9401     		.uleb128 0x94
 12741 683e 00000000 		.long	.LASF1017
 12742 6842 02       		.byte	0x2
 12743 6843 1202     		.value	0x212
 12744 6845 57680000 		.long	0x6857
 12745 6849 9501     		.uleb128 0x95
 12746 684b 5F5F7300 		.string	"__s"
GAS LISTING /tmp/cceISX6N.s 			page 347


 12747 684f 02       		.byte	0x2
 12748 6850 1202     		.value	0x212
 12749 6852 1A4D0000 		.long	0x4d1a
 12750 6856 00       		.byte	0
 12751 6857 0C       		.uleb128 0xc
 12752 6858 1D610000 		.long	0x611d
 12753 685c 71       		.uleb128 0x71
 12754 685d 08       		.byte	0x8
 12755 685e 4B360000 		.long	0x364b
 12756 6862 9601     		.uleb128 0x96
 12757 6864 57360000 		.long	0x3657
 12758 6868 06       		.byte	0x6
 12759 6869 4E       		.byte	0x4e
 12760 686a 03       		.byte	0x3
 12761 686b 73680000 		.long	0x6873
 12762 686f 7E680000 		.long	0x687e
 12763 6873 8C01     		.uleb128 0x8c
 12764 6875 00000000 		.long	.LASF1010
 12765 6879 7E680000 		.long	0x687e
 12766 687d 00       		.byte	0
 12767 687e 0C       		.uleb128 0xc
 12768 687f 5C680000 		.long	0x685c
 12769 6883 71       		.uleb128 0x71
 12770 6884 08       		.byte	0x8
 12771 6885 7E360000 		.long	0x367e
 12772 6889 9601     		.uleb128 0x96
 12773 688b 90360000 		.long	0x3690
 12774 688f 06       		.byte	0x6
 12775 6890 56       		.byte	0x56
 12776 6891 03       		.byte	0x3
 12777 6892 9A680000 		.long	0x689a
 12778 6896 A5680000 		.long	0x68a5
 12779 689a 8C01     		.uleb128 0x8c
 12780 689c 00000000 		.long	.LASF1010
 12781 68a0 A5680000 		.long	0x68a5
 12782 68a4 00       		.byte	0
 12783 68a5 0C       		.uleb128 0xc
 12784 68a6 83680000 		.long	0x6883
 12785 68aa 9001     		.uleb128 0x90
 12786 68ac 9C370000 		.long	0x379c
 12787 68b0 03       		.byte	0x3
 12788 68b1 C2680000 		.long	0x68c2
 12789 68b5 9301     		.uleb128 0x93
 12790 68b7 5F5F6200 		.string	"__b"
 12791 68bb 0C       		.byte	0xc
 12792 68bc A7       		.byte	0xa7
 12793 68bd C2680000 		.long	0x68c2
 12794 68c1 00       		.byte	0
 12795 68c2 0C       		.uleb128 0xc
 12796 68c3 DF640000 		.long	0x64df
 12797 68c7 73       		.uleb128 0x73
 12798 68c8 08       		.byte	0x8
 12799 68c9 8D340000 		.long	0x348d
 12800 68cd 9001     		.uleb128 0x90
 12801 68cf DD3D0000 		.long	0x3ddd
 12802 68d3 03       		.byte	0x3
 12803 68d4 EE680000 		.long	0x68ee
GAS LISTING /tmp/cceISX6N.s 			page 348


 12804 68d8 0A       		.uleb128 0xa
 12805 68d9 5F547000 		.string	"_Tp"
 12806 68dd 69640000 		.long	0x6469
 12807 68e1 9301     		.uleb128 0x93
 12808 68e3 5F5F7400 		.string	"__t"
 12809 68e7 26       		.byte	0x26
 12810 68e8 4C       		.byte	0x4c
 12811 68e9 EE680000 		.long	0x68ee
 12812 68ed 00       		.byte	0
 12813 68ee 0C       		.uleb128 0xc
 12814 68ef C7680000 		.long	0x68c7
 12815 68f3 8B01     		.uleb128 0x8b
 12816 68f5 58030000 		.long	0x358
 12817 68f9 03       		.byte	0x3
 12818 68fa 02690000 		.long	0x6902
 12819 68fe 0D690000 		.long	0x690d
 12820 6902 8C01     		.uleb128 0x8c
 12821 6904 00000000 		.long	.LASF1010
 12822 6908 0D690000 		.long	0x690d
 12823 690c 00       		.byte	0
 12824 690d 0C       		.uleb128 0xc
 12825 690e 384E0000 		.long	0x4e38
 12826 6912 8B01     		.uleb128 0x8b
 12827 6914 8E050000 		.long	0x58e
 12828 6918 03       		.byte	0x3
 12829 6919 21690000 		.long	0x6921
 12830 691d 2C690000 		.long	0x692c
 12831 6921 8C01     		.uleb128 0x8c
 12832 6923 00000000 		.long	.LASF1010
 12833 6927 2C690000 		.long	0x692c
 12834 692b 00       		.byte	0
 12835 692c 0C       		.uleb128 0xc
 12836 692d 3C610000 		.long	0x613c
 12837 6931 9001     		.uleb128 0x90
 12838 6933 26090000 		.long	0x926
 12839 6937 03       		.byte	0x3
 12840 6938 7D690000 		.long	0x697d
 12841 693c 1D       		.uleb128 0x1d
 12842 693d 00000000 		.long	.LASF83
 12843 6941 30000000 		.long	0x30
 12844 6945 1D       		.uleb128 0x1d
 12845 6946 00000000 		.long	.LASF84
 12846 694a 7B0A0000 		.long	0xa7b
 12847 694e 1D       		.uleb128 0x1d
 12848 694f 00000000 		.long	.LASF44
 12849 6953 30000000 		.long	0x30
 12850 6957 1D       		.uleb128 0x1d
 12851 6958 00000000 		.long	.LASF76
 12852 695c 7B0A0000 		.long	0xa7b
 12853 6960 9401     		.uleb128 0x94
 12854 6962 00000000 		.long	.LASF1018
 12855 6966 07       		.byte	0x7
 12856 6967 8801     		.value	0x188
 12857 6969 7D690000 		.long	0x697d
 12858 696d 9401     		.uleb128 0x94
 12859 696f 00000000 		.long	.LASF1019
 12860 6973 07       		.byte	0x7
GAS LISTING /tmp/cceISX6N.s 			page 349


 12861 6974 8901     		.value	0x189
 12862 6976 82690000 		.long	0x6982
 12863 697a 9701     		.uleb128 0x97
 12864 697c 00       		.byte	0
 12865 697d 0C       		.uleb128 0xc
 12866 697e 2C4E0000 		.long	0x4e2c
 12867 6982 0C       		.uleb128 0xc
 12868 6983 2C4E0000 		.long	0x4e2c
 12869 6987 73       		.uleb128 0x73
 12870 6988 08       		.byte	0x8
 12871 6989 8D690000 		.long	0x698d
 12872 698d 0C       		.uleb128 0xc
 12873 698e 29000000 		.long	0x29
 12874 6992 8B01     		.uleb128 0x8b
 12875 6994 5A080000 		.long	0x85a
 12876 6998 03       		.byte	0x3
 12877 6999 AA690000 		.long	0x69aa
 12878 699d C2690000 		.long	0x69c2
 12879 69a1 1D       		.uleb128 0x1d
 12880 69a2 00000000 		.long	.LASF44
 12881 69a6 29000000 		.long	0x29
 12882 69aa 8C01     		.uleb128 0x8c
 12883 69ac 00000000 		.long	.LASF1010
 12884 69b0 C2690000 		.long	0x69c2
 12885 69b4 9401     		.uleb128 0x94
 12886 69b6 00000000 		.long	.LASF1016
 12887 69ba 07       		.byte	0x7
 12888 69bb 0601     		.value	0x106
 12889 69bd C7690000 		.long	0x69c7
 12890 69c1 00       		.byte	0
 12891 69c2 0C       		.uleb128 0xc
 12892 69c3 4E610000 		.long	0x614e
 12893 69c7 0C       		.uleb128 0xc
 12894 69c8 87690000 		.long	0x6987
 12895 69cc 9001     		.uleb128 0x90
 12896 69ce CF080000 		.long	0x8cf
 12897 69d2 03       		.byte	0x3
 12898 69d3 F8690000 		.long	0x69f8
 12899 69d7 1D       		.uleb128 0x1d
 12900 69d8 00000000 		.long	.LASF45
 12901 69dc 30000000 		.long	0x30
 12902 69e0 1D       		.uleb128 0x1d
 12903 69e1 00000000 		.long	.LASF46
 12904 69e5 7B0A0000 		.long	0xa7b
 12905 69e9 9301     		.uleb128 0x93
 12906 69eb 5F5F6400 		.string	"__d"
 12907 69ef 07       		.byte	0x7
 12908 69f0 9E       		.byte	0x9e
 12909 69f1 F8690000 		.long	0x69f8
 12910 69f5 9701     		.uleb128 0x97
 12911 69f7 00       		.byte	0
 12912 69f8 0C       		.uleb128 0xc
 12913 69f9 2C4E0000 		.long	0x4e2c
 12914 69fd 9001     		.uleb128 0x90
 12915 69ff 65090000 		.long	0x965
 12916 6a03 03       		.byte	0x3
 12917 6a04 326A0000 		.long	0x6a32
GAS LISTING /tmp/cceISX6N.s 			page 350


 12918 6a08 1D       		.uleb128 0x1d
 12919 6a09 00000000 		.long	.LASF79
 12920 6a0d 2A060000 		.long	0x62a
 12921 6a11 1D       		.uleb128 0x1d
 12922 6a12 00000000 		.long	.LASF45
 12923 6a16 30000000 		.long	0x30
 12924 6a1a 1D       		.uleb128 0x1d
 12925 6a1b 00000000 		.long	.LASF46
 12926 6a1f 7B0A0000 		.long	0xa7b
 12927 6a23 9301     		.uleb128 0x93
 12928 6a25 5F5F6400 		.string	"__d"
 12929 6a29 07       		.byte	0x7
 12930 6a2a C1       		.byte	0xc1
 12931 6a2b 326A0000 		.long	0x6a32
 12932 6a2f 9701     		.uleb128 0x97
 12933 6a31 00       		.byte	0
 12934 6a32 0C       		.uleb128 0xc
 12935 6a33 2C4E0000 		.long	0x4e2c
 12936 6a37 8B01     		.uleb128 0x8b
 12937 6a39 BD060000 		.long	0x6bd
 12938 6a3d 03       		.byte	0x3
 12939 6a3e 466A0000 		.long	0x6a46
 12940 6a42 516A0000 		.long	0x6a51
 12941 6a46 8C01     		.uleb128 0x8c
 12942 6a48 00000000 		.long	.LASF1010
 12943 6a4c 516A0000 		.long	0x6a51
 12944 6a50 00       		.byte	0
 12945 6a51 0C       		.uleb128 0xc
 12946 6a52 60610000 		.long	0x6160
 12947 6a56 8B01     		.uleb128 0x8b
 12948 6a58 F7360000 		.long	0x36f7
 12949 6a5c 03       		.byte	0x3
 12950 6a5d 656A0000 		.long	0x6a65
 12951 6a61 706A0000 		.long	0x6a70
 12952 6a65 8C01     		.uleb128 0x8c
 12953 6a67 00000000 		.long	.LASF1010
 12954 6a6b 706A0000 		.long	0x6a70
 12955 6a6f 00       		.byte	0
 12956 6a70 0C       		.uleb128 0xc
 12957 6a71 BC640000 		.long	0x64bc
 12958 6a75 8B01     		.uleb128 0x8b
 12959 6a77 CE370000 		.long	0x37ce
 12960 6a7b 03       		.byte	0x3
 12961 6a7c 8D6A0000 		.long	0x6a8d
 12962 6a80 A46A0000 		.long	0x6aa4
 12963 6a84 1D       		.uleb128 0x1d
 12964 6a85 00000000 		.long	.LASF561
 12965 6a89 69640000 		.long	0x6469
 12966 6a8d 8C01     		.uleb128 0x8c
 12967 6a8f 00000000 		.long	.LASF1010
 12968 6a93 A46A0000 		.long	0x6aa4
 12969 6a97 9301     		.uleb128 0x93
 12970 6a99 5F5F6800 		.string	"__h"
 12971 6a9d 0C       		.byte	0xc
 12972 6a9e 8B       		.byte	0x8b
 12973 6a9f A96A0000 		.long	0x6aa9
 12974 6aa3 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 351


 12975 6aa4 0C       		.uleb128 0xc
 12976 6aa5 C8640000 		.long	0x64c8
 12977 6aa9 0C       		.uleb128 0xc
 12978 6aaa 3F650000 		.long	0x653f
 12979 6aae 8B01     		.uleb128 0x8b
 12980 6ab0 6C390000 		.long	0x396c
 12981 6ab4 03       		.byte	0x3
 12982 6ab5 CB6A0000 		.long	0x6acb
 12983 6ab9 E86A0000 		.long	0x6ae8
 12984 6abd 1D       		.uleb128 0x1d
 12985 6abe 00000000 		.long	.LASF561
 12986 6ac2 69640000 		.long	0x6469
 12987 6ac6 5C       		.uleb128 0x5c
 12988 6ac7 00000000 		.long	.LASF575
 12989 6acb 8C01     		.uleb128 0x8c
 12990 6acd 00000000 		.long	.LASF1010
 12991 6ad1 E86A0000 		.long	0x6ae8
 12992 6ad5 9401     		.uleb128 0x94
 12993 6ad7 00000000 		.long	.LASF1020
 12994 6adb 0C       		.byte	0xc
 12995 6adc 0401     		.value	0x104
 12996 6ade ED6A0000 		.long	0x6aed
 12997 6ae2 9801     		.uleb128 0x98
 12998 6ae4 0C       		.byte	0xc
 12999 6ae5 0401     		.value	0x104
 13000 6ae7 00       		.byte	0
 13001 6ae8 0C       		.uleb128 0xc
 13002 6ae9 03650000 		.long	0x6503
 13003 6aed 0C       		.uleb128 0xc
 13004 6aee 3F650000 		.long	0x653f
 13005 6af2 71       		.uleb128 0x71
 13006 6af3 08       		.byte	0x8
 13007 6af4 AD360000 		.long	0x36ad
 13008 6af8 9601     		.uleb128 0x96
 13009 6afa BF360000 		.long	0x36bf
 13010 6afe 06       		.byte	0x6
 13011 6aff B8       		.byte	0xb8
 13012 6b00 03       		.byte	0x3
 13013 6b01 096B0000 		.long	0x6b09
 13014 6b05 146B0000 		.long	0x6b14
 13015 6b09 8C01     		.uleb128 0x8c
 13016 6b0b 00000000 		.long	.LASF1010
 13017 6b0f 146B0000 		.long	0x6b14
 13018 6b13 00       		.byte	0
 13019 6b14 0C       		.uleb128 0xc
 13020 6b15 F26A0000 		.long	0x6af2
 13021 6b19 7F       		.uleb128 0x7f
 13022 6b1a 08       		.byte	0x8
 13023 6b1b E03A0000 		.long	0x3ae0
 13024 6b1f 73       		.uleb128 0x73
 13025 6b20 08       		.byte	0x8
 13026 6b21 C8330000 		.long	0x33c8
 13027 6b25 9001     		.uleb128 0x90
 13028 6b27 FB3D0000 		.long	0x3dfb
 13029 6b2b 03       		.byte	0x3
 13030 6b2c 466B0000 		.long	0x6b46
 13031 6b30 0A       		.uleb128 0xa
GAS LISTING /tmp/cceISX6N.s 			page 352


 13032 6b31 5F547000 		.string	"_Tp"
 13033 6b35 1F6B0000 		.long	0x6b1f
 13034 6b39 9301     		.uleb128 0x93
 13035 6b3b 5F5F7400 		.string	"__t"
 13036 6b3f 26       		.byte	0x26
 13037 6b40 65       		.byte	0x65
 13038 6b41 466B0000 		.long	0x6b46
 13039 6b45 00       		.byte	0
 13040 6b46 0C       		.uleb128 0xc
 13041 6b47 1F6B0000 		.long	0x6b1f
 13042 6b4b 8B01     		.uleb128 0x8b
 13043 6b4d 973A0000 		.long	0x3a97
 13044 6b51 03       		.byte	0x3
 13045 6b52 696B0000 		.long	0x6b69
 13046 6b56 7F6B0000 		.long	0x6b7f
 13047 6b5a 62       		.uleb128 0x62
 13048 6b5b 00000000 		.long	.LASF582
 13049 6b5f 696B0000 		.long	0x6b69
 13050 6b63 60       		.uleb128 0x60
 13051 6b64 69640000 		.long	0x6469
 13052 6b68 00       		.byte	0
 13053 6b69 8C01     		.uleb128 0x8c
 13054 6b6b 00000000 		.long	.LASF1010
 13055 6b6f 7F6B0000 		.long	0x6b7f
 13056 6b73 9901     		.uleb128 0x99
 13057 6b75 0C       		.byte	0xc
 13058 6b76 9401     		.value	0x194
 13059 6b78 19       		.uleb128 0x19
 13060 6b79 846B0000 		.long	0x6b84
 13061 6b7d 00       		.byte	0
 13062 6b7e 00       		.byte	0
 13063 6b7f 0C       		.uleb128 0xc
 13064 6b80 0F650000 		.long	0x650f
 13065 6b84 0C       		.uleb128 0xc
 13066 6b85 3F650000 		.long	0x653f
 13067 6b89 8B01     		.uleb128 0x8b
 13068 6b8b CE400000 		.long	0x40ce
 13069 6b8f 03       		.byte	0x3
 13070 6b90 986B0000 		.long	0x6b98
 13071 6b94 A36B0000 		.long	0x6ba3
 13072 6b98 8C01     		.uleb128 0x8c
 13073 6b9a 00000000 		.long	.LASF1010
 13074 6b9e A36B0000 		.long	0x6ba3
 13075 6ba2 00       		.byte	0
 13076 6ba3 0C       		.uleb128 0xc
 13077 6ba4 57590000 		.long	0x5957
 13078 6ba8 8B01     		.uleb128 0x8b
 13079 6baa FF400000 		.long	0x40ff
 13080 6bae 03       		.byte	0x3
 13081 6baf B76B0000 		.long	0x6bb7
 13082 6bb3 CC6B0000 		.long	0x6bcc
 13083 6bb7 8C01     		.uleb128 0x8c
 13084 6bb9 00000000 		.long	.LASF1010
 13085 6bbd A36B0000 		.long	0x6ba3
 13086 6bc1 8C01     		.uleb128 0x8c
 13087 6bc3 00000000 		.long	.LASF1021
 13088 6bc7 164C0000 		.long	0x4c16
GAS LISTING /tmp/cceISX6N.s 			page 353


 13089 6bcb 00       		.byte	0
 13090 6bcc 8B01     		.uleb128 0x8b
 13091 6bce 79110000 		.long	0x1179
 13092 6bd2 03       		.byte	0x3
 13093 6bd3 DB6B0000 		.long	0x6bdb
 13094 6bd7 F06B0000 		.long	0x6bf0
 13095 6bdb 8C01     		.uleb128 0x8c
 13096 6bdd 00000000 		.long	.LASF1010
 13097 6be1 F06B0000 		.long	0x6bf0
 13098 6be5 8C01     		.uleb128 0x8c
 13099 6be7 00000000 		.long	.LASF1021
 13100 6beb 164C0000 		.long	0x4c16
 13101 6bef 00       		.byte	0
 13102 6bf0 0C       		.uleb128 0xc
 13103 6bf1 69590000 		.long	0x5969
 13104 6bf5 8B01     		.uleb128 0x8b
 13105 6bf7 E4400000 		.long	0x40e4
 13106 6bfb 03       		.byte	0x3
 13107 6bfc 046C0000 		.long	0x6c04
 13108 6c00 146C0000 		.long	0x6c14
 13109 6c04 8C01     		.uleb128 0x8c
 13110 6c06 00000000 		.long	.LASF1010
 13111 6c0a A36B0000 		.long	0x6ba3
 13112 6c0e 19       		.uleb128 0x19
 13113 6c0f 146C0000 		.long	0x6c14
 13114 6c13 00       		.byte	0
 13115 6c14 0C       		.uleb128 0xc
 13116 6c15 5D590000 		.long	0x595d
 13117 6c19 8B01     		.uleb128 0x8b
 13118 6c1b 5E110000 		.long	0x115e
 13119 6c1f 03       		.byte	0x3
 13120 6c20 286C0000 		.long	0x6c28
 13121 6c24 3F6C0000 		.long	0x6c3f
 13122 6c28 8C01     		.uleb128 0x8c
 13123 6c2a 00000000 		.long	.LASF1010
 13124 6c2e F06B0000 		.long	0x6bf0
 13125 6c32 9301     		.uleb128 0x93
 13126 6c34 5F5F6100 		.string	"__a"
 13127 6c38 19       		.byte	0x19
 13128 6c39 73       		.byte	0x73
 13129 6c3a 3F6C0000 		.long	0x6c3f
 13130 6c3e 00       		.byte	0
 13131 6c3f 0C       		.uleb128 0xc
 13132 6c40 6F590000 		.long	0x596f
 13133 6c44 8B01     		.uleb128 0x8b
 13134 6c46 F4260000 		.long	0x26f4
 13135 6c4a 03       		.byte	0x3
 13136 6c4b 536C0000 		.long	0x6c53
 13137 6c4f 5E6C0000 		.long	0x6c5e
 13138 6c53 8C01     		.uleb128 0x8c
 13139 6c55 00000000 		.long	.LASF1010
 13140 6c59 A6650000 		.long	0x65a6
 13141 6c5d 00       		.byte	0
 13142 6c5e 9A01     		.uleb128 0x9a
 13143 6c60 86130000 		.long	0x1386
 13144 6c64 08       		.byte	0x8
 13145 6c65 1001     		.value	0x110
GAS LISTING /tmp/cceISX6N.s 			page 354


 13146 6c67 03       		.byte	0x3
 13147 6c68 706C0000 		.long	0x6c70
 13148 6c6c 856C0000 		.long	0x6c85
 13149 6c70 8C01     		.uleb128 0x8c
 13150 6c72 00000000 		.long	.LASF1010
 13151 6c76 856C0000 		.long	0x6c85
 13152 6c7a 8C01     		.uleb128 0x8c
 13153 6c7c 00000000 		.long	.LASF1021
 13154 6c80 164C0000 		.long	0x4c16
 13155 6c84 00       		.byte	0
 13156 6c85 0C       		.uleb128 0xc
 13157 6c86 45600000 		.long	0x6045
 13158 6c8a 73       		.uleb128 0x73
 13159 6c8b 08       		.byte	0x8
 13160 6c8c 373E0000 		.long	0x3e37
 13161 6c90 71       		.uleb128 0x71
 13162 6c91 08       		.byte	0x8
 13163 6c92 373E0000 		.long	0x3e37
 13164 6c96 9001     		.uleb128 0x90
 13165 6c98 193E0000 		.long	0x3e19
 13166 6c9c 03       		.byte	0x3
 13167 6c9d B76C0000 		.long	0x6cb7
 13168 6ca1 1D       		.uleb128 0x1d
 13169 6ca2 00000000 		.long	.LASF615
 13170 6ca6 A1310000 		.long	0x31a1
 13171 6caa 9301     		.uleb128 0x93
 13172 6cac 5F5F6600 		.string	"__f"
 13173 6cb0 04       		.byte	0x4
 13174 6cb1 2E       		.byte	0x2e
 13175 6cb2 906C0000 		.long	0x6c90
 13176 6cb6 00       		.byte	0
 13177 6cb7 8B01     		.uleb128 0x8b
 13178 6cb9 3C3D0000 		.long	0x3d3c
 13179 6cbd 03       		.byte	0x3
 13180 6cbe C66C0000 		.long	0x6cc6
 13181 6cc2 DE6C0000 		.long	0x6cde
 13182 6cc6 8C01     		.uleb128 0x8c
 13183 6cc8 00000000 		.long	.LASF1010
 13184 6ccc CB650000 		.long	0x65cb
 13185 6cd0 9501     		.uleb128 0x95
 13186 6cd2 5F5F6300 		.string	"__c"
 13187 6cd6 04       		.byte	0x4
 13188 6cd7 BB01     		.value	0x1bb
 13189 6cd9 3E490000 		.long	0x493e
 13190 6cdd 00       		.byte	0
 13191 6cde 9001     		.uleb128 0x90
 13192 6ce0 3C3E0000 		.long	0x3e3c
 13193 6ce4 03       		.byte	0x3
 13194 6ce5 096D0000 		.long	0x6d09
 13195 6ce9 1D       		.uleb128 0x1d
 13196 6cea 00000000 		.long	.LASF392
 13197 6cee 3E490000 		.long	0x493e
 13198 6cf2 1D       		.uleb128 0x1d
 13199 6cf3 00000000 		.long	.LASF393
 13200 6cf7 1F0F0000 		.long	0xf1f
 13201 6cfb 9401     		.uleb128 0x94
 13202 6cfd 00000000 		.long	.LASF1022
GAS LISTING /tmp/cceISX6N.s 			page 355


 13203 6d01 02       		.byte	0x2
 13204 6d02 4A02     		.value	0x24a
 13205 6d04 096D0000 		.long	0x6d09
 13206 6d08 00       		.byte	0
 13207 6d09 0C       		.uleb128 0xc
 13208 6d0a 1D610000 		.long	0x611d
 13209 6d0e 71       		.uleb128 0x71
 13210 6d0f 08       		.byte	0x8
 13211 6d10 DE350000 		.long	0x35de
 13212 6d14 9601     		.uleb128 0x96
 13213 6d16 EA350000 		.long	0x35ea
 13214 6d1a 23       		.byte	0x23
 13215 6d1b 65       		.byte	0x65
 13216 6d1c 03       		.byte	0x3
 13217 6d1d 256D0000 		.long	0x6d25
 13218 6d21 306D0000 		.long	0x6d30
 13219 6d25 8C01     		.uleb128 0x8c
 13220 6d27 00000000 		.long	.LASF1010
 13221 6d2b 306D0000 		.long	0x6d30
 13222 6d2f 00       		.byte	0
 13223 6d30 0C       		.uleb128 0xc
 13224 6d31 0E6D0000 		.long	0x6d0e
 13225 6d35 71       		.uleb128 0x71
 13226 6d36 08       		.byte	0x8
 13227 6d37 10360000 		.long	0x3610
 13228 6d3b 9A01     		.uleb128 0x9a
 13229 6d3d 23360000 		.long	0x3623
 13230 6d41 06       		.byte	0x6
 13231 6d42 1302     		.value	0x213
 13232 6d44 03       		.byte	0x3
 13233 6d45 4D6D0000 		.long	0x6d4d
 13234 6d49 586D0000 		.long	0x6d58
 13235 6d4d 8C01     		.uleb128 0x8c
 13236 6d4f 00000000 		.long	.LASF1010
 13237 6d53 586D0000 		.long	0x6d58
 13238 6d57 00       		.byte	0
 13239 6d58 0C       		.uleb128 0xc
 13240 6d59 356D0000 		.long	0x6d35
 13241 6d5d 8B01     		.uleb128 0x8b
 13242 6d5f F5330000 		.long	0x33f5
 13243 6d63 03       		.byte	0x3
 13244 6d64 6C6D0000 		.long	0x6d6c
 13245 6d68 846D0000 		.long	0x6d84
 13246 6d6c 8C01     		.uleb128 0x8c
 13247 6d6e 00000000 		.long	.LASF1010
 13248 6d72 846D0000 		.long	0x6d84
 13249 6d76 9401     		.uleb128 0x94
 13250 6d78 00000000 		.long	.LASF513
 13251 6d7c 06       		.byte	0x6
 13252 6d7d 9602     		.value	0x296
 13253 6d7f DC330000 		.long	0x33dc
 13254 6d83 00       		.byte	0
 13255 6d84 0C       		.uleb128 0xc
 13256 6d85 B6640000 		.long	0x64b6
 13257 6d89 7F       		.uleb128 0x7f
 13258 6d8a 08       		.byte	0x8
 13259 6d8b 7A640000 		.long	0x647a
GAS LISTING /tmp/cceISX6N.s 			page 356


 13260 6d8f 73       		.uleb128 0x73
 13261 6d90 08       		.byte	0x8
 13262 6d91 7E330000 		.long	0x337e
 13263 6d95 9001     		.uleb128 0x90
 13264 6d97 643E0000 		.long	0x3e64
 13265 6d9b 03       		.byte	0x3
 13266 6d9c B66D0000 		.long	0x6db6
 13267 6da0 0A       		.uleb128 0xa
 13268 6da1 5F547000 		.string	"_Tp"
 13269 6da5 7A640000 		.long	0x647a
 13270 6da9 9301     		.uleb128 0x93
 13271 6dab 5F5F7400 		.string	"__t"
 13272 6daf 26       		.byte	0x26
 13273 6db0 4C       		.byte	0x4c
 13274 6db1 B66D0000 		.long	0x6db6
 13275 6db5 00       		.byte	0
 13276 6db6 0C       		.uleb128 0xc
 13277 6db7 8F6D0000 		.long	0x6d8f
 13278 6dbb 9001     		.uleb128 0x90
 13279 6dbd A4330000 		.long	0x33a4
 13280 6dc1 03       		.byte	0x3
 13281 6dc2 D46D0000 		.long	0x6dd4
 13282 6dc6 9401     		.uleb128 0x94
 13283 6dc8 00000000 		.long	.LASF1023
 13284 6dcc 06       		.byte	0x6
 13285 6dcd DF04     		.value	0x4df
 13286 6dcf 7A640000 		.long	0x647a
 13287 6dd3 00       		.byte	0
 13288 6dd4 8B01     		.uleb128 0x8b
 13289 6dd6 37350000 		.long	0x3537
 13290 6dda 03       		.byte	0x3
 13291 6ddb F26D0000 		.long	0x6df2
 13292 6ddf 156E0000 		.long	0x6e15
 13293 6de3 62       		.uleb128 0x62
 13294 6de4 00000000 		.long	.LASF517
 13295 6de8 F26D0000 		.long	0x6df2
 13296 6dec 60       		.uleb128 0x60
 13297 6ded 69640000 		.long	0x6469
 13298 6df1 00       		.byte	0
 13299 6df2 8C01     		.uleb128 0x8c
 13300 6df4 00000000 		.long	.LASF1010
 13301 6df8 156E0000 		.long	0x6e15
 13302 6dfc 9501     		.uleb128 0x95
 13303 6dfe 5F5F6600 		.string	"__f"
 13304 6e02 06       		.byte	0x6
 13305 6e03 3705     		.value	0x537
 13306 6e05 1A6E0000 		.long	0x6e1a
 13307 6e09 9901     		.uleb128 0x99
 13308 6e0b 06       		.byte	0x6
 13309 6e0c 3705     		.value	0x537
 13310 6e0e 19       		.uleb128 0x19
 13311 6e0f 1F6E0000 		.long	0x6e1f
 13312 6e13 00       		.byte	0
 13313 6e14 00       		.byte	0
 13314 6e15 0C       		.uleb128 0xc
 13315 6e16 2D650000 		.long	0x652d
 13316 6e1a 0C       		.uleb128 0xc
GAS LISTING /tmp/cceISX6N.s 			page 357


 13317 6e1b 27650000 		.long	0x6527
 13318 6e1f 0C       		.uleb128 0xc
 13319 6e20 3F650000 		.long	0x653f
 13320 6e24 9001     		.uleb128 0x90
 13321 6e26 38380000 		.long	0x3838
 13322 6e2a 03       		.byte	0x3
 13323 6e2b 3C6E0000 		.long	0x6e3c
 13324 6e2f 9301     		.uleb128 0x93
 13325 6e31 5F5F7400 		.string	"__t"
 13326 6e35 0C       		.byte	0xc
 13327 6e36 EF       		.byte	0xef
 13328 6e37 3C6E0000 		.long	0x6e3c
 13329 6e3b 00       		.byte	0
 13330 6e3c 0C       		.uleb128 0xc
 13331 6e3d EB640000 		.long	0x64eb
 13332 6e41 9001     		.uleb128 0x90
 13333 6e43 823E0000 		.long	0x3e82
 13334 6e47 03       		.byte	0x3
 13335 6e48 726E0000 		.long	0x6e72
 13336 6e4c 0B       		.uleb128 0xb
 13337 6e4d 5F5F6900 		.string	"__i"
 13338 6e51 EA480000 		.long	0x48ea
 13339 6e55 00       		.byte	0
 13340 6e56 1D       		.uleb128 0x1d
 13341 6e57 00000000 		.long	.LASF562
 13342 6e5b 69640000 		.long	0x6469
 13343 6e5f 5C       		.uleb128 0x5c
 13344 6e60 00000000 		.long	.LASF619
 13345 6e64 9501     		.uleb128 0x95
 13346 6e66 5F5F7400 		.string	"__t"
 13347 6e6a 0C       		.byte	0xc
 13348 6e6b E602     		.value	0x2e6
 13349 6e6d 726E0000 		.long	0x6e72
 13350 6e71 00       		.byte	0
 13351 6e72 0C       		.uleb128 0xc
 13352 6e73 EB640000 		.long	0x64eb
 13353 6e77 73       		.uleb128 0x73
 13354 6e78 08       		.byte	0x8
 13355 6e79 5C3B0000 		.long	0x3b5c
 13356 6e7d 9001     		.uleb128 0x90
 13357 6e7f B03E0000 		.long	0x3eb0
 13358 6e83 03       		.byte	0x3
 13359 6e84 9E6E0000 		.long	0x6e9e
 13360 6e88 0A       		.uleb128 0xa
 13361 6e89 5F547000 		.string	"_Tp"
 13362 6e8d D9640000 		.long	0x64d9
 13363 6e91 9301     		.uleb128 0x93
 13364 6e93 5F5F7400 		.string	"__t"
 13365 6e97 26       		.byte	0x26
 13366 6e98 4C       		.byte	0x4c
 13367 6e99 9E6E0000 		.long	0x6e9e
 13368 6e9d 00       		.byte	0
 13369 6e9e 0C       		.uleb128 0xc
 13370 6e9f 776E0000 		.long	0x6e77
 13371 6ea3 8B01     		.uleb128 0x8b
 13372 6ea5 E0490000 		.long	0x49e0
 13373 6ea9 03       		.byte	0x3
GAS LISTING /tmp/cceISX6N.s 			page 358


 13374 6eaa B26E0000 		.long	0x6eb2
 13375 6eae BD6E0000 		.long	0x6ebd
 13376 6eb2 8C01     		.uleb128 0x8c
 13377 6eb4 00000000 		.long	.LASF1010
 13378 6eb8 BD6E0000 		.long	0x6ebd
 13379 6ebc 00       		.byte	0
 13380 6ebd 0C       		.uleb128 0xc
 13381 6ebe 014A0000 		.long	0x4a01
 13382 6ec2 8B01     		.uleb128 0x8b
 13383 6ec4 77490000 		.long	0x4977
 13384 6ec8 03       		.byte	0x3
 13385 6ec9 D16E0000 		.long	0x6ed1
 13386 6ecd DC6E0000 		.long	0x6edc
 13387 6ed1 8C01     		.uleb128 0x8c
 13388 6ed3 00000000 		.long	.LASF1010
 13389 6ed7 DC6E0000 		.long	0x6edc
 13390 6edb 00       		.byte	0
 13391 6edc 0C       		.uleb128 0xc
 13392 6edd A3490000 		.long	0x49a3
 13393 6ee1 8B01     		.uleb128 0x8b
 13394 6ee3 E2610000 		.long	0x61e2
 13395 6ee7 03       		.byte	0x3
 13396 6ee8 F06E0000 		.long	0x6ef0
 13397 6eec FB6E0000 		.long	0x6efb
 13398 6ef0 8C01     		.uleb128 0x8c
 13399 6ef2 00000000 		.long	.LASF1010
 13400 6ef6 FB6E0000 		.long	0x6efb
 13401 6efa 00       		.byte	0
 13402 6efb 0C       		.uleb128 0xc
 13403 6efc 21620000 		.long	0x6221
 13404 6f00 8B01     		.uleb128 0x8b
 13405 6f02 7C620000 		.long	0x627c
 13406 6f06 03       		.byte	0x3
 13407 6f07 0F6F0000 		.long	0x6f0f
 13408 6f0b 1A6F0000 		.long	0x6f1a
 13409 6f0f 8C01     		.uleb128 0x8c
 13410 6f11 00000000 		.long	.LASF1010
 13411 6f15 1A6F0000 		.long	0x6f1a
 13412 6f19 00       		.byte	0
 13413 6f1a 0C       		.uleb128 0xc
 13414 6f1b BB620000 		.long	0x62bb
 13415 6f1f 8B01     		.uleb128 0x8b
 13416 6f21 16630000 		.long	0x6316
 13417 6f25 03       		.byte	0x3
 13418 6f26 2E6F0000 		.long	0x6f2e
 13419 6f2a 396F0000 		.long	0x6f39
 13420 6f2e 8C01     		.uleb128 0x8c
 13421 6f30 00000000 		.long	.LASF1010
 13422 6f34 396F0000 		.long	0x6f39
 13423 6f38 00       		.byte	0
 13424 6f39 0C       		.uleb128 0xc
 13425 6f3a 55630000 		.long	0x6355
 13426 6f3e 8B01     		.uleb128 0x8b
 13427 6f40 B0630000 		.long	0x63b0
 13428 6f44 03       		.byte	0x3
 13429 6f45 4D6F0000 		.long	0x6f4d
 13430 6f49 586F0000 		.long	0x6f58
GAS LISTING /tmp/cceISX6N.s 			page 359


 13431 6f4d 8C01     		.uleb128 0x8c
 13432 6f4f 00000000 		.long	.LASF1010
 13433 6f53 586F0000 		.long	0x6f58
 13434 6f57 00       		.byte	0
 13435 6f58 0C       		.uleb128 0xc
 13436 6f59 EF630000 		.long	0x63ef
 13437 6f5d 73       		.uleb128 0x73
 13438 6f5e 08       		.byte	0x8
 13439 6f5f 25060000 		.long	0x625
 13440 6f63 9001     		.uleb128 0x90
 13441 6f65 95090000 		.long	0x995
 13442 6f69 03       		.byte	0x3
 13443 6f6a A46F0000 		.long	0x6fa4
 13444 6f6e 1D       		.uleb128 0x1d
 13445 6f6f 00000000 		.long	.LASF55
 13446 6f73 89020000 		.long	0x289
 13447 6f77 1D       		.uleb128 0x1d
 13448 6f78 00000000 		.long	.LASF86
 13449 6f7c C5020000 		.long	0x2c5
 13450 6f80 1D       		.uleb128 0x1d
 13451 6f81 00000000 		.long	.LASF87
 13452 6f85 C5020000 		.long	0x2c5
 13453 6f89 9401     		.uleb128 0x94
 13454 6f8b 00000000 		.long	.LASF1018
 13455 6f8f 07       		.byte	0x7
 13456 6f90 8902     		.value	0x289
 13457 6f92 A46F0000 		.long	0x6fa4
 13458 6f96 9401     		.uleb128 0x94
 13459 6f98 00000000 		.long	.LASF1019
 13460 6f9c 07       		.byte	0x7
 13461 6f9d 8A02     		.value	0x28a
 13462 6f9f A96F0000 		.long	0x6fa9
 13463 6fa3 00       		.byte	0
 13464 6fa4 0C       		.uleb128 0xc
 13465 6fa5 5D6F0000 		.long	0x6f5d
 13466 6fa9 0C       		.uleb128 0xc
 13467 6faa 5D6F0000 		.long	0x6f5d
 13468 6fae 8B01     		.uleb128 0x8b
 13469 6fb0 7E080000 		.long	0x87e
 13470 6fb4 03       		.byte	0x3
 13471 6fb5 CF6F0000 		.long	0x6fcf
 13472 6fb9 E76F0000 		.long	0x6fe7
 13473 6fbd 1D       		.uleb128 0x1d
 13474 6fbe 00000000 		.long	.LASF44
 13475 6fc2 30000000 		.long	0x30
 13476 6fc6 1D       		.uleb128 0x1d
 13477 6fc7 00000000 		.long	.LASF76
 13478 6fcb 7B0A0000 		.long	0xa7b
 13479 6fcf 8C01     		.uleb128 0x8c
 13480 6fd1 00000000 		.long	.LASF1010
 13481 6fd5 C2690000 		.long	0x69c2
 13482 6fd9 9501     		.uleb128 0x95
 13483 6fdb 5F5F6400 		.string	"__d"
 13484 6fdf 07       		.byte	0x7
 13485 6fe0 0D01     		.value	0x10d
 13486 6fe2 E76F0000 		.long	0x6fe7
 13487 6fe6 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 360


 13488 6fe7 0C       		.uleb128 0xc
 13489 6fe8 2C4E0000 		.long	0x4e2c
 13490 6fec 9001     		.uleb128 0x90
 13491 6fee CE3E0000 		.long	0x3ece
 13492 6ff2 03       		.byte	0x3
 13493 6ff3 2D700000 		.long	0x702d
 13494 6ff7 1D       		.uleb128 0x1d
 13495 6ff8 00000000 		.long	.LASF392
 13496 6ffc 3E490000 		.long	0x493e
 13497 7000 1D       		.uleb128 0x1d
 13498 7001 00000000 		.long	.LASF393
 13499 7005 1F0F0000 		.long	0xf1f
 13500 7009 1D       		.uleb128 0x1d
 13501 700a 00000000 		.long	.LASF394
 13502 700e 11110000 		.long	0x1111
 13503 7012 9401     		.uleb128 0x94
 13504 7014 00000000 		.long	.LASF1022
 13505 7018 08       		.byte	0x8
 13506 7019 C10A     		.value	0xac1
 13507 701b 2D700000 		.long	0x702d
 13508 701f 9401     		.uleb128 0x94
 13509 7021 00000000 		.long	.LASF1024
 13510 7025 08       		.byte	0x8
 13511 7026 C20A     		.value	0xac2
 13512 7028 32700000 		.long	0x7032
 13513 702c 00       		.byte	0
 13514 702d 0C       		.uleb128 0xc
 13515 702e 1D610000 		.long	0x611d
 13516 7032 0C       		.uleb128 0xc
 13517 7033 63600000 		.long	0x6063
 13518 7037 73       		.uleb128 0x73
 13519 7038 08       		.byte	0x8
 13520 7039 E6300000 		.long	0x30e6
 13521 703d 71       		.uleb128 0x71
 13522 703e 08       		.byte	0x8
 13523 703f BA300000 		.long	0x30ba
 13524 7043 8B01     		.uleb128 0x8b
 13525 7045 C3300000 		.long	0x30c3
 13526 7049 03       		.byte	0x3
 13527 704a 52700000 		.long	0x7052
 13528 704e 69700000 		.long	0x7069
 13529 7052 8C01     		.uleb128 0x8c
 13530 7054 00000000 		.long	.LASF1010
 13531 7058 69700000 		.long	0x7069
 13532 705c 9301     		.uleb128 0x93
 13533 705e 5F5F6600 		.string	"__f"
 13534 7062 02       		.byte	0x2
 13535 7063 DC       		.byte	0xdc
 13536 7064 29000000 		.long	0x29
 13537 7068 00       		.byte	0
 13538 7069 0C       		.uleb128 0xc
 13539 706a 3D700000 		.long	0x703d
 13540 706e 71       		.uleb128 0x71
 13541 706f 08       		.byte	0x8
 13542 7070 74700000 		.long	0x7074
 13543 7074 8301     		.uleb128 0x83
 13544 7076 37700000 		.long	0x7037
GAS LISTING /tmp/cceISX6N.s 			page 361


 13545 707a 84700000 		.long	0x7084
 13546 707e 19       		.uleb128 0x19
 13547 707f 37700000 		.long	0x7037
 13548 7083 00       		.byte	0
 13549 7084 8B01     		.uleb128 0x8b
 13550 7086 F2300000 		.long	0x30f2
 13551 708a 03       		.byte	0x3
 13552 708b 93700000 		.long	0x7093
 13553 708f AA700000 		.long	0x70aa
 13554 7093 8C01     		.uleb128 0x8c
 13555 7095 00000000 		.long	.LASF1010
 13556 7099 69700000 		.long	0x7069
 13557 709d 9101     		.uleb128 0x91
 13558 709f 00000000 		.long	.LASF1025
 13559 70a3 02       		.byte	0x2
 13560 70a4 6C       		.byte	0x6c
 13561 70a5 6E700000 		.long	0x706e
 13562 70a9 00       		.byte	0
 13563 70aa 9001     		.uleb128 0x90
 13564 70ac 043F0000 		.long	0x3f04
 13565 70b0 03       		.byte	0x3
 13566 70b1 DC700000 		.long	0x70dc
 13567 70b5 0B       		.uleb128 0xb
 13568 70b6 5F5F6900 		.string	"__i"
 13569 70ba EA480000 		.long	0x48ea
 13570 70be 00       		.byte	0
 13571 70bf 62       		.uleb128 0x62
 13572 70c0 00000000 		.long	.LASF553
 13573 70c4 CE700000 		.long	0x70ce
 13574 70c8 60       		.uleb128 0x60
 13575 70c9 69640000 		.long	0x6469
 13576 70cd 00       		.byte	0
 13577 70ce 9501     		.uleb128 0x95
 13578 70d0 5F5F7400 		.string	"__t"
 13579 70d4 0C       		.byte	0xc
 13580 70d5 F502     		.value	0x2f5
 13581 70d7 DC700000 		.long	0x70dc
 13582 70db 00       		.byte	0
 13583 70dc 0C       		.uleb128 0xc
 13584 70dd 21650000 		.long	0x6521
 13585 70e1 71       		.uleb128 0x71
 13586 70e2 08       		.byte	0x8
 13587 70e3 333F0000 		.long	0x3f33
 13588 70e7 8B01     		.uleb128 0x8b
 13589 70e9 FA3A0000 		.long	0x3afa
 13590 70ed 03       		.byte	0x3
 13591 70ee 08710000 		.long	0x7108
 13592 70f2 25710000 		.long	0x7125
 13593 70f6 1D       		.uleb128 0x1d
 13594 70f7 00000000 		.long	.LASF586
 13595 70fb D9640000 		.long	0x64d9
 13596 70ff 1D       		.uleb128 0x1d
 13597 7100 00000000 		.long	.LASF587
 13598 7104 E6320000 		.long	0x32e6
 13599 7108 8C01     		.uleb128 0x8c
 13600 710a 00000000 		.long	.LASF1010
 13601 710e 25710000 		.long	0x7125
GAS LISTING /tmp/cceISX6N.s 			page 362


 13602 7112 9401     		.uleb128 0x94
 13603 7114 00000000 		.long	.LASF1026
 13604 7118 06       		.byte	0x6
 13605 7119 BD04     		.value	0x4bd
 13606 711b 2A710000 		.long	0x712a
 13607 711f 19       		.uleb128 0x19
 13608 7120 2F710000 		.long	0x712f
 13609 7124 00       		.byte	0
 13610 7125 0C       		.uleb128 0xc
 13611 7126 E1700000 		.long	0x70e1
 13612 712a 0C       		.uleb128 0xc
 13613 712b D9640000 		.long	0x64d9
 13614 712f 0C       		.uleb128 0xc
 13615 7130 7E610000 		.long	0x617e
 13616 7134 71       		.uleb128 0x71
 13617 7135 08       		.byte	0x8
 13618 7136 C93A0000 		.long	0x3ac9
 13619 713a 8B01     		.uleb128 0x8b
 13620 713c 11340000 		.long	0x3411
 13621 7140 03       		.byte	0x3
 13622 7141 5C710000 		.long	0x715c
 13623 7145 79710000 		.long	0x7179
 13624 7149 0A       		.uleb128 0xa
 13625 714a 5F547000 		.string	"_Tp"
 13626 714e D9640000 		.long	0x64d9
 13627 7152 5C       		.uleb128 0x5c
 13628 7153 00000000 		.long	.LASF517
 13629 7157 5D       		.uleb128 0x5d
 13630 7158 00000000 		.long	.LASF1027
 13631 715c 8C01     		.uleb128 0x8c
 13632 715e 00000000 		.long	.LASF1010
 13633 7162 79710000 		.long	0x7179
 13634 7166 9401     		.uleb128 0x94
 13635 7168 00000000 		.long	.LASF1028
 13636 716c 06       		.byte	0x6
 13637 716d AE02     		.value	0x2ae
 13638 716f 7E710000 		.long	0x717e
 13639 7173 9801     		.uleb128 0x98
 13640 7175 06       		.byte	0x6
 13641 7176 AE02     		.value	0x2ae
 13642 7178 00       		.byte	0
 13643 7179 0C       		.uleb128 0xc
 13644 717a 34710000 		.long	0x7134
 13645 717e 0C       		.uleb128 0xc
 13646 717f D9640000 		.long	0x64d9
 13647 7183 9001     		.uleb128 0x90
 13648 7185 3D3F0000 		.long	0x3f3d
 13649 7189 01       		.byte	0x1
 13650 718a 99710000 		.long	0x7199
 13651 718e 5C       		.uleb128 0x5c
 13652 718f 00000000 		.long	.LASF553
 13653 7193 9801     		.uleb128 0x98
 13654 7195 0C       		.byte	0xc
 13655 7196 6303     		.value	0x363
 13656 7198 00       		.byte	0
 13657 7199 7F       		.uleb128 0x7f
 13658 719a 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 363


 13659 719b E6320000 		.long	0x32e6
 13660 719f 8B01     		.uleb128 0x8b
 13661 71a1 66350000 		.long	0x3566
 13662 71a5 03       		.byte	0x3
 13663 71a6 CF710000 		.long	0x71cf
 13664 71aa EC710000 		.long	0x71ec
 13665 71ae 1D       		.uleb128 0x1d
 13666 71af 00000000 		.long	.LASF529
 13667 71b3 29000000 		.long	0x29
 13668 71b7 5C       		.uleb128 0x5c
 13669 71b8 00000000 		.long	.LASF517
 13670 71bc 63       		.uleb128 0x63
 13671 71bd 00000000 		.long	.LASF1029
 13672 71c1 06       		.byte	0x6
 13673 71c2 0B05     		.value	0x50b
 13674 71c4 CF710000 		.long	0x71cf
 13675 71c8 64       		.uleb128 0x64
 13676 71c9 EA480000 		.long	0x48ea
 13677 71cd 00       		.byte	0
 13678 71ce 00       		.byte	0
 13679 71cf 8C01     		.uleb128 0x8c
 13680 71d1 00000000 		.long	.LASF1010
 13681 71d5 156E0000 		.long	0x6e15
 13682 71d9 9401     		.uleb128 0x94
 13683 71db 00000000 		.long	.LASF1030
 13684 71df 06       		.byte	0x6
 13685 71e0 0D05     		.value	0x50d
 13686 71e2 EC710000 		.long	0x71ec
 13687 71e6 19       		.uleb128 0x19
 13688 71e7 DC360000 		.long	0x36dc
 13689 71eb 00       		.byte	0
 13690 71ec 0C       		.uleb128 0xc
 13691 71ed 99710000 		.long	0x7199
 13692 71f1 8B01     		.uleb128 0x8b
 13693 71f3 AC350000 		.long	0x35ac
 13694 71f7 03       		.byte	0x3
 13695 71f8 0E720000 		.long	0x720e
 13696 71fc 1E720000 		.long	0x721e
 13697 7200 5C       		.uleb128 0x5c
 13698 7201 00000000 		.long	.LASF517
 13699 7205 1D       		.uleb128 0x1d
 13700 7206 00000000 		.long	.LASF529
 13701 720a 29000000 		.long	0x29
 13702 720e 8C01     		.uleb128 0x8c
 13703 7210 00000000 		.long	.LASF1010
 13704 7214 156E0000 		.long	0x6e15
 13705 7218 9801     		.uleb128 0x98
 13706 721a 06       		.byte	0x6
 13707 721b 4705     		.value	0x547
 13708 721d 00       		.byte	0
 13709 721e 8B01     		.uleb128 0x8b
 13710 7220 5C490000 		.long	0x495c
 13711 7224 03       		.byte	0x3
 13712 7225 2D720000 		.long	0x722d
 13713 7229 42720000 		.long	0x7242
 13714 722d 8C01     		.uleb128 0x8c
 13715 722f 00000000 		.long	.LASF1010
GAS LISTING /tmp/cceISX6N.s 			page 364


 13716 7233 42720000 		.long	0x7242
 13717 7237 9301     		.uleb128 0x93
 13718 7239 7600     		.string	"v"
 13719 723b 01       		.byte	0x1
 13720 723c 23       		.byte	0x23
 13721 723d 47720000 		.long	0x7247
 13722 7241 00       		.byte	0
 13723 7242 0C       		.uleb128 0xc
 13724 7243 9D490000 		.long	0x499d
 13725 7247 0C       		.uleb128 0xc
 13726 7248 97490000 		.long	0x4997
 13727 724c 8B01     		.uleb128 0x8b
 13728 724e C5490000 		.long	0x49c5
 13729 7252 03       		.byte	0x3
 13730 7253 5B720000 		.long	0x725b
 13731 7257 70720000 		.long	0x7270
 13732 725b 8C01     		.uleb128 0x8c
 13733 725d 00000000 		.long	.LASF1010
 13734 7261 70720000 		.long	0x7270
 13735 7265 9301     		.uleb128 0x93
 13736 7267 6300     		.string	"c"
 13737 7269 01       		.byte	0x1
 13738 726a 2A       		.byte	0x2a
 13739 726b 8D690000 		.long	0x698d
 13740 726f 00       		.byte	0
 13741 7270 0C       		.uleb128 0xc
 13742 7271 FB490000 		.long	0x49fb
 13743 7275 8B01     		.uleb128 0x8b
 13744 7277 C2610000 		.long	0x61c2
 13745 727b 03       		.byte	0x3
 13746 727c 84720000 		.long	0x7284
 13747 7280 A7720000 		.long	0x72a7
 13748 7284 8C01     		.uleb128 0x8c
 13749 7286 00000000 		.long	.LASF1010
 13750 728a A7720000 		.long	0x72a7
 13751 728e 9101     		.uleb128 0x91
 13752 7290 00000000 		.long	.LASF1031
 13753 7294 01       		.byte	0x1
 13754 7295 13       		.byte	0x13
 13755 7296 45490000 		.long	0x4945
 13756 729a 9101     		.uleb128 0x91
 13757 729c 00000000 		.long	.LASF1032
 13758 72a0 01       		.byte	0x1
 13759 72a1 13       		.byte	0x13
 13760 72a2 AE490000 		.long	0x49ae
 13761 72a6 00       		.byte	0
 13762 72a7 0C       		.uleb128 0xc
 13763 72a8 1B620000 		.long	0x621b
 13764 72ac 8B01     		.uleb128 0x8b
 13765 72ae 5C620000 		.long	0x625c
 13766 72b2 03       		.byte	0x3
 13767 72b3 BB720000 		.long	0x72bb
 13768 72b7 DE720000 		.long	0x72de
 13769 72bb 8C01     		.uleb128 0x8c
 13770 72bd 00000000 		.long	.LASF1010
 13771 72c1 DE720000 		.long	0x72de
 13772 72c5 9101     		.uleb128 0x91
GAS LISTING /tmp/cceISX6N.s 			page 365


 13773 72c7 00000000 		.long	.LASF1031
 13774 72cb 01       		.byte	0x1
 13775 72cc 13       		.byte	0x13
 13776 72cd 92610000 		.long	0x6192
 13777 72d1 9101     		.uleb128 0x91
 13778 72d3 00000000 		.long	.LASF1032
 13779 72d7 01       		.byte	0x1
 13780 72d8 13       		.byte	0x13
 13781 72d9 AE490000 		.long	0x49ae
 13782 72dd 00       		.byte	0
 13783 72de 0C       		.uleb128 0xc
 13784 72df B5620000 		.long	0x62b5
 13785 72e3 8B01     		.uleb128 0x8b
 13786 72e5 F6620000 		.long	0x62f6
 13787 72e9 03       		.byte	0x3
 13788 72ea F2720000 		.long	0x72f2
 13789 72ee 15730000 		.long	0x7315
 13790 72f2 8C01     		.uleb128 0x8c
 13791 72f4 00000000 		.long	.LASF1010
 13792 72f8 15730000 		.long	0x7315
 13793 72fc 9101     		.uleb128 0x91
 13794 72fe 00000000 		.long	.LASF1031
 13795 7302 01       		.byte	0x1
 13796 7303 13       		.byte	0x13
 13797 7304 2C620000 		.long	0x622c
 13798 7308 9101     		.uleb128 0x91
 13799 730a 00000000 		.long	.LASF1032
 13800 730e 01       		.byte	0x1
 13801 730f 13       		.byte	0x13
 13802 7310 AE490000 		.long	0x49ae
 13803 7314 00       		.byte	0
 13804 7315 0C       		.uleb128 0xc
 13805 7316 4F630000 		.long	0x634f
 13806 731a 8B01     		.uleb128 0x8b
 13807 731c 90630000 		.long	0x6390
 13808 7320 03       		.byte	0x3
 13809 7321 29730000 		.long	0x7329
 13810 7325 4C730000 		.long	0x734c
 13811 7329 8C01     		.uleb128 0x8c
 13812 732b 00000000 		.long	.LASF1010
 13813 732f 4C730000 		.long	0x734c
 13814 7333 9101     		.uleb128 0x91
 13815 7335 00000000 		.long	.LASF1031
 13816 7339 01       		.byte	0x1
 13817 733a 13       		.byte	0x13
 13818 733b C6620000 		.long	0x62c6
 13819 733f 9101     		.uleb128 0x91
 13820 7341 00000000 		.long	.LASF1032
 13821 7345 01       		.byte	0x1
 13822 7346 13       		.byte	0x13
 13823 7347 AE490000 		.long	0x49ae
 13824 734b 00       		.byte	0
 13825 734c 0C       		.uleb128 0xc
 13826 734d E9630000 		.long	0x63e9
 13827 7351 8B01     		.uleb128 0x8b
 13828 7353 1E640000 		.long	0x641e
 13829 7357 03       		.byte	0x3
GAS LISTING /tmp/cceISX6N.s 			page 366


 13830 7358 60730000 		.long	0x7360
 13831 735c 77730000 		.long	0x7377
 13832 7360 8C01     		.uleb128 0x8c
 13833 7362 00000000 		.long	.LASF1010
 13834 7366 D4640000 		.long	0x64d4
 13835 736a 9301     		.uleb128 0x93
 13836 736c 65787000 		.string	"exp"
 13837 7370 01       		.byte	0x1
 13838 7371 1C       		.byte	0x1c
 13839 7372 60630000 		.long	0x6360
 13840 7376 00       		.byte	0
 13841 7377 9B01     		.uleb128 0x9b
 13842 7379 00000000 		.long	.LASF1033
 13843 737d 0B       		.byte	0xb
 13844 737e 66       		.byte	0x66
 13845 737f 06490000 		.long	0x4906
 13846 7383 03       		.byte	0x3
 13847 7384 96730000 		.long	0x7396
 13848 7388 9101     		.uleb128 0x91
 13849 738a 00000000 		.long	.LASF1034
 13850 738e 0B       		.byte	0xb
 13851 738f 66       		.byte	0x66
 13852 7390 1A4D0000 		.long	0x4d1a
 13853 7394 57       		.uleb128 0x57
 13854 7395 00       		.byte	0
 13855 7396 9001     		.uleb128 0x90
 13856 7398 533F0000 		.long	0x3f53
 13857 739c 03       		.byte	0x3
 13858 739d D8730000 		.long	0x73d8
 13859 73a1 1D       		.uleb128 0x1d
 13860 73a2 00000000 		.long	.LASF522
 13861 73a6 7A640000 		.long	0x647a
 13862 73aa 62       		.uleb128 0x62
 13863 73ab 00000000 		.long	.LASF538
 13864 73af B9730000 		.long	0x73b9
 13865 73b3 60       		.uleb128 0x60
 13866 73b4 69640000 		.long	0x6469
 13867 73b8 00       		.byte	0
 13868 73b9 9501     		.uleb128 0x95
 13869 73bb 5F5F6600 		.string	"__f"
 13870 73bf 06       		.byte	0x6
 13871 73c0 7706     		.value	0x677
 13872 73c2 D8730000 		.long	0x73d8
 13873 73c6 9C01     		.uleb128 0x9c
 13874 73c8 06       		.byte	0x6
 13875 73c9 7706     		.value	0x677
 13876 73cb D5730000 		.long	0x73d5
 13877 73cf 19       		.uleb128 0x19
 13878 73d0 DD730000 		.long	0x73dd
 13879 73d4 00       		.byte	0
 13880 73d5 9701     		.uleb128 0x97
 13881 73d7 00       		.byte	0
 13882 73d8 0C       		.uleb128 0xc
 13883 73d9 896D0000 		.long	0x6d89
 13884 73dd 0C       		.uleb128 0xc
 13885 73de 3F650000 		.long	0x653f
 13886 73e2 8B01     		.uleb128 0x8b
GAS LISTING /tmp/cceISX6N.s 			page 367


 13887 73e4 48110000 		.long	0x1148
 13888 73e8 03       		.byte	0x3
 13889 73e9 F1730000 		.long	0x73f1
 13890 73ed FC730000 		.long	0x73fc
 13891 73f1 8C01     		.uleb128 0x8c
 13892 73f3 00000000 		.long	.LASF1010
 13893 73f7 F06B0000 		.long	0x6bf0
 13894 73fb 00       		.byte	0
 13895 73fc 8B01     		.uleb128 0x8b
 13896 73fe EC190000 		.long	0x19ec
 13897 7402 03       		.byte	0x3
 13898 7403 0B740000 		.long	0x740b
 13899 7407 20740000 		.long	0x7420
 13900 740b 8C01     		.uleb128 0x8c
 13901 740d 00000000 		.long	.LASF1010
 13902 7411 20740000 		.long	0x7420
 13903 7415 8C01     		.uleb128 0x8c
 13904 7417 00000000 		.long	.LASF1021
 13905 741b 164C0000 		.long	0x4c16
 13906 741f 00       		.byte	0
 13907 7420 0C       		.uleb128 0xc
 13908 7421 51600000 		.long	0x6051
 13909 7425 9D01     		.uleb128 0x9d
 13910 7427 00000000 		.long	.LASF1108
 13911 742b 01       		.byte	0x1
 13912 742c 49740000 		.long	0x7449
 13913 7430 9101     		.uleb128 0x91
 13914 7432 00000000 		.long	.LASF1035
 13915 7436 0A       		.byte	0xa
 13916 7437 2E       		.byte	0x2e
 13917 7438 06490000 		.long	0x4906
 13918 743c 9101     		.uleb128 0x91
 13919 743e 00000000 		.long	.LASF1036
 13920 7442 0A       		.byte	0xa
 13921 7443 2E       		.byte	0x2e
 13922 7444 06490000 		.long	0x4906
 13923 7448 00       		.byte	0
 13924 7449 8B01     		.uleb128 0x8b
 13925 744b 39640000 		.long	0x6439
 13926 744f 03       		.byte	0x3
 13927 7450 58740000 		.long	0x7458
 13928 7454 63740000 		.long	0x7463
 13929 7458 8C01     		.uleb128 0x8c
 13930 745a 00000000 		.long	.LASF1010
 13931 745e 63740000 		.long	0x7463
 13932 7462 00       		.byte	0
 13933 7463 0C       		.uleb128 0xc
 13934 7464 6F640000 		.long	0x646f
 13935 7468 9E01     		.uleb128 0x9e
 13936 746a 49740000 		.long	0x7449
 13937 746e 00000000 		.long	.LASF1007
 13938 7472 00000000 		.quad	.LFB2182
 13938      00000000 
 13939 747a 49000000 		.quad	.LFE2182-.LFB2182
 13939      00000000 
 13940 7482 01       		.uleb128 0x1
 13941 7483 9C       		.byte	0x9c
GAS LISTING /tmp/cceISX6N.s 			page 368


 13942 7484 8C740000 		.long	0x748c
 13943 7488 59760000 		.long	0x7659
 13944 748c 9F01     		.uleb128 0x9f
 13945 748e 58740000 		.long	0x7458
 13946 7492 00000000 		.long	.LLST0
 13947 7496 A001     		.uleb128 0xa0
 13948 7498 3E6F0000 		.long	0x6f3e
 13949 749c 00000000 		.quad	.LBB505
 13949      00000000 
 13950 74a4 00000000 		.long	.Ldebug_ranges0+0
 13951 74a8 01       		.byte	0x1
 13952 74a9 1D       		.byte	0x1d
 13953 74aa 21760000 		.long	0x7621
 13954 74ae 9F01     		.uleb128 0x9f
 13955 74b0 4D6F0000 		.long	0x6f4d
 13956 74b4 00000000 		.long	.LLST0
 13957 74b8 A001     		.uleb128 0xa0
 13958 74ba 1F6F0000 		.long	0x6f1f
 13959 74be 00000000 		.quad	.LBB506
 13959      00000000 
 13960 74c6 00000000 		.long	.Ldebug_ranges0+0x30
 13961 74ca 01       		.byte	0x1
 13962 74cb 14       		.byte	0x14
 13963 74cc E9750000 		.long	0x75e9
 13964 74d0 9F01     		.uleb128 0x9f
 13965 74d2 2E6F0000 		.long	0x6f2e
 13966 74d6 00000000 		.long	.LLST0
 13967 74da A001     		.uleb128 0xa0
 13968 74dc 006F0000 		.long	0x6f00
 13969 74e0 00000000 		.quad	.LBB507
 13969      00000000 
 13970 74e8 00000000 		.long	.Ldebug_ranges0+0x60
 13971 74ec 01       		.byte	0x1
 13972 74ed 14       		.byte	0x14
 13973 74ee B1750000 		.long	0x75b1
 13974 74f2 9F01     		.uleb128 0x9f
 13975 74f4 0F6F0000 		.long	0x6f0f
 13976 74f8 00000000 		.long	.LLST0
 13977 74fc A001     		.uleb128 0xa0
 13978 74fe E16E0000 		.long	0x6ee1
 13979 7502 00000000 		.quad	.LBB508
 13979      00000000 
 13980 750a 00000000 		.long	.Ldebug_ranges0+0x90
 13981 750e 01       		.byte	0x1
 13982 750f 14       		.byte	0x14
 13983 7510 79750000 		.long	0x7579
 13984 7514 9F01     		.uleb128 0x9f
 13985 7516 F06E0000 		.long	0x6ef0
 13986 751a 00000000 		.long	.LLST0
 13987 751e A101     		.uleb128 0xa1
 13988 7520 C26E0000 		.long	0x6ec2
 13989 7524 00000000 		.quad	.LBB509
 13989      00000000 
 13990 752c 03000000 		.quad	.LBE509-.LBB509
 13990      00000000 
 13991 7534 01       		.byte	0x1
 13992 7535 14       		.byte	0x14
GAS LISTING /tmp/cceISX6N.s 			page 369


 13993 7536 45750000 		.long	0x7545
 13994 753a 9F01     		.uleb128 0x9f
 13995 753c D16E0000 		.long	0x6ed1
 13996 7540 00000000 		.long	.LLST0
 13997 7544 00       		.byte	0
 13998 7545 A201     		.uleb128 0xa2
 13999 7547 1E670000 		.long	0x671e
 14000 754b 00000000 		.quad	.LBB511
 14000      00000000 
 14001 7553 00000000 		.long	.Ldebug_ranges0+0xc0
 14002 7557 01       		.byte	0x1
 14003 7558 14       		.byte	0x14
 14004 7559 9F01     		.uleb128 0x9f
 14005 755b 2D670000 		.long	0x672d
 14006 755f 00000000 		.long	.LLST6
 14007 7563 9F01     		.uleb128 0x9f
 14008 7565 41670000 		.long	0x6741
 14009 7569 00000000 		.long	.LLST7
 14010 756d 9F01     		.uleb128 0x9f
 14011 756f 37670000 		.long	0x6737
 14012 7573 00000000 		.long	.LLST8
 14013 7577 00       		.byte	0
 14014 7578 00       		.byte	0
 14015 7579 A301     		.uleb128 0xa3
 14016 757b EB660000 		.long	0x66eb
 14017 757f 00000000 		.quad	.LBB516
 14017      00000000 
 14018 7587 05000000 		.quad	.LBE516-.LBB516
 14018      00000000 
 14019 758f 01       		.byte	0x1
 14020 7590 14       		.byte	0x14
 14021 7591 9F01     		.uleb128 0x9f
 14022 7593 FA660000 		.long	0x66fa
 14023 7597 00000000 		.long	.LLST9
 14024 759b 9F01     		.uleb128 0x9f
 14025 759d 0E670000 		.long	0x670e
 14026 75a1 00000000 		.long	.LLST10
 14027 75a5 9F01     		.uleb128 0x9f
 14028 75a7 04670000 		.long	0x6704
 14029 75ab 00000000 		.long	.LLST11
 14030 75af 00       		.byte	0
 14031 75b0 00       		.byte	0
 14032 75b1 A301     		.uleb128 0xa3
 14033 75b3 1E670000 		.long	0x671e
 14034 75b7 00000000 		.quad	.LBB519
 14034      00000000 
 14035 75bf 05000000 		.quad	.LBE519-.LBB519
 14035      00000000 
 14036 75c7 01       		.byte	0x1
 14037 75c8 14       		.byte	0x14
 14038 75c9 9F01     		.uleb128 0x9f
 14039 75cb 2D670000 		.long	0x672d
 14040 75cf 00000000 		.long	.LLST6
 14041 75d3 9F01     		.uleb128 0x9f
 14042 75d5 41670000 		.long	0x6741
 14043 75d9 00000000 		.long	.LLST13
 14044 75dd 9F01     		.uleb128 0x9f
GAS LISTING /tmp/cceISX6N.s 			page 370


 14045 75df 37670000 		.long	0x6737
 14046 75e3 00000000 		.long	.LLST14
 14047 75e7 00       		.byte	0
 14048 75e8 00       		.byte	0
 14049 75e9 A301     		.uleb128 0xa3
 14050 75eb EB660000 		.long	0x66eb
 14051 75ef 00000000 		.quad	.LBB522
 14051      00000000 
 14052 75f7 05000000 		.quad	.LBE522-.LBB522
 14052      00000000 
 14053 75ff 01       		.byte	0x1
 14054 7600 14       		.byte	0x14
 14055 7601 9F01     		.uleb128 0x9f
 14056 7603 FA660000 		.long	0x66fa
 14057 7607 00000000 		.long	.LLST9
 14058 760b 9F01     		.uleb128 0x9f
 14059 760d 0E670000 		.long	0x670e
 14060 7611 00000000 		.long	.LLST16
 14061 7615 9F01     		.uleb128 0x9f
 14062 7617 04670000 		.long	0x6704
 14063 761b 00000000 		.long	.LLST17
 14064 761f 00       		.byte	0
 14065 7620 00       		.byte	0
 14066 7621 A201     		.uleb128 0xa2
 14067 7623 51670000 		.long	0x6751
 14068 7627 00000000 		.quad	.LBB524
 14068      00000000 
 14069 762f 00000000 		.long	.Ldebug_ranges0+0xf0
 14070 7633 01       		.byte	0x1
 14071 7634 1D       		.byte	0x1d
 14072 7635 9F01     		.uleb128 0x9f
 14073 7637 60670000 		.long	0x6760
 14074 763b 00000000 		.long	.LLST18
 14075 763f 9F01     		.uleb128 0x9f
 14076 7641 6A670000 		.long	0x676a
 14077 7645 00000000 		.long	.LLST19
 14078 7649 A401     		.uleb128 0xa4
 14079 764b 00000000 		.quad	.LVL1
 14079      00000000 
 14080 7653 5B8F0000 		.long	0x8f5b
 14081 7657 00       		.byte	0
 14082 7658 00       		.byte	0
 14083 7659 A501     		.uleb128 0xa5
 14084 765b 28680000 		.long	0x6828
 14085 765f 00000000 		.quad	.LFB2369
 14085      00000000 
 14086 7667 15000000 		.quad	.LFE2369-.LFB2369
 14086      00000000 
 14087 766f 01       		.uleb128 0x1
 14088 7670 9C       		.byte	0x9c
 14089 7671 FD760000 		.long	0x76fd
 14090 7675 1D       		.uleb128 0x1d
 14091 7676 00000000 		.long	.LASF393
 14092 767a 1F0F0000 		.long	0xf1f
 14093 767e 9F01     		.uleb128 0x9f
 14094 7680 3C680000 		.long	0x683c
 14095 7684 00000000 		.long	.LLST20
GAS LISTING /tmp/cceISX6N.s 			page 371


 14096 7688 A601     		.uleb128 0xa6
 14097 768a 49680000 		.long	0x6849
 14098 768e 06       		.uleb128 0x6
 14099 768f FA       		.byte	0xfa
 14100 7690 49680000 		.long	0x6849
 14101 7694 9F       		.byte	0x9f
 14102 7695 A701     		.uleb128 0xa7
 14103 7697 E4670000 		.long	0x67e4
 14104 769b 00000000 		.quad	.LBB531
 14104      00000000 
 14105 76a3 0B000000 		.quad	.LBE531-.LBB531
 14105      00000000 
 14106 76ab 02       		.byte	0x2
 14107 76ac 1502     		.value	0x215
 14108 76ae A801     		.uleb128 0xa8
 14109 76b0 FD670000 		.long	0x67fd
 14110 76b4 01       		.byte	0x1
 14111 76b5 9F01     		.uleb128 0x9f
 14112 76b7 F3670000 		.long	0x67f3
 14113 76bb 00000000 		.long	.LLST21
 14114 76bf A101     		.uleb128 0xa1
 14115 76c1 BA670000 		.long	0x67ba
 14116 76c5 00000000 		.quad	.LBB533
 14116      00000000 
 14117 76cd 06000000 		.quad	.LBE533-.LBB533
 14117      00000000 
 14118 76d5 04       		.byte	0x4
 14119 76d6 98       		.byte	0x98
 14120 76d7 ED760000 		.long	0x76ed
 14121 76db A801     		.uleb128 0xa8
 14122 76dd D1670000 		.long	0x67d1
 14123 76e1 01       		.byte	0x1
 14124 76e2 9F01     		.uleb128 0x9f
 14125 76e4 C5670000 		.long	0x67c5
 14126 76e8 00000000 		.long	.LLST22
 14127 76ec 00       		.byte	0
 14128 76ed A401     		.uleb128 0xa4
 14129 76ef 00000000 		.quad	.LVL4
 14129      00000000 
 14130 76f7 7E3D0000 		.long	0x3d7e
 14131 76fb 00       		.byte	0
 14132 76fc 00       		.byte	0
 14133 76fd 71       		.uleb128 0x71
 14134 76fe 08       		.byte	0x8
 14135 76ff 03770000 		.long	0x7703
 14136 7703 0C       		.uleb128 0xc
 14137 7704 08770000 		.long	0x7708
 14138 7708 A901     		.uleb128 0xa9
 14139 770a 8B01     		.uleb128 0x8b
 14140 770c 44340000 		.long	0x3444
 14141 7710 03       		.byte	0x3
 14142 7711 27770000 		.long	0x7727
 14143 7715 49770000 		.long	0x7749
 14144 7719 0A       		.uleb128 0xa
 14145 771a 5F547000 		.string	"_Tp"
 14146 771e D9640000 		.long	0x64d9
 14147 7722 5C       		.uleb128 0x5c
GAS LISTING /tmp/cceISX6N.s 			page 372


 14148 7723 00000000 		.long	.LASF517
 14149 7727 8C01     		.uleb128 0x8c
 14150 7729 00000000 		.long	.LASF1010
 14151 772d 79710000 		.long	0x7179
 14152 7731 9401     		.uleb128 0x94
 14153 7733 00000000 		.long	.LASF1037
 14154 7737 06       		.byte	0x6
 14155 7738 8202     		.value	0x282
 14156 773a 49770000 		.long	0x7749
 14157 773e 19       		.uleb128 0x19
 14158 773f FD760000 		.long	0x76fd
 14159 7743 9801     		.uleb128 0x98
 14160 7745 06       		.byte	0x6
 14161 7746 8202     		.value	0x282
 14162 7748 00       		.byte	0
 14163 7749 0C       		.uleb128 0xc
 14164 774a D9640000 		.long	0x64d9
 14165 774e 9001     		.uleb128 0x90
 14166 7750 863F0000 		.long	0x3f86
 14167 7754 03       		.byte	0x3
 14168 7755 79770000 		.long	0x7779
 14169 7759 1D       		.uleb128 0x1d
 14170 775a 00000000 		.long	.LASF392
 14171 775e 3E490000 		.long	0x493e
 14172 7762 1D       		.uleb128 0x1d
 14173 7763 00000000 		.long	.LASF393
 14174 7767 1F0F0000 		.long	0xf1f
 14175 776b 9401     		.uleb128 0x94
 14176 776d 00000000 		.long	.LASF1022
 14177 7771 02       		.byte	0x2
 14178 7772 3402     		.value	0x234
 14179 7774 79770000 		.long	0x7779
 14180 7778 00       		.byte	0
 14181 7779 0C       		.uleb128 0xc
 14182 777a 1D610000 		.long	0x611d
 14183 777e 8B01     		.uleb128 0x8b
 14184 7780 AA310000 		.long	0x31aa
 14185 7784 03       		.byte	0x3
 14186 7785 8D770000 		.long	0x778d
 14187 7789 A5770000 		.long	0x77a5
 14188 778d 8C01     		.uleb128 0x8c
 14189 778f 00000000 		.long	.LASF1010
 14190 7793 A5770000 		.long	0x77a5
 14191 7797 9501     		.uleb128 0x95
 14192 7799 5F5F6300 		.string	"__c"
 14193 779d 09       		.byte	0x9
 14194 779e 6103     		.value	0x361
 14195 77a0 3E490000 		.long	0x493e
 14196 77a4 00       		.byte	0
 14197 77a5 0C       		.uleb128 0xc
 14198 77a6 906C0000 		.long	0x6c90
 14199 77aa AA01     		.uleb128 0xaa
 14200 77ac 00000000 		.long	.LASF1038
 14201 77b0 05       		.byte	0x5
 14202 77b1 10       		.byte	0x10
 14203 77b2 00000000 		.long	.LASF1039
 14204 77b6 00000000 		.quad	.LFB2219
GAS LISTING /tmp/cceISX6N.s 			page 373


 14204      00000000 
 14205 77be 27010000 		.quad	.LFE2219-.LFB2219
 14205      00000000 
 14206 77c6 01       		.uleb128 0x1
 14207 77c7 9C       		.byte	0x9c
 14208 77c8 167E0000 		.long	0x7e16
 14209 77cc 53       		.uleb128 0x53
 14210 77cd 4E00     		.string	"N"
 14211 77cf 06490000 		.long	0x4906
 14212 77d3 1027     		.value	0x2710
 14213 77d5 0A       		.uleb128 0xa
 14214 77d6 46756E00 		.string	"Fun"
 14215 77da D2340000 		.long	0x34d2
 14216 77de 5C       		.uleb128 0x5c
 14217 77df 00000000 		.long	.LASF1040
 14218 77e3 AB01     		.uleb128 0xab
 14219 77e5 00000000 		.long	.LASF1041
 14220 77e9 05       		.byte	0x5
 14221 77ea 10       		.byte	0x10
 14222 77eb 562D0000 		.long	0x2d56
 14223 77ef 00000000 		.long	.LLST23
 14224 77f3 AC01     		.uleb128 0xac
 14225 77f5 66756E00 		.string	"fun"
 14226 77f9 05       		.byte	0x5
 14227 77fa 10       		.byte	0x10
 14228 77fb D2340000 		.long	0x34d2
 14229 77ff 00000000 		.long	.LLST24
 14230 7803 AD01     		.uleb128 0xad
 14231 7805 05       		.byte	0x5
 14232 7806 10       		.byte	0x10
 14233 7807 AE01     		.uleb128 0xae
 14234 7809 00000000 		.long	.Ldebug_ranges0+0x130
 14235 780d AF01     		.uleb128 0xaf
 14236 780f 00000000 		.long	.LASF1043
 14237 7813 05       		.byte	0x5
 14238 7814 12       		.byte	0x12
 14239 7815 31050000 		.long	0x531
 14240 7819 00000000 		.long	.LLST25
 14241 781d 9201     		.uleb128 0x92
 14242 781f 656E6400 		.string	"end"
 14243 7823 05       		.byte	0x5
 14244 7824 18       		.byte	0x18
 14245 7825 31050000 		.long	0x531
 14246 7829 AF01     		.uleb128 0xaf
 14247 782b 00000000 		.long	.LASF1044
 14248 782f 05       		.byte	0x5
 14249 7830 1A       		.byte	0x1a
 14250 7831 C5020000 		.long	0x2c5
 14251 7835 00000000 		.long	.LLST26
 14252 7839 B001     		.uleb128 0xb0
 14253 783b 00000000 		.quad	.LBB603
 14253      00000000 
 14254 7843 1F000000 		.quad	.LBE603-.LBB603
 14254      00000000 
 14255 784b 13790000 		.long	0x7913
 14256 784f 9201     		.uleb128 0x92
 14257 7851 6900     		.string	"i"
GAS LISTING /tmp/cceISX6N.s 			page 374


 14258 7853 05       		.byte	0x5
 14259 7854 14       		.byte	0x14
 14260 7855 06490000 		.long	0x4906
 14261 7859 A301     		.uleb128 0xa3
 14262 785b F1710000 		.long	0x71f1
 14263 785f 00000000 		.quad	.LBB604
 14263      00000000 
 14264 7867 1A000000 		.quad	.LBE604-.LBB604
 14264      00000000 
 14265 786f 05       		.byte	0x5
 14266 7870 15       		.byte	0x15
 14267 7871 9F01     		.uleb128 0x9f
 14268 7873 0E720000 		.long	0x720e
 14269 7877 00000000 		.long	.LLST27
 14270 787b A701     		.uleb128 0xa7
 14271 787d 9F710000 		.long	0x719f
 14272 7881 00000000 		.quad	.LBB605
 14272      00000000 
 14273 7889 1A000000 		.quad	.LBE605-.LBB605
 14273      00000000 
 14274 7891 06       		.byte	0x6
 14275 7892 4B05     		.value	0x54b
 14276 7894 B101     		.uleb128 0xb1
 14277 7896 E6710000 		.long	0x71e6
 14278 789a B101     		.uleb128 0xb1
 14279 789c D9710000 		.long	0x71d9
 14280 78a0 9F01     		.uleb128 0x9f
 14281 78a2 CF710000 		.long	0x71cf
 14282 78a6 00000000 		.long	.LLST27
 14283 78aa A701     		.uleb128 0xa7
 14284 78ac 3A710000 		.long	0x713a
 14285 78b0 00000000 		.quad	.LBB606
 14285      00000000 
 14286 78b8 1A000000 		.quad	.LBE606-.LBB606
 14286      00000000 
 14287 78c0 06       		.byte	0x6
 14288 78c1 1005     		.value	0x510
 14289 78c3 9F01     		.uleb128 0x9f
 14290 78c5 66710000 		.long	0x7166
 14291 78c9 00000000 		.long	.LLST29
 14292 78cd 9F01     		.uleb128 0x9f
 14293 78cf 5C710000 		.long	0x715c
 14294 78d3 00000000 		.long	.LLST27
 14295 78d7 A701     		.uleb128 0xa7
 14296 78d9 0A770000 		.long	0x770a
 14297 78dd 00000000 		.quad	.LBB607
 14297      00000000 
 14298 78e5 1A000000 		.quad	.LBE607-.LBB607
 14298      00000000 
 14299 78ed 06       		.byte	0x6
 14300 78ee B102     		.value	0x2b1
 14301 78f0 9F01     		.uleb128 0x9f
 14302 78f2 3E770000 		.long	0x773e
 14303 78f6 00000000 		.long	.LLST29
 14304 78fa 9F01     		.uleb128 0x9f
 14305 78fc 31770000 		.long	0x7731
 14306 7900 00000000 		.long	.LLST29
GAS LISTING /tmp/cceISX6N.s 			page 375


 14307 7904 9F01     		.uleb128 0x9f
 14308 7906 27770000 		.long	0x7727
 14309 790a 00000000 		.long	.LLST27
 14310 790e 00       		.byte	0
 14311 790f 00       		.byte	0
 14312 7910 00       		.byte	0
 14313 7911 00       		.byte	0
 14314 7912 00       		.byte	0
 14315 7913 A001     		.uleb128 0xa0
 14316 7915 F1710000 		.long	0x71f1
 14317 7919 00000000 		.quad	.LBB609
 14317      00000000 
 14318 7921 00000000 		.long	.Ldebug_ranges0+0x190
 14319 7925 05       		.byte	0x5
 14320 7926 1B       		.byte	0x1b
 14321 7927 C0790000 		.long	0x79c0
 14322 792b 9F01     		.uleb128 0x9f
 14323 792d 0E720000 		.long	0x720e
 14324 7931 00000000 		.long	.LLST34
 14325 7935 B201     		.uleb128 0xb2
 14326 7937 9F710000 		.long	0x719f
 14327 793b 00000000 		.quad	.LBB610
 14327      00000000 
 14328 7943 00000000 		.long	.Ldebug_ranges0+0x190
 14329 7947 06       		.byte	0x6
 14330 7948 4B05     		.value	0x54b
 14331 794a B101     		.uleb128 0xb1
 14332 794c E6710000 		.long	0x71e6
 14333 7950 B101     		.uleb128 0xb1
 14334 7952 D9710000 		.long	0x71d9
 14335 7956 9F01     		.uleb128 0x9f
 14336 7958 CF710000 		.long	0x71cf
 14337 795c 00000000 		.long	.LLST34
 14338 7960 B201     		.uleb128 0xb2
 14339 7962 3A710000 		.long	0x713a
 14340 7966 00000000 		.quad	.LBB611
 14340      00000000 
 14341 796e 00000000 		.long	.Ldebug_ranges0+0x190
 14342 7972 06       		.byte	0x6
 14343 7973 1005     		.value	0x510
 14344 7975 9F01     		.uleb128 0x9f
 14345 7977 66710000 		.long	0x7166
 14346 797b 00000000 		.long	.LLST36
 14347 797f 9F01     		.uleb128 0x9f
 14348 7981 5C710000 		.long	0x715c
 14349 7985 00000000 		.long	.LLST34
 14350 7989 B201     		.uleb128 0xb2
 14351 798b 0A770000 		.long	0x770a
 14352 798f 00000000 		.quad	.LBB612
 14352      00000000 
 14353 7997 00000000 		.long	.Ldebug_ranges0+0x190
 14354 799b 06       		.byte	0x6
 14355 799c B102     		.value	0x2b1
 14356 799e 9F01     		.uleb128 0x9f
 14357 79a0 3E770000 		.long	0x773e
 14358 79a4 00000000 		.long	.LLST36
 14359 79a8 9F01     		.uleb128 0x9f
GAS LISTING /tmp/cceISX6N.s 			page 376


 14360 79aa 31770000 		.long	0x7731
 14361 79ae 00000000 		.long	.LLST36
 14362 79b2 9F01     		.uleb128 0x9f
 14363 79b4 27770000 		.long	0x7727
 14364 79b8 00000000 		.long	.LLST34
 14365 79bc 00       		.byte	0
 14366 79bd 00       		.byte	0
 14367 79be 00       		.byte	0
 14368 79bf 00       		.byte	0
 14369 79c0 A101     		.uleb128 0xa1
 14370 79c2 636F0000 		.long	0x6f63
 14371 79c6 00000000 		.quad	.LBB622
 14371      00000000 
 14372 79ce 07000000 		.quad	.LBE622-.LBB622
 14372      00000000 
 14373 79d6 05       		.byte	0x5
 14374 79d7 1A       		.byte	0x1a
 14375 79d8 2F7A0000 		.long	0x7a2f
 14376 79dc A601     		.uleb128 0xa6
 14377 79de 966F0000 		.long	0x6f96
 14378 79e2 06       		.uleb128 0x6
 14379 79e3 F2       		.byte	0xf2
 14380 79e4 00000000 		.long	.Ldebug_info0+30733
 14381 79e8 00       		.sleb128 0
 14382 79e9 A601     		.uleb128 0xa6
 14383 79eb 896F0000 		.long	0x6f89
 14384 79ef 06       		.uleb128 0x6
 14385 79f0 F2       		.byte	0xf2
 14386 79f1 00000000 		.long	.Ldebug_info0+30749
 14387 79f5 00       		.sleb128 0
 14388 79f6 A701     		.uleb128 0xa7
 14389 79f8 31690000 		.long	0x6931
 14390 79fc 00000000 		.quad	.LBB623
 14390      00000000 
 14391 7a04 07000000 		.quad	.LBE623-.LBB623
 14391      00000000 
 14392 7a0c 07       		.byte	0x7
 14393 7a0d 8B02     		.value	0x28b
 14394 7a0f B101     		.uleb128 0xb1
 14395 7a11 6D690000 		.long	0x696d
 14396 7a15 B101     		.uleb128 0xb1
 14397 7a17 60690000 		.long	0x6960
 14398 7a1b B301     		.uleb128 0xb3
 14399 7a1d 00000000 		.quad	.LBB624
 14399      00000000 
 14400 7a25 07000000 		.quad	.LBE624-.LBB624
 14400      00000000 
 14401 7a2d 00       		.byte	0
 14402 7a2e 00       		.byte	0
 14403 7a2f A001     		.uleb128 0xa0
 14404 7a31 EC6F0000 		.long	0x6fec
 14405 7a35 00000000 		.quad	.LBB626
 14405      00000000 
 14406 7a3d 00000000 		.long	.Ldebug_ranges0+0x1d0
 14407 7a41 05       		.byte	0x5
 14408 7a42 1B       		.byte	0x1b
 14409 7a43 D67A0000 		.long	0x7ad6
GAS LISTING /tmp/cceISX6N.s 			page 377


 14410 7a47 9F01     		.uleb128 0x9f
 14411 7a49 1F700000 		.long	0x701f
 14412 7a4d 00000000 		.long	.LLST41
 14413 7a51 B101     		.uleb128 0xb1
 14414 7a53 12700000 		.long	0x7012
 14415 7a57 B401     		.uleb128 0xb4
 14416 7a59 EA650000 		.long	0x65ea
 14417 7a5d 00000000 		.quad	.LBB628
 14417      00000000 
 14418 7a65 04000000 		.quad	.LBE628-.LBB628
 14418      00000000 
 14419 7a6d 08       		.byte	0x8
 14420 7a6e C60A     		.value	0xac6
 14421 7a70 C77A0000 		.long	0x7ac7
 14422 7a74 9F01     		.uleb128 0x9f
 14423 7a76 F9650000 		.long	0x65f9
 14424 7a7a 00000000 		.long	.LLST41
 14425 7a7e A701     		.uleb128 0xa7
 14426 7a80 D0650000 		.long	0x65d0
 14427 7a84 00000000 		.quad	.LBB630
 14427      00000000 
 14428 7a8c 04000000 		.quad	.LBE630-.LBB630
 14428      00000000 
 14429 7a94 08       		.byte	0x8
 14430 7a95 CC02     		.value	0x2cc
 14431 7a97 9F01     		.uleb128 0x9f
 14432 7a99 DF650000 		.long	0x65df
 14433 7a9d 00000000 		.long	.LLST41
 14434 7aa1 A701     		.uleb128 0xa7
 14435 7aa3 8C650000 		.long	0x658c
 14436 7aa7 00000000 		.quad	.LBB631
 14436      00000000 
 14437 7aaf 04000000 		.quad	.LBE631-.LBB631
 14437      00000000 
 14438 7ab7 08       		.byte	0x8
 14439 7ab8 2D01     		.value	0x12d
 14440 7aba 9F01     		.uleb128 0x9f
 14441 7abc 9B650000 		.long	0x659b
 14442 7ac0 00000000 		.long	.LLST41
 14443 7ac4 00       		.byte	0
 14444 7ac5 00       		.byte	0
 14445 7ac6 00       		.byte	0
 14446 7ac7 A401     		.uleb128 0xa4
 14447 7ac9 00000000 		.quad	.LVL15
 14447      00000000 
 14448 7ad1 0A400000 		.long	0x400a
 14449 7ad5 00       		.byte	0
 14450 7ad6 A001     		.uleb128 0xa0
 14451 7ad8 28680000 		.long	0x6828
 14452 7adc 00000000 		.quad	.LBB637
 14452      00000000 
 14453 7ae4 00000000 		.long	.Ldebug_ranges0+0x210
 14454 7ae8 05       		.byte	0x5
 14455 7ae9 1B       		.byte	0x1b
 14456 7aea 347B0000 		.long	0x7b34
 14457 7aee A601     		.uleb128 0xa6
 14458 7af0 49680000 		.long	0x6849
GAS LISTING /tmp/cceISX6N.s 			page 378


 14459 7af4 0A       		.uleb128 0xa
 14460 7af5 03       		.byte	0x3
 14461 7af6 00000000 		.quad	.LC2
 14461      00000000 
 14462 7afe 9F       		.byte	0x9f
 14463 7aff 9F01     		.uleb128 0x9f
 14464 7b01 3C680000 		.long	0x683c
 14465 7b05 00000000 		.long	.LLST45
 14466 7b09 B501     		.uleb128 0xb5
 14467 7b0b 00000000 		.quad	.LVL17
 14467      00000000 
 14468 7b13 0A400000 		.long	0x400a
 14469 7b17 B601     		.uleb128 0xb6
 14470 7b19 01       		.uleb128 0x1
 14471 7b1a 55       		.byte	0x55
 14472 7b1b 02       		.uleb128 0x2
 14473 7b1c 73       		.byte	0x73
 14474 7b1d 00       		.sleb128 0
 14475 7b1e B601     		.uleb128 0xb6
 14476 7b20 01       		.uleb128 0x1
 14477 7b21 54       		.byte	0x54
 14478 7b22 09       		.uleb128 0x9
 14479 7b23 03       		.byte	0x3
 14480 7b24 00000000 		.quad	.LC2
 14480      00000000 
 14481 7b2c B601     		.uleb128 0xb6
 14482 7b2e 01       		.uleb128 0x1
 14483 7b2f 51       		.byte	0x51
 14484 7b30 01       		.uleb128 0x1
 14485 7b31 32       		.byte	0x32
 14486 7b32 00       		.byte	0
 14487 7b33 00       		.byte	0
 14488 7b34 A001     		.uleb128 0xa0
 14489 7b36 AE6F0000 		.long	0x6fae
 14490 7b3a 00000000 		.quad	.LBB642
 14490      00000000 
 14491 7b42 00000000 		.long	.Ldebug_ranges0+0x240
 14492 7b46 05       		.byte	0x5
 14493 7b47 1B       		.byte	0x1b
 14494 7b48 B27B0000 		.long	0x7bb2
 14495 7b4c A601     		.uleb128 0xa6
 14496 7b4e D96F0000 		.long	0x6fd9
 14497 7b52 06       		.uleb128 0x6
 14498 7b53 F2       		.byte	0xf2
 14499 7b54 00000000 		.long	.Ldebug_info0+30761
 14500 7b58 00       		.sleb128 0
 14501 7b59 B101     		.uleb128 0xb1
 14502 7b5b CF6F0000 		.long	0x6fcf
 14503 7b5f B201     		.uleb128 0xb2
 14504 7b61 FD690000 		.long	0x69fd
 14505 7b65 00000000 		.quad	.LBB643
 14505      00000000 
 14506 7b6d 00000000 		.long	.Ldebug_ranges0+0x240
 14507 7b71 07       		.byte	0x7
 14508 7b72 0E01     		.value	0x10e
 14509 7b74 A601     		.uleb128 0xa6
 14510 7b76 236A0000 		.long	0x6a23
GAS LISTING /tmp/cceISX6N.s 			page 379


 14511 7b7a 06       		.uleb128 0x6
 14512 7b7b F2       		.byte	0xf2
 14513 7b7c 00000000 		.long	.Ldebug_info0+30761
 14514 7b80 00       		.sleb128 0
 14515 7b81 AE01     		.uleb128 0xae
 14516 7b83 00000000 		.long	.Ldebug_ranges0+0x240
 14517 7b87 A201     		.uleb128 0xa2
 14518 7b89 CC690000 		.long	0x69cc
 14519 7b8d 00000000 		.quad	.LBB645
 14519      00000000 
 14520 7b95 00000000 		.long	.Ldebug_ranges0+0x240
 14521 7b99 07       		.byte	0x7
 14522 7b9a CA       		.byte	0xca
 14523 7b9b A601     		.uleb128 0xa6
 14524 7b9d E9690000 		.long	0x69e9
 14525 7ba1 06       		.uleb128 0x6
 14526 7ba2 F2       		.byte	0xf2
 14527 7ba3 00000000 		.long	.Ldebug_info0+30761
 14528 7ba7 00       		.sleb128 0
 14529 7ba8 B701     		.uleb128 0xb7
 14530 7baa 00000000 		.long	.Ldebug_ranges0+0x240
 14531 7bae 00       		.byte	0
 14532 7baf 00       		.byte	0
 14533 7bb0 00       		.byte	0
 14534 7bb1 00       		.byte	0
 14535 7bb2 A001     		.uleb128 0xa0
 14536 7bb4 43700000 		.long	0x7043
 14537 7bb8 00000000 		.quad	.LBB651
 14537      00000000 
 14538 7bc0 00000000 		.long	.Ldebug_ranges0+0x270
 14539 7bc4 05       		.byte	0x5
 14540 7bc5 1B       		.byte	0x1b
 14541 7bc6 087C0000 		.long	0x7c08
 14542 7bca 9F01     		.uleb128 0x9f
 14543 7bcc 5C700000 		.long	0x705c
 14544 7bd0 00000000 		.long	.LLST46
 14545 7bd4 B101     		.uleb128 0xb1
 14546 7bd6 52700000 		.long	0x7052
 14547 7bda B501     		.uleb128 0xb5
 14548 7bdc 00000000 		.quad	.LVL19
 14548      00000000 
 14549 7be4 27310000 		.long	0x3127
 14550 7be8 B601     		.uleb128 0xb6
 14551 7bea 01       		.uleb128 0x1
 14552 7beb 55       		.byte	0x55
 14553 7bec 02       		.uleb128 0x2
 14554 7bed 73       		.byte	0x73
 14555 7bee 00       		.sleb128 0
 14556 7bef B601     		.uleb128 0xb6
 14557 7bf1 01       		.uleb128 0x1
 14558 7bf2 61       		.byte	0x61
 14559 7bf3 12       		.uleb128 0x12
 14560 7bf4 76       		.byte	0x76
 14561 7bf5 00       		.sleb128 0
 14562 7bf6 F7       		.byte	0xf7
 14563 7bf7 30       		.uleb128 0x30
 14564 7bf8 F7       		.byte	0xf7
GAS LISTING /tmp/cceISX6N.s 			page 380


 14565 7bf9 29       		.uleb128 0x29
 14566 7bfa F4       		.byte	0xf4
 14567 7bfb 29       		.uleb128 0x29
 14568 7bfc 08       		.byte	0x8
 14569 7bfd 00000000 		.long	0
 14570 7c01 80842E41 		.long	0x412e8480
 14571 7c05 1B       		.byte	0x1b
 14572 7c06 00       		.byte	0
 14573 7c07 00       		.byte	0
 14574 7c08 A001     		.uleb128 0xa0
 14575 7c0a 28680000 		.long	0x6828
 14576 7c0e 00000000 		.quad	.LBB657
 14576      00000000 
 14577 7c16 00000000 		.long	.Ldebug_ranges0+0x2b0
 14578 7c1a 05       		.byte	0x5
 14579 7c1b 1B       		.byte	0x1b
 14580 7c1c 667C0000 		.long	0x7c66
 14581 7c20 A601     		.uleb128 0xa6
 14582 7c22 49680000 		.long	0x6849
 14583 7c26 0A       		.uleb128 0xa
 14584 7c27 03       		.byte	0x3
 14585 7c28 00000000 		.quad	.LC4
 14585      00000000 
 14586 7c30 9F       		.byte	0x9f
 14587 7c31 9F01     		.uleb128 0x9f
 14588 7c33 3C680000 		.long	0x683c
 14589 7c37 00000000 		.long	.LLST47
 14590 7c3b B501     		.uleb128 0xb5
 14591 7c3d 00000000 		.quad	.LVL21
 14591      00000000 
 14592 7c45 0A400000 		.long	0x400a
 14593 7c49 B601     		.uleb128 0xb6
 14594 7c4b 01       		.uleb128 0x1
 14595 7c4c 55       		.byte	0x55
 14596 7c4d 02       		.uleb128 0x2
 14597 7c4e 73       		.byte	0x73
 14598 7c4f 00       		.sleb128 0
 14599 7c50 B601     		.uleb128 0xb6
 14600 7c52 01       		.uleb128 0x1
 14601 7c53 54       		.byte	0x54
 14602 7c54 09       		.uleb128 0x9
 14603 7c55 03       		.byte	0x3
 14604 7c56 00000000 		.quad	.LC4
 14604      00000000 
 14605 7c5e B601     		.uleb128 0xb6
 14606 7c60 01       		.uleb128 0x1
 14607 7c61 51       		.byte	0x51
 14608 7c62 01       		.uleb128 0x1
 14609 7c63 3E       		.byte	0x3e
 14610 7c64 00       		.byte	0
 14611 7c65 00       		.byte	0
 14612 7c66 A101     		.uleb128 0xa1
 14613 7c68 43700000 		.long	0x7043
 14614 7c6c 00000000 		.quad	.LBB662
 14614      00000000 
 14615 7c74 15000000 		.quad	.LBE662-.LBB662
 14615      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 381


 14616 7c7c 05       		.byte	0x5
 14617 7c7d 1B       		.byte	0x1b
 14618 7c7e AF7C0000 		.long	0x7caf
 14619 7c82 B101     		.uleb128 0xb1
 14620 7c84 5C700000 		.long	0x705c
 14621 7c88 B101     		.uleb128 0xb1
 14622 7c8a 52700000 		.long	0x7052
 14623 7c8e B501     		.uleb128 0xb5
 14624 7c90 00000000 		.quad	.LVL22
 14624      00000000 
 14625 7c98 27310000 		.long	0x3127
 14626 7c9c B601     		.uleb128 0xb6
 14627 7c9e 01       		.uleb128 0x1
 14628 7c9f 55       		.byte	0x55
 14629 7ca0 02       		.uleb128 0x2
 14630 7ca1 73       		.byte	0x73
 14631 7ca2 00       		.sleb128 0
 14632 7ca3 B601     		.uleb128 0xb6
 14633 7ca5 01       		.uleb128 0x1
 14634 7ca6 61       		.byte	0x61
 14635 7ca7 05       		.uleb128 0x5
 14636 7ca8 91       		.byte	0x91
 14637 7ca9 48       		.sleb128 -56
 14638 7caa F6       		.byte	0xf6
 14639 7cab 08       		.byte	0x8
 14640 7cac 29       		.uleb128 0x29
 14641 7cad 00       		.byte	0
 14642 7cae 00       		.byte	0
 14643 7caf A001     		.uleb128 0xa0
 14644 7cb1 84700000 		.long	0x7084
 14645 7cb5 00000000 		.quad	.LBB664
 14645      00000000 
 14646 7cbd 00000000 		.long	.Ldebug_ranges0+0x2e0
 14647 7cc1 05       		.byte	0x5
 14648 7cc2 1B       		.byte	0x1b
 14649 7cc3 F87D0000 		.long	0x7df8
 14650 7cc7 B101     		.uleb128 0xb1
 14651 7cc9 9D700000 		.long	0x709d
 14652 7ccd 9F01     		.uleb128 0x9f
 14653 7ccf 93700000 		.long	0x7093
 14654 7cd3 00000000 		.long	.LLST48
 14655 7cd7 A201     		.uleb128 0xa2
 14656 7cd9 4E770000 		.long	0x774e
 14657 7cdd 00000000 		.quad	.LBB665
 14657      00000000 
 14658 7ce5 00000000 		.long	.Ldebug_ranges0+0x2e0
 14659 7ce9 02       		.byte	0x2
 14660 7cea 71       		.byte	0x71
 14661 7ceb 9F01     		.uleb128 0x9f
 14662 7ced 6B770000 		.long	0x776b
 14663 7cf1 00000000 		.long	.LLST48
 14664 7cf5 B801     		.uleb128 0xb8
 14665 7cf7 B76C0000 		.long	0x6cb7
 14666 7cfb 00000000 		.quad	.LBB667
 14666      00000000 
 14667 7d03 00000000 		.long	.Ldebug_ranges0+0x330
 14668 7d07 02       		.byte	0x2
GAS LISTING /tmp/cceISX6N.s 			page 382


 14669 7d08 3502     		.value	0x235
 14670 7d0a AE7D0000 		.long	0x7dae
 14671 7d0e 9F01     		.uleb128 0x9f
 14672 7d10 C66C0000 		.long	0x6cc6
 14673 7d14 00000000 		.long	.LLST50
 14674 7d18 A801     		.uleb128 0xa8
 14675 7d1a D06C0000 		.long	0x6cd0
 14676 7d1e 0A       		.byte	0xa
 14677 7d1f B801     		.uleb128 0xb8
 14678 7d21 966C0000 		.long	0x6c96
 14679 7d25 00000000 		.quad	.LBB668
 14679      00000000 
 14680 7d2d 00000000 		.long	.Ldebug_ranges0+0x360
 14681 7d31 04       		.byte	0x4
 14682 7d32 BC01     		.value	0x1bc
 14683 7d34 517D0000 		.long	0x7d51
 14684 7d38 9F01     		.uleb128 0x9f
 14685 7d3a AA6C0000 		.long	0x6caa
 14686 7d3e 00000000 		.long	.LLST51
 14687 7d42 A401     		.uleb128 0xa4
 14688 7d44 00000000 		.quad	.LVL37
 14688      00000000 
 14689 7d4c 4A400000 		.long	0x404a
 14690 7d50 00       		.byte	0
 14691 7d51 B201     		.uleb128 0xb2
 14692 7d53 7E770000 		.long	0x777e
 14693 7d57 00000000 		.quad	.LBB671
 14693      00000000 
 14694 7d5f 00000000 		.long	.Ldebug_ranges0+0x390
 14695 7d63 04       		.byte	0x4
 14696 7d64 BC01     		.value	0x1bc
 14697 7d66 9F01     		.uleb128 0x9f
 14698 7d68 97770000 		.long	0x7797
 14699 7d6c 00000000 		.long	.LLST52
 14700 7d70 9F01     		.uleb128 0x9f
 14701 7d72 8D770000 		.long	0x778d
 14702 7d76 00000000 		.long	.LLST53
 14703 7d7a B901     		.uleb128 0xb9
 14704 7d7c 00000000 		.quad	.LVL34
 14704      00000000 
 14705 7d84 DB310000 		.long	0x31db
 14706 7d88 947D0000 		.long	0x7d94
 14707 7d8c B601     		.uleb128 0xb6
 14708 7d8e 01       		.uleb128 0x1
 14709 7d8f 55       		.byte	0x55
 14710 7d90 02       		.uleb128 0x2
 14711 7d91 73       		.byte	0x73
 14712 7d92 00       		.sleb128 0
 14713 7d93 00       		.byte	0
 14714 7d94 BA01     		.uleb128 0xba
 14715 7d96 00000000 		.quad	.LVL35
 14715      00000000 
 14716 7d9e B601     		.uleb128 0xb6
 14717 7da0 01       		.uleb128 0x1
 14718 7da1 55       		.byte	0x55
 14719 7da2 02       		.uleb128 0x2
 14720 7da3 73       		.byte	0x73
GAS LISTING /tmp/cceISX6N.s 			page 383


 14721 7da4 00       		.sleb128 0
 14722 7da5 B601     		.uleb128 0xb6
 14723 7da7 01       		.uleb128 0x1
 14724 7da8 54       		.byte	0x54
 14725 7da9 01       		.uleb128 0x1
 14726 7daa 3A       		.byte	0x3a
 14727 7dab 00       		.byte	0
 14728 7dac 00       		.byte	0
 14729 7dad 00       		.byte	0
 14730 7dae B801     		.uleb128 0xb8
 14731 7db0 DE6C0000 		.long	0x6cde
 14732 7db4 00000000 		.quad	.LBB676
 14732      00000000 
 14733 7dbc 00000000 		.long	.Ldebug_ranges0+0x3c0
 14734 7dc0 02       		.byte	0x2
 14735 7dc1 3502     		.value	0x235
 14736 7dc3 E07D0000 		.long	0x7de0
 14737 7dc7 9F01     		.uleb128 0x9f
 14738 7dc9 FB6C0000 		.long	0x6cfb
 14739 7dcd 00000000 		.long	.LLST54
 14740 7dd1 BB01     		.uleb128 0xbb
 14741 7dd3 00000000 		.quad	.LVL33
 14741      00000000 
 14742 7ddb 53310000 		.long	0x3153
 14743 7ddf 00       		.byte	0
 14744 7de0 B501     		.uleb128 0xb5
 14745 7de2 00000000 		.quad	.LVL28
 14745      00000000 
 14746 7dea 71310000 		.long	0x3171
 14747 7dee B601     		.uleb128 0xb6
 14748 7df0 01       		.uleb128 0x1
 14749 7df1 55       		.byte	0x55
 14750 7df2 02       		.uleb128 0x2
 14751 7df3 76       		.byte	0x76
 14752 7df4 00       		.sleb128 0
 14753 7df5 00       		.byte	0
 14754 7df6 00       		.byte	0
 14755 7df7 00       		.byte	0
 14756 7df8 A401     		.uleb128 0xa4
 14757 7dfa 00000000 		.quad	.LVL6
 14757      00000000 
 14758 7e02 AB020000 		.long	0x2ab
 14759 7e06 A401     		.uleb128 0xa4
 14760 7e08 00000000 		.quad	.LVL9
 14760      00000000 
 14761 7e10 AB020000 		.long	0x2ab
 14762 7e14 00       		.byte	0
 14763 7e15 00       		.byte	0
 14764 7e16 BC01     		.uleb128 0xbc
 14765 7e18 00000000 		.long	.LASF1046
 14766 7e1c 05       		.byte	0x5
 14767 7e1d 10       		.byte	0x10
 14768 7e1e 01       		.byte	0x1
 14769 7e1f 8A7E0000 		.long	0x7e8a
 14770 7e23 0B       		.uleb128 0xb
 14771 7e24 4E00     		.string	"N"
 14772 7e26 06490000 		.long	0x4906
GAS LISTING /tmp/cceISX6N.s 			page 384


 14773 7e2a 01       		.byte	0x1
 14774 7e2b 0A       		.uleb128 0xa
 14775 7e2c 46756E00 		.string	"Fun"
 14776 7e30 B97F0000 		.long	0x7fb9
 14777 7e34 5C       		.uleb128 0x5c
 14778 7e35 00000000 		.long	.LASF1040
 14779 7e39 9101     		.uleb128 0x91
 14780 7e3b 00000000 		.long	.LASF1041
 14781 7e3f 05       		.byte	0x5
 14782 7e40 10       		.byte	0x10
 14783 7e41 562D0000 		.long	0x2d56
 14784 7e45 9301     		.uleb128 0x93
 14785 7e47 66756E00 		.string	"fun"
 14786 7e4b 05       		.byte	0x5
 14787 7e4c 10       		.byte	0x10
 14788 7e4d B97F0000 		.long	0x7fb9
 14789 7e51 AD01     		.uleb128 0xad
 14790 7e53 05       		.byte	0x5
 14791 7e54 10       		.byte	0x10
 14792 7e55 8E01     		.uleb128 0x8e
 14793 7e57 8F01     		.uleb128 0x8f
 14794 7e59 00000000 		.long	.LASF1043
 14795 7e5d 05       		.byte	0x5
 14796 7e5e 12       		.byte	0x12
 14797 7e5f 31050000 		.long	0x531
 14798 7e63 9201     		.uleb128 0x92
 14799 7e65 656E6400 		.string	"end"
 14800 7e69 05       		.byte	0x5
 14801 7e6a 18       		.byte	0x18
 14802 7e6b 31050000 		.long	0x531
 14803 7e6f 8F01     		.uleb128 0x8f
 14804 7e71 00000000 		.long	.LASF1044
 14805 7e75 05       		.byte	0x5
 14806 7e76 1A       		.byte	0x1a
 14807 7e77 C5020000 		.long	0x2c5
 14808 7e7b 8E01     		.uleb128 0x8e
 14809 7e7d 9201     		.uleb128 0x92
 14810 7e7f 6900     		.string	"i"
 14811 7e81 05       		.byte	0x5
 14812 7e82 14       		.byte	0x14
 14813 7e83 06490000 		.long	0x4906
 14814 7e87 00       		.byte	0
 14815 7e88 00       		.byte	0
 14816 7e89 00       		.byte	0
 14817 7e8a 73       		.uleb128 0x73
 14818 7e8b 08       		.byte	0x8
 14819 7e8c FA630000 		.long	0x63fa
 14820 7e90 BD01     		.uleb128 0xbd
 14821 7e92 00000000 		.long	.LASF1047
 14822 7e96 0A       		.byte	0xa
 14823 7e97 0E       		.byte	0xe
 14824 7e98 06490000 		.long	0x4906
 14825 7e9c 00000000 		.quad	.LFB2108
 14825      00000000 
 14826 7ea4 6F030000 		.quad	.LFE2108-.LFB2108
 14826      00000000 
 14827 7eac 01       		.uleb128 0x1
GAS LISTING /tmp/cceISX6N.s 			page 385


 14828 7ead 9C       		.byte	0x9c
 14829 7eae 058D0000 		.long	0x8d05
 14830 7eb2 AB01     		.uleb128 0xab
 14831 7eb4 00000000 		.long	.LASF1048
 14832 7eb8 0A       		.byte	0xa
 14833 7eb9 0E       		.byte	0xe
 14834 7eba 06490000 		.long	0x4906
 14835 7ebe 00000000 		.long	.LLST55
 14836 7ec2 AB01     		.uleb128 0xab
 14837 7ec4 00000000 		.long	.LASF1049
 14838 7ec8 0A       		.byte	0xa
 14839 7ec9 0E       		.byte	0xe
 14840 7eca E45B0000 		.long	0x5be4
 14841 7ece 00000000 		.long	.LLST56
 14842 7ed2 BE01     		.uleb128 0xbe
 14843 7ed4 00000000 		.long	.Ldebug_ranges0+0x3f0
 14844 7ed8 D48C0000 		.long	0x8cd4
 14845 7edc BF01     		.uleb128 0xbf
 14846 7ede 7800     		.string	"x"
 14847 7ee0 0A       		.byte	0xa
 14848 7ee1 12       		.byte	0x12
 14849 7ee2 29000000 		.long	0x29
 14850 7ee6 03       		.uleb128 0x3
 14851 7ee7 91       		.byte	0x91
 14852 7ee8 D87E     		.sleb128 -168
 14853 7eea C001     		.uleb128 0xc0
 14854 7eec 5600     		.string	"V"
 14855 7eee 0A       		.byte	0xa
 14856 7eef 13       		.byte	0x13
 14857 7ef0 45490000 		.long	0x4945
 14858 7ef4 00000000 		.long	.LLST57
 14859 7ef8 BF01     		.uleb128 0xbf
 14860 7efa 6F6E6500 		.string	"one"
 14861 7efe 0A       		.byte	0xa
 14862 7eff 14       		.byte	0x14
 14863 7f00 AE490000 		.long	0x49ae
 14864 7f04 0C       		.uleb128 0xc
 14865 7f05 9E       		.byte	0x9e
 14866 7f06 08       		.uleb128 0x8
 14867 7f07 00000000 		.long	0
 14868 7f0b 0000F03F 		.long	0x3ff00000
 14869 7f0f 93       		.byte	0x93
 14870 7f10 08       		.uleb128 0x8
 14871 7f11 BF01     		.uleb128 0xbf
 14872 7f13 74776F00 		.string	"two"
 14873 7f17 0A       		.byte	0xa
 14874 7f18 14       		.byte	0x14
 14875 7f19 AE490000 		.long	0x49ae
 14876 7f1d 0C       		.uleb128 0xc
 14877 7f1e 9E       		.byte	0x9e
 14878 7f1f 08       		.uleb128 0x8
 14879 7f20 00000000 		.long	0
 14880 7f24 00000040 		.long	0x40000000
 14881 7f28 93       		.byte	0x93
 14882 7f29 08       		.uleb128 0x8
 14883 7f2a C101     		.uleb128 0xc1
 14884 7f2c 00000000 		.long	.LASF1050
GAS LISTING /tmp/cceISX6N.s 			page 386


 14885 7f30 0A       		.byte	0xa
 14886 7f31 14       		.byte	0x14
 14887 7f32 AE490000 		.long	0x49ae
 14888 7f36 0C       		.uleb128 0xc
 14889 7f37 9E       		.byte	0x9e
 14890 7f38 08       		.uleb128 0x8
 14891 7f39 00000000 		.long	0
 14892 7f3d 00000840 		.long	0x40080000
 14893 7f41 93       		.byte	0x93
 14894 7f42 08       		.uleb128 0x8
 14895 7f43 BF01     		.uleb128 0xbf
 14896 7f45 6F323500 		.string	"o25"
 14897 7f49 0A       		.byte	0xa
 14898 7f4a 14       		.byte	0x14
 14899 7f4b AE490000 		.long	0x49ae
 14900 7f4f 0C       		.uleb128 0xc
 14901 7f50 9E       		.byte	0x9e
 14902 7f51 08       		.uleb128 0x8
 14903 7f52 00000000 		.long	0
 14904 7f56 0000D03F 		.long	0x3fd00000
 14905 7f5a 93       		.byte	0x93
 14906 7f5b 08       		.uleb128 0x8
 14907 7f5c C001     		.uleb128 0xc0
 14908 7f5e 583200   		.string	"X2"
 14909 7f61 0A       		.byte	0xa
 14910 7f62 15       		.byte	0x15
 14911 7f63 92610000 		.long	0x6192
 14912 7f67 00000000 		.long	.LLST58
 14913 7f6b AF01     		.uleb128 0xaf
 14914 7f6d 00000000 		.long	.LASF1051
 14915 7f71 0A       		.byte	0xa
 14916 7f72 16       		.byte	0x16
 14917 7f73 2C620000 		.long	0x622c
 14918 7f77 00000000 		.long	.LLST59
 14919 7f7b AF01     		.uleb128 0xaf
 14920 7f7d 00000000 		.long	.LASF1052
 14921 7f81 0A       		.byte	0xa
 14922 7f82 17       		.byte	0x17
 14923 7f83 C6620000 		.long	0x62c6
 14924 7f87 00000000 		.long	.LLST60
 14925 7f8b AF01     		.uleb128 0xaf
 14926 7f8d 00000000 		.long	.LASF1053
 14927 7f91 0A       		.byte	0xa
 14928 7f92 18       		.byte	0x18
 14929 7f93 60630000 		.long	0x6360
 14930 7f97 00000000 		.long	.LLST61
 14931 7f9b C101     		.uleb128 0xc1
 14932 7f9d 00000000 		.long	.LASF1054
 14933 7fa1 0A       		.byte	0xa
 14934 7fa2 19       		.byte	0x19
 14935 7fa3 FA630000 		.long	0x63fa
 14936 7fa7 03       		.uleb128 0x3
 14937 7fa8 91       		.byte	0x91
 14938 7fa9 807F     		.sleb128 -128
 14939 7fab C201     		.uleb128 0xc2
 14940 7fad 00000000 		.long	.LASF1055
 14941 7fb1 0A       		.byte	0xa
GAS LISTING /tmp/cceISX6N.s 			page 387


 14942 7fb2 26       		.byte	0x26
 14943 7fb3 164C0000 		.long	0x4c16
 14944 7fb7 1027     		.value	0x2710
 14945 7fb9 05       		.uleb128 0x5
 14946 7fba 00000000 		.long	.LASF1056
 14947 7fbe 08       		.byte	0x8
 14948 7fbf 0A       		.byte	0xa
 14949 7fc0 28       		.byte	0x28
 14950 7fc1 6E800000 		.long	0x806e
 14951 7fc5 28       		.uleb128 0x28
 14952 7fc6 00000000 		.long	.LASF1015
 14953 7fca 0A       		.byte	0xa
 14954 7fcb 2A       		.byte	0x2a
 14955 7fcc 8A7E0000 		.long	0x7e8a
 14956 7fd0 00       		.byte	0
 14957 7fd1 C301     		.uleb128 0xc3
 14958 7fd3 00000000 		.long	.LASF1057
 14959 7fd7 DF7F0000 		.long	0x7fdf
 14960 7fdb F67F0000 		.long	0x7ff6
 14961 7fdf 09       		.uleb128 0x9
 14962 7fe0 E47F0000 		.long	0x7fe4
 14963 7fe4 71       		.uleb128 0x71
 14964 7fe5 08       		.byte	0x8
 14965 7fe6 B97F0000 		.long	0x7fb9
 14966 7fea 19       		.uleb128 0x19
 14967 7feb EF7F0000 		.long	0x7fef
 14968 7fef 7F       		.uleb128 0x7f
 14969 7ff0 08       		.byte	0x8
 14970 7ff1 B97F0000 		.long	0x7fb9
 14971 7ff5 00       		.byte	0
 14972 7ff6 C301     		.uleb128 0xc3
 14973 7ff8 00000000 		.long	.LASF1057
 14974 7ffc 04800000 		.long	0x8004
 14975 8000 1A800000 		.long	0x801a
 14976 8004 09       		.uleb128 0x9
 14977 8005 E47F0000 		.long	0x7fe4
 14978 8009 19       		.uleb128 0x19
 14979 800a 0E800000 		.long	0x800e
 14980 800e 73       		.uleb128 0x73
 14981 800f 08       		.byte	0x8
 14982 8010 14800000 		.long	0x8014
 14983 8014 0C       		.uleb128 0xc
 14984 8015 B97F0000 		.long	0x7fb9
 14985 8019 00       		.byte	0
 14986 801a C301     		.uleb128 0xc3
 14987 801c 00000000 		.long	.LASF1057
 14988 8020 28800000 		.long	0x8028
 14989 8024 2E800000 		.long	0x802e
 14990 8028 09       		.uleb128 0x9
 14991 8029 E47F0000 		.long	0x7fe4
 14992 802d 00       		.byte	0
 14993 802e C401     		.uleb128 0xc4
 14994 8030 00000000 		.long	.LASF715
 14995 8034 29000000 		.long	0x29
 14996 8038 03       		.byte	0x3
 14997 8039 43800000 		.long	0x8043
 14998 803d 71       		.uleb128 0x71
GAS LISTING /tmp/cceISX6N.s 			page 388


 14999 803e 08       		.byte	0x8
 15000 803f 14800000 		.long	0x8014
 15001 8043 8C01     		.uleb128 0x8c
 15002 8045 00000000 		.long	.LASF1058
 15003 8049 4D800000 		.long	0x804d
 15004 804d 0C       		.uleb128 0xc
 15005 804e 3D800000 		.long	0x803d
 15006 8052 8E01     		.uleb128 0x8e
 15007 8054 C501     		.uleb128 0xc5
 15008 8056 00000000 		.long	.LASF1054
 15009 805a 8A7E0000 		.long	0x7e8a
 15010 805e 8E01     		.uleb128 0x8e
 15011 8060 9201     		.uleb128 0x92
 15012 8062 6900     		.string	"i"
 15013 8064 0A       		.byte	0xa
 15014 8065 29       		.byte	0x29
 15015 8066 06490000 		.long	0x4906
 15016 806a 00       		.byte	0
 15017 806b 00       		.byte	0
 15018 806c 00       		.byte	0
 15019 806d 00       		.byte	0
 15020 806e A001     		.uleb128 0xa0
 15021 8070 84700000 		.long	0x7084
 15022 8074 00000000 		.quad	.LBB865
 15022      00000000 
 15023 807c 00000000 		.long	.Ldebug_ranges0+0x430
 15024 8080 0A       		.byte	0xa
 15025 8081 10       		.byte	0x10
 15026 8082 A5800000 		.long	0x80a5
 15027 8086 B101     		.uleb128 0xb1
 15028 8088 9D700000 		.long	0x709d
 15029 808c 9F01     		.uleb128 0x9f
 15030 808e 93700000 		.long	0x7093
 15031 8092 00000000 		.long	.LLST62
 15032 8096 A401     		.uleb128 0xa4
 15033 8098 00000000 		.quad	.LVL42
 15033      00000000 
 15034 80a0 4E770000 		.long	0x774e
 15035 80a4 00       		.byte	0
 15036 80a5 A001     		.uleb128 0xa0
 15037 80a7 51730000 		.long	0x7351
 15038 80ab 00000000 		.quad	.LBB869
 15038      00000000 
 15039 80b3 00000000 		.long	.Ldebug_ranges0+0x460
 15040 80b7 0A       		.byte	0xa
 15041 80b8 19       		.byte	0x19
 15042 80b9 D2800000 		.long	0x80d2
 15043 80bd 9F01     		.uleb128 0x9f
 15044 80bf 6A730000 		.long	0x736a
 15045 80c3 00000000 		.long	.LLST61
 15046 80c7 9F01     		.uleb128 0x9f
 15047 80c9 60730000 		.long	0x7360
 15048 80cd 00000000 		.long	.LLST64
 15049 80d1 00       		.byte	0
 15050 80d2 A101     		.uleb128 0xa1
 15051 80d4 84700000 		.long	0x7084
 15052 80d8 00000000 		.quad	.LBB873
GAS LISTING /tmp/cceISX6N.s 			page 389


 15052      00000000 
 15053 80e0 08000000 		.quad	.LBE873-.LBB873
 15053      00000000 
 15054 80e8 0A       		.byte	0xa
 15055 80e9 1E       		.byte	0x1e
 15056 80ea 0D810000 		.long	0x810d
 15057 80ee B101     		.uleb128 0xb1
 15058 80f0 9D700000 		.long	0x709d
 15059 80f4 9F01     		.uleb128 0x9f
 15060 80f6 93700000 		.long	0x7093
 15061 80fa 00000000 		.long	.LLST65
 15062 80fe A401     		.uleb128 0xa4
 15063 8100 00000000 		.quad	.LVL45
 15063      00000000 
 15064 8108 4E770000 		.long	0x774e
 15065 810c 00       		.byte	0
 15066 810d A101     		.uleb128 0xa1
 15067 810f 77730000 		.long	0x7377
 15068 8113 00000000 		.quad	.LBB875
 15068      00000000 
 15069 811b 1A000000 		.quad	.LBE875-.LBB875
 15069      00000000 
 15070 8123 0A       		.byte	0xa
 15071 8124 20       		.byte	0x20
 15072 8125 5E810000 		.long	0x815e
 15073 8129 A601     		.uleb128 0xa6
 15074 812b 88730000 		.long	0x7388
 15075 812f 0A       		.uleb128 0xa
 15076 8130 03       		.byte	0x3
 15077 8131 00000000 		.quad	.LC10
 15077      00000000 
 15078 8139 9F       		.byte	0x9f
 15079 813a B501     		.uleb128 0xb5
 15080 813c 00000000 		.quad	.LVL48
 15080      00000000 
 15081 8144 718F0000 		.long	0x8f71
 15082 8148 B601     		.uleb128 0xb6
 15083 814a 01       		.uleb128 0x1
 15084 814b 55       		.byte	0x55
 15085 814c 01       		.uleb128 0x1
 15086 814d 31       		.byte	0x31
 15087 814e B601     		.uleb128 0xb6
 15088 8150 01       		.uleb128 0x1
 15089 8151 54       		.byte	0x54
 15090 8152 09       		.uleb128 0x9
 15091 8153 03       		.byte	0x3
 15092 8154 00000000 		.quad	.LC10
 15092      00000000 
 15093 815c 00       		.byte	0
 15094 815d 00       		.byte	0
 15095 815e A101     		.uleb128 0xa1
 15096 8160 77730000 		.long	0x7377
 15097 8164 00000000 		.quad	.LBB877
 15097      00000000 
 15098 816c 1A000000 		.quad	.LBE877-.LBB877
 15098      00000000 
 15099 8174 0A       		.byte	0xa
GAS LISTING /tmp/cceISX6N.s 			page 390


 15100 8175 22       		.byte	0x22
 15101 8176 AF810000 		.long	0x81af
 15102 817a A601     		.uleb128 0xa6
 15103 817c 88730000 		.long	0x7388
 15104 8180 0A       		.uleb128 0xa
 15105 8181 03       		.byte	0x3
 15106 8182 00000000 		.quad	.LC10
 15106      00000000 
 15107 818a 9F       		.byte	0x9f
 15108 818b B501     		.uleb128 0xb5
 15109 818d 00000000 		.quad	.LVL51
 15109      00000000 
 15110 8195 718F0000 		.long	0x8f71
 15111 8199 B601     		.uleb128 0xb6
 15112 819b 01       		.uleb128 0x1
 15113 819c 55       		.byte	0x55
 15114 819d 01       		.uleb128 0x1
 15115 819e 31       		.byte	0x31
 15116 819f B601     		.uleb128 0xb6
 15117 81a1 01       		.uleb128 0x1
 15118 81a2 54       		.byte	0x54
 15119 81a3 09       		.uleb128 0x9
 15120 81a4 03       		.byte	0x3
 15121 81a5 00000000 		.quad	.LC10
 15121      00000000 
 15122 81ad 00       		.byte	0
 15123 81ae 00       		.byte	0
 15124 81af A101     		.uleb128 0xa1
 15125 81b1 77730000 		.long	0x7377
 15126 81b5 00000000 		.quad	.LBB879
 15126      00000000 
 15127 81bd 1A000000 		.quad	.LBE879-.LBB879
 15127      00000000 
 15128 81c5 0A       		.byte	0xa
 15129 81c6 24       		.byte	0x24
 15130 81c7 00820000 		.long	0x8200
 15131 81cb A601     		.uleb128 0xa6
 15132 81cd 88730000 		.long	0x7388
 15133 81d1 0A       		.uleb128 0xa
 15134 81d2 03       		.byte	0x3
 15135 81d3 00000000 		.quad	.LC10
 15135      00000000 
 15136 81db 9F       		.byte	0x9f
 15137 81dc B501     		.uleb128 0xb5
 15138 81de 00000000 		.quad	.LVL54
 15138      00000000 
 15139 81e6 718F0000 		.long	0x8f71
 15140 81ea B601     		.uleb128 0xb6
 15141 81ec 01       		.uleb128 0x1
 15142 81ed 55       		.byte	0x55
 15143 81ee 01       		.uleb128 0x1
 15144 81ef 31       		.byte	0x31
 15145 81f0 B601     		.uleb128 0xb6
 15146 81f2 01       		.uleb128 0x1
 15147 81f3 54       		.byte	0x54
 15148 81f4 09       		.uleb128 0x9
 15149 81f5 03       		.byte	0x3
GAS LISTING /tmp/cceISX6N.s 			page 391


 15150 81f6 00000000 		.quad	.LC10
 15150      00000000 
 15151 81fe 00       		.byte	0
 15152 81ff 00       		.byte	0
 15153 8200 A101     		.uleb128 0xa1
 15154 8202 96730000 		.long	0x7396
 15155 8206 00000000 		.quad	.LBB881
 15155      00000000 
 15156 820e 17000000 		.quad	.LBE881-.LBB881
 15156      00000000 
 15157 8216 0A       		.byte	0xa
 15158 8217 27       		.byte	0x27
 15159 8218 ED820000 		.long	0x82ed
 15160 821c B101     		.uleb128 0xb1
 15161 821e CF730000 		.long	0x73cf
 15162 8222 B101     		.uleb128 0xb1
 15163 8224 B9730000 		.long	0x73b9
 15164 8228 C601     		.uleb128 0xc6
 15165 822a 00000000 		.quad	.LBB882
 15165      00000000 
 15166 8232 17000000 		.quad	.LBE882-.LBB882
 15166      00000000 
 15167 823a A701     		.uleb128 0xa7
 15168 823c D46D0000 		.long	0x6dd4
 15169 8240 00000000 		.quad	.LBB883
 15169      00000000 
 15170 8248 17000000 		.quad	.LBE883-.LBB883
 15170      00000000 
 15171 8250 06       		.byte	0x6
 15172 8251 7D06     		.value	0x67d
 15173 8253 B101     		.uleb128 0xb1
 15174 8255 0E6E0000 		.long	0x6e0e
 15175 8259 B101     		.uleb128 0xb1
 15176 825b FC6D0000 		.long	0x6dfc
 15177 825f 9F01     		.uleb128 0x9f
 15178 8261 F26D0000 		.long	0x6df2
 15179 8265 00000000 		.long	.LLST66
 15180 8269 A701     		.uleb128 0xa7
 15181 826b 4B6B0000 		.long	0x6b4b
 15182 826f 00000000 		.quad	.LBB885
 15182      00000000 
 15183 8277 05000000 		.quad	.LBE885-.LBB885
 15183      00000000 
 15184 827f 06       		.byte	0x6
 15185 8280 3805     		.value	0x538
 15186 8282 B101     		.uleb128 0xb1
 15187 8284 786B0000 		.long	0x6b78
 15188 8288 A601     		.uleb128 0xa6
 15189 828a 696B0000 		.long	0x6b69
 15190 828e 04       		.uleb128 0x4
 15191 828f 91       		.byte	0x91
 15192 8290 F07E     		.sleb128 -144
 15193 8292 9F       		.byte	0x9f
 15194 8293 A701     		.uleb128 0xa7
 15195 8295 AE6A0000 		.long	0x6aae
 15196 8299 00000000 		.quad	.LBB886
 15196      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 392


 15197 82a1 05000000 		.quad	.LBE886-.LBB886
 15197      00000000 
 15198 82a9 0C       		.byte	0xc
 15199 82aa 9501     		.value	0x195
 15200 82ac B101     		.uleb128 0xb1
 15201 82ae D56A0000 		.long	0x6ad5
 15202 82b2 A601     		.uleb128 0xa6
 15203 82b4 CB6A0000 		.long	0x6acb
 15204 82b8 04       		.uleb128 0x4
 15205 82b9 91       		.byte	0x91
 15206 82ba F07E     		.sleb128 -144
 15207 82bc 9F       		.byte	0x9f
 15208 82bd A701     		.uleb128 0xa7
 15209 82bf 756A0000 		.long	0x6a75
 15210 82c3 00000000 		.quad	.LBB887
 15210      00000000 
 15211 82cb 05000000 		.quad	.LBE887-.LBB887
 15211      00000000 
 15212 82d3 0C       		.byte	0xc
 15213 82d4 0601     		.value	0x106
 15214 82d6 B101     		.uleb128 0xb1
 15215 82d8 976A0000 		.long	0x6a97
 15216 82dc A601     		.uleb128 0xa6
 15217 82de 8D6A0000 		.long	0x6a8d
 15218 82e2 04       		.uleb128 0x4
 15219 82e3 91       		.byte	0x91
 15220 82e4 F07E     		.sleb128 -144
 15221 82e6 9F       		.byte	0x9f
 15222 82e7 00       		.byte	0
 15223 82e8 00       		.byte	0
 15224 82e9 00       		.byte	0
 15225 82ea 00       		.byte	0
 15226 82eb 00       		.byte	0
 15227 82ec 00       		.byte	0
 15228 82ed A001     		.uleb128 0xa0
 15229 82ef FC730000 		.long	0x73fc
 15230 82f3 00000000 		.quad	.LBB889
 15230      00000000 
 15231 82fb 00000000 		.long	.Ldebug_ranges0+0x490
 15232 82ff 0A       		.byte	0xa
 15233 8300 27       		.byte	0x27
 15234 8301 27830000 		.long	0x8327
 15235 8305 9F01     		.uleb128 0x9f
 15236 8307 0B740000 		.long	0x740b
 15237 830b 00000000 		.long	.LLST67
 15238 830f B501     		.uleb128 0xb5
 15239 8311 00000000 		.quad	.LVL60
 15239      00000000 
 15240 8319 7F150000 		.long	0x157f
 15241 831d B601     		.uleb128 0xb6
 15242 831f 01       		.uleb128 0x1
 15243 8320 54       		.byte	0x54
 15244 8321 03       		.uleb128 0x3
 15245 8322 91       		.byte	0x91
 15246 8323 CF7E     		.sleb128 -177
 15247 8325 00       		.byte	0
 15248 8326 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 393


 15249 8327 A001     		.uleb128 0xa0
 15250 8329 167E0000 		.long	0x7e16
 15251 832d 00000000 		.quad	.LBB892
 15251      00000000 
 15252 8335 00000000 		.long	.Ldebug_ranges0+0x4c0
 15253 8339 0A       		.byte	0xa
 15254 833a 2D       		.byte	0x2d
 15255 833b 0F8B0000 		.long	0x8b0f
 15256 833f B101     		.uleb128 0xb1
 15257 8341 457E0000 		.long	0x7e45
 15258 8345 9F01     		.uleb128 0x9f
 15259 8347 397E0000 		.long	0x7e39
 15260 834b 00000000 		.long	.LLST68
 15261 834f AE01     		.uleb128 0xae
 15262 8351 00000000 		.long	.Ldebug_ranges0+0x4c0
 15263 8355 C701     		.uleb128 0xc7
 15264 8357 577E0000 		.long	0x7e57
 15265 835b 00000000 		.long	.LLST69
 15266 835f C801     		.uleb128 0xc8
 15267 8361 637E0000 		.long	0x7e63
 15268 8365 C801     		.uleb128 0xc8
 15269 8367 6F7E0000 		.long	0x7e6f
 15270 836b B001     		.uleb128 0xb0
 15271 836d 00000000 		.quad	.LBB894
 15271      00000000 
 15272 8375 77000000 		.quad	.LBE894-.LBB894
 15272      00000000 
 15273 837d B7850000 		.long	0x85b7
 15274 8381 C701     		.uleb128 0xc7
 15275 8383 7D7E0000 		.long	0x7e7d
 15276 8387 00000000 		.long	.LLST70
 15277 838b A301     		.uleb128 0xa3
 15278 838d 2E800000 		.long	0x802e
 15279 8391 00000000 		.quad	.LBB895
 15279      00000000 
 15280 8399 77000000 		.quad	.LBE895-.LBB895
 15280      00000000 
 15281 83a1 05       		.byte	0x5
 15282 83a2 15       		.byte	0x15
 15283 83a3 B101     		.uleb128 0xb1
 15284 83a5 43800000 		.long	0x8043
 15285 83a9 C601     		.uleb128 0xc6
 15286 83ab 00000000 		.quad	.LBB896
 15286      00000000 
 15287 83b3 77000000 		.quad	.LBE896-.LBB896
 15287      00000000 
 15288 83bb C801     		.uleb128 0xc8
 15289 83bd 54800000 		.long	0x8054
 15290 83c1 B001     		.uleb128 0xb0
 15291 83c3 00000000 		.quad	.LBB897
 15291      00000000 
 15292 83cb 72000000 		.quad	.LBE897-.LBB897
 15292      00000000 
 15293 83d3 5A850000 		.long	0x855a
 15294 83d7 C701     		.uleb128 0xc7
 15295 83d9 60800000 		.long	0x8060
 15296 83dd 00000000 		.long	.LLST71
GAS LISTING /tmp/cceISX6N.s 			page 394


 15297 83e1 A301     		.uleb128 0xa3
 15298 83e3 49740000 		.long	0x7449
 15299 83e7 00000000 		.quad	.LBB898
 15299      00000000 
 15300 83ef 63000000 		.quad	.LBE898-.LBB898
 15300      00000000 
 15301 83f7 0A       		.byte	0xa
 15302 83f8 2A       		.byte	0x2a
 15303 83f9 9F01     		.uleb128 0x9f
 15304 83fb 58740000 		.long	0x7458
 15305 83ff 00000000 		.long	.LLST72
 15306 8403 A101     		.uleb128 0xa1
 15307 8405 3E6F0000 		.long	0x6f3e
 15308 8409 00000000 		.quad	.LBB899
 15308      00000000 
 15309 8411 10000000 		.quad	.LBE899-.LBB899
 15309      00000000 
 15310 8419 01       		.byte	0x1
 15311 841a 1D       		.byte	0x1d
 15312 841b 1D850000 		.long	0x851d
 15313 841f 9F01     		.uleb128 0x9f
 15314 8421 4D6F0000 		.long	0x6f4d
 15315 8425 00000000 		.long	.LLST72
 15316 8429 A101     		.uleb128 0xa1
 15317 842b 1F6F0000 		.long	0x6f1f
 15318 842f 00000000 		.quad	.LBB900
 15318      00000000 
 15319 8437 0C000000 		.quad	.LBE900-.LBB900
 15319      00000000 
 15320 843f 01       		.byte	0x1
 15321 8440 14       		.byte	0x14
 15322 8441 E5840000 		.long	0x84e5
 15323 8445 9F01     		.uleb128 0x9f
 15324 8447 2E6F0000 		.long	0x6f2e
 15325 844b 00000000 		.long	.LLST72
 15326 844f A101     		.uleb128 0xa1
 15327 8451 006F0000 		.long	0x6f00
 15328 8455 00000000 		.quad	.LBB901
 15328      00000000 
 15329 845d 08000000 		.quad	.LBE901-.LBB901
 15329      00000000 
 15330 8465 01       		.byte	0x1
 15331 8466 14       		.byte	0x14
 15332 8467 AD840000 		.long	0x84ad
 15333 846b 9F01     		.uleb128 0x9f
 15334 846d 0F6F0000 		.long	0x6f0f
 15335 8471 00000000 		.long	.LLST72
 15336 8475 A301     		.uleb128 0xa3
 15337 8477 EB660000 		.long	0x66eb
 15338 847b 00000000 		.quad	.LBB902
 15338      00000000 
 15339 8483 08000000 		.quad	.LBE902-.LBB902
 15339      00000000 
 15340 848b 01       		.byte	0x1
 15341 848c 14       		.byte	0x14
 15342 848d 9F01     		.uleb128 0x9f
 15343 848f FA660000 		.long	0x66fa
GAS LISTING /tmp/cceISX6N.s 			page 395


 15344 8493 00000000 		.long	.LLST76
 15345 8497 9F01     		.uleb128 0x9f
 15346 8499 0E670000 		.long	0x670e
 15347 849d 00000000 		.long	.LLST77
 15348 84a1 9F01     		.uleb128 0x9f
 15349 84a3 04670000 		.long	0x6704
 15350 84a7 00000000 		.long	.LLST78
 15351 84ab 00       		.byte	0
 15352 84ac 00       		.byte	0
 15353 84ad A301     		.uleb128 0xa3
 15354 84af 1E670000 		.long	0x671e
 15355 84b3 00000000 		.quad	.LBB904
 15355      00000000 
 15356 84bb 04000000 		.quad	.LBE904-.LBB904
 15356      00000000 
 15357 84c3 01       		.byte	0x1
 15358 84c4 14       		.byte	0x14
 15359 84c5 9F01     		.uleb128 0x9f
 15360 84c7 2D670000 		.long	0x672d
 15361 84cb 00000000 		.long	.LLST79
 15362 84cf 9F01     		.uleb128 0x9f
 15363 84d1 41670000 		.long	0x6741
 15364 84d5 00000000 		.long	.LLST80
 15365 84d9 9F01     		.uleb128 0x9f
 15366 84db 37670000 		.long	0x6737
 15367 84df 00000000 		.long	.LLST81
 15368 84e3 00       		.byte	0
 15369 84e4 00       		.byte	0
 15370 84e5 A301     		.uleb128 0xa3
 15371 84e7 EB660000 		.long	0x66eb
 15372 84eb 00000000 		.quad	.LBB906
 15372      00000000 
 15373 84f3 04000000 		.quad	.LBE906-.LBB906
 15373      00000000 
 15374 84fb 01       		.byte	0x1
 15375 84fc 14       		.byte	0x14
 15376 84fd 9F01     		.uleb128 0x9f
 15377 84ff FA660000 		.long	0x66fa
 15378 8503 00000000 		.long	.LLST76
 15379 8507 9F01     		.uleb128 0x9f
 15380 8509 0E670000 		.long	0x670e
 15381 850d 00000000 		.long	.LLST83
 15382 8511 9F01     		.uleb128 0x9f
 15383 8513 04670000 		.long	0x6704
 15384 8517 00000000 		.long	.LLST84
 15385 851b 00       		.byte	0
 15386 851c 00       		.byte	0
 15387 851d A301     		.uleb128 0xa3
 15388 851f 51670000 		.long	0x6751
 15389 8523 00000000 		.quad	.LBB908
 15389      00000000 
 15390 852b 53000000 		.quad	.LBE908-.LBB908
 15390      00000000 
 15391 8533 01       		.byte	0x1
 15392 8534 1D       		.byte	0x1d
 15393 8535 9F01     		.uleb128 0x9f
 15394 8537 60670000 		.long	0x6760
GAS LISTING /tmp/cceISX6N.s 			page 396


 15395 853b 00000000 		.long	.LLST85
 15396 853f 9F01     		.uleb128 0x9f
 15397 8541 6A670000 		.long	0x676a
 15398 8545 00000000 		.long	.LLST86
 15399 8549 A401     		.uleb128 0xa4
 15400 854b 00000000 		.quad	.LVL67
 15400      00000000 
 15401 8553 5B8F0000 		.long	0x8f5b
 15402 8557 00       		.byte	0
 15403 8558 00       		.byte	0
 15404 8559 00       		.byte	0
 15405 855a A301     		.uleb128 0xa3
 15406 855c 49740000 		.long	0x7449
 15407 8560 00000000 		.quad	.LBB910
 15407      00000000 
 15408 8568 05000000 		.quad	.LBE910-.LBB910
 15408      00000000 
 15409 8570 0A       		.byte	0xa
 15410 8571 2C       		.byte	0x2c
 15411 8572 9F01     		.uleb128 0x9f
 15412 8574 58740000 		.long	0x7458
 15413 8578 00000000 		.long	.LLST87
 15414 857c A301     		.uleb128 0xa3
 15415 857e 51670000 		.long	0x6751
 15416 8582 00000000 		.quad	.LBB911
 15416      00000000 
 15417 858a 05000000 		.quad	.LBE911-.LBB911
 15417      00000000 
 15418 8592 01       		.byte	0x1
 15419 8593 1D       		.byte	0x1d
 15420 8594 9F01     		.uleb128 0x9f
 15421 8596 60670000 		.long	0x6760
 15422 859a 00000000 		.long	.LLST88
 15423 859e B101     		.uleb128 0xb1
 15424 85a0 6A670000 		.long	0x676a
 15425 85a4 A401     		.uleb128 0xa4
 15426 85a6 00000000 		.quad	.LVL72
 15426      00000000 
 15427 85ae 5B8F0000 		.long	0x8f5b
 15428 85b2 00       		.byte	0
 15429 85b3 00       		.byte	0
 15430 85b4 00       		.byte	0
 15431 85b5 00       		.byte	0
 15432 85b6 00       		.byte	0
 15433 85b7 A101     		.uleb128 0xa1
 15434 85b9 636F0000 		.long	0x6f63
 15435 85bd 00000000 		.quad	.LBB913
 15435      00000000 
 15436 85c5 09000000 		.quad	.LBE913-.LBB913
 15436      00000000 
 15437 85cd 05       		.byte	0x5
 15438 85ce 1A       		.byte	0x1a
 15439 85cf 20860000 		.long	0x8620
 15440 85d3 9F01     		.uleb128 0x9f
 15441 85d5 966F0000 		.long	0x6f96
 15442 85d9 00000000 		.long	.LLST89
 15443 85dd 9F01     		.uleb128 0x9f
GAS LISTING /tmp/cceISX6N.s 			page 397


 15444 85df 896F0000 		.long	0x6f89
 15445 85e3 00000000 		.long	.LLST90
 15446 85e7 A701     		.uleb128 0xa7
 15447 85e9 31690000 		.long	0x6931
 15448 85ed 00000000 		.quad	.LBB914
 15448      00000000 
 15449 85f5 09000000 		.quad	.LBE914-.LBB914
 15449      00000000 
 15450 85fd 07       		.byte	0x7
 15451 85fe 8B02     		.value	0x28b
 15452 8600 B101     		.uleb128 0xb1
 15453 8602 6D690000 		.long	0x696d
 15454 8606 B101     		.uleb128 0xb1
 15455 8608 60690000 		.long	0x6960
 15456 860c B301     		.uleb128 0xb3
 15457 860e 00000000 		.quad	.LBB915
 15457      00000000 
 15458 8616 09000000 		.quad	.LBE915-.LBB915
 15458      00000000 
 15459 861e 00       		.byte	0
 15460 861f 00       		.byte	0
 15461 8620 A001     		.uleb128 0xa0
 15462 8622 2E800000 		.long	0x802e
 15463 8626 00000000 		.quad	.LBB916
 15463      00000000 
 15464 862e 00000000 		.long	.Ldebug_ranges0+0x4f0
 15465 8632 05       		.byte	0x5
 15466 8633 1B       		.byte	0x1b
 15467 8634 59880000 		.long	0x8859
 15468 8638 9F01     		.uleb128 0x9f
 15469 863a 43800000 		.long	0x8043
 15470 863e 00000000 		.long	.LLST91
 15471 8642 AE01     		.uleb128 0xae
 15472 8644 00000000 		.long	.Ldebug_ranges0+0x4f0
 15473 8648 C801     		.uleb128 0xc8
 15474 864a 54800000 		.long	0x8054
 15475 864e B001     		.uleb128 0xb0
 15476 8650 00000000 		.quad	.LBB919
 15476      00000000 
 15477 8658 40000000 		.quad	.LBE919-.LBB919
 15477      00000000 
 15478 8660 41880000 		.long	0x8841
 15479 8664 C801     		.uleb128 0xc8
 15480 8666 60800000 		.long	0x8060
 15481 866a A301     		.uleb128 0xa3
 15482 866c 49740000 		.long	0x7449
 15483 8670 00000000 		.quad	.LBB920
 15483      00000000 
 15484 8678 3B000000 		.quad	.LBE920-.LBB920
 15484      00000000 
 15485 8680 0A       		.byte	0xa
 15486 8681 2A       		.byte	0x2a
 15487 8682 9F01     		.uleb128 0x9f
 15488 8684 58740000 		.long	0x7458
 15489 8688 00000000 		.long	.LLST92
 15490 868c A101     		.uleb128 0xa1
 15491 868e 3E6F0000 		.long	0x6f3e
GAS LISTING /tmp/cceISX6N.s 			page 398


 15492 8692 00000000 		.quad	.LBB921
 15492      00000000 
 15493 869a 24000000 		.quad	.LBE921-.LBB921
 15493      00000000 
 15494 86a2 01       		.byte	0x1
 15495 86a3 1D       		.byte	0x1d
 15496 86a4 04880000 		.long	0x8804
 15497 86a8 9F01     		.uleb128 0x9f
 15498 86aa 4D6F0000 		.long	0x6f4d
 15499 86ae 00000000 		.long	.LLST92
 15500 86b2 A101     		.uleb128 0xa1
 15501 86b4 1F6F0000 		.long	0x6f1f
 15502 86b8 00000000 		.quad	.LBB922
 15502      00000000 
 15503 86c0 1B000000 		.quad	.LBE922-.LBB922
 15503      00000000 
 15504 86c8 01       		.byte	0x1
 15505 86c9 14       		.byte	0x14
 15506 86ca CC870000 		.long	0x87cc
 15507 86ce 9F01     		.uleb128 0x9f
 15508 86d0 2E6F0000 		.long	0x6f2e
 15509 86d4 00000000 		.long	.LLST92
 15510 86d8 A101     		.uleb128 0xa1
 15511 86da 006F0000 		.long	0x6f00
 15512 86de 00000000 		.quad	.LBB923
 15512      00000000 
 15513 86e6 15000000 		.quad	.LBE923-.LBB923
 15513      00000000 
 15514 86ee 01       		.byte	0x1
 15515 86ef 14       		.byte	0x14
 15516 86f0 94870000 		.long	0x8794
 15517 86f4 9F01     		.uleb128 0x9f
 15518 86f6 0F6F0000 		.long	0x6f0f
 15519 86fa 00000000 		.long	.LLST92
 15520 86fe A101     		.uleb128 0xa1
 15521 8700 E16E0000 		.long	0x6ee1
 15522 8704 00000000 		.quad	.LBB924
 15522      00000000 
 15523 870c 0F000000 		.quad	.LBE924-.LBB924
 15523      00000000 
 15524 8714 01       		.byte	0x1
 15525 8715 14       		.byte	0x14
 15526 8716 5C870000 		.long	0x875c
 15527 871a 9F01     		.uleb128 0x9f
 15528 871c F06E0000 		.long	0x6ef0
 15529 8720 00000000 		.long	.LLST92
 15530 8724 A301     		.uleb128 0xa3
 15531 8726 1E670000 		.long	0x671e
 15532 872a 00000000 		.quad	.LBB925
 15532      00000000 
 15533 8732 0F000000 		.quad	.LBE925-.LBB925
 15533      00000000 
 15534 873a 01       		.byte	0x1
 15535 873b 14       		.byte	0x14
 15536 873c 9F01     		.uleb128 0x9f
 15537 873e 2D670000 		.long	0x672d
 15538 8742 00000000 		.long	.LLST97
GAS LISTING /tmp/cceISX6N.s 			page 399


 15539 8746 9F01     		.uleb128 0x9f
 15540 8748 41670000 		.long	0x6741
 15541 874c 00000000 		.long	.LLST98
 15542 8750 9F01     		.uleb128 0x9f
 15543 8752 37670000 		.long	0x6737
 15544 8756 00000000 		.long	.LLST99
 15545 875a 00       		.byte	0
 15546 875b 00       		.byte	0
 15547 875c A301     		.uleb128 0xa3
 15548 875e EB660000 		.long	0x66eb
 15549 8762 00000000 		.quad	.LBB927
 15549      00000000 
 15550 876a 06000000 		.quad	.LBE927-.LBB927
 15550      00000000 
 15551 8772 01       		.byte	0x1
 15552 8773 14       		.byte	0x14
 15553 8774 9F01     		.uleb128 0x9f
 15554 8776 FA660000 		.long	0x66fa
 15555 877a 00000000 		.long	.LLST100
 15556 877e 9F01     		.uleb128 0x9f
 15557 8780 0E670000 		.long	0x670e
 15558 8784 00000000 		.long	.LLST101
 15559 8788 9F01     		.uleb128 0x9f
 15560 878a 04670000 		.long	0x6704
 15561 878e 00000000 		.long	.LLST102
 15562 8792 00       		.byte	0
 15563 8793 00       		.byte	0
 15564 8794 A301     		.uleb128 0xa3
 15565 8796 1E670000 		.long	0x671e
 15566 879a 00000000 		.quad	.LBB929
 15566      00000000 
 15567 87a2 06000000 		.quad	.LBE929-.LBB929
 15567      00000000 
 15568 87aa 01       		.byte	0x1
 15569 87ab 14       		.byte	0x14
 15570 87ac 9F01     		.uleb128 0x9f
 15571 87ae 2D670000 		.long	0x672d
 15572 87b2 00000000 		.long	.LLST97
 15573 87b6 9F01     		.uleb128 0x9f
 15574 87b8 41670000 		.long	0x6741
 15575 87bc 00000000 		.long	.LLST104
 15576 87c0 9F01     		.uleb128 0x9f
 15577 87c2 37670000 		.long	0x6737
 15578 87c6 00000000 		.long	.LLST105
 15579 87ca 00       		.byte	0
 15580 87cb 00       		.byte	0
 15581 87cc A301     		.uleb128 0xa3
 15582 87ce EB660000 		.long	0x66eb
 15583 87d2 00000000 		.quad	.LBB931
 15583      00000000 
 15584 87da 09000000 		.quad	.LBE931-.LBB931
 15584      00000000 
 15585 87e2 01       		.byte	0x1
 15586 87e3 14       		.byte	0x14
 15587 87e4 9F01     		.uleb128 0x9f
 15588 87e6 FA660000 		.long	0x66fa
 15589 87ea 00000000 		.long	.LLST100
GAS LISTING /tmp/cceISX6N.s 			page 400


 15590 87ee 9F01     		.uleb128 0x9f
 15591 87f0 0E670000 		.long	0x670e
 15592 87f4 00000000 		.long	.LLST107
 15593 87f8 9F01     		.uleb128 0x9f
 15594 87fa 04670000 		.long	0x6704
 15595 87fe 00000000 		.long	.LLST108
 15596 8802 00       		.byte	0
 15597 8803 00       		.byte	0
 15598 8804 A301     		.uleb128 0xa3
 15599 8806 51670000 		.long	0x6751
 15600 880a 00000000 		.quad	.LBB933
 15600      00000000 
 15601 8812 17000000 		.quad	.LBE933-.LBB933
 15601      00000000 
 15602 881a 01       		.byte	0x1
 15603 881b 1D       		.byte	0x1d
 15604 881c 9F01     		.uleb128 0x9f
 15605 881e 60670000 		.long	0x6760
 15606 8822 00000000 		.long	.LLST109
 15607 8826 9F01     		.uleb128 0x9f
 15608 8828 6A670000 		.long	0x676a
 15609 882c 00000000 		.long	.LLST110
 15610 8830 A401     		.uleb128 0xa4
 15611 8832 00000000 		.quad	.LVL79
 15611      00000000 
 15612 883a 5B8F0000 		.long	0x8f5b
 15613 883e 00       		.byte	0
 15614 883f 00       		.byte	0
 15615 8840 00       		.byte	0
 15616 8841 B501     		.uleb128 0xb5
 15617 8843 00000000 		.quad	.LVL80
 15617      00000000 
 15618 884b 49740000 		.long	0x7449
 15619 884f B601     		.uleb128 0xb6
 15620 8851 01       		.uleb128 0x1
 15621 8852 55       		.byte	0x55
 15622 8853 02       		.uleb128 0x2
 15623 8854 76       		.byte	0x76
 15624 8855 00       		.sleb128 0
 15625 8856 00       		.byte	0
 15626 8857 00       		.byte	0
 15627 8858 00       		.byte	0
 15628 8859 A001     		.uleb128 0xa0
 15629 885b AE6F0000 		.long	0x6fae
 15630 885f 00000000 		.quad	.LBB937
 15630      00000000 
 15631 8867 00000000 		.long	.Ldebug_ranges0+0x520
 15632 886b 05       		.byte	0x5
 15633 886c 1B       		.byte	0x1b
 15634 886d CE880000 		.long	0x88ce
 15635 8871 9F01     		.uleb128 0x9f
 15636 8873 D96F0000 		.long	0x6fd9
 15637 8877 00000000 		.long	.LLST111
 15638 887b B101     		.uleb128 0xb1
 15639 887d CF6F0000 		.long	0x6fcf
 15640 8881 B201     		.uleb128 0xb2
 15641 8883 FD690000 		.long	0x69fd
GAS LISTING /tmp/cceISX6N.s 			page 401


 15642 8887 00000000 		.quad	.LBB938
 15642      00000000 
 15643 888f 00000000 		.long	.Ldebug_ranges0+0x520
 15644 8893 07       		.byte	0x7
 15645 8894 0E01     		.value	0x10e
 15646 8896 9F01     		.uleb128 0x9f
 15647 8898 236A0000 		.long	0x6a23
 15648 889c 00000000 		.long	.LLST111
 15649 88a0 AE01     		.uleb128 0xae
 15650 88a2 00000000 		.long	.Ldebug_ranges0+0x520
 15651 88a6 A201     		.uleb128 0xa2
 15652 88a8 CC690000 		.long	0x69cc
 15653 88ac 00000000 		.quad	.LBB940
 15653      00000000 
 15654 88b4 00000000 		.long	.Ldebug_ranges0+0x520
 15655 88b8 07       		.byte	0x7
 15656 88b9 CA       		.byte	0xca
 15657 88ba 9F01     		.uleb128 0x9f
 15658 88bc E9690000 		.long	0x69e9
 15659 88c0 00000000 		.long	.LLST111
 15660 88c4 B701     		.uleb128 0xb7
 15661 88c6 00000000 		.long	.Ldebug_ranges0+0x520
 15662 88ca 00       		.byte	0
 15663 88cb 00       		.byte	0
 15664 88cc 00       		.byte	0
 15665 88cd 00       		.byte	0
 15666 88ce A001     		.uleb128 0xa0
 15667 88d0 EC6F0000 		.long	0x6fec
 15668 88d4 00000000 		.quad	.LBB946
 15668      00000000 
 15669 88dc 00000000 		.long	.Ldebug_ranges0+0x550
 15670 88e0 05       		.byte	0x5
 15671 88e1 1B       		.byte	0x1b
 15672 88e2 75890000 		.long	0x8975
 15673 88e6 9F01     		.uleb128 0x9f
 15674 88e8 1F700000 		.long	0x701f
 15675 88ec 00000000 		.long	.LLST114
 15676 88f0 B101     		.uleb128 0xb1
 15677 88f2 12700000 		.long	0x7012
 15678 88f6 B401     		.uleb128 0xb4
 15679 88f8 EA650000 		.long	0x65ea
 15680 88fc 00000000 		.quad	.LBB948
 15680      00000000 
 15681 8904 05000000 		.quad	.LBE948-.LBB948
 15681      00000000 
 15682 890c 08       		.byte	0x8
 15683 890d C60A     		.value	0xac6
 15684 890f 66890000 		.long	0x8966
 15685 8913 9F01     		.uleb128 0x9f
 15686 8915 F9650000 		.long	0x65f9
 15687 8919 00000000 		.long	.LLST114
 15688 891d A701     		.uleb128 0xa7
 15689 891f D0650000 		.long	0x65d0
 15690 8923 00000000 		.quad	.LBB950
 15690      00000000 
 15691 892b 05000000 		.quad	.LBE950-.LBB950
 15691      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 402


 15692 8933 08       		.byte	0x8
 15693 8934 CC02     		.value	0x2cc
 15694 8936 9F01     		.uleb128 0x9f
 15695 8938 DF650000 		.long	0x65df
 15696 893c 00000000 		.long	.LLST114
 15697 8940 A701     		.uleb128 0xa7
 15698 8942 8C650000 		.long	0x658c
 15699 8946 00000000 		.quad	.LBB951
 15699      00000000 
 15700 894e 05000000 		.quad	.LBE951-.LBB951
 15700      00000000 
 15701 8956 08       		.byte	0x8
 15702 8957 2D01     		.value	0x12d
 15703 8959 9F01     		.uleb128 0x9f
 15704 895b 9B650000 		.long	0x659b
 15705 895f 00000000 		.long	.LLST114
 15706 8963 00       		.byte	0
 15707 8964 00       		.byte	0
 15708 8965 00       		.byte	0
 15709 8966 A401     		.uleb128 0xa4
 15710 8968 00000000 		.quad	.LVL82
 15710      00000000 
 15711 8970 0A400000 		.long	0x400a
 15712 8974 00       		.byte	0
 15713 8975 A001     		.uleb128 0xa0
 15714 8977 28680000 		.long	0x6828
 15715 897b 00000000 		.quad	.LBB960
 15715      00000000 
 15716 8983 00000000 		.long	.Ldebug_ranges0+0x5a0
 15717 8987 05       		.byte	0x5
 15718 8988 1B       		.byte	0x1b
 15719 8989 CC890000 		.long	0x89cc
 15720 898d 9F01     		.uleb128 0x9f
 15721 898f 49680000 		.long	0x6849
 15722 8993 00000000 		.long	.LLST118
 15723 8997 9F01     		.uleb128 0x9f
 15724 8999 3C680000 		.long	0x683c
 15725 899d 00000000 		.long	.LLST119
 15726 89a1 B501     		.uleb128 0xb5
 15727 89a3 00000000 		.quad	.LVL84
 15727      00000000 
 15728 89ab 0A400000 		.long	0x400a
 15729 89af B601     		.uleb128 0xb6
 15730 89b1 01       		.uleb128 0x1
 15731 89b2 55       		.byte	0x55
 15732 89b3 02       		.uleb128 0x2
 15733 89b4 73       		.byte	0x73
 15734 89b5 00       		.sleb128 0
 15735 89b6 B601     		.uleb128 0xb6
 15736 89b8 01       		.uleb128 0x1
 15737 89b9 54       		.byte	0x54
 15738 89ba 09       		.uleb128 0x9
 15739 89bb 03       		.byte	0x3
 15740 89bc 00000000 		.quad	.LC2
 15740      00000000 
 15741 89c4 B601     		.uleb128 0xb6
 15742 89c6 01       		.uleb128 0x1
GAS LISTING /tmp/cceISX6N.s 			page 403


 15743 89c7 51       		.byte	0x51
 15744 89c8 01       		.uleb128 0x1
 15745 89c9 32       		.byte	0x32
 15746 89ca 00       		.byte	0
 15747 89cb 00       		.byte	0
 15748 89cc A001     		.uleb128 0xa0
 15749 89ce 43700000 		.long	0x7043
 15750 89d2 00000000 		.quad	.LBB965
 15750      00000000 
 15751 89da 00000000 		.long	.Ldebug_ranges0+0x5d0
 15752 89de 05       		.byte	0x5
 15753 89df 1B       		.byte	0x1b
 15754 89e0 158A0000 		.long	0x8a15
 15755 89e4 9F01     		.uleb128 0x9f
 15756 89e6 5C700000 		.long	0x705c
 15757 89ea 00000000 		.long	.LLST120
 15758 89ee B101     		.uleb128 0xb1
 15759 89f0 52700000 		.long	0x7052
 15760 89f4 B501     		.uleb128 0xb5
 15761 89f6 00000000 		.quad	.LVL85
 15761      00000000 
 15762 89fe 27310000 		.long	0x3127
 15763 8a02 B601     		.uleb128 0xb6
 15764 8a04 01       		.uleb128 0x1
 15765 8a05 55       		.byte	0x55
 15766 8a06 02       		.uleb128 0x2
 15767 8a07 73       		.byte	0x73
 15768 8a08 00       		.sleb128 0
 15769 8a09 B601     		.uleb128 0xb6
 15770 8a0b 01       		.uleb128 0x1
 15771 8a0c 61       		.byte	0x61
 15772 8a0d 05       		.uleb128 0x5
 15773 8a0e 77       		.byte	0x77
 15774 8a0f 00       		.sleb128 0
 15775 8a10 F6       		.byte	0xf6
 15776 8a11 08       		.byte	0x8
 15777 8a12 29       		.uleb128 0x29
 15778 8a13 00       		.byte	0
 15779 8a14 00       		.byte	0
 15780 8a15 A001     		.uleb128 0xa0
 15781 8a17 28680000 		.long	0x6828
 15782 8a1b 00000000 		.quad	.LBB968
 15782      00000000 
 15783 8a23 00000000 		.long	.Ldebug_ranges0+0x600
 15784 8a27 05       		.byte	0x5
 15785 8a28 1B       		.byte	0x1b
 15786 8a29 6C8A0000 		.long	0x8a6c
 15787 8a2d 9F01     		.uleb128 0x9f
 15788 8a2f 49680000 		.long	0x6849
 15789 8a33 00000000 		.long	.LLST121
 15790 8a37 9F01     		.uleb128 0x9f
 15791 8a39 3C680000 		.long	0x683c
 15792 8a3d 00000000 		.long	.LLST122
 15793 8a41 B501     		.uleb128 0xb5
 15794 8a43 00000000 		.quad	.LVL87
 15794      00000000 
 15795 8a4b 0A400000 		.long	0x400a
GAS LISTING /tmp/cceISX6N.s 			page 404


 15796 8a4f B601     		.uleb128 0xb6
 15797 8a51 01       		.uleb128 0x1
 15798 8a52 55       		.byte	0x55
 15799 8a53 02       		.uleb128 0x2
 15800 8a54 73       		.byte	0x73
 15801 8a55 00       		.sleb128 0
 15802 8a56 B601     		.uleb128 0xb6
 15803 8a58 01       		.uleb128 0x1
 15804 8a59 54       		.byte	0x54
 15805 8a5a 09       		.uleb128 0x9
 15806 8a5b 03       		.byte	0x3
 15807 8a5c 00000000 		.quad	.LC4
 15807      00000000 
 15808 8a64 B601     		.uleb128 0xb6
 15809 8a66 01       		.uleb128 0x1
 15810 8a67 51       		.byte	0x51
 15811 8a68 01       		.uleb128 0x1
 15812 8a69 3E       		.byte	0x3e
 15813 8a6a 00       		.byte	0
 15814 8a6b 00       		.byte	0
 15815 8a6c A101     		.uleb128 0xa1
 15816 8a6e 43700000 		.long	0x7043
 15817 8a72 00000000 		.quad	.LBB973
 15817      00000000 
 15818 8a7a 0E000000 		.quad	.LBE973-.LBB973
 15818      00000000 
 15819 8a82 05       		.byte	0x5
 15820 8a83 1B       		.byte	0x1b
 15821 8a84 B68A0000 		.long	0x8ab6
 15822 8a88 B101     		.uleb128 0xb1
 15823 8a8a 5C700000 		.long	0x705c
 15824 8a8e B101     		.uleb128 0xb1
 15825 8a90 52700000 		.long	0x7052
 15826 8a94 B501     		.uleb128 0xb5
 15827 8a96 00000000 		.quad	.LVL88
 15827      00000000 
 15828 8a9e 27310000 		.long	0x3127
 15829 8aa2 B601     		.uleb128 0xb6
 15830 8aa4 01       		.uleb128 0x1
 15831 8aa5 55       		.byte	0x55
 15832 8aa6 02       		.uleb128 0x2
 15833 8aa7 73       		.byte	0x73
 15834 8aa8 00       		.sleb128 0
 15835 8aa9 B601     		.uleb128 0xb6
 15836 8aab 01       		.uleb128 0x1
 15837 8aac 61       		.byte	0x61
 15838 8aad 06       		.uleb128 0x6
 15839 8aae 91       		.byte	0x91
 15840 8aaf B87E     		.sleb128 -200
 15841 8ab1 F6       		.byte	0xf6
 15842 8ab2 08       		.byte	0x8
 15843 8ab3 29       		.uleb128 0x29
 15844 8ab4 00       		.byte	0
 15845 8ab5 00       		.byte	0
 15846 8ab6 A101     		.uleb128 0xa1
 15847 8ab8 84700000 		.long	0x7084
 15848 8abc 00000000 		.quad	.LBB975
GAS LISTING /tmp/cceISX6N.s 			page 405


 15848      00000000 
 15849 8ac4 08000000 		.quad	.LBE975-.LBB975
 15849      00000000 
 15850 8acc 05       		.byte	0x5
 15851 8acd 1B       		.byte	0x1b
 15852 8ace F18A0000 		.long	0x8af1
 15853 8ad2 B101     		.uleb128 0xb1
 15854 8ad4 9D700000 		.long	0x709d
 15855 8ad8 9F01     		.uleb128 0x9f
 15856 8ada 93700000 		.long	0x7093
 15857 8ade 00000000 		.long	.LLST123
 15858 8ae2 A401     		.uleb128 0xa4
 15859 8ae4 00000000 		.quad	.LVL89
 15859      00000000 
 15860 8aec 4E770000 		.long	0x774e
 15861 8af0 00       		.byte	0
 15862 8af1 A401     		.uleb128 0xa4
 15863 8af3 00000000 		.quad	.LVL64
 15863      00000000 
 15864 8afb AB020000 		.long	0x2ab
 15865 8aff A401     		.uleb128 0xa4
 15866 8b01 00000000 		.quad	.LVL73
 15866      00000000 
 15867 8b09 AB020000 		.long	0x2ab
 15868 8b0d 00       		.byte	0
 15869 8b0e 00       		.byte	0
 15870 8b0f A101     		.uleb128 0xa1
 15871 8b11 FC730000 		.long	0x73fc
 15872 8b15 00000000 		.quad	.LBB980
 15872      00000000 
 15873 8b1d 13000000 		.quad	.LBE980-.LBB980
 15873      00000000 
 15874 8b25 0A       		.byte	0xa
 15875 8b26 2D       		.byte	0x2d
 15876 8b27 4D8B0000 		.long	0x8b4d
 15877 8b2b 9F01     		.uleb128 0x9f
 15878 8b2d 0B740000 		.long	0x740b
 15879 8b31 00000000 		.long	.LLST124
 15880 8b35 B501     		.uleb128 0xb5
 15881 8b37 00000000 		.quad	.LVL91
 15881      00000000 
 15882 8b3f 7F150000 		.long	0x157f
 15883 8b43 B601     		.uleb128 0xb6
 15884 8b45 01       		.uleb128 0x1
 15885 8b46 54       		.byte	0x54
 15886 8b47 03       		.uleb128 0x3
 15887 8b48 91       		.byte	0x91
 15888 8b49 D07E     		.sleb128 -176
 15889 8b4b 00       		.byte	0
 15890 8b4c 00       		.byte	0
 15891 8b4d A101     		.uleb128 0xa1
 15892 8b4f FC730000 		.long	0x73fc
 15893 8b53 00000000 		.quad	.LBB982
 15893      00000000 
 15894 8b5b 1E000000 		.quad	.LBE982-.LBB982
 15894      00000000 
 15895 8b63 0A       		.byte	0xa
GAS LISTING /tmp/cceISX6N.s 			page 406


 15896 8b64 27       		.byte	0x27
 15897 8b65 8B8B0000 		.long	0x8b8b
 15898 8b69 9F01     		.uleb128 0x9f
 15899 8b6b 0B740000 		.long	0x740b
 15900 8b6f 00000000 		.long	.LLST125
 15901 8b73 B501     		.uleb128 0xb5
 15902 8b75 00000000 		.quad	.LVL99
 15902      00000000 
 15903 8b7d 7F150000 		.long	0x157f
 15904 8b81 B601     		.uleb128 0xb6
 15905 8b83 01       		.uleb128 0x1
 15906 8b84 54       		.byte	0x54
 15907 8b85 03       		.uleb128 0x3
 15908 8b86 91       		.byte	0x91
 15909 8b87 CF7E     		.sleb128 -177
 15910 8b89 00       		.byte	0
 15911 8b8a 00       		.byte	0
 15912 8b8b A101     		.uleb128 0xa1
 15913 8b8d FC730000 		.long	0x73fc
 15914 8b91 00000000 		.quad	.LBB984
 15914      00000000 
 15915 8b99 1B000000 		.quad	.LBE984-.LBB984
 15915      00000000 
 15916 8ba1 0A       		.byte	0xa
 15917 8ba2 2D       		.byte	0x2d
 15918 8ba3 CA8B0000 		.long	0x8bca
 15919 8ba7 A601     		.uleb128 0xa6
 15920 8ba9 0B740000 		.long	0x740b
 15921 8bad 04       		.uleb128 0x4
 15922 8bae 91       		.byte	0x91
 15923 8baf E07E     		.sleb128 -160
 15924 8bb1 9F       		.byte	0x9f
 15925 8bb2 B501     		.uleb128 0xb5
 15926 8bb4 00000000 		.quad	.LVL103
 15926      00000000 
 15927 8bbc 7F150000 		.long	0x157f
 15928 8bc0 B601     		.uleb128 0xb6
 15929 8bc2 01       		.uleb128 0x1
 15930 8bc3 54       		.byte	0x54
 15931 8bc4 03       		.uleb128 0x3
 15932 8bc5 91       		.byte	0x91
 15933 8bc6 D07E     		.sleb128 -176
 15934 8bc8 00       		.byte	0
 15935 8bc9 00       		.byte	0
 15936 8bca B901     		.uleb128 0xb9
 15937 8bcc 00000000 		.quad	.LVL41
 15937      00000000 
 15938 8bd4 28680000 		.long	0x6828
 15939 8bd8 EB8B0000 		.long	0x8beb
 15940 8bdc B601     		.uleb128 0xb6
 15941 8bde 01       		.uleb128 0x1
 15942 8bdf 54       		.byte	0x54
 15943 8be0 09       		.uleb128 0x9
 15944 8be1 03       		.byte	0x3
 15945 8be2 00000000 		.quad	.LC5
 15945      00000000 
 15946 8bea 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 407


 15947 8beb B901     		.uleb128 0xb9
 15948 8bed 00000000 		.quad	.LVL44
 15948      00000000 
 15949 8bf5 28680000 		.long	0x6828
 15950 8bf9 0C8C0000 		.long	0x8c0c
 15951 8bfd B601     		.uleb128 0xb6
 15952 8bff 01       		.uleb128 0x1
 15953 8c00 54       		.byte	0x54
 15954 8c01 09       		.uleb128 0x9
 15955 8c02 03       		.byte	0x3
 15956 8c03 00000000 		.quad	.LC9
 15956      00000000 
 15957 8c0b 00       		.byte	0
 15958 8c0c B901     		.uleb128 0xb9
 15959 8c0e 00000000 		.quad	.LVL46
 15959      00000000 
 15960 8c16 49740000 		.long	0x7449
 15961 8c1a 268C0000 		.long	0x8c26
 15962 8c1e B601     		.uleb128 0xb6
 15963 8c20 01       		.uleb128 0x1
 15964 8c21 55       		.byte	0x55
 15965 8c22 02       		.uleb128 0x2
 15966 8c23 76       		.byte	0x76
 15967 8c24 00       		.sleb128 0
 15968 8c25 00       		.byte	0
 15969 8c26 B901     		.uleb128 0xb9
 15970 8c28 00000000 		.quad	.LVL49
 15970      00000000 
 15971 8c30 49740000 		.long	0x7449
 15972 8c34 408C0000 		.long	0x8c40
 15973 8c38 B601     		.uleb128 0xb6
 15974 8c3a 01       		.uleb128 0x1
 15975 8c3b 55       		.byte	0x55
 15976 8c3c 02       		.uleb128 0x2
 15977 8c3d 76       		.byte	0x76
 15978 8c3e 00       		.sleb128 0
 15979 8c3f 00       		.byte	0
 15980 8c40 B901     		.uleb128 0xb9
 15981 8c42 00000000 		.quad	.LVL52
 15981      00000000 
 15982 8c4a 49740000 		.long	0x7449
 15983 8c4e 5A8C0000 		.long	0x8c5a
 15984 8c52 B601     		.uleb128 0xb6
 15985 8c54 01       		.uleb128 0x1
 15986 8c55 55       		.byte	0x55
 15987 8c56 02       		.uleb128 0x2
 15988 8c57 76       		.byte	0x76
 15989 8c58 00       		.sleb128 0
 15990 8c59 00       		.byte	0
 15991 8c5a C901     		.uleb128 0xc9
 15992 8c5c 00000000 		.quad	.LVL57
 15992      00000000 
 15993 8c64 878C0000 		.long	0x8c87
 15994 8c68 B601     		.uleb128 0xb6
 15995 8c6a 01       		.uleb128 0x1
 15996 8c6b 55       		.byte	0x55
 15997 8c6c 03       		.uleb128 0x3
GAS LISTING /tmp/cceISX6N.s 			page 408


 15998 8c6d 91       		.byte	0x91
 15999 8c6e D07E     		.sleb128 -176
 16000 8c70 B601     		.uleb128 0xb6
 16001 8c72 01       		.uleb128 0x1
 16002 8c73 54       		.byte	0x54
 16003 8c74 09       		.uleb128 0x9
 16004 8c75 03       		.byte	0x3
 16005 8c76 00000000 		.quad	.LC12
 16005      00000000 
 16006 8c7e B601     		.uleb128 0xb6
 16007 8c80 01       		.uleb128 0x1
 16008 8c81 51       		.byte	0x51
 16009 8c82 03       		.uleb128 0x3
 16010 8c83 91       		.byte	0x91
 16011 8c84 CE7E     		.sleb128 -178
 16012 8c86 00       		.byte	0
 16013 8c87 B901     		.uleb128 0xb9
 16014 8c89 00000000 		.quad	.LVL59
 16014      00000000 
 16015 8c91 AA770000 		.long	0x77aa
 16016 8c95 AA8C0000 		.long	0x8caa
 16017 8c99 B601     		.uleb128 0xb6
 16018 8c9b 01       		.uleb128 0x1
 16019 8c9c 55       		.byte	0x55
 16020 8c9d 03       		.uleb128 0x3
 16021 8c9e 91       		.byte	0x91
 16022 8c9f D07E     		.sleb128 -176
 16023 8ca1 B601     		.uleb128 0xb6
 16024 8ca3 01       		.uleb128 0x1
 16025 8ca4 54       		.byte	0x54
 16026 8ca5 03       		.uleb128 0x3
 16027 8ca6 91       		.byte	0x91
 16028 8ca7 E07E     		.sleb128 -160
 16029 8ca9 00       		.byte	0
 16030 8caa BA01     		.uleb128 0xba
 16031 8cac 00000000 		.quad	.LVL63
 16031      00000000 
 16032 8cb4 B601     		.uleb128 0xb6
 16033 8cb6 01       		.uleb128 0x1
 16034 8cb7 55       		.byte	0x55
 16035 8cb8 03       		.uleb128 0x3
 16036 8cb9 91       		.byte	0x91
 16037 8cba E07E     		.sleb128 -160
 16038 8cbc B601     		.uleb128 0xb6
 16039 8cbe 01       		.uleb128 0x1
 16040 8cbf 54       		.byte	0x54
 16041 8cc0 09       		.uleb128 0x9
 16042 8cc1 03       		.byte	0x3
 16043 8cc2 00000000 		.quad	.LC13
 16043      00000000 
 16044 8cca B601     		.uleb128 0xb6
 16045 8ccc 01       		.uleb128 0x1
 16046 8ccd 51       		.byte	0x51
 16047 8cce 03       		.uleb128 0x3
 16048 8ccf 91       		.byte	0x91
 16049 8cd0 CF7E     		.sleb128 -177
 16050 8cd2 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 409


 16051 8cd3 00       		.byte	0
 16052 8cd4 B901     		.uleb128 0xb9
 16053 8cd6 00000000 		.quad	.LVL100
 16053      00000000 
 16054 8cde 8C8F0000 		.long	0x8f8c
 16055 8ce2 EE8C0000 		.long	0x8cee
 16056 8ce6 B601     		.uleb128 0xb6
 16057 8ce8 01       		.uleb128 0x1
 16058 8ce9 55       		.byte	0x55
 16059 8cea 02       		.uleb128 0x2
 16060 8ceb 73       		.byte	0x73
 16061 8cec 00       		.sleb128 0
 16062 8ced 00       		.byte	0
 16063 8cee B501     		.uleb128 0xb5
 16064 8cf0 00000000 		.quad	.LVL104
 16064      00000000 
 16065 8cf8 8C8F0000 		.long	0x8f8c
 16066 8cfc B601     		.uleb128 0xb6
 16067 8cfe 01       		.uleb128 0x1
 16068 8cff 55       		.byte	0x55
 16069 8d00 02       		.uleb128 0x2
 16070 8d01 73       		.byte	0x73
 16071 8d02 00       		.sleb128 0
 16072 8d03 00       		.byte	0
 16073 8d04 00       		.byte	0
 16074 8d05 CA01     		.uleb128 0xca
 16075 8d07 00000000 		.long	.LASF1109
 16076 8d0b 00000000 		.quad	.LFB2363
 16076      00000000 
 16077 8d13 26000000 		.quad	.LFE2363-.LFB2363
 16077      00000000 
 16078 8d1b 01       		.uleb128 0x1
 16079 8d1c 9C       		.byte	0x9c
 16080 8d1d 848D0000 		.long	0x8d84
 16081 8d21 A201     		.uleb128 0xa2
 16082 8d23 25740000 		.long	0x7425
 16083 8d27 00000000 		.quad	.LBB990
 16083      00000000 
 16084 8d2f 00000000 		.long	.Ldebug_ranges0+0x630
 16085 8d33 0A       		.byte	0xa
 16086 8d34 2E       		.byte	0x2e
 16087 8d35 A801     		.uleb128 0xa8
 16088 8d37 30740000 		.long	0x7430
 16089 8d3b 01       		.byte	0x1
 16090 8d3c CB01     		.uleb128 0xcb
 16091 8d3e 3C740000 		.long	0x743c
 16092 8d42 FFFF     		.value	0xffff
 16093 8d44 C901     		.uleb128 0xc9
 16094 8d46 00000000 		.quad	.LVL106
 16094      00000000 
 16095 8d4e 618D0000 		.long	0x8d61
 16096 8d52 B601     		.uleb128 0xb6
 16097 8d54 01       		.uleb128 0x1
 16098 8d55 55       		.byte	0x55
 16099 8d56 09       		.uleb128 0x9
 16100 8d57 03       		.byte	0x3
 16101 8d58 00000000 		.quad	_ZStL8__ioinit
GAS LISTING /tmp/cceISX6N.s 			page 410


 16101      00000000 
 16102 8d60 00       		.byte	0
 16103 8d61 CC01     		.uleb128 0xcc
 16104 8d63 00000000 		.quad	.LVL107
 16104      00000000 
 16105 8d6b A08F0000 		.long	0x8fa0
 16106 8d6f B601     		.uleb128 0xb6
 16107 8d71 01       		.uleb128 0x1
 16108 8d72 54       		.byte	0x54
 16109 8d73 09       		.uleb128 0x9
 16110 8d74 03       		.byte	0x3
 16111 8d75 00000000 		.quad	_ZStL8__ioinit
 16111      00000000 
 16112 8d7d CD01     		.uleb128 0xcd
 16113 8d7f 01       		.uleb128 0x1
 16114 8d80 51       		.byte	0x51
 16115 8d81 00       		.byte	0
 16116 8d82 00       		.byte	0
 16117 8d83 00       		.byte	0
 16118 8d84 CE01     		.uleb128 0xce
 16119 8d86 00000000 		.long	.LASF1059
 16120 8d8a 35       		.byte	0x35
 16121 8d8b A8       		.byte	0xa8
 16122 8d8c 895D0000 		.long	0x5d89
 16123 8d90 CE01     		.uleb128 0xce
 16124 8d92 00000000 		.long	.LASF1060
 16125 8d96 35       		.byte	0x35
 16126 8d97 A9       		.byte	0xa9
 16127 8d98 895D0000 		.long	0x5d89
 16128 8d9c CF01     		.uleb128 0xcf
 16129 8d9e 00000000 		.long	.LASF1061
 16130 8da2 724C0000 		.long	0x4c72
 16131 8da6 D001     		.uleb128 0xd0
 16132 8da8 AE3F0000 		.long	0x3fae
 16133 8dac D101     		.uleb128 0xd1
 16134 8dae DA3F0000 		.long	0x3fda
 16135 8db2 09       		.uleb128 0x9
 16136 8db3 03       		.byte	0x3
 16137 8db4 00000000 		.quad	_ZStL8__ioinit
 16137      00000000 
 16138 8dbc D001     		.uleb128 0xd0
 16139 8dbe E53F0000 		.long	0x3fe5
 16140 8dc2 D001     		.uleb128 0xd0
 16141 8dc4 F73F0000 		.long	0x3ff7
 16142 8dc8 D201     		.uleb128 0xd2
 16143 8dca 5E000000 		.long	0x5e
 16144 8dce 00000000 		.long	.LASF1062
 16145 8dd2 00       		.byte	0
 16146 8dd3 D201     		.uleb128 0xd2
 16147 8dd5 B6000000 		.long	0xb6
 16148 8dd9 00000000 		.long	.LASF1063
 16149 8ddd 01       		.byte	0x1
 16150 8dde D201     		.uleb128 0xd2
 16151 8de0 0E010000 		.long	0x10e
 16152 8de4 00000000 		.long	.LASF1064
 16153 8de8 00       		.byte	0
 16154 8de9 D201     		.uleb128 0xd2
GAS LISTING /tmp/cceISX6N.s 			page 411


 16155 8deb 880A0000 		.long	0xa88
 16156 8def 00000000 		.long	.LASF1065
 16157 8df3 01       		.byte	0x1
 16158 8df4 D301     		.uleb128 0xd3
 16159 8df6 950A0000 		.long	0xa95
 16160 8dfa 00000000 		.long	.LASF1066
 16161 8dfe 00CA9A3B 		.long	0x3b9aca00
 16162 8e02 D201     		.uleb128 0xd2
 16163 8e04 D4090000 		.long	0x9d4
 16164 8e08 00000000 		.long	.LASF1067
 16165 8e0c 01       		.byte	0x1
 16166 8e0d D301     		.uleb128 0xd3
 16167 8e0f 2C0A0000 		.long	0xa2c
 16168 8e13 00000000 		.long	.LASF1068
 16169 8e17 00CA9A3B 		.long	0x3b9aca00
 16170 8e1b D301     		.uleb128 0xd3
 16171 8e1d CA0A0000 		.long	0xaca
 16172 8e21 00000000 		.long	.LASF1069
 16173 8e25 00CA9A3B 		.long	0x3b9aca00
 16174 8e29 D201     		.uleb128 0xd2
 16175 8e2b DA0A0000 		.long	0xada
 16176 8e2f 00000000 		.long	.LASF1070
 16177 8e33 01       		.byte	0x1
 16178 8e34 D201     		.uleb128 0xd2
 16179 8e36 0C0B0000 		.long	0xb0c
 16180 8e3a 00000000 		.long	.LASF1071
 16181 8e3e 01       		.byte	0x1
 16182 8e3f D201     		.uleb128 0xd2
 16183 8e41 190B0000 		.long	0xb19
 16184 8e45 00000000 		.long	.LASF1072
 16185 8e49 01       		.byte	0x1
 16186 8e4a D401     		.uleb128 0xd4
 16187 8e4c E5410000 		.long	0x41e5
 16188 8e50 00000000 		.long	.LASF1073
 16189 8e54 80808080 		.sleb128 -2147483648
 16189      78
 16190 8e59 D301     		.uleb128 0xd3
 16191 8e5b F0410000 		.long	0x41f0
 16192 8e5f 00000000 		.long	.LASF1074
 16193 8e63 FFFFFF7F 		.long	0x7fffffff
 16194 8e67 D201     		.uleb128 0xd2
 16195 8e69 DF460000 		.long	0x46df
 16196 8e6d 00000000 		.long	.LASF1075
 16197 8e71 26       		.byte	0x26
 16198 8e72 D501     		.uleb128 0xd5
 16199 8e74 21470000 		.long	0x4721
 16200 8e78 00000000 		.long	.LASF1076
 16201 8e7c 3401     		.value	0x134
 16202 8e7e D501     		.uleb128 0xd5
 16203 8e80 63470000 		.long	0x4763
 16204 8e84 00000000 		.long	.LASF1077
 16205 8e88 4413     		.value	0x1344
 16206 8e8a D201     		.uleb128 0xd2
 16207 8e8c A5470000 		.long	0x47a5
 16208 8e90 00000000 		.long	.LASF1078
 16209 8e94 40       		.byte	0x40
 16210 8e95 D201     		.uleb128 0xd2
GAS LISTING /tmp/cceISX6N.s 			page 412


 16211 8e97 D1470000 		.long	0x47d1
 16212 8e9b 00000000 		.long	.LASF1079
 16213 8e9f 7F       		.byte	0x7f
 16214 8ea0 D401     		.uleb128 0xd4
 16215 8ea2 08480000 		.long	0x4808
 16216 8ea6 00000000 		.long	.LASF1080
 16217 8eaa 80807E   		.sleb128 -32768
 16218 8ead D501     		.uleb128 0xd5
 16219 8eaf 13480000 		.long	0x4813
 16220 8eb3 00000000 		.long	.LASF1081
 16221 8eb7 FF7F     		.value	0x7fff
 16222 8eb9 D401     		.uleb128 0xd4
 16223 8ebb 4A480000 		.long	0x484a
 16224 8ebf 00000000 		.long	.LASF1082
 16225 8ec3 80808080 		.sleb128 -9223372036854775808
 16225      80808080 
 16225      807F
 16226 8ecd D601     		.uleb128 0xd6
 16227 8ecf 55480000 		.long	0x4855
 16228 8ed3 00000000 		.long	.LASF1083
 16229 8ed7 FFFFFFFF 		.quad	0x7fffffffffffffff
 16229      FFFFFF7F 
 16230 8edf D201     		.uleb128 0xd2
 16231 8ee1 58320000 		.long	0x3258
 16232 8ee5 00000000 		.long	.LASF1084
 16233 8ee9 01       		.byte	0x1
 16234 8eea D501     		.uleb128 0xd5
 16235 8eec 65320000 		.long	0x3265
 16236 8ef0 00000000 		.long	.LASF1085
 16237 8ef4 E803     		.value	0x3e8
 16238 8ef6 D501     		.uleb128 0xd5
 16239 8ef8 FE310000 		.long	0x31fe
 16240 8efc 00000000 		.long	.LASF1086
 16241 8f00 E803     		.value	0x3e8
 16242 8f02 D201     		.uleb128 0xd2
 16243 8f04 25330000 		.long	0x3325
 16244 8f08 00000000 		.long	.LASF1087
 16245 8f0c 00       		.byte	0
 16246 8f0d D501     		.uleb128 0xd5
 16247 8f0f 763B0000 		.long	0x3b76
 16248 8f13 00000000 		.long	.LASF1088
 16249 8f17 E803     		.value	0x3e8
 16250 8f19 D201     		.uleb128 0xd2
 16251 8f1b 843B0000 		.long	0x3b84
 16252 8f1f 00000000 		.long	.LASF1089
 16253 8f23 01       		.byte	0x1
 16254 8f24 D301     		.uleb128 0xd3
 16255 8f26 B33B0000 		.long	0x3bb3
 16256 8f2a 00000000 		.long	.LASF1090
 16257 8f2e 40420F00 		.long	0xf4240
 16258 8f32 D201     		.uleb128 0xd2
 16259 8f34 0F3C0000 		.long	0x3c0f
 16260 8f38 00000000 		.long	.LASF1091
 16261 8f3c 01       		.byte	0x1
 16262 8f3d D301     		.uleb128 0xd3
 16263 8f3f 1C3C0000 		.long	0x3c1c
 16264 8f43 00000000 		.long	.LASF1092
GAS LISTING /tmp/cceISX6N.s 			page 413


 16265 8f47 40420F00 		.long	0xf4240
 16266 8f4b 8301     		.uleb128 0x83
 16267 8f4d C8330000 		.long	0x33c8
 16268 8f51 5B8F0000 		.long	0x8f5b
 16269 8f55 19       		.uleb128 0x19
 16270 8f56 69640000 		.long	0x6469
 16271 8f5a 00       		.byte	0
 16272 8f5b D701     		.uleb128 0xd7
 16273 8f5d 65787000 		.string	"exp"
 16274 8f61 43       		.byte	0x43
 16275 8f62 64       		.byte	0x64
 16276 8f63 29000000 		.long	0x29
 16277 8f67 718F0000 		.long	0x8f71
 16278 8f6b 19       		.uleb128 0x19
 16279 8f6c 29000000 		.long	0x29
 16280 8f70 00       		.byte	0
 16281 8f71 1F       		.uleb128 0x1f
 16282 8f72 00000000 		.long	.LASF1093
 16283 8f76 0B       		.byte	0xb
 16284 8f77 57       		.byte	0x57
 16285 8f78 06490000 		.long	0x4906
 16286 8f7c 8C8F0000 		.long	0x8f8c
 16287 8f80 19       		.uleb128 0x19
 16288 8f81 06490000 		.long	0x4906
 16289 8f85 19       		.uleb128 0x19
 16290 8f86 1A4D0000 		.long	0x4d1a
 16291 8f8a 57       		.uleb128 0x57
 16292 8f8b 00       		.byte	0
 16293 8f8c D801     		.uleb128 0xd8
 16294 8f8e 00000000 		.long	.LASF1094
 16295 8f92 00000000 		.long	.LASF1110
 16296 8f96 A08F0000 		.long	0x8fa0
 16297 8f9a 19       		.uleb128 0x19
 16298 8f9b 724C0000 		.long	0x4c72
 16299 8f9f 00       		.byte	0
 16300 8fa0 D901     		.uleb128 0xd9
 16301 8fa2 00000000 		.long	.LASF1095
 16302 8fa6 06490000 		.long	0x4906
 16303 8faa 19       		.uleb128 0x19
 16304 8fab 32590000 		.long	0x5932
 16305 8faf 19       		.uleb128 0x19
 16306 8fb0 724C0000 		.long	0x4c72
 16307 8fb4 19       		.uleb128 0x19
 16308 8fb5 724C0000 		.long	0x4c72
 16309 8fb9 00       		.byte	0
 16310 8fba 00       		.byte	0
 16311              		.section	.debug_abbrev,"",@progbits
 16312              	.Ldebug_abbrev0:
 16313 0000 01       		.uleb128 0x1
 16314 0001 11       		.uleb128 0x11
 16315 0002 01       		.byte	0x1
 16316 0003 25       		.uleb128 0x25
 16317 0004 0E       		.uleb128 0xe
 16318 0005 13       		.uleb128 0x13
 16319 0006 0B       		.uleb128 0xb
 16320 0007 03       		.uleb128 0x3
 16321 0008 0E       		.uleb128 0xe
GAS LISTING /tmp/cceISX6N.s 			page 414


 16322 0009 1B       		.uleb128 0x1b
 16323 000a 0E       		.uleb128 0xe
 16324 000b 55       		.uleb128 0x55
 16325 000c 17       		.uleb128 0x17
 16326 000d 11       		.uleb128 0x11
 16327 000e 01       		.uleb128 0x1
 16328 000f 10       		.uleb128 0x10
 16329 0010 17       		.uleb128 0x17
 16330 0011 00       		.byte	0
 16331 0012 00       		.byte	0
 16332 0013 02       		.uleb128 0x2
 16333 0014 24       		.uleb128 0x24
 16334 0015 00       		.byte	0
 16335 0016 0B       		.uleb128 0xb
 16336 0017 0B       		.uleb128 0xb
 16337 0018 3E       		.uleb128 0x3e
 16338 0019 0B       		.uleb128 0xb
 16339 001a 03       		.uleb128 0x3
 16340 001b 0E       		.uleb128 0xe
 16341 001c 00       		.byte	0
 16342 001d 00       		.byte	0
 16343 001e 03       		.uleb128 0x3
 16344 001f 39       		.uleb128 0x39
 16345 0020 01       		.byte	0x1
 16346 0021 03       		.uleb128 0x3
 16347 0022 08       		.uleb128 0x8
 16348 0023 3A       		.uleb128 0x3a
 16349 0024 0B       		.uleb128 0xb
 16350 0025 3B       		.uleb128 0x3b
 16351 0026 0B       		.uleb128 0xb
 16352 0027 01       		.uleb128 0x1
 16353 0028 13       		.uleb128 0x13
 16354 0029 00       		.byte	0
 16355 002a 00       		.byte	0
 16356 002b 04       		.uleb128 0x4
 16357 002c 08       		.uleb128 0x8
 16358 002d 00       		.byte	0
 16359 002e 3A       		.uleb128 0x3a
 16360 002f 0B       		.uleb128 0xb
 16361 0030 3B       		.uleb128 0x3b
 16362 0031 05       		.uleb128 0x5
 16363 0032 18       		.uleb128 0x18
 16364 0033 13       		.uleb128 0x13
 16365 0034 00       		.byte	0
 16366 0035 00       		.byte	0
 16367 0036 05       		.uleb128 0x5
 16368 0037 13       		.uleb128 0x13
 16369 0038 01       		.byte	0x1
 16370 0039 03       		.uleb128 0x3
 16371 003a 0E       		.uleb128 0xe
 16372 003b 0B       		.uleb128 0xb
 16373 003c 0B       		.uleb128 0xb
 16374 003d 3A       		.uleb128 0x3a
 16375 003e 0B       		.uleb128 0xb
 16376 003f 3B       		.uleb128 0x3b
 16377 0040 0B       		.uleb128 0xb
 16378 0041 01       		.uleb128 0x1
GAS LISTING /tmp/cceISX6N.s 			page 415


 16379 0042 13       		.uleb128 0x13
 16380 0043 00       		.byte	0
 16381 0044 00       		.byte	0
 16382 0045 06       		.uleb128 0x6
 16383 0046 0D       		.uleb128 0xd
 16384 0047 00       		.byte	0
 16385 0048 03       		.uleb128 0x3
 16386 0049 0E       		.uleb128 0xe
 16387 004a 3A       		.uleb128 0x3a
 16388 004b 0B       		.uleb128 0xb
 16389 004c 3B       		.uleb128 0x3b
 16390 004d 0B       		.uleb128 0xb
 16391 004e 49       		.uleb128 0x49
 16392 004f 13       		.uleb128 0x13
 16393 0050 3F       		.uleb128 0x3f
 16394 0051 19       		.uleb128 0x19
 16395 0052 3C       		.uleb128 0x3c
 16396 0053 19       		.uleb128 0x19
 16397 0054 00       		.byte	0
 16398 0055 00       		.byte	0
 16399 0056 07       		.uleb128 0x7
 16400 0057 16       		.uleb128 0x16
 16401 0058 00       		.byte	0
 16402 0059 03       		.uleb128 0x3
 16403 005a 0E       		.uleb128 0xe
 16404 005b 3A       		.uleb128 0x3a
 16405 005c 0B       		.uleb128 0xb
 16406 005d 3B       		.uleb128 0x3b
 16407 005e 0B       		.uleb128 0xb
 16408 005f 49       		.uleb128 0x49
 16409 0060 13       		.uleb128 0x13
 16410 0061 00       		.byte	0
 16411 0062 00       		.byte	0
 16412 0063 08       		.uleb128 0x8
 16413 0064 2E       		.uleb128 0x2e
 16414 0065 01       		.byte	0x1
 16415 0066 3F       		.uleb128 0x3f
 16416 0067 19       		.uleb128 0x19
 16417 0068 03       		.uleb128 0x3
 16418 0069 0E       		.uleb128 0xe
 16419 006a 3A       		.uleb128 0x3a
 16420 006b 0B       		.uleb128 0xb
 16421 006c 3B       		.uleb128 0x3b
 16422 006d 0B       		.uleb128 0xb
 16423 006e 6E       		.uleb128 0x6e
 16424 006f 0E       		.uleb128 0xe
 16425 0070 49       		.uleb128 0x49
 16426 0071 13       		.uleb128 0x13
 16427 0072 3C       		.uleb128 0x3c
 16428 0073 19       		.uleb128 0x19
 16429 0074 64       		.uleb128 0x64
 16430 0075 13       		.uleb128 0x13
 16431 0076 01       		.uleb128 0x1
 16432 0077 13       		.uleb128 0x13
 16433 0078 00       		.byte	0
 16434 0079 00       		.byte	0
 16435 007a 09       		.uleb128 0x9
GAS LISTING /tmp/cceISX6N.s 			page 416


 16436 007b 05       		.uleb128 0x5
 16437 007c 00       		.byte	0
 16438 007d 49       		.uleb128 0x49
 16439 007e 13       		.uleb128 0x13
 16440 007f 34       		.uleb128 0x34
 16441 0080 19       		.uleb128 0x19
 16442 0081 00       		.byte	0
 16443 0082 00       		.byte	0
 16444 0083 0A       		.uleb128 0xa
 16445 0084 2F       		.uleb128 0x2f
 16446 0085 00       		.byte	0
 16447 0086 03       		.uleb128 0x3
 16448 0087 08       		.uleb128 0x8
 16449 0088 49       		.uleb128 0x49
 16450 0089 13       		.uleb128 0x13
 16451 008a 00       		.byte	0
 16452 008b 00       		.byte	0
 16453 008c 0B       		.uleb128 0xb
 16454 008d 30       		.uleb128 0x30
 16455 008e 00       		.byte	0
 16456 008f 03       		.uleb128 0x3
 16457 0090 08       		.uleb128 0x8
 16458 0091 49       		.uleb128 0x49
 16459 0092 13       		.uleb128 0x13
 16460 0093 1C       		.uleb128 0x1c
 16461 0094 0B       		.uleb128 0xb
 16462 0095 00       		.byte	0
 16463 0096 00       		.byte	0
 16464 0097 0C       		.uleb128 0xc
 16465 0098 26       		.uleb128 0x26
 16466 0099 00       		.byte	0
 16467 009a 49       		.uleb128 0x49
 16468 009b 13       		.uleb128 0x13
 16469 009c 00       		.byte	0
 16470 009d 00       		.byte	0
 16471 009e 0D       		.uleb128 0xd
 16472 009f 08       		.uleb128 0x8
 16473 00a0 00       		.byte	0
 16474 00a1 3A       		.uleb128 0x3a
 16475 00a2 0B       		.uleb128 0xb
 16476 00a3 3B       		.uleb128 0x3b
 16477 00a4 0B       		.uleb128 0xb
 16478 00a5 18       		.uleb128 0x18
 16479 00a6 13       		.uleb128 0x13
 16480 00a7 00       		.byte	0
 16481 00a8 00       		.byte	0
 16482 00a9 0E       		.uleb128 0xe
 16483 00aa 39       		.uleb128 0x39
 16484 00ab 01       		.byte	0x1
 16485 00ac 03       		.uleb128 0x3
 16486 00ad 0E       		.uleb128 0xe
 16487 00ae 3A       		.uleb128 0x3a
 16488 00af 0B       		.uleb128 0xb
 16489 00b0 3B       		.uleb128 0x3b
 16490 00b1 0B       		.uleb128 0xb
 16491 00b2 01       		.uleb128 0x1
 16492 00b3 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 417


 16493 00b4 00       		.byte	0
 16494 00b5 00       		.byte	0
 16495 00b6 0F       		.uleb128 0xf
 16496 00b7 39       		.uleb128 0x39
 16497 00b8 01       		.byte	0x1
 16498 00b9 03       		.uleb128 0x3
 16499 00ba 08       		.uleb128 0x8
 16500 00bb 3A       		.uleb128 0x3a
 16501 00bc 0B       		.uleb128 0xb
 16502 00bd 3B       		.uleb128 0x3b
 16503 00be 05       		.uleb128 0x5
 16504 00bf 01       		.uleb128 0x1
 16505 00c0 13       		.uleb128 0x13
 16506 00c1 00       		.byte	0
 16507 00c2 00       		.byte	0
 16508 00c3 10       		.uleb128 0x10
 16509 00c4 13       		.uleb128 0x13
 16510 00c5 01       		.byte	0x1
 16511 00c6 03       		.uleb128 0x3
 16512 00c7 0E       		.uleb128 0xe
 16513 00c8 0B       		.uleb128 0xb
 16514 00c9 0B       		.uleb128 0xb
 16515 00ca 3A       		.uleb128 0x3a
 16516 00cb 0B       		.uleb128 0xb
 16517 00cc 3B       		.uleb128 0x3b
 16518 00cd 05       		.uleb128 0x5
 16519 00ce 00       		.byte	0
 16520 00cf 00       		.byte	0
 16521 00d0 11       		.uleb128 0x11
 16522 00d1 0D       		.uleb128 0xd
 16523 00d2 00       		.byte	0
 16524 00d3 03       		.uleb128 0x3
 16525 00d4 0E       		.uleb128 0xe
 16526 00d5 3A       		.uleb128 0x3a
 16527 00d6 0B       		.uleb128 0xb
 16528 00d7 3B       		.uleb128 0x3b
 16529 00d8 05       		.uleb128 0x5
 16530 00d9 49       		.uleb128 0x49
 16531 00da 13       		.uleb128 0x13
 16532 00db 3F       		.uleb128 0x3f
 16533 00dc 19       		.uleb128 0x19
 16534 00dd 3C       		.uleb128 0x3c
 16535 00de 19       		.uleb128 0x19
 16536 00df 1C       		.uleb128 0x1c
 16537 00e0 0B       		.uleb128 0xb
 16538 00e1 00       		.byte	0
 16539 00e2 00       		.byte	0
 16540 00e3 12       		.uleb128 0x12
 16541 00e4 16       		.uleb128 0x16
 16542 00e5 00       		.byte	0
 16543 00e6 03       		.uleb128 0x3
 16544 00e7 0E       		.uleb128 0xe
 16545 00e8 3A       		.uleb128 0x3a
 16546 00e9 0B       		.uleb128 0xb
 16547 00ea 3B       		.uleb128 0x3b
 16548 00eb 05       		.uleb128 0x5
 16549 00ec 49       		.uleb128 0x49
GAS LISTING /tmp/cceISX6N.s 			page 418


 16550 00ed 13       		.uleb128 0x13
 16551 00ee 00       		.byte	0
 16552 00ef 00       		.byte	0
 16553 00f0 13       		.uleb128 0x13
 16554 00f1 2E       		.uleb128 0x2e
 16555 00f2 00       		.byte	0
 16556 00f3 3F       		.uleb128 0x3f
 16557 00f4 19       		.uleb128 0x19
 16558 00f5 03       		.uleb128 0x3
 16559 00f6 08       		.uleb128 0x8
 16560 00f7 3A       		.uleb128 0x3a
 16561 00f8 0B       		.uleb128 0xb
 16562 00f9 3B       		.uleb128 0x3b
 16563 00fa 05       		.uleb128 0x5
 16564 00fb 6E       		.uleb128 0x6e
 16565 00fc 0E       		.uleb128 0xe
 16566 00fd 49       		.uleb128 0x49
 16567 00fe 13       		.uleb128 0x13
 16568 00ff 3C       		.uleb128 0x3c
 16569 0100 19       		.uleb128 0x19
 16570 0101 00       		.byte	0
 16571 0102 00       		.byte	0
 16572 0103 14       		.uleb128 0x14
 16573 0104 3A       		.uleb128 0x3a
 16574 0105 00       		.byte	0
 16575 0106 3A       		.uleb128 0x3a
 16576 0107 0B       		.uleb128 0xb
 16577 0108 3B       		.uleb128 0x3b
 16578 0109 05       		.uleb128 0x5
 16579 010a 18       		.uleb128 0x18
 16580 010b 13       		.uleb128 0x13
 16581 010c 00       		.byte	0
 16582 010d 00       		.byte	0
 16583 010e 15       		.uleb128 0x15
 16584 010f 16       		.uleb128 0x16
 16585 0110 00       		.byte	0
 16586 0111 03       		.uleb128 0x3
 16587 0112 08       		.uleb128 0x8
 16588 0113 3A       		.uleb128 0x3a
 16589 0114 0B       		.uleb128 0xb
 16590 0115 3B       		.uleb128 0x3b
 16591 0116 0B       		.uleb128 0xb
 16592 0117 49       		.uleb128 0x49
 16593 0118 13       		.uleb128 0x13
 16594 0119 00       		.byte	0
 16595 011a 00       		.byte	0
 16596 011b 16       		.uleb128 0x16
 16597 011c 0D       		.uleb128 0xd
 16598 011d 00       		.byte	0
 16599 011e 03       		.uleb128 0x3
 16600 011f 08       		.uleb128 0x8
 16601 0120 3A       		.uleb128 0x3a
 16602 0121 0B       		.uleb128 0xb
 16603 0122 3B       		.uleb128 0x3b
 16604 0123 05       		.uleb128 0x5
 16605 0124 49       		.uleb128 0x49
 16606 0125 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 419


 16607 0126 38       		.uleb128 0x38
 16608 0127 0B       		.uleb128 0xb
 16609 0128 32       		.uleb128 0x32
 16610 0129 0B       		.uleb128 0xb
 16611 012a 00       		.byte	0
 16612 012b 00       		.byte	0
 16613 012c 17       		.uleb128 0x17
 16614 012d 2E       		.uleb128 0x2e
 16615 012e 01       		.byte	0x1
 16616 012f 3F       		.uleb128 0x3f
 16617 0130 19       		.uleb128 0x19
 16618 0131 03       		.uleb128 0x3
 16619 0132 0E       		.uleb128 0xe
 16620 0133 3A       		.uleb128 0x3a
 16621 0134 0B       		.uleb128 0xb
 16622 0135 3B       		.uleb128 0x3b
 16623 0136 0B       		.uleb128 0xb
 16624 0137 3C       		.uleb128 0x3c
 16625 0138 19       		.uleb128 0x19
 16626 0139 64       		.uleb128 0x64
 16627 013a 13       		.uleb128 0x13
 16628 013b 01       		.uleb128 0x1
 16629 013c 13       		.uleb128 0x13
 16630 013d 00       		.byte	0
 16631 013e 00       		.byte	0
 16632 013f 18       		.uleb128 0x18
 16633 0140 2E       		.uleb128 0x2e
 16634 0141 01       		.byte	0x1
 16635 0142 3F       		.uleb128 0x3f
 16636 0143 19       		.uleb128 0x19
 16637 0144 03       		.uleb128 0x3
 16638 0145 0E       		.uleb128 0xe
 16639 0146 3A       		.uleb128 0x3a
 16640 0147 0B       		.uleb128 0xb
 16641 0148 3B       		.uleb128 0x3b
 16642 0149 05       		.uleb128 0x5
 16643 014a 3C       		.uleb128 0x3c
 16644 014b 19       		.uleb128 0x19
 16645 014c 64       		.uleb128 0x64
 16646 014d 13       		.uleb128 0x13
 16647 014e 01       		.uleb128 0x1
 16648 014f 13       		.uleb128 0x13
 16649 0150 00       		.byte	0
 16650 0151 00       		.byte	0
 16651 0152 19       		.uleb128 0x19
 16652 0153 05       		.uleb128 0x5
 16653 0154 00       		.byte	0
 16654 0155 49       		.uleb128 0x49
 16655 0156 13       		.uleb128 0x13
 16656 0157 00       		.byte	0
 16657 0158 00       		.byte	0
 16658 0159 1A       		.uleb128 0x1a
 16659 015a 2E       		.uleb128 0x2e
 16660 015b 01       		.byte	0x1
 16661 015c 3F       		.uleb128 0x3f
 16662 015d 19       		.uleb128 0x19
 16663 015e 03       		.uleb128 0x3
GAS LISTING /tmp/cceISX6N.s 			page 420


 16664 015f 0E       		.uleb128 0xe
 16665 0160 3A       		.uleb128 0x3a
 16666 0161 0B       		.uleb128 0xb
 16667 0162 3B       		.uleb128 0x3b
 16668 0163 05       		.uleb128 0x5
 16669 0164 6E       		.uleb128 0x6e
 16670 0165 0E       		.uleb128 0xe
 16671 0166 49       		.uleb128 0x49
 16672 0167 13       		.uleb128 0x13
 16673 0168 3C       		.uleb128 0x3c
 16674 0169 19       		.uleb128 0x19
 16675 016a 64       		.uleb128 0x64
 16676 016b 13       		.uleb128 0x13
 16677 016c 01       		.uleb128 0x1
 16678 016d 13       		.uleb128 0x13
 16679 016e 00       		.byte	0
 16680 016f 00       		.byte	0
 16681 0170 1B       		.uleb128 0x1b
 16682 0171 2E       		.uleb128 0x2e
 16683 0172 00       		.byte	0
 16684 0173 3F       		.uleb128 0x3f
 16685 0174 19       		.uleb128 0x19
 16686 0175 03       		.uleb128 0x3
 16687 0176 0E       		.uleb128 0xe
 16688 0177 3A       		.uleb128 0x3a
 16689 0178 0B       		.uleb128 0xb
 16690 0179 3B       		.uleb128 0x3b
 16691 017a 05       		.uleb128 0x5
 16692 017b 6E       		.uleb128 0x6e
 16693 017c 0E       		.uleb128 0xe
 16694 017d 49       		.uleb128 0x49
 16695 017e 13       		.uleb128 0x13
 16696 017f 3C       		.uleb128 0x3c
 16697 0180 19       		.uleb128 0x19
 16698 0181 00       		.byte	0
 16699 0182 00       		.byte	0
 16700 0183 1C       		.uleb128 0x1c
 16701 0184 2E       		.uleb128 0x2e
 16702 0185 01       		.byte	0x1
 16703 0186 3F       		.uleb128 0x3f
 16704 0187 19       		.uleb128 0x19
 16705 0188 03       		.uleb128 0x3
 16706 0189 0E       		.uleb128 0xe
 16707 018a 3A       		.uleb128 0x3a
 16708 018b 0B       		.uleb128 0xb
 16709 018c 3B       		.uleb128 0x3b
 16710 018d 05       		.uleb128 0x5
 16711 018e 3C       		.uleb128 0x3c
 16712 018f 19       		.uleb128 0x19
 16713 0190 63       		.uleb128 0x63
 16714 0191 19       		.uleb128 0x19
 16715 0192 64       		.uleb128 0x64
 16716 0193 13       		.uleb128 0x13
 16717 0194 01       		.uleb128 0x1
 16718 0195 13       		.uleb128 0x13
 16719 0196 00       		.byte	0
 16720 0197 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 421


 16721 0198 1D       		.uleb128 0x1d
 16722 0199 2F       		.uleb128 0x2f
 16723 019a 00       		.byte	0
 16724 019b 03       		.uleb128 0x3
 16725 019c 0E       		.uleb128 0xe
 16726 019d 49       		.uleb128 0x49
 16727 019e 13       		.uleb128 0x13
 16728 019f 00       		.byte	0
 16729 01a0 00       		.byte	0
 16730 01a1 1E       		.uleb128 0x1e
 16731 01a2 13       		.uleb128 0x13
 16732 01a3 01       		.byte	0x1
 16733 01a4 03       		.uleb128 0x3
 16734 01a5 0E       		.uleb128 0xe
 16735 01a6 0B       		.uleb128 0xb
 16736 01a7 0B       		.uleb128 0xb
 16737 01a8 3A       		.uleb128 0x3a
 16738 01a9 0B       		.uleb128 0xb
 16739 01aa 3B       		.uleb128 0x3b
 16740 01ab 05       		.uleb128 0x5
 16741 01ac 01       		.uleb128 0x1
 16742 01ad 13       		.uleb128 0x13
 16743 01ae 00       		.byte	0
 16744 01af 00       		.byte	0
 16745 01b0 1F       		.uleb128 0x1f
 16746 01b1 2E       		.uleb128 0x2e
 16747 01b2 01       		.byte	0x1
 16748 01b3 3F       		.uleb128 0x3f
 16749 01b4 19       		.uleb128 0x19
 16750 01b5 03       		.uleb128 0x3
 16751 01b6 0E       		.uleb128 0xe
 16752 01b7 3A       		.uleb128 0x3a
 16753 01b8 0B       		.uleb128 0xb
 16754 01b9 3B       		.uleb128 0x3b
 16755 01ba 0B       		.uleb128 0xb
 16756 01bb 49       		.uleb128 0x49
 16757 01bc 13       		.uleb128 0x13
 16758 01bd 3C       		.uleb128 0x3c
 16759 01be 19       		.uleb128 0x19
 16760 01bf 01       		.uleb128 0x1
 16761 01c0 13       		.uleb128 0x13
 16762 01c1 00       		.byte	0
 16763 01c2 00       		.byte	0
 16764 01c3 20       		.uleb128 0x20
 16765 01c4 30       		.uleb128 0x30
 16766 01c5 00       		.byte	0
 16767 01c6 03       		.uleb128 0x3
 16768 01c7 0E       		.uleb128 0xe
 16769 01c8 49       		.uleb128 0x49
 16770 01c9 13       		.uleb128 0x13
 16771 01ca 1C       		.uleb128 0x1c
 16772 01cb 0B       		.uleb128 0xb
 16773 01cc 00       		.byte	0
 16774 01cd 00       		.byte	0
 16775 01ce 21       		.uleb128 0x21
 16776 01cf 2E       		.uleb128 0x2e
 16777 01d0 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 422


 16778 01d1 3F       		.uleb128 0x3f
 16779 01d2 19       		.uleb128 0x19
 16780 01d3 03       		.uleb128 0x3
 16781 01d4 0E       		.uleb128 0xe
 16782 01d5 3A       		.uleb128 0x3a
 16783 01d6 0B       		.uleb128 0xb
 16784 01d7 3B       		.uleb128 0x3b
 16785 01d8 05       		.uleb128 0x5
 16786 01d9 49       		.uleb128 0x49
 16787 01da 13       		.uleb128 0x13
 16788 01db 3C       		.uleb128 0x3c
 16789 01dc 19       		.uleb128 0x19
 16790 01dd 01       		.uleb128 0x1
 16791 01de 13       		.uleb128 0x13
 16792 01df 00       		.byte	0
 16793 01e0 00       		.byte	0
 16794 01e1 22       		.uleb128 0x22
 16795 01e2 2E       		.uleb128 0x2e
 16796 01e3 01       		.byte	0x1
 16797 01e4 3F       		.uleb128 0x3f
 16798 01e5 19       		.uleb128 0x19
 16799 01e6 03       		.uleb128 0x3
 16800 01e7 0E       		.uleb128 0xe
 16801 01e8 3A       		.uleb128 0x3a
 16802 01e9 0B       		.uleb128 0xb
 16803 01ea 3B       		.uleb128 0x3b
 16804 01eb 05       		.uleb128 0x5
 16805 01ec 49       		.uleb128 0x49
 16806 01ed 13       		.uleb128 0x13
 16807 01ee 3C       		.uleb128 0x3c
 16808 01ef 19       		.uleb128 0x19
 16809 01f0 00       		.byte	0
 16810 01f1 00       		.byte	0
 16811 01f2 23       		.uleb128 0x23
 16812 01f3 30       		.uleb128 0x30
 16813 01f4 00       		.byte	0
 16814 01f5 03       		.uleb128 0x3
 16815 01f6 08       		.uleb128 0x8
 16816 01f7 49       		.uleb128 0x49
 16817 01f8 13       		.uleb128 0x13
 16818 01f9 1C       		.uleb128 0x1c
 16819 01fa 06       		.uleb128 0x6
 16820 01fb 00       		.byte	0
 16821 01fc 00       		.byte	0
 16822 01fd 24       		.uleb128 0x24
 16823 01fe 0D       		.uleb128 0xd
 16824 01ff 00       		.byte	0
 16825 0200 03       		.uleb128 0x3
 16826 0201 08       		.uleb128 0x8
 16827 0202 3A       		.uleb128 0x3a
 16828 0203 0B       		.uleb128 0xb
 16829 0204 3B       		.uleb128 0x3b
 16830 0205 05       		.uleb128 0x5
 16831 0206 49       		.uleb128 0x49
 16832 0207 13       		.uleb128 0x13
 16833 0208 3F       		.uleb128 0x3f
 16834 0209 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 423


 16835 020a 3C       		.uleb128 0x3c
 16836 020b 19       		.uleb128 0x19
 16837 020c 1C       		.uleb128 0x1c
 16838 020d 0B       		.uleb128 0xb
 16839 020e 00       		.byte	0
 16840 020f 00       		.byte	0
 16841 0210 25       		.uleb128 0x25
 16842 0211 0D       		.uleb128 0xd
 16843 0212 00       		.byte	0
 16844 0213 03       		.uleb128 0x3
 16845 0214 08       		.uleb128 0x8
 16846 0215 3A       		.uleb128 0x3a
 16847 0216 0B       		.uleb128 0xb
 16848 0217 3B       		.uleb128 0x3b
 16849 0218 05       		.uleb128 0x5
 16850 0219 49       		.uleb128 0x49
 16851 021a 13       		.uleb128 0x13
 16852 021b 3F       		.uleb128 0x3f
 16853 021c 19       		.uleb128 0x19
 16854 021d 3C       		.uleb128 0x3c
 16855 021e 19       		.uleb128 0x19
 16856 021f 1C       		.uleb128 0x1c
 16857 0220 06       		.uleb128 0x6
 16858 0221 00       		.byte	0
 16859 0222 00       		.byte	0
 16860 0223 26       		.uleb128 0x26
 16861 0224 30       		.uleb128 0x30
 16862 0225 00       		.byte	0
 16863 0226 03       		.uleb128 0x3
 16864 0227 0E       		.uleb128 0xe
 16865 0228 49       		.uleb128 0x49
 16866 0229 13       		.uleb128 0x13
 16867 022a 1C       		.uleb128 0x1c
 16868 022b 06       		.uleb128 0x6
 16869 022c 00       		.byte	0
 16870 022d 00       		.byte	0
 16871 022e 27       		.uleb128 0x27
 16872 022f 02       		.uleb128 0x2
 16873 0230 01       		.byte	0x1
 16874 0231 03       		.uleb128 0x3
 16875 0232 0E       		.uleb128 0xe
 16876 0233 0B       		.uleb128 0xb
 16877 0234 0B       		.uleb128 0xb
 16878 0235 3A       		.uleb128 0x3a
 16879 0236 0B       		.uleb128 0xb
 16880 0237 3B       		.uleb128 0x3b
 16881 0238 0B       		.uleb128 0xb
 16882 0239 01       		.uleb128 0x1
 16883 023a 13       		.uleb128 0x13
 16884 023b 00       		.byte	0
 16885 023c 00       		.byte	0
 16886 023d 28       		.uleb128 0x28
 16887 023e 0D       		.uleb128 0xd
 16888 023f 00       		.byte	0
 16889 0240 03       		.uleb128 0x3
 16890 0241 0E       		.uleb128 0xe
 16891 0242 3A       		.uleb128 0x3a
GAS LISTING /tmp/cceISX6N.s 			page 424


 16892 0243 0B       		.uleb128 0xb
 16893 0244 3B       		.uleb128 0x3b
 16894 0245 0B       		.uleb128 0xb
 16895 0246 49       		.uleb128 0x49
 16896 0247 13       		.uleb128 0x13
 16897 0248 38       		.uleb128 0x38
 16898 0249 0B       		.uleb128 0xb
 16899 024a 00       		.byte	0
 16900 024b 00       		.byte	0
 16901 024c 29       		.uleb128 0x29
 16902 024d 2E       		.uleb128 0x2e
 16903 024e 01       		.byte	0x1
 16904 024f 3F       		.uleb128 0x3f
 16905 0250 19       		.uleb128 0x19
 16906 0251 03       		.uleb128 0x3
 16907 0252 0E       		.uleb128 0xe
 16908 0253 3A       		.uleb128 0x3a
 16909 0254 0B       		.uleb128 0xb
 16910 0255 3B       		.uleb128 0x3b
 16911 0256 0B       		.uleb128 0xb
 16912 0257 3C       		.uleb128 0x3c
 16913 0258 19       		.uleb128 0x19
 16914 0259 63       		.uleb128 0x63
 16915 025a 19       		.uleb128 0x19
 16916 025b 64       		.uleb128 0x64
 16917 025c 13       		.uleb128 0x13
 16918 025d 01       		.uleb128 0x1
 16919 025e 13       		.uleb128 0x13
 16920 025f 00       		.byte	0
 16921 0260 00       		.byte	0
 16922 0261 2A       		.uleb128 0x2a
 16923 0262 2E       		.uleb128 0x2e
 16924 0263 01       		.byte	0x1
 16925 0264 3F       		.uleb128 0x3f
 16926 0265 19       		.uleb128 0x19
 16927 0266 03       		.uleb128 0x3
 16928 0267 0E       		.uleb128 0xe
 16929 0268 3A       		.uleb128 0x3a
 16930 0269 0B       		.uleb128 0xb
 16931 026a 3B       		.uleb128 0x3b
 16932 026b 0B       		.uleb128 0xb
 16933 026c 6E       		.uleb128 0x6e
 16934 026d 0E       		.uleb128 0xe
 16935 026e 3C       		.uleb128 0x3c
 16936 026f 19       		.uleb128 0x19
 16937 0270 64       		.uleb128 0x64
 16938 0271 13       		.uleb128 0x13
 16939 0272 01       		.uleb128 0x1
 16940 0273 13       		.uleb128 0x13
 16941 0274 00       		.byte	0
 16942 0275 00       		.byte	0
 16943 0276 2B       		.uleb128 0x2b
 16944 0277 2E       		.uleb128 0x2e
 16945 0278 01       		.byte	0x1
 16946 0279 3F       		.uleb128 0x3f
 16947 027a 19       		.uleb128 0x19
 16948 027b 03       		.uleb128 0x3
GAS LISTING /tmp/cceISX6N.s 			page 425


 16949 027c 0E       		.uleb128 0xe
 16950 027d 3A       		.uleb128 0x3a
 16951 027e 0B       		.uleb128 0xb
 16952 027f 3B       		.uleb128 0x3b
 16953 0280 0B       		.uleb128 0xb
 16954 0281 32       		.uleb128 0x32
 16955 0282 0B       		.uleb128 0xb
 16956 0283 3C       		.uleb128 0x3c
 16957 0284 19       		.uleb128 0x19
 16958 0285 64       		.uleb128 0x64
 16959 0286 13       		.uleb128 0x13
 16960 0287 01       		.uleb128 0x1
 16961 0288 13       		.uleb128 0x13
 16962 0289 00       		.byte	0
 16963 028a 00       		.byte	0
 16964 028b 2C       		.uleb128 0x2c
 16965 028c 2E       		.uleb128 0x2e
 16966 028d 01       		.byte	0x1
 16967 028e 3F       		.uleb128 0x3f
 16968 028f 19       		.uleb128 0x19
 16969 0290 03       		.uleb128 0x3
 16970 0291 0E       		.uleb128 0xe
 16971 0292 3A       		.uleb128 0x3a
 16972 0293 0B       		.uleb128 0xb
 16973 0294 3B       		.uleb128 0x3b
 16974 0295 0B       		.uleb128 0xb
 16975 0296 6E       		.uleb128 0x6e
 16976 0297 0E       		.uleb128 0xe
 16977 0298 49       		.uleb128 0x49
 16978 0299 13       		.uleb128 0x13
 16979 029a 32       		.uleb128 0x32
 16980 029b 0B       		.uleb128 0xb
 16981 029c 3C       		.uleb128 0x3c
 16982 029d 19       		.uleb128 0x19
 16983 029e 64       		.uleb128 0x64
 16984 029f 13       		.uleb128 0x13
 16985 02a0 01       		.uleb128 0x1
 16986 02a1 13       		.uleb128 0x13
 16987 02a2 00       		.byte	0
 16988 02a3 00       		.byte	0
 16989 02a4 2D       		.uleb128 0x2d
 16990 02a5 2E       		.uleb128 0x2e
 16991 02a6 01       		.byte	0x1
 16992 02a7 3F       		.uleb128 0x3f
 16993 02a8 19       		.uleb128 0x19
 16994 02a9 03       		.uleb128 0x3
 16995 02aa 0E       		.uleb128 0xe
 16996 02ab 3A       		.uleb128 0x3a
 16997 02ac 0B       		.uleb128 0xb
 16998 02ad 3B       		.uleb128 0x3b
 16999 02ae 0B       		.uleb128 0xb
 17000 02af 6E       		.uleb128 0x6e
 17001 02b0 0E       		.uleb128 0xe
 17002 02b1 32       		.uleb128 0x32
 17003 02b2 0B       		.uleb128 0xb
 17004 02b3 3C       		.uleb128 0x3c
 17005 02b4 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 426


 17006 02b5 64       		.uleb128 0x64
 17007 02b6 13       		.uleb128 0x13
 17008 02b7 01       		.uleb128 0x1
 17009 02b8 13       		.uleb128 0x13
 17010 02b9 00       		.byte	0
 17011 02ba 00       		.byte	0
 17012 02bb 2E       		.uleb128 0x2e
 17013 02bc 2E       		.uleb128 0x2e
 17014 02bd 01       		.byte	0x1
 17015 02be 3F       		.uleb128 0x3f
 17016 02bf 19       		.uleb128 0x19
 17017 02c0 03       		.uleb128 0x3
 17018 02c1 0E       		.uleb128 0xe
 17019 02c2 3A       		.uleb128 0x3a
 17020 02c3 0B       		.uleb128 0xb
 17021 02c4 3B       		.uleb128 0x3b
 17022 02c5 0B       		.uleb128 0xb
 17023 02c6 6E       		.uleb128 0x6e
 17024 02c7 0E       		.uleb128 0xe
 17025 02c8 49       		.uleb128 0x49
 17026 02c9 13       		.uleb128 0x13
 17027 02ca 32       		.uleb128 0x32
 17028 02cb 0B       		.uleb128 0xb
 17029 02cc 3C       		.uleb128 0x3c
 17030 02cd 19       		.uleb128 0x19
 17031 02ce 64       		.uleb128 0x64
 17032 02cf 13       		.uleb128 0x13
 17033 02d0 00       		.byte	0
 17034 02d1 00       		.byte	0
 17035 02d2 2F       		.uleb128 0x2f
 17036 02d3 02       		.uleb128 0x2
 17037 02d4 00       		.byte	0
 17038 02d5 03       		.uleb128 0x3
 17039 02d6 0E       		.uleb128 0xe
 17040 02d7 3C       		.uleb128 0x3c
 17041 02d8 19       		.uleb128 0x19
 17042 02d9 00       		.byte	0
 17043 02da 00       		.byte	0
 17044 02db 30       		.uleb128 0x30
 17045 02dc 13       		.uleb128 0x13
 17046 02dd 00       		.byte	0
 17047 02de 03       		.uleb128 0x3
 17048 02df 0E       		.uleb128 0xe
 17049 02e0 0B       		.uleb128 0xb
 17050 02e1 0B       		.uleb128 0xb
 17051 02e2 3A       		.uleb128 0x3a
 17052 02e3 0B       		.uleb128 0xb
 17053 02e4 3B       		.uleb128 0x3b
 17054 02e5 0B       		.uleb128 0xb
 17055 02e6 00       		.byte	0
 17056 02e7 00       		.byte	0
 17057 02e8 31       		.uleb128 0x31
 17058 02e9 39       		.uleb128 0x39
 17059 02ea 00       		.byte	0
 17060 02eb 03       		.uleb128 0x3
 17061 02ec 0E       		.uleb128 0xe
 17062 02ed 3A       		.uleb128 0x3a
GAS LISTING /tmp/cceISX6N.s 			page 427


 17063 02ee 0B       		.uleb128 0xb
 17064 02ef 3B       		.uleb128 0x3b
 17065 02f0 0B       		.uleb128 0xb
 17066 02f1 00       		.byte	0
 17067 02f2 00       		.byte	0
 17068 02f3 32       		.uleb128 0x32
 17069 02f4 2E       		.uleb128 0x2e
 17070 02f5 01       		.byte	0x1
 17071 02f6 3F       		.uleb128 0x3f
 17072 02f7 19       		.uleb128 0x19
 17073 02f8 03       		.uleb128 0x3
 17074 02f9 0E       		.uleb128 0xe
 17075 02fa 3A       		.uleb128 0x3a
 17076 02fb 0B       		.uleb128 0xb
 17077 02fc 3B       		.uleb128 0x3b
 17078 02fd 0B       		.uleb128 0xb
 17079 02fe 6E       		.uleb128 0x6e
 17080 02ff 0E       		.uleb128 0xe
 17081 0300 3C       		.uleb128 0x3c
 17082 0301 19       		.uleb128 0x19
 17083 0302 01       		.uleb128 0x1
 17084 0303 13       		.uleb128 0x13
 17085 0304 00       		.byte	0
 17086 0305 00       		.byte	0
 17087 0306 33       		.uleb128 0x33
 17088 0307 2E       		.uleb128 0x2e
 17089 0308 01       		.byte	0x1
 17090 0309 3F       		.uleb128 0x3f
 17091 030a 19       		.uleb128 0x19
 17092 030b 03       		.uleb128 0x3
 17093 030c 08       		.uleb128 0x8
 17094 030d 3A       		.uleb128 0x3a
 17095 030e 0B       		.uleb128 0xb
 17096 030f 3B       		.uleb128 0x3b
 17097 0310 0B       		.uleb128 0xb
 17098 0311 6E       		.uleb128 0x6e
 17099 0312 0E       		.uleb128 0xe
 17100 0313 49       		.uleb128 0x49
 17101 0314 13       		.uleb128 0x13
 17102 0315 3C       		.uleb128 0x3c
 17103 0316 19       		.uleb128 0x19
 17104 0317 01       		.uleb128 0x1
 17105 0318 13       		.uleb128 0x13
 17106 0319 00       		.byte	0
 17107 031a 00       		.byte	0
 17108 031b 34       		.uleb128 0x34
 17109 031c 2E       		.uleb128 0x2e
 17110 031d 01       		.byte	0x1
 17111 031e 3F       		.uleb128 0x3f
 17112 031f 19       		.uleb128 0x19
 17113 0320 03       		.uleb128 0x3
 17114 0321 0E       		.uleb128 0xe
 17115 0322 3A       		.uleb128 0x3a
 17116 0323 0B       		.uleb128 0xb
 17117 0324 3B       		.uleb128 0x3b
 17118 0325 0B       		.uleb128 0xb
 17119 0326 6E       		.uleb128 0x6e
GAS LISTING /tmp/cceISX6N.s 			page 428


 17120 0327 0E       		.uleb128 0xe
 17121 0328 49       		.uleb128 0x49
 17122 0329 13       		.uleb128 0x13
 17123 032a 3C       		.uleb128 0x3c
 17124 032b 19       		.uleb128 0x19
 17125 032c 01       		.uleb128 0x1
 17126 032d 13       		.uleb128 0x13
 17127 032e 00       		.byte	0
 17128 032f 00       		.byte	0
 17129 0330 35       		.uleb128 0x35
 17130 0331 2E       		.uleb128 0x2e
 17131 0332 01       		.byte	0x1
 17132 0333 3F       		.uleb128 0x3f
 17133 0334 19       		.uleb128 0x19
 17134 0335 03       		.uleb128 0x3
 17135 0336 0E       		.uleb128 0xe
 17136 0337 3A       		.uleb128 0x3a
 17137 0338 0B       		.uleb128 0xb
 17138 0339 3B       		.uleb128 0x3b
 17139 033a 05       		.uleb128 0x5
 17140 033b 6E       		.uleb128 0x6e
 17141 033c 0E       		.uleb128 0xe
 17142 033d 49       		.uleb128 0x49
 17143 033e 13       		.uleb128 0x13
 17144 033f 3C       		.uleb128 0x3c
 17145 0340 19       		.uleb128 0x19
 17146 0341 01       		.uleb128 0x1
 17147 0342 13       		.uleb128 0x13
 17148 0343 00       		.byte	0
 17149 0344 00       		.byte	0
 17150 0345 36       		.uleb128 0x36
 17151 0346 2E       		.uleb128 0x2e
 17152 0347 01       		.byte	0x1
 17153 0348 3F       		.uleb128 0x3f
 17154 0349 19       		.uleb128 0x19
 17155 034a 03       		.uleb128 0x3
 17156 034b 0E       		.uleb128 0xe
 17157 034c 3A       		.uleb128 0x3a
 17158 034d 0B       		.uleb128 0xb
 17159 034e 3B       		.uleb128 0x3b
 17160 034f 05       		.uleb128 0x5
 17161 0350 6E       		.uleb128 0x6e
 17162 0351 0E       		.uleb128 0xe
 17163 0352 49       		.uleb128 0x49
 17164 0353 13       		.uleb128 0x13
 17165 0354 3C       		.uleb128 0x3c
 17166 0355 19       		.uleb128 0x19
 17167 0356 00       		.byte	0
 17168 0357 00       		.byte	0
 17169 0358 37       		.uleb128 0x37
 17170 0359 1C       		.uleb128 0x1c
 17171 035a 00       		.byte	0
 17172 035b 49       		.uleb128 0x49
 17173 035c 13       		.uleb128 0x13
 17174 035d 38       		.uleb128 0x38
 17175 035e 0B       		.uleb128 0xb
 17176 035f 32       		.uleb128 0x32
GAS LISTING /tmp/cceISX6N.s 			page 429


 17177 0360 0B       		.uleb128 0xb
 17178 0361 00       		.byte	0
 17179 0362 00       		.byte	0
 17180 0363 38       		.uleb128 0x38
 17181 0364 16       		.uleb128 0x16
 17182 0365 00       		.byte	0
 17183 0366 03       		.uleb128 0x3
 17184 0367 0E       		.uleb128 0xe
 17185 0368 3A       		.uleb128 0x3a
 17186 0369 0B       		.uleb128 0xb
 17187 036a 3B       		.uleb128 0x3b
 17188 036b 0B       		.uleb128 0xb
 17189 036c 49       		.uleb128 0x49
 17190 036d 13       		.uleb128 0x13
 17191 036e 32       		.uleb128 0x32
 17192 036f 0B       		.uleb128 0xb
 17193 0370 00       		.byte	0
 17194 0371 00       		.byte	0
 17195 0372 39       		.uleb128 0x39
 17196 0373 2E       		.uleb128 0x2e
 17197 0374 01       		.byte	0x1
 17198 0375 3F       		.uleb128 0x3f
 17199 0376 19       		.uleb128 0x19
 17200 0377 03       		.uleb128 0x3
 17201 0378 0E       		.uleb128 0xe
 17202 0379 3A       		.uleb128 0x3a
 17203 037a 0B       		.uleb128 0xb
 17204 037b 3B       		.uleb128 0x3b
 17205 037c 0B       		.uleb128 0xb
 17206 037d 32       		.uleb128 0x32
 17207 037e 0B       		.uleb128 0xb
 17208 037f 3C       		.uleb128 0x3c
 17209 0380 19       		.uleb128 0x19
 17210 0381 64       		.uleb128 0x64
 17211 0382 13       		.uleb128 0x13
 17212 0383 00       		.byte	0
 17213 0384 00       		.byte	0
 17214 0385 3A       		.uleb128 0x3a
 17215 0386 1C       		.uleb128 0x1c
 17216 0387 00       		.byte	0
 17217 0388 49       		.uleb128 0x49
 17218 0389 13       		.uleb128 0x13
 17219 038a 38       		.uleb128 0x38
 17220 038b 0B       		.uleb128 0xb
 17221 038c 00       		.byte	0
 17222 038d 00       		.byte	0
 17223 038e 3B       		.uleb128 0x3b
 17224 038f 0D       		.uleb128 0xd
 17225 0390 00       		.byte	0
 17226 0391 03       		.uleb128 0x3
 17227 0392 0E       		.uleb128 0xe
 17228 0393 3A       		.uleb128 0x3a
 17229 0394 0B       		.uleb128 0xb
 17230 0395 3B       		.uleb128 0x3b
 17231 0396 05       		.uleb128 0x5
 17232 0397 49       		.uleb128 0x49
 17233 0398 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 430


 17234 0399 38       		.uleb128 0x38
 17235 039a 0B       		.uleb128 0xb
 17236 039b 00       		.byte	0
 17237 039c 00       		.byte	0
 17238 039d 3C       		.uleb128 0x3c
 17239 039e 2E       		.uleb128 0x2e
 17240 039f 01       		.byte	0x1
 17241 03a0 3F       		.uleb128 0x3f
 17242 03a1 19       		.uleb128 0x19
 17243 03a2 03       		.uleb128 0x3
 17244 03a3 0E       		.uleb128 0xe
 17245 03a4 34       		.uleb128 0x34
 17246 03a5 19       		.uleb128 0x19
 17247 03a6 3C       		.uleb128 0x3c
 17248 03a7 19       		.uleb128 0x19
 17249 03a8 64       		.uleb128 0x64
 17250 03a9 13       		.uleb128 0x13
 17251 03aa 00       		.byte	0
 17252 03ab 00       		.byte	0
 17253 03ac 3D       		.uleb128 0x3d
 17254 03ad 0D       		.uleb128 0xd
 17255 03ae 00       		.byte	0
 17256 03af 03       		.uleb128 0x3
 17257 03b0 0E       		.uleb128 0xe
 17258 03b1 3A       		.uleb128 0x3a
 17259 03b2 0B       		.uleb128 0xb
 17260 03b3 3B       		.uleb128 0x3b
 17261 03b4 05       		.uleb128 0x5
 17262 03b5 49       		.uleb128 0x49
 17263 03b6 13       		.uleb128 0x13
 17264 03b7 3F       		.uleb128 0x3f
 17265 03b8 19       		.uleb128 0x19
 17266 03b9 32       		.uleb128 0x32
 17267 03ba 0B       		.uleb128 0xb
 17268 03bb 3C       		.uleb128 0x3c
 17269 03bc 19       		.uleb128 0x19
 17270 03bd 00       		.byte	0
 17271 03be 00       		.byte	0
 17272 03bf 3E       		.uleb128 0x3e
 17273 03c0 2E       		.uleb128 0x2e
 17274 03c1 00       		.byte	0
 17275 03c2 3F       		.uleb128 0x3f
 17276 03c3 19       		.uleb128 0x19
 17277 03c4 03       		.uleb128 0x3
 17278 03c5 0E       		.uleb128 0xe
 17279 03c6 3A       		.uleb128 0x3a
 17280 03c7 0B       		.uleb128 0xb
 17281 03c8 3B       		.uleb128 0x3b
 17282 03c9 0B       		.uleb128 0xb
 17283 03ca 6E       		.uleb128 0x6e
 17284 03cb 0E       		.uleb128 0xe
 17285 03cc 49       		.uleb128 0x49
 17286 03cd 13       		.uleb128 0x13
 17287 03ce 3C       		.uleb128 0x3c
 17288 03cf 19       		.uleb128 0x19
 17289 03d0 00       		.byte	0
 17290 03d1 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 431


 17291 03d2 3F       		.uleb128 0x3f
 17292 03d3 2E       		.uleb128 0x2e
 17293 03d4 01       		.byte	0x1
 17294 03d5 3F       		.uleb128 0x3f
 17295 03d6 19       		.uleb128 0x19
 17296 03d7 03       		.uleb128 0x3
 17297 03d8 0E       		.uleb128 0xe
 17298 03d9 3A       		.uleb128 0x3a
 17299 03da 0B       		.uleb128 0xb
 17300 03db 3B       		.uleb128 0x3b
 17301 03dc 05       		.uleb128 0x5
 17302 03dd 6E       		.uleb128 0x6e
 17303 03de 0E       		.uleb128 0xe
 17304 03df 3C       		.uleb128 0x3c
 17305 03e0 19       		.uleb128 0x19
 17306 03e1 64       		.uleb128 0x64
 17307 03e2 13       		.uleb128 0x13
 17308 03e3 01       		.uleb128 0x1
 17309 03e4 13       		.uleb128 0x13
 17310 03e5 00       		.byte	0
 17311 03e6 00       		.byte	0
 17312 03e7 40       		.uleb128 0x40
 17313 03e8 2E       		.uleb128 0x2e
 17314 03e9 01       		.byte	0x1
 17315 03ea 3F       		.uleb128 0x3f
 17316 03eb 19       		.uleb128 0x19
 17317 03ec 03       		.uleb128 0x3
 17318 03ed 0E       		.uleb128 0xe
 17319 03ee 3A       		.uleb128 0x3a
 17320 03ef 0B       		.uleb128 0xb
 17321 03f0 3B       		.uleb128 0x3b
 17322 03f1 05       		.uleb128 0x5
 17323 03f2 6E       		.uleb128 0x6e
 17324 03f3 0E       		.uleb128 0xe
 17325 03f4 49       		.uleb128 0x49
 17326 03f5 13       		.uleb128 0x13
 17327 03f6 3C       		.uleb128 0x3c
 17328 03f7 19       		.uleb128 0x19
 17329 03f8 64       		.uleb128 0x64
 17330 03f9 13       		.uleb128 0x13
 17331 03fa 00       		.byte	0
 17332 03fb 00       		.byte	0
 17333 03fc 41       		.uleb128 0x41
 17334 03fd 2E       		.uleb128 0x2e
 17335 03fe 01       		.byte	0x1
 17336 03ff 3F       		.uleb128 0x3f
 17337 0400 19       		.uleb128 0x19
 17338 0401 03       		.uleb128 0x3
 17339 0402 0E       		.uleb128 0xe
 17340 0403 3A       		.uleb128 0x3a
 17341 0404 0B       		.uleb128 0xb
 17342 0405 3B       		.uleb128 0x3b
 17343 0406 05       		.uleb128 0x5
 17344 0407 6E       		.uleb128 0x6e
 17345 0408 0E       		.uleb128 0xe
 17346 0409 3C       		.uleb128 0x3c
 17347 040a 19       		.uleb128 0x19
GAS LISTING /tmp/cceISX6N.s 			page 432


 17348 040b 01       		.uleb128 0x1
 17349 040c 13       		.uleb128 0x13
 17350 040d 00       		.byte	0
 17351 040e 00       		.byte	0
 17352 040f 42       		.uleb128 0x42
 17353 0410 2E       		.uleb128 0x2e
 17354 0411 01       		.byte	0x1
 17355 0412 3F       		.uleb128 0x3f
 17356 0413 19       		.uleb128 0x19
 17357 0414 03       		.uleb128 0x3
 17358 0415 0E       		.uleb128 0xe
 17359 0416 3A       		.uleb128 0x3a
 17360 0417 0B       		.uleb128 0xb
 17361 0418 3B       		.uleb128 0x3b
 17362 0419 05       		.uleb128 0x5
 17363 041a 32       		.uleb128 0x32
 17364 041b 0B       		.uleb128 0xb
 17365 041c 3C       		.uleb128 0x3c
 17366 041d 19       		.uleb128 0x19
 17367 041e 64       		.uleb128 0x64
 17368 041f 13       		.uleb128 0x13
 17369 0420 01       		.uleb128 0x1
 17370 0421 13       		.uleb128 0x13
 17371 0422 00       		.byte	0
 17372 0423 00       		.byte	0
 17373 0424 43       		.uleb128 0x43
 17374 0425 2E       		.uleb128 0x2e
 17375 0426 01       		.byte	0x1
 17376 0427 3F       		.uleb128 0x3f
 17377 0428 19       		.uleb128 0x19
 17378 0429 03       		.uleb128 0x3
 17379 042a 0E       		.uleb128 0xe
 17380 042b 3A       		.uleb128 0x3a
 17381 042c 0B       		.uleb128 0xb
 17382 042d 3B       		.uleb128 0x3b
 17383 042e 05       		.uleb128 0x5
 17384 042f 32       		.uleb128 0x32
 17385 0430 0B       		.uleb128 0xb
 17386 0431 3C       		.uleb128 0x3c
 17387 0432 19       		.uleb128 0x19
 17388 0433 63       		.uleb128 0x63
 17389 0434 19       		.uleb128 0x19
 17390 0435 64       		.uleb128 0x64
 17391 0436 13       		.uleb128 0x13
 17392 0437 01       		.uleb128 0x1
 17393 0438 13       		.uleb128 0x13
 17394 0439 00       		.byte	0
 17395 043a 00       		.byte	0
 17396 043b 44       		.uleb128 0x44
 17397 043c 2E       		.uleb128 0x2e
 17398 043d 01       		.byte	0x1
 17399 043e 3F       		.uleb128 0x3f
 17400 043f 19       		.uleb128 0x19
 17401 0440 03       		.uleb128 0x3
 17402 0441 0E       		.uleb128 0xe
 17403 0442 3A       		.uleb128 0x3a
 17404 0443 0B       		.uleb128 0xb
GAS LISTING /tmp/cceISX6N.s 			page 433


 17405 0444 3B       		.uleb128 0x3b
 17406 0445 05       		.uleb128 0x5
 17407 0446 6E       		.uleb128 0x6e
 17408 0447 0E       		.uleb128 0xe
 17409 0448 49       		.uleb128 0x49
 17410 0449 13       		.uleb128 0x13
 17411 044a 32       		.uleb128 0x32
 17412 044b 0B       		.uleb128 0xb
 17413 044c 3C       		.uleb128 0x3c
 17414 044d 19       		.uleb128 0x19
 17415 044e 64       		.uleb128 0x64
 17416 044f 13       		.uleb128 0x13
 17417 0450 01       		.uleb128 0x1
 17418 0451 13       		.uleb128 0x13
 17419 0452 00       		.byte	0
 17420 0453 00       		.byte	0
 17421 0454 45       		.uleb128 0x45
 17422 0455 2E       		.uleb128 0x2e
 17423 0456 01       		.byte	0x1
 17424 0457 3F       		.uleb128 0x3f
 17425 0458 19       		.uleb128 0x19
 17426 0459 03       		.uleb128 0x3
 17427 045a 08       		.uleb128 0x8
 17428 045b 3A       		.uleb128 0x3a
 17429 045c 0B       		.uleb128 0xb
 17430 045d 3B       		.uleb128 0x3b
 17431 045e 05       		.uleb128 0x5
 17432 045f 6E       		.uleb128 0x6e
 17433 0460 0E       		.uleb128 0xe
 17434 0461 49       		.uleb128 0x49
 17435 0462 13       		.uleb128 0x13
 17436 0463 32       		.uleb128 0x32
 17437 0464 0B       		.uleb128 0xb
 17438 0465 3C       		.uleb128 0x3c
 17439 0466 19       		.uleb128 0x19
 17440 0467 64       		.uleb128 0x64
 17441 0468 13       		.uleb128 0x13
 17442 0469 01       		.uleb128 0x1
 17443 046a 13       		.uleb128 0x13
 17444 046b 00       		.byte	0
 17445 046c 00       		.byte	0
 17446 046d 46       		.uleb128 0x46
 17447 046e 2E       		.uleb128 0x2e
 17448 046f 01       		.byte	0x1
 17449 0470 3F       		.uleb128 0x3f
 17450 0471 19       		.uleb128 0x19
 17451 0472 03       		.uleb128 0x3
 17452 0473 0E       		.uleb128 0xe
 17453 0474 3A       		.uleb128 0x3a
 17454 0475 0B       		.uleb128 0xb
 17455 0476 3B       		.uleb128 0x3b
 17456 0477 05       		.uleb128 0x5
 17457 0478 6E       		.uleb128 0x6e
 17458 0479 0E       		.uleb128 0xe
 17459 047a 32       		.uleb128 0x32
 17460 047b 0B       		.uleb128 0xb
 17461 047c 3C       		.uleb128 0x3c
GAS LISTING /tmp/cceISX6N.s 			page 434


 17462 047d 19       		.uleb128 0x19
 17463 047e 64       		.uleb128 0x64
 17464 047f 13       		.uleb128 0x13
 17465 0480 01       		.uleb128 0x1
 17466 0481 13       		.uleb128 0x13
 17467 0482 00       		.byte	0
 17468 0483 00       		.byte	0
 17469 0484 47       		.uleb128 0x47
 17470 0485 2E       		.uleb128 0x2e
 17471 0486 01       		.byte	0x1
 17472 0487 3F       		.uleb128 0x3f
 17473 0488 19       		.uleb128 0x19
 17474 0489 03       		.uleb128 0x3
 17475 048a 08       		.uleb128 0x8
 17476 048b 3A       		.uleb128 0x3a
 17477 048c 0B       		.uleb128 0xb
 17478 048d 3B       		.uleb128 0x3b
 17479 048e 0B       		.uleb128 0xb
 17480 048f 6E       		.uleb128 0x6e
 17481 0490 0E       		.uleb128 0xe
 17482 0491 49       		.uleb128 0x49
 17483 0492 13       		.uleb128 0x13
 17484 0493 32       		.uleb128 0x32
 17485 0494 0B       		.uleb128 0xb
 17486 0495 3C       		.uleb128 0x3c
 17487 0496 19       		.uleb128 0x19
 17488 0497 64       		.uleb128 0x64
 17489 0498 13       		.uleb128 0x13
 17490 0499 01       		.uleb128 0x1
 17491 049a 13       		.uleb128 0x13
 17492 049b 00       		.byte	0
 17493 049c 00       		.byte	0
 17494 049d 48       		.uleb128 0x48
 17495 049e 04       		.uleb128 0x4
 17496 049f 01       		.byte	0x1
 17497 04a0 03       		.uleb128 0x3
 17498 04a1 0E       		.uleb128 0xe
 17499 04a2 0B       		.uleb128 0xb
 17500 04a3 0B       		.uleb128 0xb
 17501 04a4 3A       		.uleb128 0x3a
 17502 04a5 0B       		.uleb128 0xb
 17503 04a6 3B       		.uleb128 0x3b
 17504 04a7 0B       		.uleb128 0xb
 17505 04a8 01       		.uleb128 0x1
 17506 04a9 13       		.uleb128 0x13
 17507 04aa 00       		.byte	0
 17508 04ab 00       		.byte	0
 17509 04ac 49       		.uleb128 0x49
 17510 04ad 28       		.uleb128 0x28
 17511 04ae 00       		.byte	0
 17512 04af 03       		.uleb128 0x3
 17513 04b0 0E       		.uleb128 0xe
 17514 04b1 1C       		.uleb128 0x1c
 17515 04b2 0D       		.uleb128 0xd
 17516 04b3 00       		.byte	0
 17517 04b4 00       		.byte	0
 17518 04b5 4A       		.uleb128 0x4a
GAS LISTING /tmp/cceISX6N.s 			page 435


 17519 04b6 02       		.uleb128 0x2
 17520 04b7 01       		.byte	0x1
 17521 04b8 03       		.uleb128 0x3
 17522 04b9 0E       		.uleb128 0xe
 17523 04ba 3C       		.uleb128 0x3c
 17524 04bb 19       		.uleb128 0x19
 17525 04bc 01       		.uleb128 0x1
 17526 04bd 13       		.uleb128 0x13
 17527 04be 00       		.byte	0
 17528 04bf 00       		.byte	0
 17529 04c0 4B       		.uleb128 0x4b
 17530 04c1 02       		.uleb128 0x2
 17531 04c2 01       		.byte	0x1
 17532 04c3 03       		.uleb128 0x3
 17533 04c4 0E       		.uleb128 0xe
 17534 04c5 0B       		.uleb128 0xb
 17535 04c6 0B       		.uleb128 0xb
 17536 04c7 3A       		.uleb128 0x3a
 17537 04c8 0B       		.uleb128 0xb
 17538 04c9 3B       		.uleb128 0x3b
 17539 04ca 05       		.uleb128 0x5
 17540 04cb 32       		.uleb128 0x32
 17541 04cc 0B       		.uleb128 0xb
 17542 04cd 01       		.uleb128 0x1
 17543 04ce 13       		.uleb128 0x13
 17544 04cf 00       		.byte	0
 17545 04d0 00       		.byte	0
 17546 04d1 4C       		.uleb128 0x4c
 17547 04d2 0D       		.uleb128 0xd
 17548 04d3 00       		.byte	0
 17549 04d4 03       		.uleb128 0x3
 17550 04d5 0E       		.uleb128 0xe
 17551 04d6 3A       		.uleb128 0x3a
 17552 04d7 0B       		.uleb128 0xb
 17553 04d8 3B       		.uleb128 0x3b
 17554 04d9 05       		.uleb128 0x5
 17555 04da 49       		.uleb128 0x49
 17556 04db 13       		.uleb128 0x13
 17557 04dc 3F       		.uleb128 0x3f
 17558 04dd 19       		.uleb128 0x19
 17559 04de 3C       		.uleb128 0x3c
 17560 04df 19       		.uleb128 0x19
 17561 04e0 00       		.byte	0
 17562 04e1 00       		.byte	0
 17563 04e2 4D       		.uleb128 0x4d
 17564 04e3 2E       		.uleb128 0x2e
 17565 04e4 01       		.byte	0x1
 17566 04e5 3F       		.uleb128 0x3f
 17567 04e6 19       		.uleb128 0x19
 17568 04e7 03       		.uleb128 0x3
 17569 04e8 0E       		.uleb128 0xe
 17570 04e9 3A       		.uleb128 0x3a
 17571 04ea 0B       		.uleb128 0xb
 17572 04eb 3B       		.uleb128 0x3b
 17573 04ec 05       		.uleb128 0x5
 17574 04ed 32       		.uleb128 0x32
 17575 04ee 0B       		.uleb128 0xb
GAS LISTING /tmp/cceISX6N.s 			page 436


 17576 04ef 3C       		.uleb128 0x3c
 17577 04f0 19       		.uleb128 0x19
 17578 04f1 64       		.uleb128 0x64
 17579 04f2 13       		.uleb128 0x13
 17580 04f3 00       		.byte	0
 17581 04f4 00       		.byte	0
 17582 04f5 4E       		.uleb128 0x4e
 17583 04f6 16       		.uleb128 0x16
 17584 04f7 00       		.byte	0
 17585 04f8 03       		.uleb128 0x3
 17586 04f9 0E       		.uleb128 0xe
 17587 04fa 3A       		.uleb128 0x3a
 17588 04fb 0B       		.uleb128 0xb
 17589 04fc 3B       		.uleb128 0x3b
 17590 04fd 05       		.uleb128 0x5
 17591 04fe 49       		.uleb128 0x49
 17592 04ff 13       		.uleb128 0x13
 17593 0500 32       		.uleb128 0x32
 17594 0501 0B       		.uleb128 0xb
 17595 0502 00       		.byte	0
 17596 0503 00       		.byte	0
 17597 0504 4F       		.uleb128 0x4f
 17598 0505 0D       		.uleb128 0xd
 17599 0506 00       		.byte	0
 17600 0507 03       		.uleb128 0x3
 17601 0508 0E       		.uleb128 0xe
 17602 0509 3A       		.uleb128 0x3a
 17603 050a 0B       		.uleb128 0xb
 17604 050b 3B       		.uleb128 0x3b
 17605 050c 05       		.uleb128 0x5
 17606 050d 49       		.uleb128 0x49
 17607 050e 13       		.uleb128 0x13
 17608 050f 3F       		.uleb128 0x3f
 17609 0510 19       		.uleb128 0x19
 17610 0511 32       		.uleb128 0x32
 17611 0512 0B       		.uleb128 0xb
 17612 0513 3C       		.uleb128 0x3c
 17613 0514 19       		.uleb128 0x19
 17614 0515 1C       		.uleb128 0x1c
 17615 0516 0B       		.uleb128 0xb
 17616 0517 00       		.byte	0
 17617 0518 00       		.byte	0
 17618 0519 50       		.uleb128 0x50
 17619 051a 0D       		.uleb128 0xd
 17620 051b 00       		.byte	0
 17621 051c 03       		.uleb128 0x3
 17622 051d 08       		.uleb128 0x8
 17623 051e 3A       		.uleb128 0x3a
 17624 051f 0B       		.uleb128 0xb
 17625 0520 3B       		.uleb128 0x3b
 17626 0521 05       		.uleb128 0x5
 17627 0522 49       		.uleb128 0x49
 17628 0523 13       		.uleb128 0x13
 17629 0524 3F       		.uleb128 0x3f
 17630 0525 19       		.uleb128 0x19
 17631 0526 32       		.uleb128 0x32
 17632 0527 0B       		.uleb128 0xb
GAS LISTING /tmp/cceISX6N.s 			page 437


 17633 0528 3C       		.uleb128 0x3c
 17634 0529 19       		.uleb128 0x19
 17635 052a 1C       		.uleb128 0x1c
 17636 052b 0B       		.uleb128 0xb
 17637 052c 00       		.byte	0
 17638 052d 00       		.byte	0
 17639 052e 51       		.uleb128 0x51
 17640 052f 0D       		.uleb128 0xd
 17641 0530 00       		.byte	0
 17642 0531 03       		.uleb128 0x3
 17643 0532 0E       		.uleb128 0xe
 17644 0533 3A       		.uleb128 0x3a
 17645 0534 0B       		.uleb128 0xb
 17646 0535 3B       		.uleb128 0x3b
 17647 0536 05       		.uleb128 0x5
 17648 0537 49       		.uleb128 0x49
 17649 0538 13       		.uleb128 0x13
 17650 0539 3F       		.uleb128 0x3f
 17651 053a 19       		.uleb128 0x19
 17652 053b 32       		.uleb128 0x32
 17653 053c 0B       		.uleb128 0xb
 17654 053d 3C       		.uleb128 0x3c
 17655 053e 19       		.uleb128 0x19
 17656 053f 1C       		.uleb128 0x1c
 17657 0540 05       		.uleb128 0x5
 17658 0541 00       		.byte	0
 17659 0542 00       		.byte	0
 17660 0543 52       		.uleb128 0x52
 17661 0544 2E       		.uleb128 0x2e
 17662 0545 01       		.byte	0x1
 17663 0546 3F       		.uleb128 0x3f
 17664 0547 19       		.uleb128 0x19
 17665 0548 03       		.uleb128 0x3
 17666 0549 0E       		.uleb128 0xe
 17667 054a 3A       		.uleb128 0x3a
 17668 054b 0B       		.uleb128 0xb
 17669 054c 3B       		.uleb128 0x3b
 17670 054d 05       		.uleb128 0x5
 17671 054e 6E       		.uleb128 0x6e
 17672 054f 0E       		.uleb128 0xe
 17673 0550 3C       		.uleb128 0x3c
 17674 0551 19       		.uleb128 0x19
 17675 0552 64       		.uleb128 0x64
 17676 0553 13       		.uleb128 0x13
 17677 0554 00       		.byte	0
 17678 0555 00       		.byte	0
 17679 0556 53       		.uleb128 0x53
 17680 0557 30       		.uleb128 0x30
 17681 0558 00       		.byte	0
 17682 0559 03       		.uleb128 0x3
 17683 055a 08       		.uleb128 0x8
 17684 055b 49       		.uleb128 0x49
 17685 055c 13       		.uleb128 0x13
 17686 055d 1C       		.uleb128 0x1c
 17687 055e 05       		.uleb128 0x5
 17688 055f 00       		.byte	0
 17689 0560 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 438


 17690 0561 54       		.uleb128 0x54
 17691 0562 0D       		.uleb128 0xd
 17692 0563 00       		.byte	0
 17693 0564 03       		.uleb128 0x3
 17694 0565 08       		.uleb128 0x8
 17695 0566 3A       		.uleb128 0x3a
 17696 0567 0B       		.uleb128 0xb
 17697 0568 3B       		.uleb128 0x3b
 17698 0569 05       		.uleb128 0x5
 17699 056a 49       		.uleb128 0x49
 17700 056b 13       		.uleb128 0x13
 17701 056c 3F       		.uleb128 0x3f
 17702 056d 19       		.uleb128 0x19
 17703 056e 3C       		.uleb128 0x3c
 17704 056f 19       		.uleb128 0x19
 17705 0570 1C       		.uleb128 0x1c
 17706 0571 05       		.uleb128 0x5
 17707 0572 00       		.byte	0
 17708 0573 00       		.byte	0
 17709 0574 55       		.uleb128 0x55
 17710 0575 30       		.uleb128 0x30
 17711 0576 00       		.byte	0
 17712 0577 03       		.uleb128 0x3
 17713 0578 0E       		.uleb128 0xe
 17714 0579 49       		.uleb128 0x49
 17715 057a 13       		.uleb128 0x13
 17716 057b 1C       		.uleb128 0x1c
 17717 057c 05       		.uleb128 0x5
 17718 057d 00       		.byte	0
 17719 057e 00       		.byte	0
 17720 057f 56       		.uleb128 0x56
 17721 0580 2E       		.uleb128 0x2e
 17722 0581 01       		.byte	0x1
 17723 0582 3F       		.uleb128 0x3f
 17724 0583 19       		.uleb128 0x19
 17725 0584 03       		.uleb128 0x3
 17726 0585 0E       		.uleb128 0xe
 17727 0586 3A       		.uleb128 0x3a
 17728 0587 0B       		.uleb128 0xb
 17729 0588 3B       		.uleb128 0x3b
 17730 0589 0B       		.uleb128 0xb
 17731 058a 3C       		.uleb128 0x3c
 17732 058b 19       		.uleb128 0x19
 17733 058c 64       		.uleb128 0x64
 17734 058d 13       		.uleb128 0x13
 17735 058e 00       		.byte	0
 17736 058f 00       		.byte	0
 17737 0590 57       		.uleb128 0x57
 17738 0591 18       		.uleb128 0x18
 17739 0592 00       		.byte	0
 17740 0593 00       		.byte	0
 17741 0594 00       		.byte	0
 17742 0595 58       		.uleb128 0x58
 17743 0596 02       		.uleb128 0x2
 17744 0597 01       		.byte	0x1
 17745 0598 03       		.uleb128 0x3
 17746 0599 0E       		.uleb128 0xe
GAS LISTING /tmp/cceISX6N.s 			page 439


 17747 059a 0B       		.uleb128 0xb
 17748 059b 0B       		.uleb128 0xb
 17749 059c 3A       		.uleb128 0x3a
 17750 059d 0B       		.uleb128 0xb
 17751 059e 3B       		.uleb128 0x3b
 17752 059f 05       		.uleb128 0x5
 17753 05a0 01       		.uleb128 0x1
 17754 05a1 13       		.uleb128 0x13
 17755 05a2 00       		.byte	0
 17756 05a3 00       		.byte	0
 17757 05a4 59       		.uleb128 0x59
 17758 05a5 2E       		.uleb128 0x2e
 17759 05a6 01       		.byte	0x1
 17760 05a7 3F       		.uleb128 0x3f
 17761 05a8 19       		.uleb128 0x19
 17762 05a9 03       		.uleb128 0x3
 17763 05aa 0E       		.uleb128 0xe
 17764 05ab 3A       		.uleb128 0x3a
 17765 05ac 0B       		.uleb128 0xb
 17766 05ad 3B       		.uleb128 0x3b
 17767 05ae 05       		.uleb128 0x5
 17768 05af 6E       		.uleb128 0x6e
 17769 05b0 0E       		.uleb128 0xe
 17770 05b1 32       		.uleb128 0x32
 17771 05b2 0B       		.uleb128 0xb
 17772 05b3 3C       		.uleb128 0x3c
 17773 05b4 19       		.uleb128 0x19
 17774 05b5 64       		.uleb128 0x64
 17775 05b6 13       		.uleb128 0x13
 17776 05b7 00       		.byte	0
 17777 05b8 00       		.byte	0
 17778 05b9 5A       		.uleb128 0x5a
 17779 05ba 13       		.uleb128 0x13
 17780 05bb 00       		.byte	0
 17781 05bc 03       		.uleb128 0x3
 17782 05bd 0E       		.uleb128 0xe
 17783 05be 0B       		.uleb128 0xb
 17784 05bf 0B       		.uleb128 0xb
 17785 05c0 3A       		.uleb128 0x3a
 17786 05c1 0B       		.uleb128 0xb
 17787 05c2 3B       		.uleb128 0x3b
 17788 05c3 05       		.uleb128 0x5
 17789 05c4 00       		.byte	0
 17790 05c5 00       		.byte	0
 17791 05c6 5B       		.uleb128 0x5b
 17792 05c7 2E       		.uleb128 0x2e
 17793 05c8 01       		.byte	0x1
 17794 05c9 3F       		.uleb128 0x3f
 17795 05ca 19       		.uleb128 0x19
 17796 05cb 03       		.uleb128 0x3
 17797 05cc 0E       		.uleb128 0xe
 17798 05cd 3A       		.uleb128 0x3a
 17799 05ce 0B       		.uleb128 0xb
 17800 05cf 3B       		.uleb128 0x3b
 17801 05d0 05       		.uleb128 0x5
 17802 05d1 49       		.uleb128 0x49
 17803 05d2 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 440


 17804 05d3 32       		.uleb128 0x32
 17805 05d4 0B       		.uleb128 0xb
 17806 05d5 3C       		.uleb128 0x3c
 17807 05d6 19       		.uleb128 0x19
 17808 05d7 64       		.uleb128 0x64
 17809 05d8 13       		.uleb128 0x13
 17810 05d9 01       		.uleb128 0x1
 17811 05da 13       		.uleb128 0x13
 17812 05db 00       		.byte	0
 17813 05dc 00       		.byte	0
 17814 05dd 5C       		.uleb128 0x5c
 17815 05de 878201   		.uleb128 0x4107
 17816 05e1 00       		.byte	0
 17817 05e2 03       		.uleb128 0x3
 17818 05e3 0E       		.uleb128 0xe
 17819 05e4 00       		.byte	0
 17820 05e5 00       		.byte	0
 17821 05e6 5D       		.uleb128 0x5d
 17822 05e7 2F       		.uleb128 0x2f
 17823 05e8 00       		.byte	0
 17824 05e9 03       		.uleb128 0x3
 17825 05ea 0E       		.uleb128 0xe
 17826 05eb 00       		.byte	0
 17827 05ec 00       		.byte	0
 17828 05ed 5E       		.uleb128 0x5e
 17829 05ee 2E       		.uleb128 0x2e
 17830 05ef 01       		.byte	0x1
 17831 05f0 3F       		.uleb128 0x3f
 17832 05f1 19       		.uleb128 0x19
 17833 05f2 03       		.uleb128 0x3
 17834 05f3 0E       		.uleb128 0xe
 17835 05f4 3A       		.uleb128 0x3a
 17836 05f5 0B       		.uleb128 0xb
 17837 05f6 3B       		.uleb128 0x3b
 17838 05f7 05       		.uleb128 0x5
 17839 05f8 49       		.uleb128 0x49
 17840 05f9 13       		.uleb128 0x13
 17841 05fa 3C       		.uleb128 0x3c
 17842 05fb 19       		.uleb128 0x19
 17843 05fc 64       		.uleb128 0x64
 17844 05fd 13       		.uleb128 0x13
 17845 05fe 01       		.uleb128 0x1
 17846 05ff 13       		.uleb128 0x13
 17847 0600 00       		.byte	0
 17848 0601 00       		.byte	0
 17849 0602 5F       		.uleb128 0x5f
 17850 0603 878201   		.uleb128 0x4107
 17851 0606 01       		.byte	0x1
 17852 0607 03       		.uleb128 0x3
 17853 0608 0E       		.uleb128 0xe
 17854 0609 00       		.byte	0
 17855 060a 00       		.byte	0
 17856 060b 60       		.uleb128 0x60
 17857 060c 2F       		.uleb128 0x2f
 17858 060d 00       		.byte	0
 17859 060e 49       		.uleb128 0x49
 17860 060f 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 441


 17861 0610 00       		.byte	0
 17862 0611 00       		.byte	0
 17863 0612 61       		.uleb128 0x61
 17864 0613 0D       		.uleb128 0xd
 17865 0614 00       		.byte	0
 17866 0615 03       		.uleb128 0x3
 17867 0616 0E       		.uleb128 0xe
 17868 0617 3A       		.uleb128 0x3a
 17869 0618 0B       		.uleb128 0xb
 17870 0619 3B       		.uleb128 0x3b
 17871 061a 05       		.uleb128 0x5
 17872 061b 49       		.uleb128 0x49
 17873 061c 13       		.uleb128 0x13
 17874 061d 38       		.uleb128 0x38
 17875 061e 0B       		.uleb128 0xb
 17876 061f 32       		.uleb128 0x32
 17877 0620 0B       		.uleb128 0xb
 17878 0621 00       		.byte	0
 17879 0622 00       		.byte	0
 17880 0623 62       		.uleb128 0x62
 17881 0624 878201   		.uleb128 0x4107
 17882 0627 01       		.byte	0x1
 17883 0628 03       		.uleb128 0x3
 17884 0629 0E       		.uleb128 0xe
 17885 062a 01       		.uleb128 0x1
 17886 062b 13       		.uleb128 0x13
 17887 062c 00       		.byte	0
 17888 062d 00       		.byte	0
 17889 062e 63       		.uleb128 0x63
 17890 062f 878201   		.uleb128 0x4107
 17891 0632 01       		.byte	0x1
 17892 0633 03       		.uleb128 0x3
 17893 0634 0E       		.uleb128 0xe
 17894 0635 3A       		.uleb128 0x3a
 17895 0636 0B       		.uleb128 0xb
 17896 0637 3B       		.uleb128 0x3b
 17897 0638 05       		.uleb128 0x5
 17898 0639 01       		.uleb128 0x1
 17899 063a 13       		.uleb128 0x13
 17900 063b 00       		.byte	0
 17901 063c 00       		.byte	0
 17902 063d 64       		.uleb128 0x64
 17903 063e 30       		.uleb128 0x30
 17904 063f 00       		.byte	0
 17905 0640 49       		.uleb128 0x49
 17906 0641 13       		.uleb128 0x13
 17907 0642 1C       		.uleb128 0x1c
 17908 0643 0B       		.uleb128 0xb
 17909 0644 00       		.byte	0
 17910 0645 00       		.byte	0
 17911 0646 65       		.uleb128 0x65
 17912 0647 2E       		.uleb128 0x2e
 17913 0648 01       		.byte	0x1
 17914 0649 3F       		.uleb128 0x3f
 17915 064a 19       		.uleb128 0x19
 17916 064b 03       		.uleb128 0x3
 17917 064c 0E       		.uleb128 0xe
GAS LISTING /tmp/cceISX6N.s 			page 442


 17918 064d 34       		.uleb128 0x34
 17919 064e 19       		.uleb128 0x19
 17920 064f 3C       		.uleb128 0x3c
 17921 0650 19       		.uleb128 0x19
 17922 0651 64       		.uleb128 0x64
 17923 0652 13       		.uleb128 0x13
 17924 0653 01       		.uleb128 0x1
 17925 0654 13       		.uleb128 0x13
 17926 0655 00       		.byte	0
 17927 0656 00       		.byte	0
 17928 0657 66       		.uleb128 0x66
 17929 0658 878201   		.uleb128 0x4107
 17930 065b 00       		.byte	0
 17931 065c 00       		.byte	0
 17932 065d 00       		.byte	0
 17933 065e 67       		.uleb128 0x67
 17934 065f 2E       		.uleb128 0x2e
 17935 0660 01       		.byte	0x1
 17936 0661 3F       		.uleb128 0x3f
 17937 0662 19       		.uleb128 0x19
 17938 0663 03       		.uleb128 0x3
 17939 0664 0E       		.uleb128 0xe
 17940 0665 3A       		.uleb128 0x3a
 17941 0666 0B       		.uleb128 0xb
 17942 0667 3B       		.uleb128 0x3b
 17943 0668 0B       		.uleb128 0xb
 17944 0669 6E       		.uleb128 0x6e
 17945 066a 0E       		.uleb128 0xe
 17946 066b 32       		.uleb128 0x32
 17947 066c 0B       		.uleb128 0xb
 17948 066d 3C       		.uleb128 0x3c
 17949 066e 19       		.uleb128 0x19
 17950 066f 64       		.uleb128 0x64
 17951 0670 13       		.uleb128 0x13
 17952 0671 00       		.byte	0
 17953 0672 00       		.byte	0
 17954 0673 68       		.uleb128 0x68
 17955 0674 35       		.uleb128 0x35
 17956 0675 00       		.byte	0
 17957 0676 49       		.uleb128 0x49
 17958 0677 13       		.uleb128 0x13
 17959 0678 00       		.byte	0
 17960 0679 00       		.byte	0
 17961 067a 69       		.uleb128 0x69
 17962 067b 34       		.uleb128 0x34
 17963 067c 00       		.byte	0
 17964 067d 03       		.uleb128 0x3
 17965 067e 0E       		.uleb128 0xe
 17966 067f 3A       		.uleb128 0x3a
 17967 0680 0B       		.uleb128 0xb
 17968 0681 3B       		.uleb128 0x3b
 17969 0682 0B       		.uleb128 0xb
 17970 0683 49       		.uleb128 0x49
 17971 0684 13       		.uleb128 0x13
 17972 0685 3C       		.uleb128 0x3c
 17973 0686 19       		.uleb128 0x19
 17974 0687 1C       		.uleb128 0x1c
GAS LISTING /tmp/cceISX6N.s 			page 443


 17975 0688 0A       		.uleb128 0xa
 17976 0689 00       		.byte	0
 17977 068a 00       		.byte	0
 17978 068b 6A       		.uleb128 0x6a
 17979 068c 34       		.uleb128 0x34
 17980 068d 00       		.byte	0
 17981 068e 03       		.uleb128 0x3
 17982 068f 0E       		.uleb128 0xe
 17983 0690 3A       		.uleb128 0x3a
 17984 0691 0B       		.uleb128 0xb
 17985 0692 3B       		.uleb128 0x3b
 17986 0693 0B       		.uleb128 0xb
 17987 0694 6E       		.uleb128 0x6e
 17988 0695 0E       		.uleb128 0xe
 17989 0696 49       		.uleb128 0x49
 17990 0697 13       		.uleb128 0x13
 17991 0698 3F       		.uleb128 0x3f
 17992 0699 19       		.uleb128 0x19
 17993 069a 3C       		.uleb128 0x3c
 17994 069b 19       		.uleb128 0x19
 17995 069c 00       		.byte	0
 17996 069d 00       		.byte	0
 17997 069e 6B       		.uleb128 0x6b
 17998 069f 34       		.uleb128 0x34
 17999 06a0 00       		.byte	0
 18000 06a1 03       		.uleb128 0x3
 18001 06a2 0E       		.uleb128 0xe
 18002 06a3 3A       		.uleb128 0x3a
 18003 06a4 0B       		.uleb128 0xb
 18004 06a5 3B       		.uleb128 0x3b
 18005 06a6 0B       		.uleb128 0xb
 18006 06a7 49       		.uleb128 0x49
 18007 06a8 13       		.uleb128 0x13
 18008 06a9 3C       		.uleb128 0x3c
 18009 06aa 19       		.uleb128 0x19
 18010 06ab 00       		.byte	0
 18011 06ac 00       		.byte	0
 18012 06ad 6C       		.uleb128 0x6c
 18013 06ae 34       		.uleb128 0x34
 18014 06af 00       		.byte	0
 18015 06b0 03       		.uleb128 0x3
 18016 06b1 0E       		.uleb128 0xe
 18017 06b2 3A       		.uleb128 0x3a
 18018 06b3 0B       		.uleb128 0xb
 18019 06b4 3B       		.uleb128 0x3b
 18020 06b5 05       		.uleb128 0x5
 18021 06b6 49       		.uleb128 0x49
 18022 06b7 13       		.uleb128 0x13
 18023 06b8 3C       		.uleb128 0x3c
 18024 06b9 19       		.uleb128 0x19
 18025 06ba 1C       		.uleb128 0x1c
 18026 06bb 0A       		.uleb128 0xa
 18027 06bc 00       		.byte	0
 18028 06bd 00       		.byte	0
 18029 06be 6D       		.uleb128 0x6d
 18030 06bf 2E       		.uleb128 0x2e
 18031 06c0 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 444


 18032 06c1 3F       		.uleb128 0x3f
 18033 06c2 19       		.uleb128 0x19
 18034 06c3 03       		.uleb128 0x3
 18035 06c4 0E       		.uleb128 0xe
 18036 06c5 3A       		.uleb128 0x3a
 18037 06c6 0B       		.uleb128 0xb
 18038 06c7 3B       		.uleb128 0x3b
 18039 06c8 0B       		.uleb128 0xb
 18040 06c9 6E       		.uleb128 0x6e
 18041 06ca 0E       		.uleb128 0xe
 18042 06cb 3C       		.uleb128 0x3c
 18043 06cc 19       		.uleb128 0x19
 18044 06cd 00       		.byte	0
 18045 06ce 00       		.byte	0
 18046 06cf 6E       		.uleb128 0x6e
 18047 06d0 2E       		.uleb128 0x2e
 18048 06d1 01       		.byte	0x1
 18049 06d2 03       		.uleb128 0x3
 18050 06d3 0E       		.uleb128 0xe
 18051 06d4 3A       		.uleb128 0x3a
 18052 06d5 0B       		.uleb128 0xb
 18053 06d6 3B       		.uleb128 0x3b
 18054 06d7 0B       		.uleb128 0xb
 18055 06d8 49       		.uleb128 0x49
 18056 06d9 13       		.uleb128 0x13
 18057 06da 3C       		.uleb128 0x3c
 18058 06db 19       		.uleb128 0x19
 18059 06dc 01       		.uleb128 0x1
 18060 06dd 13       		.uleb128 0x13
 18061 06de 00       		.byte	0
 18062 06df 00       		.byte	0
 18063 06e0 6F       		.uleb128 0x6f
 18064 06e1 2E       		.uleb128 0x2e
 18065 06e2 01       		.byte	0x1
 18066 06e3 03       		.uleb128 0x3
 18067 06e4 0E       		.uleb128 0xe
 18068 06e5 3A       		.uleb128 0x3a
 18069 06e6 0B       		.uleb128 0xb
 18070 06e7 3B       		.uleb128 0x3b
 18071 06e8 0B       		.uleb128 0xb
 18072 06e9 49       		.uleb128 0x49
 18073 06ea 13       		.uleb128 0x13
 18074 06eb 3C       		.uleb128 0x3c
 18075 06ec 19       		.uleb128 0x19
 18076 06ed 00       		.byte	0
 18077 06ee 00       		.byte	0
 18078 06ef 70       		.uleb128 0x70
 18079 06f0 24       		.uleb128 0x24
 18080 06f1 00       		.byte	0
 18081 06f2 0B       		.uleb128 0xb
 18082 06f3 0B       		.uleb128 0xb
 18083 06f4 3E       		.uleb128 0x3e
 18084 06f5 0B       		.uleb128 0xb
 18085 06f6 03       		.uleb128 0x3
 18086 06f7 08       		.uleb128 0x8
 18087 06f8 00       		.byte	0
 18088 06f9 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 445


 18089 06fa 71       		.uleb128 0x71
 18090 06fb 0F       		.uleb128 0xf
 18091 06fc 00       		.byte	0
 18092 06fd 0B       		.uleb128 0xb
 18093 06fe 0B       		.uleb128 0xb
 18094 06ff 49       		.uleb128 0x49
 18095 0700 13       		.uleb128 0x13
 18096 0701 00       		.byte	0
 18097 0702 00       		.byte	0
 18098 0703 72       		.uleb128 0x72
 18099 0704 0D       		.uleb128 0xd
 18100 0705 00       		.byte	0
 18101 0706 03       		.uleb128 0x3
 18102 0707 08       		.uleb128 0x8
 18103 0708 3A       		.uleb128 0x3a
 18104 0709 0B       		.uleb128 0xb
 18105 070a 3B       		.uleb128 0x3b
 18106 070b 0B       		.uleb128 0xb
 18107 070c 49       		.uleb128 0x49
 18108 070d 13       		.uleb128 0x13
 18109 070e 38       		.uleb128 0x38
 18110 070f 0B       		.uleb128 0xb
 18111 0710 00       		.byte	0
 18112 0711 00       		.byte	0
 18113 0712 73       		.uleb128 0x73
 18114 0713 10       		.uleb128 0x10
 18115 0714 00       		.byte	0
 18116 0715 0B       		.uleb128 0xb
 18117 0716 0B       		.uleb128 0xb
 18118 0717 49       		.uleb128 0x49
 18119 0718 13       		.uleb128 0x13
 18120 0719 00       		.byte	0
 18121 071a 00       		.byte	0
 18122 071b 74       		.uleb128 0x74
 18123 071c 13       		.uleb128 0x13
 18124 071d 01       		.byte	0x1
 18125 071e 03       		.uleb128 0x3
 18126 071f 08       		.uleb128 0x8
 18127 0720 0B       		.uleb128 0xb
 18128 0721 0B       		.uleb128 0xb
 18129 0722 3A       		.uleb128 0x3a
 18130 0723 0B       		.uleb128 0xb
 18131 0724 3B       		.uleb128 0x3b
 18132 0725 0B       		.uleb128 0xb
 18133 0726 01       		.uleb128 0x1
 18134 0727 13       		.uleb128 0x13
 18135 0728 00       		.byte	0
 18136 0729 00       		.byte	0
 18137 072a 75       		.uleb128 0x75
 18138 072b 2E       		.uleb128 0x2e
 18139 072c 01       		.byte	0x1
 18140 072d 3F       		.uleb128 0x3f
 18141 072e 19       		.uleb128 0x19
 18142 072f 03       		.uleb128 0x3
 18143 0730 0E       		.uleb128 0xe
 18144 0731 3A       		.uleb128 0x3a
 18145 0732 0B       		.uleb128 0xb
GAS LISTING /tmp/cceISX6N.s 			page 446


 18146 0733 3B       		.uleb128 0x3b
 18147 0734 0B       		.uleb128 0xb
 18148 0735 6E       		.uleb128 0x6e
 18149 0736 0E       		.uleb128 0xe
 18150 0737 49       		.uleb128 0x49
 18151 0738 13       		.uleb128 0x13
 18152 0739 3C       		.uleb128 0x3c
 18153 073a 19       		.uleb128 0x19
 18154 073b 64       		.uleb128 0x64
 18155 073c 13       		.uleb128 0x13
 18156 073d 00       		.byte	0
 18157 073e 00       		.byte	0
 18158 073f 76       		.uleb128 0x76
 18159 0740 0F       		.uleb128 0xf
 18160 0741 00       		.byte	0
 18161 0742 0B       		.uleb128 0xb
 18162 0743 0B       		.uleb128 0xb
 18163 0744 00       		.byte	0
 18164 0745 00       		.byte	0
 18165 0746 77       		.uleb128 0x77
 18166 0747 2E       		.uleb128 0x2e
 18167 0748 00       		.byte	0
 18168 0749 3F       		.uleb128 0x3f
 18169 074a 19       		.uleb128 0x19
 18170 074b 03       		.uleb128 0x3
 18171 074c 0E       		.uleb128 0xe
 18172 074d 3A       		.uleb128 0x3a
 18173 074e 0B       		.uleb128 0xb
 18174 074f 3B       		.uleb128 0x3b
 18175 0750 0B       		.uleb128 0xb
 18176 0751 49       		.uleb128 0x49
 18177 0752 13       		.uleb128 0x13
 18178 0753 3C       		.uleb128 0x3c
 18179 0754 19       		.uleb128 0x19
 18180 0755 00       		.byte	0
 18181 0756 00       		.byte	0
 18182 0757 78       		.uleb128 0x78
 18183 0758 13       		.uleb128 0x13
 18184 0759 01       		.byte	0x1
 18185 075a 0B       		.uleb128 0xb
 18186 075b 0B       		.uleb128 0xb
 18187 075c 3A       		.uleb128 0x3a
 18188 075d 0B       		.uleb128 0xb
 18189 075e 3B       		.uleb128 0x3b
 18190 075f 0B       		.uleb128 0xb
 18191 0760 6E       		.uleb128 0x6e
 18192 0761 0E       		.uleb128 0xe
 18193 0762 01       		.uleb128 0x1
 18194 0763 13       		.uleb128 0x13
 18195 0764 00       		.byte	0
 18196 0765 00       		.byte	0
 18197 0766 79       		.uleb128 0x79
 18198 0767 17       		.uleb128 0x17
 18199 0768 01       		.byte	0x1
 18200 0769 0B       		.uleb128 0xb
 18201 076a 0B       		.uleb128 0xb
 18202 076b 3A       		.uleb128 0x3a
GAS LISTING /tmp/cceISX6N.s 			page 447


 18203 076c 0B       		.uleb128 0xb
 18204 076d 3B       		.uleb128 0x3b
 18205 076e 0B       		.uleb128 0xb
 18206 076f 01       		.uleb128 0x1
 18207 0770 13       		.uleb128 0x13
 18208 0771 00       		.byte	0
 18209 0772 00       		.byte	0
 18210 0773 7A       		.uleb128 0x7a
 18211 0774 0D       		.uleb128 0xd
 18212 0775 00       		.byte	0
 18213 0776 03       		.uleb128 0x3
 18214 0777 0E       		.uleb128 0xe
 18215 0778 3A       		.uleb128 0x3a
 18216 0779 0B       		.uleb128 0xb
 18217 077a 3B       		.uleb128 0x3b
 18218 077b 0B       		.uleb128 0xb
 18219 077c 49       		.uleb128 0x49
 18220 077d 13       		.uleb128 0x13
 18221 077e 00       		.byte	0
 18222 077f 00       		.byte	0
 18223 0780 7B       		.uleb128 0x7b
 18224 0781 01       		.uleb128 0x1
 18225 0782 01       		.byte	0x1
 18226 0783 49       		.uleb128 0x49
 18227 0784 13       		.uleb128 0x13
 18228 0785 01       		.uleb128 0x1
 18229 0786 13       		.uleb128 0x13
 18230 0787 00       		.byte	0
 18231 0788 00       		.byte	0
 18232 0789 7C       		.uleb128 0x7c
 18233 078a 21       		.uleb128 0x21
 18234 078b 00       		.byte	0
 18235 078c 49       		.uleb128 0x49
 18236 078d 13       		.uleb128 0x13
 18237 078e 2F       		.uleb128 0x2f
 18238 078f 0B       		.uleb128 0xb
 18239 0790 00       		.byte	0
 18240 0791 00       		.byte	0
 18241 0792 7D       		.uleb128 0x7d
 18242 0793 2E       		.uleb128 0x2e
 18243 0794 00       		.byte	0
 18244 0795 3F       		.uleb128 0x3f
 18245 0796 19       		.uleb128 0x19
 18246 0797 03       		.uleb128 0x3
 18247 0798 0E       		.uleb128 0xe
 18248 0799 3A       		.uleb128 0x3a
 18249 079a 0B       		.uleb128 0xb
 18250 079b 3B       		.uleb128 0x3b
 18251 079c 05       		.uleb128 0x5
 18252 079d 49       		.uleb128 0x49
 18253 079e 13       		.uleb128 0x13
 18254 079f 3C       		.uleb128 0x3c
 18255 07a0 19       		.uleb128 0x19
 18256 07a1 00       		.byte	0
 18257 07a2 00       		.byte	0
 18258 07a3 7E       		.uleb128 0x7e
 18259 07a4 3B       		.uleb128 0x3b
GAS LISTING /tmp/cceISX6N.s 			page 448


 18260 07a5 00       		.byte	0
 18261 07a6 03       		.uleb128 0x3
 18262 07a7 0E       		.uleb128 0xe
 18263 07a8 00       		.byte	0
 18264 07a9 00       		.byte	0
 18265 07aa 7F       		.uleb128 0x7f
 18266 07ab 42       		.uleb128 0x42
 18267 07ac 00       		.byte	0
 18268 07ad 0B       		.uleb128 0xb
 18269 07ae 0B       		.uleb128 0xb
 18270 07af 49       		.uleb128 0x49
 18271 07b0 13       		.uleb128 0x13
 18272 07b1 00       		.byte	0
 18273 07b2 00       		.byte	0
 18274 07b3 8001     		.uleb128 0x80
 18275 07b5 3A       		.uleb128 0x3a
 18276 07b6 00       		.byte	0
 18277 07b7 3A       		.uleb128 0x3a
 18278 07b8 0B       		.uleb128 0xb
 18279 07b9 3B       		.uleb128 0x3b
 18280 07ba 0B       		.uleb128 0xb
 18281 07bb 18       		.uleb128 0x18
 18282 07bc 13       		.uleb128 0x13
 18283 07bd 00       		.byte	0
 18284 07be 00       		.byte	0
 18285 07bf 8101     		.uleb128 0x81
 18286 07c1 15       		.uleb128 0x15
 18287 07c2 01       		.byte	0x1
 18288 07c3 01       		.uleb128 0x1
 18289 07c4 13       		.uleb128 0x13
 18290 07c5 00       		.byte	0
 18291 07c6 00       		.byte	0
 18292 07c7 8201     		.uleb128 0x82
 18293 07c9 26       		.uleb128 0x26
 18294 07ca 00       		.byte	0
 18295 07cb 00       		.byte	0
 18296 07cc 00       		.byte	0
 18297 07cd 8301     		.uleb128 0x83
 18298 07cf 15       		.uleb128 0x15
 18299 07d0 01       		.byte	0x1
 18300 07d1 49       		.uleb128 0x49
 18301 07d2 13       		.uleb128 0x13
 18302 07d3 01       		.uleb128 0x1
 18303 07d4 13       		.uleb128 0x13
 18304 07d5 00       		.byte	0
 18305 07d6 00       		.byte	0
 18306 07d7 8401     		.uleb128 0x84
 18307 07d9 15       		.uleb128 0x15
 18308 07da 00       		.byte	0
 18309 07db 00       		.byte	0
 18310 07dc 00       		.byte	0
 18311 07dd 8501     		.uleb128 0x85
 18312 07df 2E       		.uleb128 0x2e
 18313 07e0 01       		.byte	0x1
 18314 07e1 3F       		.uleb128 0x3f
 18315 07e2 19       		.uleb128 0x19
 18316 07e3 03       		.uleb128 0x3
GAS LISTING /tmp/cceISX6N.s 			page 449


 18317 07e4 08       		.uleb128 0x8
 18318 07e5 3A       		.uleb128 0x3a
 18319 07e6 0B       		.uleb128 0xb
 18320 07e7 3B       		.uleb128 0x3b
 18321 07e8 05       		.uleb128 0x5
 18322 07e9 49       		.uleb128 0x49
 18323 07ea 13       		.uleb128 0x13
 18324 07eb 3C       		.uleb128 0x3c
 18325 07ec 19       		.uleb128 0x19
 18326 07ed 01       		.uleb128 0x1
 18327 07ee 13       		.uleb128 0x13
 18328 07ef 00       		.byte	0
 18329 07f0 00       		.byte	0
 18330 07f1 8601     		.uleb128 0x86
 18331 07f3 2E       		.uleb128 0x2e
 18332 07f4 01       		.byte	0x1
 18333 07f5 3F       		.uleb128 0x3f
 18334 07f6 19       		.uleb128 0x19
 18335 07f7 03       		.uleb128 0x3
 18336 07f8 0E       		.uleb128 0xe
 18337 07f9 3A       		.uleb128 0x3a
 18338 07fa 0B       		.uleb128 0xb
 18339 07fb 3B       		.uleb128 0x3b
 18340 07fc 05       		.uleb128 0x5
 18341 07fd 3C       		.uleb128 0x3c
 18342 07fe 19       		.uleb128 0x19
 18343 07ff 01       		.uleb128 0x1
 18344 0800 13       		.uleb128 0x13
 18345 0801 00       		.byte	0
 18346 0802 00       		.byte	0
 18347 0803 8701     		.uleb128 0x87
 18348 0805 16       		.uleb128 0x16
 18349 0806 00       		.byte	0
 18350 0807 03       		.uleb128 0x3
 18351 0808 0E       		.uleb128 0xe
 18352 0809 3A       		.uleb128 0x3a
 18353 080a 0B       		.uleb128 0xb
 18354 080b 3B       		.uleb128 0x3b
 18355 080c 0B       		.uleb128 0xb
 18356 080d 00       		.byte	0
 18357 080e 00       		.byte	0
 18358 080f 8801     		.uleb128 0x88
 18359 0811 21       		.uleb128 0x21
 18360 0812 00       		.byte	0
 18361 0813 00       		.byte	0
 18362 0814 00       		.byte	0
 18363 0815 8901     		.uleb128 0x89
 18364 0817 13       		.uleb128 0x13
 18365 0818 01       		.byte	0x1
 18366 0819 0B       		.uleb128 0xb
 18367 081a 0B       		.uleb128 0xb
 18368 081b 3A       		.uleb128 0x3a
 18369 081c 0B       		.uleb128 0xb
 18370 081d 3B       		.uleb128 0x3b
 18371 081e 0B       		.uleb128 0xb
 18372 081f 01       		.uleb128 0x1
 18373 0820 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 450


 18374 0821 00       		.byte	0
 18375 0822 00       		.byte	0
 18376 0823 8A01     		.uleb128 0x8a
 18377 0825 15       		.uleb128 0x15
 18378 0826 01       		.byte	0x1
 18379 0827 49       		.uleb128 0x49
 18380 0828 13       		.uleb128 0x13
 18381 0829 64       		.uleb128 0x64
 18382 082a 13       		.uleb128 0x13
 18383 082b 01       		.uleb128 0x1
 18384 082c 13       		.uleb128 0x13
 18385 082d 00       		.byte	0
 18386 082e 00       		.byte	0
 18387 082f 8B01     		.uleb128 0x8b
 18388 0831 2E       		.uleb128 0x2e
 18389 0832 01       		.byte	0x1
 18390 0833 47       		.uleb128 0x47
 18391 0834 13       		.uleb128 0x13
 18392 0835 20       		.uleb128 0x20
 18393 0836 0B       		.uleb128 0xb
 18394 0837 64       		.uleb128 0x64
 18395 0838 13       		.uleb128 0x13
 18396 0839 01       		.uleb128 0x1
 18397 083a 13       		.uleb128 0x13
 18398 083b 00       		.byte	0
 18399 083c 00       		.byte	0
 18400 083d 8C01     		.uleb128 0x8c
 18401 083f 05       		.uleb128 0x5
 18402 0840 00       		.byte	0
 18403 0841 03       		.uleb128 0x3
 18404 0842 0E       		.uleb128 0xe
 18405 0843 49       		.uleb128 0x49
 18406 0844 13       		.uleb128 0x13
 18407 0845 34       		.uleb128 0x34
 18408 0846 19       		.uleb128 0x19
 18409 0847 00       		.byte	0
 18410 0848 00       		.byte	0
 18411 0849 8D01     		.uleb128 0x8d
 18412 084b 2E       		.uleb128 0x2e
 18413 084c 01       		.byte	0x1
 18414 084d 03       		.uleb128 0x3
 18415 084e 0E       		.uleb128 0xe
 18416 084f 3A       		.uleb128 0x3a
 18417 0850 0B       		.uleb128 0xb
 18418 0851 3B       		.uleb128 0x3b
 18419 0852 0B       		.uleb128 0xb
 18420 0853 49       		.uleb128 0x49
 18421 0854 13       		.uleb128 0x13
 18422 0855 20       		.uleb128 0x20
 18423 0856 0B       		.uleb128 0xb
 18424 0857 01       		.uleb128 0x1
 18425 0858 13       		.uleb128 0x13
 18426 0859 00       		.byte	0
 18427 085a 00       		.byte	0
 18428 085b 8E01     		.uleb128 0x8e
 18429 085d 0B       		.uleb128 0xb
 18430 085e 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 451


 18431 085f 00       		.byte	0
 18432 0860 00       		.byte	0
 18433 0861 8F01     		.uleb128 0x8f
 18434 0863 34       		.uleb128 0x34
 18435 0864 00       		.byte	0
 18436 0865 03       		.uleb128 0x3
 18437 0866 0E       		.uleb128 0xe
 18438 0867 3A       		.uleb128 0x3a
 18439 0868 0B       		.uleb128 0xb
 18440 0869 3B       		.uleb128 0x3b
 18441 086a 0B       		.uleb128 0xb
 18442 086b 49       		.uleb128 0x49
 18443 086c 13       		.uleb128 0x13
 18444 086d 00       		.byte	0
 18445 086e 00       		.byte	0
 18446 086f 9001     		.uleb128 0x90
 18447 0871 2E       		.uleb128 0x2e
 18448 0872 01       		.byte	0x1
 18449 0873 47       		.uleb128 0x47
 18450 0874 13       		.uleb128 0x13
 18451 0875 20       		.uleb128 0x20
 18452 0876 0B       		.uleb128 0xb
 18453 0877 01       		.uleb128 0x1
 18454 0878 13       		.uleb128 0x13
 18455 0879 00       		.byte	0
 18456 087a 00       		.byte	0
 18457 087b 9101     		.uleb128 0x91
 18458 087d 05       		.uleb128 0x5
 18459 087e 00       		.byte	0
 18460 087f 03       		.uleb128 0x3
 18461 0880 0E       		.uleb128 0xe
 18462 0881 3A       		.uleb128 0x3a
 18463 0882 0B       		.uleb128 0xb
 18464 0883 3B       		.uleb128 0x3b
 18465 0884 0B       		.uleb128 0xb
 18466 0885 49       		.uleb128 0x49
 18467 0886 13       		.uleb128 0x13
 18468 0887 00       		.byte	0
 18469 0888 00       		.byte	0
 18470 0889 9201     		.uleb128 0x92
 18471 088b 34       		.uleb128 0x34
 18472 088c 00       		.byte	0
 18473 088d 03       		.uleb128 0x3
 18474 088e 08       		.uleb128 0x8
 18475 088f 3A       		.uleb128 0x3a
 18476 0890 0B       		.uleb128 0xb
 18477 0891 3B       		.uleb128 0x3b
 18478 0892 0B       		.uleb128 0xb
 18479 0893 49       		.uleb128 0x49
 18480 0894 13       		.uleb128 0x13
 18481 0895 00       		.byte	0
 18482 0896 00       		.byte	0
 18483 0897 9301     		.uleb128 0x93
 18484 0899 05       		.uleb128 0x5
 18485 089a 00       		.byte	0
 18486 089b 03       		.uleb128 0x3
 18487 089c 08       		.uleb128 0x8
GAS LISTING /tmp/cceISX6N.s 			page 452


 18488 089d 3A       		.uleb128 0x3a
 18489 089e 0B       		.uleb128 0xb
 18490 089f 3B       		.uleb128 0x3b
 18491 08a0 0B       		.uleb128 0xb
 18492 08a1 49       		.uleb128 0x49
 18493 08a2 13       		.uleb128 0x13
 18494 08a3 00       		.byte	0
 18495 08a4 00       		.byte	0
 18496 08a5 9401     		.uleb128 0x94
 18497 08a7 05       		.uleb128 0x5
 18498 08a8 00       		.byte	0
 18499 08a9 03       		.uleb128 0x3
 18500 08aa 0E       		.uleb128 0xe
 18501 08ab 3A       		.uleb128 0x3a
 18502 08ac 0B       		.uleb128 0xb
 18503 08ad 3B       		.uleb128 0x3b
 18504 08ae 05       		.uleb128 0x5
 18505 08af 49       		.uleb128 0x49
 18506 08b0 13       		.uleb128 0x13
 18507 08b1 00       		.byte	0
 18508 08b2 00       		.byte	0
 18509 08b3 9501     		.uleb128 0x95
 18510 08b5 05       		.uleb128 0x5
 18511 08b6 00       		.byte	0
 18512 08b7 03       		.uleb128 0x3
 18513 08b8 08       		.uleb128 0x8
 18514 08b9 3A       		.uleb128 0x3a
 18515 08ba 0B       		.uleb128 0xb
 18516 08bb 3B       		.uleb128 0x3b
 18517 08bc 05       		.uleb128 0x5
 18518 08bd 49       		.uleb128 0x49
 18519 08be 13       		.uleb128 0x13
 18520 08bf 00       		.byte	0
 18521 08c0 00       		.byte	0
 18522 08c1 9601     		.uleb128 0x96
 18523 08c3 2E       		.uleb128 0x2e
 18524 08c4 01       		.byte	0x1
 18525 08c5 47       		.uleb128 0x47
 18526 08c6 13       		.uleb128 0x13
 18527 08c7 3A       		.uleb128 0x3a
 18528 08c8 0B       		.uleb128 0xb
 18529 08c9 3B       		.uleb128 0x3b
 18530 08ca 0B       		.uleb128 0xb
 18531 08cb 20       		.uleb128 0x20
 18532 08cc 0B       		.uleb128 0xb
 18533 08cd 64       		.uleb128 0x64
 18534 08ce 13       		.uleb128 0x13
 18535 08cf 01       		.uleb128 0x1
 18536 08d0 13       		.uleb128 0x13
 18537 08d1 00       		.byte	0
 18538 08d2 00       		.byte	0
 18539 08d3 9701     		.uleb128 0x97
 18540 08d5 0B       		.uleb128 0xb
 18541 08d6 00       		.byte	0
 18542 08d7 00       		.byte	0
 18543 08d8 00       		.byte	0
 18544 08d9 9801     		.uleb128 0x98
GAS LISTING /tmp/cceISX6N.s 			page 453


 18545 08db 888201   		.uleb128 0x4108
 18546 08de 00       		.byte	0
 18547 08df 3A       		.uleb128 0x3a
 18548 08e0 0B       		.uleb128 0xb
 18549 08e1 3B       		.uleb128 0x3b
 18550 08e2 05       		.uleb128 0x5
 18551 08e3 00       		.byte	0
 18552 08e4 00       		.byte	0
 18553 08e5 9901     		.uleb128 0x99
 18554 08e7 888201   		.uleb128 0x4108
 18555 08ea 01       		.byte	0x1
 18556 08eb 3A       		.uleb128 0x3a
 18557 08ec 0B       		.uleb128 0xb
 18558 08ed 3B       		.uleb128 0x3b
 18559 08ee 05       		.uleb128 0x5
 18560 08ef 00       		.byte	0
 18561 08f0 00       		.byte	0
 18562 08f1 9A01     		.uleb128 0x9a
 18563 08f3 2E       		.uleb128 0x2e
 18564 08f4 01       		.byte	0x1
 18565 08f5 47       		.uleb128 0x47
 18566 08f6 13       		.uleb128 0x13
 18567 08f7 3A       		.uleb128 0x3a
 18568 08f8 0B       		.uleb128 0xb
 18569 08f9 3B       		.uleb128 0x3b
 18570 08fa 05       		.uleb128 0x5
 18571 08fb 20       		.uleb128 0x20
 18572 08fc 0B       		.uleb128 0xb
 18573 08fd 64       		.uleb128 0x64
 18574 08fe 13       		.uleb128 0x13
 18575 08ff 01       		.uleb128 0x1
 18576 0900 13       		.uleb128 0x13
 18577 0901 00       		.byte	0
 18578 0902 00       		.byte	0
 18579 0903 9B01     		.uleb128 0x9b
 18580 0905 2E       		.uleb128 0x2e
 18581 0906 01       		.byte	0x1
 18582 0907 3F       		.uleb128 0x3f
 18583 0908 19       		.uleb128 0x19
 18584 0909 03       		.uleb128 0x3
 18585 090a 0E       		.uleb128 0xe
 18586 090b 3A       		.uleb128 0x3a
 18587 090c 0B       		.uleb128 0xb
 18588 090d 3B       		.uleb128 0x3b
 18589 090e 0B       		.uleb128 0xb
 18590 090f 49       		.uleb128 0x49
 18591 0910 13       		.uleb128 0x13
 18592 0911 20       		.uleb128 0x20
 18593 0912 0B       		.uleb128 0xb
 18594 0913 34       		.uleb128 0x34
 18595 0914 19       		.uleb128 0x19
 18596 0915 01       		.uleb128 0x1
 18597 0916 13       		.uleb128 0x13
 18598 0917 00       		.byte	0
 18599 0918 00       		.byte	0
 18600 0919 9C01     		.uleb128 0x9c
 18601 091b 888201   		.uleb128 0x4108
GAS LISTING /tmp/cceISX6N.s 			page 454


 18602 091e 01       		.byte	0x1
 18603 091f 3A       		.uleb128 0x3a
 18604 0920 0B       		.uleb128 0xb
 18605 0921 3B       		.uleb128 0x3b
 18606 0922 05       		.uleb128 0x5
 18607 0923 01       		.uleb128 0x1
 18608 0924 13       		.uleb128 0x13
 18609 0925 00       		.byte	0
 18610 0926 00       		.byte	0
 18611 0927 9D01     		.uleb128 0x9d
 18612 0929 2E       		.uleb128 0x2e
 18613 092a 01       		.byte	0x1
 18614 092b 03       		.uleb128 0x3
 18615 092c 0E       		.uleb128 0xe
 18616 092d 34       		.uleb128 0x34
 18617 092e 19       		.uleb128 0x19
 18618 092f 20       		.uleb128 0x20
 18619 0930 0B       		.uleb128 0xb
 18620 0931 01       		.uleb128 0x1
 18621 0932 13       		.uleb128 0x13
 18622 0933 00       		.byte	0
 18623 0934 00       		.byte	0
 18624 0935 9E01     		.uleb128 0x9e
 18625 0937 2E       		.uleb128 0x2e
 18626 0938 01       		.byte	0x1
 18627 0939 31       		.uleb128 0x31
 18628 093a 13       		.uleb128 0x13
 18629 093b 6E       		.uleb128 0x6e
 18630 093c 0E       		.uleb128 0xe
 18631 093d 11       		.uleb128 0x11
 18632 093e 01       		.uleb128 0x1
 18633 093f 12       		.uleb128 0x12
 18634 0940 07       		.uleb128 0x7
 18635 0941 40       		.uleb128 0x40
 18636 0942 18       		.uleb128 0x18
 18637 0943 64       		.uleb128 0x64
 18638 0944 13       		.uleb128 0x13
 18639 0945 9742     		.uleb128 0x2117
 18640 0947 19       		.uleb128 0x19
 18641 0948 01       		.uleb128 0x1
 18642 0949 13       		.uleb128 0x13
 18643 094a 00       		.byte	0
 18644 094b 00       		.byte	0
 18645 094c 9F01     		.uleb128 0x9f
 18646 094e 05       		.uleb128 0x5
 18647 094f 00       		.byte	0
 18648 0950 31       		.uleb128 0x31
 18649 0951 13       		.uleb128 0x13
 18650 0952 02       		.uleb128 0x2
 18651 0953 17       		.uleb128 0x17
 18652 0954 00       		.byte	0
 18653 0955 00       		.byte	0
 18654 0956 A001     		.uleb128 0xa0
 18655 0958 1D       		.uleb128 0x1d
 18656 0959 01       		.byte	0x1
 18657 095a 31       		.uleb128 0x31
 18658 095b 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 455


 18659 095c 52       		.uleb128 0x52
 18660 095d 01       		.uleb128 0x1
 18661 095e 55       		.uleb128 0x55
 18662 095f 17       		.uleb128 0x17
 18663 0960 58       		.uleb128 0x58
 18664 0961 0B       		.uleb128 0xb
 18665 0962 59       		.uleb128 0x59
 18666 0963 0B       		.uleb128 0xb
 18667 0964 01       		.uleb128 0x1
 18668 0965 13       		.uleb128 0x13
 18669 0966 00       		.byte	0
 18670 0967 00       		.byte	0
 18671 0968 A101     		.uleb128 0xa1
 18672 096a 1D       		.uleb128 0x1d
 18673 096b 01       		.byte	0x1
 18674 096c 31       		.uleb128 0x31
 18675 096d 13       		.uleb128 0x13
 18676 096e 11       		.uleb128 0x11
 18677 096f 01       		.uleb128 0x1
 18678 0970 12       		.uleb128 0x12
 18679 0971 07       		.uleb128 0x7
 18680 0972 58       		.uleb128 0x58
 18681 0973 0B       		.uleb128 0xb
 18682 0974 59       		.uleb128 0x59
 18683 0975 0B       		.uleb128 0xb
 18684 0976 01       		.uleb128 0x1
 18685 0977 13       		.uleb128 0x13
 18686 0978 00       		.byte	0
 18687 0979 00       		.byte	0
 18688 097a A201     		.uleb128 0xa2
 18689 097c 1D       		.uleb128 0x1d
 18690 097d 01       		.byte	0x1
 18691 097e 31       		.uleb128 0x31
 18692 097f 13       		.uleb128 0x13
 18693 0980 52       		.uleb128 0x52
 18694 0981 01       		.uleb128 0x1
 18695 0982 55       		.uleb128 0x55
 18696 0983 17       		.uleb128 0x17
 18697 0984 58       		.uleb128 0x58
 18698 0985 0B       		.uleb128 0xb
 18699 0986 59       		.uleb128 0x59
 18700 0987 0B       		.uleb128 0xb
 18701 0988 00       		.byte	0
 18702 0989 00       		.byte	0
 18703 098a A301     		.uleb128 0xa3
 18704 098c 1D       		.uleb128 0x1d
 18705 098d 01       		.byte	0x1
 18706 098e 31       		.uleb128 0x31
 18707 098f 13       		.uleb128 0x13
 18708 0990 11       		.uleb128 0x11
 18709 0991 01       		.uleb128 0x1
 18710 0992 12       		.uleb128 0x12
 18711 0993 07       		.uleb128 0x7
 18712 0994 58       		.uleb128 0x58
 18713 0995 0B       		.uleb128 0xb
 18714 0996 59       		.uleb128 0x59
 18715 0997 0B       		.uleb128 0xb
GAS LISTING /tmp/cceISX6N.s 			page 456


 18716 0998 00       		.byte	0
 18717 0999 00       		.byte	0
 18718 099a A401     		.uleb128 0xa4
 18719 099c 898201   		.uleb128 0x4109
 18720 099f 00       		.byte	0
 18721 09a0 11       		.uleb128 0x11
 18722 09a1 01       		.uleb128 0x1
 18723 09a2 31       		.uleb128 0x31
 18724 09a3 13       		.uleb128 0x13
 18725 09a4 00       		.byte	0
 18726 09a5 00       		.byte	0
 18727 09a6 A501     		.uleb128 0xa5
 18728 09a8 2E       		.uleb128 0x2e
 18729 09a9 01       		.byte	0x1
 18730 09aa 31       		.uleb128 0x31
 18731 09ab 13       		.uleb128 0x13
 18732 09ac 11       		.uleb128 0x11
 18733 09ad 01       		.uleb128 0x1
 18734 09ae 12       		.uleb128 0x12
 18735 09af 07       		.uleb128 0x7
 18736 09b0 40       		.uleb128 0x40
 18737 09b1 18       		.uleb128 0x18
 18738 09b2 9742     		.uleb128 0x2117
 18739 09b4 19       		.uleb128 0x19
 18740 09b5 01       		.uleb128 0x1
 18741 09b6 13       		.uleb128 0x13
 18742 09b7 00       		.byte	0
 18743 09b8 00       		.byte	0
 18744 09b9 A601     		.uleb128 0xa6
 18745 09bb 05       		.uleb128 0x5
 18746 09bc 00       		.byte	0
 18747 09bd 31       		.uleb128 0x31
 18748 09be 13       		.uleb128 0x13
 18749 09bf 02       		.uleb128 0x2
 18750 09c0 18       		.uleb128 0x18
 18751 09c1 00       		.byte	0
 18752 09c2 00       		.byte	0
 18753 09c3 A701     		.uleb128 0xa7
 18754 09c5 1D       		.uleb128 0x1d
 18755 09c6 01       		.byte	0x1
 18756 09c7 31       		.uleb128 0x31
 18757 09c8 13       		.uleb128 0x13
 18758 09c9 11       		.uleb128 0x11
 18759 09ca 01       		.uleb128 0x1
 18760 09cb 12       		.uleb128 0x12
 18761 09cc 07       		.uleb128 0x7
 18762 09cd 58       		.uleb128 0x58
 18763 09ce 0B       		.uleb128 0xb
 18764 09cf 59       		.uleb128 0x59
 18765 09d0 05       		.uleb128 0x5
 18766 09d1 00       		.byte	0
 18767 09d2 00       		.byte	0
 18768 09d3 A801     		.uleb128 0xa8
 18769 09d5 05       		.uleb128 0x5
 18770 09d6 00       		.byte	0
 18771 09d7 31       		.uleb128 0x31
 18772 09d8 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 457


 18773 09d9 1C       		.uleb128 0x1c
 18774 09da 0B       		.uleb128 0xb
 18775 09db 00       		.byte	0
 18776 09dc 00       		.byte	0
 18777 09dd A901     		.uleb128 0xa9
 18778 09df 35       		.uleb128 0x35
 18779 09e0 00       		.byte	0
 18780 09e1 00       		.byte	0
 18781 09e2 00       		.byte	0
 18782 09e3 AA01     		.uleb128 0xaa
 18783 09e5 2E       		.uleb128 0x2e
 18784 09e6 01       		.byte	0x1
 18785 09e7 3F       		.uleb128 0x3f
 18786 09e8 19       		.uleb128 0x19
 18787 09e9 03       		.uleb128 0x3
 18788 09ea 0E       		.uleb128 0xe
 18789 09eb 3A       		.uleb128 0x3a
 18790 09ec 0B       		.uleb128 0xb
 18791 09ed 3B       		.uleb128 0x3b
 18792 09ee 0B       		.uleb128 0xb
 18793 09ef 6E       		.uleb128 0x6e
 18794 09f0 0E       		.uleb128 0xe
 18795 09f1 11       		.uleb128 0x11
 18796 09f2 01       		.uleb128 0x1
 18797 09f3 12       		.uleb128 0x12
 18798 09f4 07       		.uleb128 0x7
 18799 09f5 40       		.uleb128 0x40
 18800 09f6 18       		.uleb128 0x18
 18801 09f7 9642     		.uleb128 0x2116
 18802 09f9 19       		.uleb128 0x19
 18803 09fa 01       		.uleb128 0x1
 18804 09fb 13       		.uleb128 0x13
 18805 09fc 00       		.byte	0
 18806 09fd 00       		.byte	0
 18807 09fe AB01     		.uleb128 0xab
 18808 0a00 05       		.uleb128 0x5
 18809 0a01 00       		.byte	0
 18810 0a02 03       		.uleb128 0x3
 18811 0a03 0E       		.uleb128 0xe
 18812 0a04 3A       		.uleb128 0x3a
 18813 0a05 0B       		.uleb128 0xb
 18814 0a06 3B       		.uleb128 0x3b
 18815 0a07 0B       		.uleb128 0xb
 18816 0a08 49       		.uleb128 0x49
 18817 0a09 13       		.uleb128 0x13
 18818 0a0a 02       		.uleb128 0x2
 18819 0a0b 17       		.uleb128 0x17
 18820 0a0c 00       		.byte	0
 18821 0a0d 00       		.byte	0
 18822 0a0e AC01     		.uleb128 0xac
 18823 0a10 05       		.uleb128 0x5
 18824 0a11 00       		.byte	0
 18825 0a12 03       		.uleb128 0x3
 18826 0a13 08       		.uleb128 0x8
 18827 0a14 3A       		.uleb128 0x3a
 18828 0a15 0B       		.uleb128 0xb
 18829 0a16 3B       		.uleb128 0x3b
GAS LISTING /tmp/cceISX6N.s 			page 458


 18830 0a17 0B       		.uleb128 0xb
 18831 0a18 49       		.uleb128 0x49
 18832 0a19 13       		.uleb128 0x13
 18833 0a1a 02       		.uleb128 0x2
 18834 0a1b 17       		.uleb128 0x17
 18835 0a1c 00       		.byte	0
 18836 0a1d 00       		.byte	0
 18837 0a1e AD01     		.uleb128 0xad
 18838 0a20 888201   		.uleb128 0x4108
 18839 0a23 00       		.byte	0
 18840 0a24 3A       		.uleb128 0x3a
 18841 0a25 0B       		.uleb128 0xb
 18842 0a26 3B       		.uleb128 0x3b
 18843 0a27 0B       		.uleb128 0xb
 18844 0a28 00       		.byte	0
 18845 0a29 00       		.byte	0
 18846 0a2a AE01     		.uleb128 0xae
 18847 0a2c 0B       		.uleb128 0xb
 18848 0a2d 01       		.byte	0x1
 18849 0a2e 55       		.uleb128 0x55
 18850 0a2f 17       		.uleb128 0x17
 18851 0a30 00       		.byte	0
 18852 0a31 00       		.byte	0
 18853 0a32 AF01     		.uleb128 0xaf
 18854 0a34 34       		.uleb128 0x34
 18855 0a35 00       		.byte	0
 18856 0a36 03       		.uleb128 0x3
 18857 0a37 0E       		.uleb128 0xe
 18858 0a38 3A       		.uleb128 0x3a
 18859 0a39 0B       		.uleb128 0xb
 18860 0a3a 3B       		.uleb128 0x3b
 18861 0a3b 0B       		.uleb128 0xb
 18862 0a3c 49       		.uleb128 0x49
 18863 0a3d 13       		.uleb128 0x13
 18864 0a3e 02       		.uleb128 0x2
 18865 0a3f 17       		.uleb128 0x17
 18866 0a40 00       		.byte	0
 18867 0a41 00       		.byte	0
 18868 0a42 B001     		.uleb128 0xb0
 18869 0a44 0B       		.uleb128 0xb
 18870 0a45 01       		.byte	0x1
 18871 0a46 11       		.uleb128 0x11
 18872 0a47 01       		.uleb128 0x1
 18873 0a48 12       		.uleb128 0x12
 18874 0a49 07       		.uleb128 0x7
 18875 0a4a 01       		.uleb128 0x1
 18876 0a4b 13       		.uleb128 0x13
 18877 0a4c 00       		.byte	0
 18878 0a4d 00       		.byte	0
 18879 0a4e B101     		.uleb128 0xb1
 18880 0a50 05       		.uleb128 0x5
 18881 0a51 00       		.byte	0
 18882 0a52 31       		.uleb128 0x31
 18883 0a53 13       		.uleb128 0x13
 18884 0a54 00       		.byte	0
 18885 0a55 00       		.byte	0
 18886 0a56 B201     		.uleb128 0xb2
GAS LISTING /tmp/cceISX6N.s 			page 459


 18887 0a58 1D       		.uleb128 0x1d
 18888 0a59 01       		.byte	0x1
 18889 0a5a 31       		.uleb128 0x31
 18890 0a5b 13       		.uleb128 0x13
 18891 0a5c 52       		.uleb128 0x52
 18892 0a5d 01       		.uleb128 0x1
 18893 0a5e 55       		.uleb128 0x55
 18894 0a5f 17       		.uleb128 0x17
 18895 0a60 58       		.uleb128 0x58
 18896 0a61 0B       		.uleb128 0xb
 18897 0a62 59       		.uleb128 0x59
 18898 0a63 05       		.uleb128 0x5
 18899 0a64 00       		.byte	0
 18900 0a65 00       		.byte	0
 18901 0a66 B301     		.uleb128 0xb3
 18902 0a68 0B       		.uleb128 0xb
 18903 0a69 00       		.byte	0
 18904 0a6a 11       		.uleb128 0x11
 18905 0a6b 01       		.uleb128 0x1
 18906 0a6c 12       		.uleb128 0x12
 18907 0a6d 07       		.uleb128 0x7
 18908 0a6e 00       		.byte	0
 18909 0a6f 00       		.byte	0
 18910 0a70 B401     		.uleb128 0xb4
 18911 0a72 1D       		.uleb128 0x1d
 18912 0a73 01       		.byte	0x1
 18913 0a74 31       		.uleb128 0x31
 18914 0a75 13       		.uleb128 0x13
 18915 0a76 11       		.uleb128 0x11
 18916 0a77 01       		.uleb128 0x1
 18917 0a78 12       		.uleb128 0x12
 18918 0a79 07       		.uleb128 0x7
 18919 0a7a 58       		.uleb128 0x58
 18920 0a7b 0B       		.uleb128 0xb
 18921 0a7c 59       		.uleb128 0x59
 18922 0a7d 05       		.uleb128 0x5
 18923 0a7e 01       		.uleb128 0x1
 18924 0a7f 13       		.uleb128 0x13
 18925 0a80 00       		.byte	0
 18926 0a81 00       		.byte	0
 18927 0a82 B501     		.uleb128 0xb5
 18928 0a84 898201   		.uleb128 0x4109
 18929 0a87 01       		.byte	0x1
 18930 0a88 11       		.uleb128 0x11
 18931 0a89 01       		.uleb128 0x1
 18932 0a8a 31       		.uleb128 0x31
 18933 0a8b 13       		.uleb128 0x13
 18934 0a8c 00       		.byte	0
 18935 0a8d 00       		.byte	0
 18936 0a8e B601     		.uleb128 0xb6
 18937 0a90 8A8201   		.uleb128 0x410a
 18938 0a93 00       		.byte	0
 18939 0a94 02       		.uleb128 0x2
 18940 0a95 18       		.uleb128 0x18
 18941 0a96 9142     		.uleb128 0x2111
 18942 0a98 18       		.uleb128 0x18
 18943 0a99 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 460


 18944 0a9a 00       		.byte	0
 18945 0a9b B701     		.uleb128 0xb7
 18946 0a9d 0B       		.uleb128 0xb
 18947 0a9e 00       		.byte	0
 18948 0a9f 55       		.uleb128 0x55
 18949 0aa0 17       		.uleb128 0x17
 18950 0aa1 00       		.byte	0
 18951 0aa2 00       		.byte	0
 18952 0aa3 B801     		.uleb128 0xb8
 18953 0aa5 1D       		.uleb128 0x1d
 18954 0aa6 01       		.byte	0x1
 18955 0aa7 31       		.uleb128 0x31
 18956 0aa8 13       		.uleb128 0x13
 18957 0aa9 52       		.uleb128 0x52
 18958 0aaa 01       		.uleb128 0x1
 18959 0aab 55       		.uleb128 0x55
 18960 0aac 17       		.uleb128 0x17
 18961 0aad 58       		.uleb128 0x58
 18962 0aae 0B       		.uleb128 0xb
 18963 0aaf 59       		.uleb128 0x59
 18964 0ab0 05       		.uleb128 0x5
 18965 0ab1 01       		.uleb128 0x1
 18966 0ab2 13       		.uleb128 0x13
 18967 0ab3 00       		.byte	0
 18968 0ab4 00       		.byte	0
 18969 0ab5 B901     		.uleb128 0xb9
 18970 0ab7 898201   		.uleb128 0x4109
 18971 0aba 01       		.byte	0x1
 18972 0abb 11       		.uleb128 0x11
 18973 0abc 01       		.uleb128 0x1
 18974 0abd 31       		.uleb128 0x31
 18975 0abe 13       		.uleb128 0x13
 18976 0abf 01       		.uleb128 0x1
 18977 0ac0 13       		.uleb128 0x13
 18978 0ac1 00       		.byte	0
 18979 0ac2 00       		.byte	0
 18980 0ac3 BA01     		.uleb128 0xba
 18981 0ac5 898201   		.uleb128 0x4109
 18982 0ac8 01       		.byte	0x1
 18983 0ac9 11       		.uleb128 0x11
 18984 0aca 01       		.uleb128 0x1
 18985 0acb 00       		.byte	0
 18986 0acc 00       		.byte	0
 18987 0acd BB01     		.uleb128 0xbb
 18988 0acf 898201   		.uleb128 0x4109
 18989 0ad2 00       		.byte	0
 18990 0ad3 11       		.uleb128 0x11
 18991 0ad4 01       		.uleb128 0x1
 18992 0ad5 9542     		.uleb128 0x2115
 18993 0ad7 19       		.uleb128 0x19
 18994 0ad8 31       		.uleb128 0x31
 18995 0ad9 13       		.uleb128 0x13
 18996 0ada 00       		.byte	0
 18997 0adb 00       		.byte	0
 18998 0adc BC01     		.uleb128 0xbc
 18999 0ade 2E       		.uleb128 0x2e
 19000 0adf 01       		.byte	0x1
GAS LISTING /tmp/cceISX6N.s 			page 461


 19001 0ae0 03       		.uleb128 0x3
 19002 0ae1 0E       		.uleb128 0xe
 19003 0ae2 3A       		.uleb128 0x3a
 19004 0ae3 0B       		.uleb128 0xb
 19005 0ae4 3B       		.uleb128 0x3b
 19006 0ae5 0B       		.uleb128 0xb
 19007 0ae6 20       		.uleb128 0x20
 19008 0ae7 0B       		.uleb128 0xb
 19009 0ae8 01       		.uleb128 0x1
 19010 0ae9 13       		.uleb128 0x13
 19011 0aea 00       		.byte	0
 19012 0aeb 00       		.byte	0
 19013 0aec BD01     		.uleb128 0xbd
 19014 0aee 2E       		.uleb128 0x2e
 19015 0aef 01       		.byte	0x1
 19016 0af0 3F       		.uleb128 0x3f
 19017 0af1 19       		.uleb128 0x19
 19018 0af2 03       		.uleb128 0x3
 19019 0af3 0E       		.uleb128 0xe
 19020 0af4 3A       		.uleb128 0x3a
 19021 0af5 0B       		.uleb128 0xb
 19022 0af6 3B       		.uleb128 0x3b
 19023 0af7 0B       		.uleb128 0xb
 19024 0af8 49       		.uleb128 0x49
 19025 0af9 13       		.uleb128 0x13
 19026 0afa 11       		.uleb128 0x11
 19027 0afb 01       		.uleb128 0x1
 19028 0afc 12       		.uleb128 0x12
 19029 0afd 07       		.uleb128 0x7
 19030 0afe 40       		.uleb128 0x40
 19031 0aff 18       		.uleb128 0x18
 19032 0b00 9742     		.uleb128 0x2117
 19033 0b02 19       		.uleb128 0x19
 19034 0b03 01       		.uleb128 0x1
 19035 0b04 13       		.uleb128 0x13
 19036 0b05 00       		.byte	0
 19037 0b06 00       		.byte	0
 19038 0b07 BE01     		.uleb128 0xbe
 19039 0b09 0B       		.uleb128 0xb
 19040 0b0a 01       		.byte	0x1
 19041 0b0b 55       		.uleb128 0x55
 19042 0b0c 17       		.uleb128 0x17
 19043 0b0d 01       		.uleb128 0x1
 19044 0b0e 13       		.uleb128 0x13
 19045 0b0f 00       		.byte	0
 19046 0b10 00       		.byte	0
 19047 0b11 BF01     		.uleb128 0xbf
 19048 0b13 34       		.uleb128 0x34
 19049 0b14 00       		.byte	0
 19050 0b15 03       		.uleb128 0x3
 19051 0b16 08       		.uleb128 0x8
 19052 0b17 3A       		.uleb128 0x3a
 19053 0b18 0B       		.uleb128 0xb
 19054 0b19 3B       		.uleb128 0x3b
 19055 0b1a 0B       		.uleb128 0xb
 19056 0b1b 49       		.uleb128 0x49
 19057 0b1c 13       		.uleb128 0x13
GAS LISTING /tmp/cceISX6N.s 			page 462


 19058 0b1d 02       		.uleb128 0x2
 19059 0b1e 18       		.uleb128 0x18
 19060 0b1f 00       		.byte	0
 19061 0b20 00       		.byte	0
 19062 0b21 C001     		.uleb128 0xc0
 19063 0b23 34       		.uleb128 0x34
 19064 0b24 00       		.byte	0
 19065 0b25 03       		.uleb128 0x3
 19066 0b26 08       		.uleb128 0x8
 19067 0b27 3A       		.uleb128 0x3a
 19068 0b28 0B       		.uleb128 0xb
 19069 0b29 3B       		.uleb128 0x3b
 19070 0b2a 0B       		.uleb128 0xb
 19071 0b2b 49       		.uleb128 0x49
 19072 0b2c 13       		.uleb128 0x13
 19073 0b2d 02       		.uleb128 0x2
 19074 0b2e 17       		.uleb128 0x17
 19075 0b2f 00       		.byte	0
 19076 0b30 00       		.byte	0
 19077 0b31 C101     		.uleb128 0xc1
 19078 0b33 34       		.uleb128 0x34
 19079 0b34 00       		.byte	0
 19080 0b35 03       		.uleb128 0x3
 19081 0b36 0E       		.uleb128 0xe
 19082 0b37 3A       		.uleb128 0x3a
 19083 0b38 0B       		.uleb128 0xb
 19084 0b39 3B       		.uleb128 0x3b
 19085 0b3a 0B       		.uleb128 0xb
 19086 0b3b 49       		.uleb128 0x49
 19087 0b3c 13       		.uleb128 0x13
 19088 0b3d 02       		.uleb128 0x2
 19089 0b3e 18       		.uleb128 0x18
 19090 0b3f 00       		.byte	0
 19091 0b40 00       		.byte	0
 19092 0b41 C201     		.uleb128 0xc2
 19093 0b43 34       		.uleb128 0x34
 19094 0b44 00       		.byte	0
 19095 0b45 03       		.uleb128 0x3
 19096 0b46 0E       		.uleb128 0xe
 19097 0b47 3A       		.uleb128 0x3a
 19098 0b48 0B       		.uleb128 0xb
 19099 0b49 3B       		.uleb128 0x3b
 19100 0b4a 0B       		.uleb128 0xb
 19101 0b4b 49       		.uleb128 0x49
 19102 0b4c 13       		.uleb128 0x13
 19103 0b4d 1C       		.uleb128 0x1c
 19104 0b4e 05       		.uleb128 0x5
 19105 0b4f 00       		.byte	0
 19106 0b50 00       		.byte	0
 19107 0b51 C301     		.uleb128 0xc3
 19108 0b53 2E       		.uleb128 0x2e
 19109 0b54 01       		.byte	0x1
 19110 0b55 03       		.uleb128 0x3
 19111 0b56 0E       		.uleb128 0xe
 19112 0b57 34       		.uleb128 0x34
 19113 0b58 19       		.uleb128 0x19
 19114 0b59 3C       		.uleb128 0x3c
GAS LISTING /tmp/cceISX6N.s 			page 463


 19115 0b5a 19       		.uleb128 0x19
 19116 0b5b 64       		.uleb128 0x64
 19117 0b5c 13       		.uleb128 0x13
 19118 0b5d 01       		.uleb128 0x1
 19119 0b5e 13       		.uleb128 0x13
 19120 0b5f 00       		.byte	0
 19121 0b60 00       		.byte	0
 19122 0b61 C401     		.uleb128 0xc4
 19123 0b63 2E       		.uleb128 0x2e
 19124 0b64 01       		.byte	0x1
 19125 0b65 03       		.uleb128 0x3
 19126 0b66 0E       		.uleb128 0xe
 19127 0b67 49       		.uleb128 0x49
 19128 0b68 13       		.uleb128 0x13
 19129 0b69 34       		.uleb128 0x34
 19130 0b6a 19       		.uleb128 0x19
 19131 0b6b 20       		.uleb128 0x20
 19132 0b6c 0B       		.uleb128 0xb
 19133 0b6d 64       		.uleb128 0x64
 19134 0b6e 13       		.uleb128 0x13
 19135 0b6f 00       		.byte	0
 19136 0b70 00       		.byte	0
 19137 0b71 C501     		.uleb128 0xc5
 19138 0b73 34       		.uleb128 0x34
 19139 0b74 00       		.byte	0
 19140 0b75 03       		.uleb128 0x3
 19141 0b76 0E       		.uleb128 0xe
 19142 0b77 49       		.uleb128 0x49
 19143 0b78 13       		.uleb128 0x13
 19144 0b79 34       		.uleb128 0x34
 19145 0b7a 19       		.uleb128 0x19
 19146 0b7b 00       		.byte	0
 19147 0b7c 00       		.byte	0
 19148 0b7d C601     		.uleb128 0xc6
 19149 0b7f 0B       		.uleb128 0xb
 19150 0b80 01       		.byte	0x1
 19151 0b81 11       		.uleb128 0x11
 19152 0b82 01       		.uleb128 0x1
 19153 0b83 12       		.uleb128 0x12
 19154 0b84 07       		.uleb128 0x7
 19155 0b85 00       		.byte	0
 19156 0b86 00       		.byte	0
 19157 0b87 C701     		.uleb128 0xc7
 19158 0b89 34       		.uleb128 0x34
 19159 0b8a 00       		.byte	0
 19160 0b8b 31       		.uleb128 0x31
 19161 0b8c 13       		.uleb128 0x13
 19162 0b8d 02       		.uleb128 0x2
 19163 0b8e 17       		.uleb128 0x17
 19164 0b8f 00       		.byte	0
 19165 0b90 00       		.byte	0
 19166 0b91 C801     		.uleb128 0xc8
 19167 0b93 34       		.uleb128 0x34
 19168 0b94 00       		.byte	0
 19169 0b95 31       		.uleb128 0x31
 19170 0b96 13       		.uleb128 0x13
 19171 0b97 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 464


 19172 0b98 00       		.byte	0
 19173 0b99 C901     		.uleb128 0xc9
 19174 0b9b 898201   		.uleb128 0x4109
 19175 0b9e 01       		.byte	0x1
 19176 0b9f 11       		.uleb128 0x11
 19177 0ba0 01       		.uleb128 0x1
 19178 0ba1 01       		.uleb128 0x1
 19179 0ba2 13       		.uleb128 0x13
 19180 0ba3 00       		.byte	0
 19181 0ba4 00       		.byte	0
 19182 0ba5 CA01     		.uleb128 0xca
 19183 0ba7 2E       		.uleb128 0x2e
 19184 0ba8 01       		.byte	0x1
 19185 0ba9 03       		.uleb128 0x3
 19186 0baa 0E       		.uleb128 0xe
 19187 0bab 34       		.uleb128 0x34
 19188 0bac 19       		.uleb128 0x19
 19189 0bad 11       		.uleb128 0x11
 19190 0bae 01       		.uleb128 0x1
 19191 0baf 12       		.uleb128 0x12
 19192 0bb0 07       		.uleb128 0x7
 19193 0bb1 40       		.uleb128 0x40
 19194 0bb2 18       		.uleb128 0x18
 19195 0bb3 9742     		.uleb128 0x2117
 19196 0bb5 19       		.uleb128 0x19
 19197 0bb6 01       		.uleb128 0x1
 19198 0bb7 13       		.uleb128 0x13
 19199 0bb8 00       		.byte	0
 19200 0bb9 00       		.byte	0
 19201 0bba CB01     		.uleb128 0xcb
 19202 0bbc 05       		.uleb128 0x5
 19203 0bbd 00       		.byte	0
 19204 0bbe 31       		.uleb128 0x31
 19205 0bbf 13       		.uleb128 0x13
 19206 0bc0 1C       		.uleb128 0x1c
 19207 0bc1 05       		.uleb128 0x5
 19208 0bc2 00       		.byte	0
 19209 0bc3 00       		.byte	0
 19210 0bc4 CC01     		.uleb128 0xcc
 19211 0bc6 898201   		.uleb128 0x4109
 19212 0bc9 01       		.byte	0x1
 19213 0bca 11       		.uleb128 0x11
 19214 0bcb 01       		.uleb128 0x1
 19215 0bcc 9542     		.uleb128 0x2115
 19216 0bce 19       		.uleb128 0x19
 19217 0bcf 31       		.uleb128 0x31
 19218 0bd0 13       		.uleb128 0x13
 19219 0bd1 00       		.byte	0
 19220 0bd2 00       		.byte	0
 19221 0bd3 CD01     		.uleb128 0xcd
 19222 0bd5 8A8201   		.uleb128 0x410a
 19223 0bd8 00       		.byte	0
 19224 0bd9 02       		.uleb128 0x2
 19225 0bda 18       		.uleb128 0x18
 19226 0bdb 00       		.byte	0
 19227 0bdc 00       		.byte	0
 19228 0bdd CE01     		.uleb128 0xce
GAS LISTING /tmp/cceISX6N.s 			page 465


 19229 0bdf 34       		.uleb128 0x34
 19230 0be0 00       		.byte	0
 19231 0be1 03       		.uleb128 0x3
 19232 0be2 0E       		.uleb128 0xe
 19233 0be3 3A       		.uleb128 0x3a
 19234 0be4 0B       		.uleb128 0xb
 19235 0be5 3B       		.uleb128 0x3b
 19236 0be6 0B       		.uleb128 0xb
 19237 0be7 49       		.uleb128 0x49
 19238 0be8 13       		.uleb128 0x13
 19239 0be9 3F       		.uleb128 0x3f
 19240 0bea 19       		.uleb128 0x19
 19241 0beb 3C       		.uleb128 0x3c
 19242 0bec 19       		.uleb128 0x19
 19243 0bed 00       		.byte	0
 19244 0bee 00       		.byte	0
 19245 0bef CF01     		.uleb128 0xcf
 19246 0bf1 34       		.uleb128 0x34
 19247 0bf2 00       		.byte	0
 19248 0bf3 03       		.uleb128 0x3
 19249 0bf4 0E       		.uleb128 0xe
 19250 0bf5 49       		.uleb128 0x49
 19251 0bf6 13       		.uleb128 0x13
 19252 0bf7 3F       		.uleb128 0x3f
 19253 0bf8 19       		.uleb128 0x19
 19254 0bf9 34       		.uleb128 0x34
 19255 0bfa 19       		.uleb128 0x19
 19256 0bfb 3C       		.uleb128 0x3c
 19257 0bfc 19       		.uleb128 0x19
 19258 0bfd 00       		.byte	0
 19259 0bfe 00       		.byte	0
 19260 0bff D001     		.uleb128 0xd0
 19261 0c01 34       		.uleb128 0x34
 19262 0c02 00       		.byte	0
 19263 0c03 47       		.uleb128 0x47
 19264 0c04 13       		.uleb128 0x13
 19265 0c05 00       		.byte	0
 19266 0c06 00       		.byte	0
 19267 0c07 D101     		.uleb128 0xd1
 19268 0c09 34       		.uleb128 0x34
 19269 0c0a 00       		.byte	0
 19270 0c0b 47       		.uleb128 0x47
 19271 0c0c 13       		.uleb128 0x13
 19272 0c0d 02       		.uleb128 0x2
 19273 0c0e 18       		.uleb128 0x18
 19274 0c0f 00       		.byte	0
 19275 0c10 00       		.byte	0
 19276 0c11 D201     		.uleb128 0xd2
 19277 0c13 34       		.uleb128 0x34
 19278 0c14 00       		.byte	0
 19279 0c15 47       		.uleb128 0x47
 19280 0c16 13       		.uleb128 0x13
 19281 0c17 6E       		.uleb128 0x6e
 19282 0c18 0E       		.uleb128 0xe
 19283 0c19 1C       		.uleb128 0x1c
 19284 0c1a 0B       		.uleb128 0xb
 19285 0c1b 00       		.byte	0
GAS LISTING /tmp/cceISX6N.s 			page 466


 19286 0c1c 00       		.byte	0
 19287 0c1d D301     		.uleb128 0xd3
 19288 0c1f 34       		.uleb128 0x34
 19289 0c20 00       		.byte	0
 19290 0c21 47       		.uleb128 0x47
 19291 0c22 13       		.uleb128 0x13
 19292 0c23 6E       		.uleb128 0x6e
 19293 0c24 0E       		.uleb128 0xe
 19294 0c25 1C       		.uleb128 0x1c
 19295 0c26 06       		.uleb128 0x6
 19296 0c27 00       		.byte	0
 19297 0c28 00       		.byte	0
 19298 0c29 D401     		.uleb128 0xd4
 19299 0c2b 34       		.uleb128 0x34
 19300 0c2c 00       		.byte	0
 19301 0c2d 47       		.uleb128 0x47
 19302 0c2e 13       		.uleb128 0x13
 19303 0c2f 6E       		.uleb128 0x6e
 19304 0c30 0E       		.uleb128 0xe
 19305 0c31 1C       		.uleb128 0x1c
 19306 0c32 0D       		.uleb128 0xd
 19307 0c33 00       		.byte	0
 19308 0c34 00       		.byte	0
 19309 0c35 D501     		.uleb128 0xd5
 19310 0c37 34       		.uleb128 0x34
 19311 0c38 00       		.byte	0
 19312 0c39 47       		.uleb128 0x47
 19313 0c3a 13       		.uleb128 0x13
 19314 0c3b 6E       		.uleb128 0x6e
 19315 0c3c 0E       		.uleb128 0xe
 19316 0c3d 1C       		.uleb128 0x1c
 19317 0c3e 05       		.uleb128 0x5
 19318 0c3f 00       		.byte	0
 19319 0c40 00       		.byte	0
 19320 0c41 D601     		.uleb128 0xd6
 19321 0c43 34       		.uleb128 0x34
 19322 0c44 00       		.byte	0
 19323 0c45 47       		.uleb128 0x47
 19324 0c46 13       		.uleb128 0x13
 19325 0c47 6E       		.uleb128 0x6e
 19326 0c48 0E       		.uleb128 0xe
 19327 0c49 1C       		.uleb128 0x1c
 19328 0c4a 07       		.uleb128 0x7
 19329 0c4b 00       		.byte	0
 19330 0c4c 00       		.byte	0
 19331 0c4d D701     		.uleb128 0xd7
 19332 0c4f 2E       		.uleb128 0x2e
 19333 0c50 01       		.byte	0x1
 19334 0c51 3F       		.uleb128 0x3f
 19335 0c52 19       		.uleb128 0x19
 19336 0c53 03       		.uleb128 0x3
 19337 0c54 08       		.uleb128 0x8
 19338 0c55 3A       		.uleb128 0x3a
 19339 0c56 0B       		.uleb128 0xb
 19340 0c57 3B       		.uleb128 0x3b
 19341 0c58 0B       		.uleb128 0xb
 19342 0c59 49       		.uleb128 0x49
GAS LISTING /tmp/cceISX6N.s 			page 467


 19343 0c5a 13       		.uleb128 0x13
 19344 0c5b 3C       		.uleb128 0x3c
 19345 0c5c 19       		.uleb128 0x19
 19346 0c5d 01       		.uleb128 0x1
 19347 0c5e 13       		.uleb128 0x13
 19348 0c5f 00       		.byte	0
 19349 0c60 00       		.byte	0
 19350 0c61 D801     		.uleb128 0xd8
 19351 0c63 2E       		.uleb128 0x2e
 19352 0c64 01       		.byte	0x1
 19353 0c65 3F       		.uleb128 0x3f
 19354 0c66 19       		.uleb128 0x19
 19355 0c67 03       		.uleb128 0x3
 19356 0c68 0E       		.uleb128 0xe
 19357 0c69 6E       		.uleb128 0x6e
 19358 0c6a 0E       		.uleb128 0xe
 19359 0c6b 34       		.uleb128 0x34
 19360 0c6c 19       		.uleb128 0x19
 19361 0c6d 3C       		.uleb128 0x3c
 19362 0c6e 19       		.uleb128 0x19
 19363 0c6f 01       		.uleb128 0x1
 19364 0c70 13       		.uleb128 0x13
 19365 0c71 00       		.byte	0
 19366 0c72 00       		.byte	0
 19367 0c73 D901     		.uleb128 0xd9
 19368 0c75 2E       		.uleb128 0x2e
 19369 0c76 01       		.byte	0x1
 19370 0c77 3F       		.uleb128 0x3f
 19371 0c78 19       		.uleb128 0x19
 19372 0c79 03       		.uleb128 0x3
 19373 0c7a 0E       		.uleb128 0xe
 19374 0c7b 49       		.uleb128 0x49
 19375 0c7c 13       		.uleb128 0x13
 19376 0c7d 34       		.uleb128 0x34
 19377 0c7e 19       		.uleb128 0x19
 19378 0c7f 3C       		.uleb128 0x3c
 19379 0c80 19       		.uleb128 0x19
 19380 0c81 00       		.byte	0
 19381 0c82 00       		.byte	0
 19382 0c83 00       		.byte	0
 19383              		.section	.debug_loc,"",@progbits
 19384              	.Ldebug_loc0:
 19385              	.LLST0:
 19386 0000 00000000 		.quad	.LVL0
 19386      00000000 
 19387 0008 00000000 		.quad	.LVL1-1
 19387      00000000 
 19388 0010 0100     		.value	0x1
 19389 0012 55       		.byte	0x55
 19390 0013 00000000 		.quad	.LVL1-1
 19390      00000000 
 19391 001b 00000000 		.quad	.LFE2182
 19391      00000000 
 19392 0023 0400     		.value	0x4
 19393 0025 F3       		.byte	0xf3
 19394 0026 01       		.uleb128 0x1
 19395 0027 55       		.byte	0x55
GAS LISTING /tmp/cceISX6N.s 			page 468


 19396 0028 9F       		.byte	0x9f
 19397 0029 00000000 		.quad	0
 19397      00000000 
 19398 0031 00000000 		.quad	0
 19398      00000000 
 19399              	.LLST6:
 19400 0039 00000000 		.quad	.LVL0
 19400      00000000 
 19401 0041 00000000 		.quad	.LVL1-1
 19401      00000000 
 19402 0049 0300     		.value	0x3
 19403 004b 75       		.byte	0x75
 19404 004c 30       		.sleb128 48
 19405 004d 9F       		.byte	0x9f
 19406 004e 00000000 		.quad	.LVL1-1
 19406      00000000 
 19407 0056 00000000 		.quad	.LFE2182
 19407      00000000 
 19408 005e 0600     		.value	0x6
 19409 0060 F3       		.byte	0xf3
 19410 0061 01       		.uleb128 0x1
 19411 0062 55       		.byte	0x55
 19412 0063 23       		.byte	0x23
 19413 0064 30       		.uleb128 0x30
 19414 0065 9F       		.byte	0x9f
 19415 0066 00000000 		.quad	0
 19415      00000000 
 19416 006e 00000000 		.quad	0
 19416      00000000 
 19417              	.LLST7:
 19418 0076 00000000 		.quad	.LVL0
 19418      00000000 
 19419 007e 00000000 		.quad	.LVL1-1
 19419      00000000 
 19420 0086 0200     		.value	0x2
 19421 0088 75       		.byte	0x75
 19422 0089 08       		.sleb128 8
 19423 008a 00000000 		.quad	0
 19423      00000000 
 19424 0092 00000000 		.quad	0
 19424      00000000 
 19425              	.LLST8:
 19426 009a 00000000 		.quad	.LVL0
 19426      00000000 
 19427 00a2 00000000 		.quad	.LVL1-1
 19427      00000000 
 19428 00aa 0300     		.value	0x3
 19429 00ac 75       		.byte	0x75
 19430 00ad 00       		.sleb128 0
 19431 00ae 06       		.byte	0x6
 19432 00af 00000000 		.quad	0
 19432      00000000 
 19433 00b7 00000000 		.quad	0
 19433      00000000 
 19434              	.LLST9:
 19435 00bf 00000000 		.quad	.LVL0
 19435      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 469


 19436 00c7 00000000 		.quad	.LVL1-1
 19436      00000000 
 19437 00cf 0400     		.value	0x4
 19438 00d1 75       		.byte	0x75
 19439 00d2 C000     		.sleb128 64
 19440 00d4 9F       		.byte	0x9f
 19441 00d5 00000000 		.quad	.LVL1-1
 19441      00000000 
 19442 00dd 00000000 		.quad	.LFE2182
 19442      00000000 
 19443 00e5 0600     		.value	0x6
 19444 00e7 F3       		.byte	0xf3
 19445 00e8 01       		.uleb128 0x1
 19446 00e9 55       		.byte	0x55
 19447 00ea 23       		.byte	0x23
 19448 00eb 40       		.uleb128 0x40
 19449 00ec 9F       		.byte	0x9f
 19450 00ed 00000000 		.quad	0
 19450      00000000 
 19451 00f5 00000000 		.quad	0
 19451      00000000 
 19452              	.LLST10:
 19453 00fd 00000000 		.quad	.LVL0
 19453      00000000 
 19454 0105 00000000 		.quad	.LVL1-1
 19454      00000000 
 19455 010d 0200     		.value	0x2
 19456 010f 75       		.byte	0x75
 19457 0110 18       		.sleb128 24
 19458 0111 00000000 		.quad	0
 19458      00000000 
 19459 0119 00000000 		.quad	0
 19459      00000000 
 19460              	.LLST11:
 19461 0121 00000000 		.quad	.LVL0
 19461      00000000 
 19462 0129 00000000 		.quad	.LVL1-1
 19462      00000000 
 19463 0131 0D00     		.value	0xd
 19464 0133 75       		.byte	0x75
 19465 0134 08       		.sleb128 8
 19466 0135 F6       		.byte	0xf6
 19467 0136 08       		.byte	0x8
 19468 0137 29       		.uleb128 0x29
 19469 0138 75       		.byte	0x75
 19470 0139 00       		.sleb128 0
 19471 013a 06       		.byte	0x6
 19472 013b F6       		.byte	0xf6
 19473 013c 08       		.byte	0x8
 19474 013d 29       		.uleb128 0x29
 19475 013e 1E       		.byte	0x1e
 19476 013f 9F       		.byte	0x9f
 19477 0140 00000000 		.quad	0
 19477      00000000 
 19478 0148 00000000 		.quad	0
 19478      00000000 
 19479              	.LLST13:
GAS LISTING /tmp/cceISX6N.s 			page 470


 19480 0150 00000000 		.quad	.LVL0
 19480      00000000 
 19481 0158 00000000 		.quad	.LVL1-1
 19481      00000000 
 19482 0160 0200     		.value	0x2
 19483 0162 75       		.byte	0x75
 19484 0163 28       		.sleb128 40
 19485 0164 00000000 		.quad	0
 19485      00000000 
 19486 016c 00000000 		.quad	0
 19486      00000000 
 19487              	.LLST14:
 19488 0174 00000000 		.quad	.LVL0
 19488      00000000 
 19489 017c 00000000 		.quad	.LVL1-1
 19489      00000000 
 19490 0184 1300     		.value	0x13
 19491 0186 75       		.byte	0x75
 19492 0187 08       		.sleb128 8
 19493 0188 F6       		.byte	0xf6
 19494 0189 08       		.byte	0x8
 19495 018a 29       		.uleb128 0x29
 19496 018b 75       		.byte	0x75
 19497 018c 00       		.sleb128 0
 19498 018d 06       		.byte	0x6
 19499 018e F6       		.byte	0xf6
 19500 018f 08       		.byte	0x8
 19501 0190 29       		.uleb128 0x29
 19502 0191 1E       		.byte	0x1e
 19503 0192 75       		.byte	0x75
 19504 0193 18       		.sleb128 24
 19505 0194 F6       		.byte	0xf6
 19506 0195 08       		.byte	0x8
 19507 0196 29       		.uleb128 0x29
 19508 0197 22       		.byte	0x22
 19509 0198 9F       		.byte	0x9f
 19510 0199 00000000 		.quad	0
 19510      00000000 
 19511 01a1 00000000 		.quad	0
 19511      00000000 
 19512              	.LLST16:
 19513 01a9 00000000 		.quad	.LVL0
 19513      00000000 
 19514 01b1 00000000 		.quad	.LVL1-1
 19514      00000000 
 19515 01b9 0200     		.value	0x2
 19516 01bb 75       		.byte	0x75
 19517 01bc 38       		.sleb128 56
 19518 01bd 00000000 		.quad	0
 19518      00000000 
 19519 01c5 00000000 		.quad	0
 19519      00000000 
 19520              	.LLST17:
 19521 01cd 00000000 		.quad	.LVL0
 19521      00000000 
 19522 01d5 00000000 		.quad	.LVL1-1
 19522      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 471


 19523 01dd 1900     		.value	0x19
 19524 01df 75       		.byte	0x75
 19525 01e0 08       		.sleb128 8
 19526 01e1 F6       		.byte	0xf6
 19527 01e2 08       		.byte	0x8
 19528 01e3 29       		.uleb128 0x29
 19529 01e4 75       		.byte	0x75
 19530 01e5 00       		.sleb128 0
 19531 01e6 06       		.byte	0x6
 19532 01e7 F6       		.byte	0xf6
 19533 01e8 08       		.byte	0x8
 19534 01e9 29       		.uleb128 0x29
 19535 01ea 1E       		.byte	0x1e
 19536 01eb 75       		.byte	0x75
 19537 01ec 18       		.sleb128 24
 19538 01ed F6       		.byte	0xf6
 19539 01ee 08       		.byte	0x8
 19540 01ef 29       		.uleb128 0x29
 19541 01f0 22       		.byte	0x22
 19542 01f1 75       		.byte	0x75
 19543 01f2 28       		.sleb128 40
 19544 01f3 F6       		.byte	0xf6
 19545 01f4 08       		.byte	0x8
 19546 01f5 29       		.uleb128 0x29
 19547 01f6 1E       		.byte	0x1e
 19548 01f7 9F       		.byte	0x9f
 19549 01f8 00000000 		.quad	0
 19549      00000000 
 19550 0200 00000000 		.quad	0
 19550      00000000 
 19551              	.LLST18:
 19552 0208 00000000 		.quad	.LVL0
 19552      00000000 
 19553 0210 00000000 		.quad	.LVL1-1
 19553      00000000 
 19554 0218 0400     		.value	0x4
 19555 021a 75       		.byte	0x75
 19556 021b C800     		.sleb128 72
 19557 021d 9F       		.byte	0x9f
 19558 021e 00000000 		.quad	.LVL1-1
 19558      00000000 
 19559 0226 00000000 		.quad	.LFE2182
 19559      00000000 
 19560 022e 0600     		.value	0x6
 19561 0230 F3       		.byte	0xf3
 19562 0231 01       		.uleb128 0x1
 19563 0232 55       		.byte	0x55
 19564 0233 23       		.byte	0x23
 19565 0234 48       		.uleb128 0x48
 19566 0235 9F       		.byte	0x9f
 19567 0236 00000000 		.quad	0
 19567      00000000 
 19568 023e 00000000 		.quad	0
 19568      00000000 
 19569              	.LLST19:
 19570 0246 00000000 		.quad	.LVL0
 19570      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 472


 19571 024e 00000000 		.quad	.LVL1-1
 19571      00000000 
 19572 0256 1F00     		.value	0x1f
 19573 0258 75       		.byte	0x75
 19574 0259 08       		.sleb128 8
 19575 025a F6       		.byte	0xf6
 19576 025b 08       		.byte	0x8
 19577 025c 29       		.uleb128 0x29
 19578 025d 75       		.byte	0x75
 19579 025e 00       		.sleb128 0
 19580 025f 06       		.byte	0x6
 19581 0260 F6       		.byte	0xf6
 19582 0261 08       		.byte	0x8
 19583 0262 29       		.uleb128 0x29
 19584 0263 1E       		.byte	0x1e
 19585 0264 75       		.byte	0x75
 19586 0265 18       		.sleb128 24
 19587 0266 F6       		.byte	0xf6
 19588 0267 08       		.byte	0x8
 19589 0268 29       		.uleb128 0x29
 19590 0269 22       		.byte	0x22
 19591 026a 75       		.byte	0x75
 19592 026b 28       		.sleb128 40
 19593 026c F6       		.byte	0xf6
 19594 026d 08       		.byte	0x8
 19595 026e 29       		.uleb128 0x29
 19596 026f 1E       		.byte	0x1e
 19597 0270 75       		.byte	0x75
 19598 0271 38       		.sleb128 56
 19599 0272 F6       		.byte	0xf6
 19600 0273 08       		.byte	0x8
 19601 0274 29       		.uleb128 0x29
 19602 0275 22       		.byte	0x22
 19603 0276 9F       		.byte	0x9f
 19604 0277 00000000 		.quad	0
 19604      00000000 
 19605 027f 00000000 		.quad	0
 19605      00000000 
 19606              	.LLST20:
 19607 0287 00000000 		.quad	.LVL2
 19607      00000000 
 19608 028f 00000000 		.quad	.LVL3
 19608      00000000 
 19609 0297 0100     		.value	0x1
 19610 0299 55       		.byte	0x55
 19611 029a 00000000 		.quad	.LVL3
 19611      00000000 
 19612 02a2 00000000 		.quad	.LFE2369
 19612      00000000 
 19613 02aa 0400     		.value	0x4
 19614 02ac F3       		.byte	0xf3
 19615 02ad 01       		.uleb128 0x1
 19616 02ae 55       		.byte	0x55
 19617 02af 9F       		.byte	0x9f
 19618 02b0 00000000 		.quad	0
 19618      00000000 
 19619 02b8 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 473


 19619      00000000 
 19620              	.LLST21:
 19621 02c0 00000000 		.quad	.LVL3
 19621      00000000 
 19622 02c8 00000000 		.quad	.LVL4-1
 19622      00000000 
 19623 02d0 0100     		.value	0x1
 19624 02d2 55       		.byte	0x55
 19625 02d3 00000000 		.quad	0
 19625      00000000 
 19626 02db 00000000 		.quad	0
 19626      00000000 
 19627              	.LLST22:
 19628 02e3 00000000 		.quad	.LVL3
 19628      00000000 
 19629 02eb 00000000 		.quad	.LVL4-1
 19629      00000000 
 19630 02f3 0200     		.value	0x2
 19631 02f5 75       		.byte	0x75
 19632 02f6 20       		.sleb128 32
 19633 02f7 00000000 		.quad	0
 19633      00000000 
 19634 02ff 00000000 		.quad	0
 19634      00000000 
 19635              	.LLST23:
 19636 0307 00000000 		.quad	.LVL5
 19636      00000000 
 19637 030f 00000000 		.quad	.LVL6-1
 19637      00000000 
 19638 0317 0200     		.value	0x2
 19639 0319 75       		.byte	0x75
 19640 031a 00       		.sleb128 0
 19641 031b 00000000 		.quad	.LVL6-1
 19641      00000000 
 19642 0323 00000000 		.quad	.LVL31
 19642      00000000 
 19643 032b 0200     		.value	0x2
 19644 032d 7C       		.byte	0x7c
 19645 032e 00       		.sleb128 0
 19646 032f 00000000 		.quad	.LVL31
 19646      00000000 
 19647 0337 00000000 		.quad	.LVL33
 19647      00000000 
 19648 033f 0300     		.value	0x3
 19649 0341 F3       		.byte	0xf3
 19650 0342 01       		.uleb128 0x1
 19651 0343 55       		.byte	0x55
 19652 0344 00000000 		.quad	.LVL33
 19652      00000000 
 19653 034c 00000000 		.quad	.LFE2219
 19653      00000000 
 19654 0354 0200     		.value	0x2
 19655 0356 7C       		.byte	0x7c
 19656 0357 00       		.sleb128 0
 19657 0358 00000000 		.quad	0
 19657      00000000 
 19658 0360 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 474


 19658      00000000 
 19659              	.LLST24:
 19660 0368 00000000 		.quad	.LVL5
 19660      00000000 
 19661 0370 00000000 		.quad	.LVL6-1
 19661      00000000 
 19662 0378 0200     		.value	0x2
 19663 037a 74       		.byte	0x74
 19664 037b 00       		.sleb128 0
 19665 037c 00000000 		.quad	.LVL6-1
 19665      00000000 
 19666 0384 00000000 		.quad	.LVL16
 19666      00000000 
 19667 038c 0200     		.value	0x2
 19668 038e 73       		.byte	0x73
 19669 038f 00       		.sleb128 0
 19670 0390 00000000 		.quad	.LVL16
 19670      00000000 
 19671 0398 00000000 		.quad	.LFE2219
 19671      00000000 
 19672 03a0 0300     		.value	0x3
 19673 03a2 F3       		.byte	0xf3
 19674 03a3 01       		.uleb128 0x1
 19675 03a4 54       		.byte	0x54
 19676 03a5 00000000 		.quad	0
 19676      00000000 
 19677 03ad 00000000 		.quad	0
 19677      00000000 
 19678              	.LLST25:
 19679 03b5 00000000 		.quad	.LVL11
 19679      00000000 
 19680 03bd 00000000 		.quad	.LVL32
 19680      00000000 
 19681 03c5 0100     		.value	0x1
 19682 03c7 5D       		.byte	0x5d
 19683 03c8 00000000 		.quad	.LVL33
 19683      00000000 
 19684 03d0 00000000 		.quad	.LFE2219
 19684      00000000 
 19685 03d8 0100     		.value	0x1
 19686 03da 5D       		.byte	0x5d
 19687 03db 00000000 		.quad	0
 19687      00000000 
 19688 03e3 00000000 		.quad	0
 19688      00000000 
 19689              	.LLST26:
 19690 03eb 00000000 		.quad	.LVL12
 19690      00000000 
 19691 03f3 00000000 		.quad	.LVL23
 19691      00000000 
 19692 03fb 0300     		.value	0x3
 19693 03fd 56       		.byte	0x56
 19694 03fe 93       		.byte	0x93
 19695 03ff 08       		.uleb128 0x8
 19696 0400 00000000 		.quad	0
 19696      00000000 
 19697 0408 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 475


 19697      00000000 
 19698              	.LLST27:
 19699 0410 00000000 		.quad	.LVL7
 19699      00000000 
 19700 0418 00000000 		.quad	.LVL16
 19700      00000000 
 19701 0420 0100     		.value	0x1
 19702 0422 53       		.byte	0x53
 19703 0423 00000000 		.quad	.LVL16
 19703      00000000 
 19704 042b 00000000 		.quad	.LFE2219
 19704      00000000 
 19705 0433 0400     		.value	0x4
 19706 0435 F3       		.byte	0xf3
 19707 0436 01       		.uleb128 0x1
 19708 0437 54       		.byte	0x54
 19709 0438 9F       		.byte	0x9f
 19710 0439 00000000 		.quad	0
 19710      00000000 
 19711 0441 00000000 		.quad	0
 19711      00000000 
 19712              	.LLST29:
 19713 0449 00000000 		.quad	.LVL7
 19713      00000000 
 19714 0451 00000000 		.quad	.LVL16
 19714      00000000 
 19715 0459 0300     		.value	0x3
 19716 045b 73       		.byte	0x73
 19717 045c 10       		.sleb128 16
 19718 045d 9F       		.byte	0x9f
 19719 045e 00000000 		.quad	.LVL16
 19719      00000000 
 19720 0466 00000000 		.quad	.LFE2219
 19720      00000000 
 19721 046e 0600     		.value	0x6
 19722 0470 F3       		.byte	0xf3
 19723 0471 01       		.uleb128 0x1
 19724 0472 54       		.byte	0x54
 19725 0473 23       		.byte	0x23
 19726 0474 10       		.uleb128 0x10
 19727 0475 9F       		.byte	0x9f
 19728 0476 00000000 		.quad	0
 19728      00000000 
 19729 047e 00000000 		.quad	0
 19729      00000000 
 19730              	.LLST34:
 19731 0486 00000000 		.quad	.LVL12
 19731      00000000 
 19732 048e 00000000 		.quad	.LVL16
 19732      00000000 
 19733 0496 0100     		.value	0x1
 19734 0498 53       		.byte	0x53
 19735 0499 00000000 		.quad	.LVL16
 19735      00000000 
 19736 04a1 00000000 		.quad	.LFE2219
 19736      00000000 
 19737 04a9 0400     		.value	0x4
GAS LISTING /tmp/cceISX6N.s 			page 476


 19738 04ab F3       		.byte	0xf3
 19739 04ac 01       		.uleb128 0x1
 19740 04ad 54       		.byte	0x54
 19741 04ae 9F       		.byte	0x9f
 19742 04af 00000000 		.quad	0
 19742      00000000 
 19743 04b7 00000000 		.quad	0
 19743      00000000 
 19744              	.LLST36:
 19745 04bf 00000000 		.quad	.LVL12
 19745      00000000 
 19746 04c7 00000000 		.quad	.LVL16
 19746      00000000 
 19747 04cf 0300     		.value	0x3
 19748 04d1 73       		.byte	0x73
 19749 04d2 10       		.sleb128 16
 19750 04d3 9F       		.byte	0x9f
 19751 04d4 00000000 		.quad	.LVL16
 19751      00000000 
 19752 04dc 00000000 		.quad	.LFE2219
 19752      00000000 
 19753 04e4 0600     		.value	0x6
 19754 04e6 F3       		.byte	0xf3
 19755 04e7 01       		.uleb128 0x1
 19756 04e8 54       		.byte	0x54
 19757 04e9 23       		.byte	0x23
 19758 04ea 10       		.uleb128 0x10
 19759 04eb 9F       		.byte	0x9f
 19760 04ec 00000000 		.quad	0
 19760      00000000 
 19761 04f4 00000000 		.quad	0
 19761      00000000 
 19762              	.LLST41:
 19763 04fc 00000000 		.quad	.LVL14
 19763      00000000 
 19764 0504 00000000 		.quad	.LVL31
 19764      00000000 
 19765 050c 0100     		.value	0x1
 19766 050e 5C       		.byte	0x5c
 19767 050f 00000000 		.quad	.LVL31
 19767      00000000 
 19768 0517 00000000 		.quad	.LVL33
 19768      00000000 
 19769 051f 0400     		.value	0x4
 19770 0521 F3       		.byte	0xf3
 19771 0522 01       		.uleb128 0x1
 19772 0523 55       		.byte	0x55
 19773 0524 9F       		.byte	0x9f
 19774 0525 00000000 		.quad	.LVL33
 19774      00000000 
 19775 052d 00000000 		.quad	.LFE2219
 19775      00000000 
 19776 0535 0100     		.value	0x1
 19777 0537 5C       		.byte	0x5c
 19778 0538 00000000 		.quad	0
 19778      00000000 
 19779 0540 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 477


 19779      00000000 
 19780              	.LLST45:
 19781 0548 00000000 		.quad	.LVL16
 19781      00000000 
 19782 0550 00000000 		.quad	.LVL17-1
 19782      00000000 
 19783 0558 0100     		.value	0x1
 19784 055a 50       		.byte	0x50
 19785 055b 00000000 		.quad	.LVL17-1
 19785      00000000 
 19786 0563 00000000 		.quad	.LVL20
 19786      00000000 
 19787 056b 0100     		.value	0x1
 19788 056d 53       		.byte	0x53
 19789 056e 00000000 		.quad	0
 19789      00000000 
 19790 0576 00000000 		.quad	0
 19790      00000000 
 19791              	.LLST46:
 19792 057e 00000000 		.quad	.LVL17
 19792      00000000 
 19793 0586 00000000 		.quad	.LVL18
 19793      00000000 
 19794 058e 1300     		.value	0x13
 19795 0590 76       		.byte	0x76
 19796 0591 00       		.sleb128 0
 19797 0592 F7       		.byte	0xf7
 19798 0593 30       		.uleb128 0x30
 19799 0594 F7       		.byte	0xf7
 19800 0595 29       		.uleb128 0x29
 19801 0596 F4       		.byte	0xf4
 19802 0597 29       		.uleb128 0x29
 19803 0598 08       		.byte	0x8
 19804 0599 00000000 		.long	0
 19805 059d 80842E41 		.long	0x412e8480
 19806 05a1 1B       		.byte	0x1b
 19807 05a2 9F       		.byte	0x9f
 19808 05a3 00000000 		.quad	.LVL18
 19808      00000000 
 19809 05ab 00000000 		.quad	.LVL19-1
 19809      00000000 
 19810 05b3 0100     		.value	0x1
 19811 05b5 61       		.byte	0x61
 19812 05b6 00000000 		.quad	.LVL19-1
 19812      00000000 
 19813 05be 00000000 		.quad	.LVL23
 19813      00000000 
 19814 05c6 1300     		.value	0x13
 19815 05c8 76       		.byte	0x76
 19816 05c9 00       		.sleb128 0
 19817 05ca F7       		.byte	0xf7
 19818 05cb 30       		.uleb128 0x30
 19819 05cc F7       		.byte	0xf7
 19820 05cd 29       		.uleb128 0x29
 19821 05ce F4       		.byte	0xf4
 19822 05cf 29       		.uleb128 0x29
 19823 05d0 08       		.byte	0x8
GAS LISTING /tmp/cceISX6N.s 			page 478


 19824 05d1 00000000 		.long	0
 19825 05d5 80842E41 		.long	0x412e8480
 19826 05d9 1B       		.byte	0x1b
 19827 05da 9F       		.byte	0x9f
 19828 05db 00000000 		.quad	0
 19828      00000000 
 19829 05e3 00000000 		.quad	0
 19829      00000000 
 19830              	.LLST47:
 19831 05eb 00000000 		.quad	.LVL20
 19831      00000000 
 19832 05f3 00000000 		.quad	.LVL21-1
 19832      00000000 
 19833 05fb 0100     		.value	0x1
 19834 05fd 50       		.byte	0x50
 19835 05fe 00000000 		.quad	.LVL21-1
 19835      00000000 
 19836 0606 00000000 		.quad	.LVL25
 19836      00000000 
 19837 060e 0100     		.value	0x1
 19838 0610 53       		.byte	0x53
 19839 0611 00000000 		.quad	0
 19839      00000000 
 19840 0619 00000000 		.quad	0
 19840      00000000 
 19841              	.LLST48:
 19842 0621 00000000 		.quad	.LVL23
 19842      00000000 
 19843 0629 00000000 		.quad	.LVL24
 19843      00000000 
 19844 0631 0100     		.value	0x1
 19845 0633 50       		.byte	0x50
 19846 0634 00000000 		.quad	.LVL24
 19846      00000000 
 19847 063c 00000000 		.quad	.LVL30
 19847      00000000 
 19848 0644 0100     		.value	0x1
 19849 0646 56       		.byte	0x56
 19850 0647 00000000 		.quad	.LVL33
 19850      00000000 
 19851 064f 00000000 		.quad	.LFE2219
 19851      00000000 
 19852 0657 0100     		.value	0x1
 19853 0659 56       		.byte	0x56
 19854 065a 00000000 		.quad	0
 19854      00000000 
 19855 0662 00000000 		.quad	0
 19855      00000000 
 19856              	.LLST50:
 19857 066a 00000000 		.quad	.LVL25
 19857      00000000 
 19858 0672 00000000 		.quad	.LVL27
 19858      00000000 
 19859 067a 0600     		.value	0x6
 19860 067c 76       		.byte	0x76
 19861 067d 00       		.sleb128 0
 19862 067e 70       		.byte	0x70
GAS LISTING /tmp/cceISX6N.s 			page 479


 19863 067f 00       		.sleb128 0
 19864 0680 22       		.byte	0x22
 19865 0681 9F       		.byte	0x9f
 19866 0682 00000000 		.quad	.LVL33
 19866      00000000 
 19867 068a 00000000 		.quad	.LVL34-1
 19867      00000000 
 19868 0692 0600     		.value	0x6
 19869 0694 76       		.byte	0x76
 19870 0695 00       		.sleb128 0
 19871 0696 70       		.byte	0x70
 19872 0697 00       		.sleb128 0
 19873 0698 22       		.byte	0x22
 19874 0699 9F       		.byte	0x9f
 19875 069a 00000000 		.quad	.LVL36
 19875      00000000 
 19876 06a2 00000000 		.quad	.LVL37-1
 19876      00000000 
 19877 06aa 0600     		.value	0x6
 19878 06ac 76       		.byte	0x76
 19879 06ad 00       		.sleb128 0
 19880 06ae 70       		.byte	0x70
 19881 06af 00       		.sleb128 0
 19882 06b0 22       		.byte	0x22
 19883 06b1 9F       		.byte	0x9f
 19884 06b2 00000000 		.quad	0
 19884      00000000 
 19885 06ba 00000000 		.quad	0
 19885      00000000 
 19886              	.LLST51:
 19887 06c2 00000000 		.quad	.LVL25
 19887      00000000 
 19888 06ca 00000000 		.quad	.LVL29
 19888      00000000 
 19889 06d2 0100     		.value	0x1
 19890 06d4 53       		.byte	0x53
 19891 06d5 00000000 		.quad	.LVL33
 19891      00000000 
 19892 06dd 00000000 		.quad	.LFE2219
 19892      00000000 
 19893 06e5 0100     		.value	0x1
 19894 06e7 53       		.byte	0x53
 19895 06e8 00000000 		.quad	0
 19895      00000000 
 19896 06f0 00000000 		.quad	0
 19896      00000000 
 19897              	.LLST52:
 19898 06f8 00000000 		.quad	.LVL26
 19898      00000000 
 19899 0700 00000000 		.quad	.LVL36
 19899      00000000 
 19900 0708 0200     		.value	0x2
 19901 070a 3A       		.byte	0x3a
 19902 070b 9F       		.byte	0x9f
 19903 070c 00000000 		.quad	0
 19903      00000000 
 19904 0714 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 480


 19904      00000000 
 19905              	.LLST53:
 19906 071c 00000000 		.quad	.LVL26
 19906      00000000 
 19907 0724 00000000 		.quad	.LVL29
 19907      00000000 
 19908 072c 0100     		.value	0x1
 19909 072e 53       		.byte	0x53
 19910 072f 00000000 		.quad	.LVL33
 19910      00000000 
 19911 0737 00000000 		.quad	.LVL36
 19911      00000000 
 19912 073f 0100     		.value	0x1
 19913 0741 53       		.byte	0x53
 19914 0742 00000000 		.quad	0
 19914      00000000 
 19915 074a 00000000 		.quad	0
 19915      00000000 
 19916              	.LLST54:
 19917 0752 00000000 		.quad	.LVL28
 19917      00000000 
 19918 075a 00000000 		.quad	.LVL33-1
 19918      00000000 
 19919 0762 0100     		.value	0x1
 19920 0764 50       		.byte	0x50
 19921 0765 00000000 		.quad	0
 19921      00000000 
 19922 076d 00000000 		.quad	0
 19922      00000000 
 19923              	.LLST55:
 19924 0775 00000000 		.quad	.LVL38
 19924      00000000 
 19925 077d 00000000 		.quad	.LVL40
 19925      00000000 
 19926 0785 0100     		.value	0x1
 19927 0787 55       		.byte	0x55
 19928 0788 00000000 		.quad	.LVL40
 19928      00000000 
 19929 0790 00000000 		.quad	.LFE2108
 19929      00000000 
 19930 0798 0400     		.value	0x4
 19931 079a F3       		.byte	0xf3
 19932 079b 01       		.uleb128 0x1
 19933 079c 55       		.byte	0x55
 19934 079d 9F       		.byte	0x9f
 19935 079e 00000000 		.quad	0
 19935      00000000 
 19936 07a6 00000000 		.quad	0
 19936      00000000 
 19937              	.LLST56:
 19938 07ae 00000000 		.quad	.LVL38
 19938      00000000 
 19939 07b6 00000000 		.quad	.LVL39
 19939      00000000 
 19940 07be 0100     		.value	0x1
 19941 07c0 54       		.byte	0x54
 19942 07c1 00000000 		.quad	.LVL39
GAS LISTING /tmp/cceISX6N.s 			page 481


 19942      00000000 
 19943 07c9 00000000 		.quad	.LFE2108
 19943      00000000 
 19944 07d1 0400     		.value	0x4
 19945 07d3 F3       		.byte	0xf3
 19946 07d4 01       		.uleb128 0x1
 19947 07d5 54       		.byte	0x54
 19948 07d6 9F       		.byte	0x9f
 19949 07d7 00000000 		.quad	0
 19949      00000000 
 19950 07df 00000000 		.quad	0
 19950      00000000 
 19951              	.LLST57:
 19952 07e7 00000000 		.quad	.LVL43
 19952      00000000 
 19953 07ef 00000000 		.quad	.LVL44-1
 19953      00000000 
 19954 07f7 0300     		.value	0x3
 19955 07f9 50       		.byte	0x50
 19956 07fa 93       		.byte	0x93
 19957 07fb 08       		.uleb128 0x8
 19958 07fc 00000000 		.quad	.LVL44-1
 19958      00000000 
 19959 0804 00000000 		.quad	.LFE2108
 19959      00000000 
 19960 080c 0600     		.value	0x6
 19961 080e 91       		.byte	0x91
 19962 080f D87E     		.sleb128 -168
 19963 0811 9F       		.byte	0x9f
 19964 0812 93       		.byte	0x93
 19965 0813 08       		.uleb128 0x8
 19966 0814 00000000 		.quad	0
 19966      00000000 
 19967 081c 00000000 		.quad	0
 19967      00000000 
 19968              	.LLST58:
 19969 0824 00000000 		.quad	.LVL43
 19969      00000000 
 19970 082c 00000000 		.quad	.LVL44-1
 19970      00000000 
 19971 0834 1100     		.value	0x11
 19972 0836 50       		.byte	0x50
 19973 0837 93       		.byte	0x93
 19974 0838 08       		.uleb128 0x8
 19975 0839 9E       		.byte	0x9e
 19976 083a 08       		.uleb128 0x8
 19977 083b 00000000 		.long	0
 19978 083f 00000040 		.long	0x40000000
 19979 0843 93       		.byte	0x93
 19980 0844 08       		.uleb128 0x8
 19981 0845 93       		.byte	0x93
 19982 0846 08       		.uleb128 0x8
 19983 0847 00000000 		.quad	.LVL44-1
 19983      00000000 
 19984 084f 00000000 		.quad	.LFE2108
 19984      00000000 
 19985 0857 1400     		.value	0x14
GAS LISTING /tmp/cceISX6N.s 			page 482


 19986 0859 91       		.byte	0x91
 19987 085a D87E     		.sleb128 -168
 19988 085c 9F       		.byte	0x9f
 19989 085d 93       		.byte	0x93
 19990 085e 08       		.uleb128 0x8
 19991 085f 9E       		.byte	0x9e
 19992 0860 08       		.uleb128 0x8
 19993 0861 00000000 		.long	0
 19994 0865 00000040 		.long	0x40000000
 19995 0869 93       		.byte	0x93
 19996 086a 08       		.uleb128 0x8
 19997 086b 93       		.byte	0x93
 19998 086c 08       		.uleb128 0x8
 19999 086d 00000000 		.quad	0
 19999      00000000 
 20000 0875 00000000 		.quad	0
 20000      00000000 
 20001              	.LLST59:
 20002 087d 00000000 		.quad	.LVL43
 20002      00000000 
 20003 0885 00000000 		.quad	.LVL44-1
 20003      00000000 
 20004 088d 1F00     		.value	0x1f
 20005 088f 50       		.byte	0x50
 20006 0890 93       		.byte	0x93
 20007 0891 08       		.uleb128 0x8
 20008 0892 9E       		.byte	0x9e
 20009 0893 08       		.uleb128 0x8
 20010 0894 00000000 		.long	0
 20011 0898 00000040 		.long	0x40000000
 20012 089c 93       		.byte	0x93
 20013 089d 08       		.uleb128 0x8
 20014 089e 93       		.byte	0x93
 20015 089f 08       		.uleb128 0x8
 20016 08a0 9E       		.byte	0x9e
 20017 08a1 08       		.uleb128 0x8
 20018 08a2 00000000 		.long	0
 20019 08a6 00000840 		.long	0x40080000
 20020 08aa 93       		.byte	0x93
 20021 08ab 08       		.uleb128 0x8
 20022 08ac 93       		.byte	0x93
 20023 08ad 08       		.uleb128 0x8
 20024 08ae 00000000 		.quad	.LVL44-1
 20024      00000000 
 20025 08b6 00000000 		.quad	.LFE2108
 20025      00000000 
 20026 08be 2200     		.value	0x22
 20027 08c0 91       		.byte	0x91
 20028 08c1 D87E     		.sleb128 -168
 20029 08c3 9F       		.byte	0x9f
 20030 08c4 93       		.byte	0x93
 20031 08c5 08       		.uleb128 0x8
 20032 08c6 9E       		.byte	0x9e
 20033 08c7 08       		.uleb128 0x8
 20034 08c8 00000000 		.long	0
 20035 08cc 00000040 		.long	0x40000000
 20036 08d0 93       		.byte	0x93
GAS LISTING /tmp/cceISX6N.s 			page 483


 20037 08d1 08       		.uleb128 0x8
 20038 08d2 93       		.byte	0x93
 20039 08d3 08       		.uleb128 0x8
 20040 08d4 9E       		.byte	0x9e
 20041 08d5 08       		.uleb128 0x8
 20042 08d6 00000000 		.long	0
 20043 08da 00000840 		.long	0x40080000
 20044 08de 93       		.byte	0x93
 20045 08df 08       		.uleb128 0x8
 20046 08e0 93       		.byte	0x93
 20047 08e1 08       		.uleb128 0x8
 20048 08e2 00000000 		.quad	0
 20048      00000000 
 20049 08ea 00000000 		.quad	0
 20049      00000000 
 20050              	.LLST60:
 20051 08f2 00000000 		.quad	.LVL43
 20051      00000000 
 20052 08fa 00000000 		.quad	.LVL44-1
 20052      00000000 
 20053 0902 1F00     		.value	0x1f
 20054 0904 50       		.byte	0x50
 20055 0905 93       		.byte	0x93
 20056 0906 08       		.uleb128 0x8
 20057 0907 9E       		.byte	0x9e
 20058 0908 08       		.uleb128 0x8
 20059 0909 00000000 		.long	0
 20060 090d 00000040 		.long	0x40000000
 20061 0911 93       		.byte	0x93
 20062 0912 08       		.uleb128 0x8
 20063 0913 93       		.byte	0x93
 20064 0914 08       		.uleb128 0x8
 20065 0915 9E       		.byte	0x9e
 20066 0916 08       		.uleb128 0x8
 20067 0917 00000000 		.long	0
 20068 091b 00000840 		.long	0x40080000
 20069 091f 93       		.byte	0x93
 20070 0920 08       		.uleb128 0x8
 20071 0921 93       		.byte	0x93
 20072 0922 18       		.uleb128 0x18
 20073 0923 00000000 		.quad	.LVL44-1
 20073      00000000 
 20074 092b 00000000 		.quad	.LFE2108
 20074      00000000 
 20075 0933 2200     		.value	0x22
 20076 0935 91       		.byte	0x91
 20077 0936 D87E     		.sleb128 -168
 20078 0938 9F       		.byte	0x9f
 20079 0939 93       		.byte	0x93
 20080 093a 08       		.uleb128 0x8
 20081 093b 9E       		.byte	0x9e
 20082 093c 08       		.uleb128 0x8
 20083 093d 00000000 		.long	0
 20084 0941 00000040 		.long	0x40000000
 20085 0945 93       		.byte	0x93
 20086 0946 08       		.uleb128 0x8
 20087 0947 93       		.byte	0x93
GAS LISTING /tmp/cceISX6N.s 			page 484


 20088 0948 08       		.uleb128 0x8
 20089 0949 9E       		.byte	0x9e
 20090 094a 08       		.uleb128 0x8
 20091 094b 00000000 		.long	0
 20092 094f 00000840 		.long	0x40080000
 20093 0953 93       		.byte	0x93
 20094 0954 08       		.uleb128 0x8
 20095 0955 93       		.byte	0x93
 20096 0956 18       		.uleb128 0x18
 20097 0957 00000000 		.quad	0
 20097      00000000 
 20098 095f 00000000 		.quad	0
 20098      00000000 
 20099              	.LLST61:
 20100 0967 00000000 		.quad	.LVL43
 20100      00000000 
 20101 096f 00000000 		.quad	.LVL44-1
 20101      00000000 
 20102 0977 1F00     		.value	0x1f
 20103 0979 50       		.byte	0x50
 20104 097a 93       		.byte	0x93
 20105 097b 08       		.uleb128 0x8
 20106 097c 9E       		.byte	0x9e
 20107 097d 08       		.uleb128 0x8
 20108 097e 00000000 		.long	0
 20109 0982 00000040 		.long	0x40000000
 20110 0986 93       		.byte	0x93
 20111 0987 08       		.uleb128 0x8
 20112 0988 93       		.byte	0x93
 20113 0989 08       		.uleb128 0x8
 20114 098a 9E       		.byte	0x9e
 20115 098b 08       		.uleb128 0x8
 20116 098c 00000000 		.long	0
 20117 0990 00000840 		.long	0x40080000
 20118 0994 93       		.byte	0x93
 20119 0995 08       		.uleb128 0x8
 20120 0996 93       		.byte	0x93
 20121 0997 28       		.uleb128 0x28
 20122 0998 00000000 		.quad	.LVL44-1
 20122      00000000 
 20123 09a0 00000000 		.quad	.LFE2108
 20123      00000000 
 20124 09a8 2200     		.value	0x22
 20125 09aa 91       		.byte	0x91
 20126 09ab D87E     		.sleb128 -168
 20127 09ad 9F       		.byte	0x9f
 20128 09ae 93       		.byte	0x93
 20129 09af 08       		.uleb128 0x8
 20130 09b0 9E       		.byte	0x9e
 20131 09b1 08       		.uleb128 0x8
 20132 09b2 00000000 		.long	0
 20133 09b6 00000040 		.long	0x40000000
 20134 09ba 93       		.byte	0x93
 20135 09bb 08       		.uleb128 0x8
 20136 09bc 93       		.byte	0x93
 20137 09bd 08       		.uleb128 0x8
 20138 09be 9E       		.byte	0x9e
GAS LISTING /tmp/cceISX6N.s 			page 485


 20139 09bf 08       		.uleb128 0x8
 20140 09c0 00000000 		.long	0
 20141 09c4 00000840 		.long	0x40080000
 20142 09c8 93       		.byte	0x93
 20143 09c9 08       		.uleb128 0x8
 20144 09ca 93       		.byte	0x93
 20145 09cb 28       		.uleb128 0x28
 20146 09cc 00000000 		.quad	0
 20146      00000000 
 20147 09d4 00000000 		.quad	0
 20147      00000000 
 20148              	.LLST62:
 20149 09dc 00000000 		.quad	.LVL41
 20149      00000000 
 20150 09e4 00000000 		.quad	.LVL42-1
 20150      00000000 
 20151 09ec 0100     		.value	0x1
 20152 09ee 50       		.byte	0x50
 20153 09ef 00000000 		.quad	0
 20153      00000000 
 20154 09f7 00000000 		.quad	0
 20154      00000000 
 20155              	.LLST64:
 20156 09ff 00000000 		.quad	.LVL43
 20156      00000000 
 20157 0a07 00000000 		.quad	.LVL94
 20157      00000000 
 20158 0a0f 0100     		.value	0x1
 20159 0a11 56       		.byte	0x56
 20160 0a12 00000000 		.quad	.LVL94
 20160      00000000 
 20161 0a1a 00000000 		.quad	.LVL97
 20161      00000000 
 20162 0a22 0400     		.value	0x4
 20163 0a24 91       		.byte	0x91
 20164 0a25 807F     		.sleb128 -128
 20165 0a27 9F       		.byte	0x9f
 20166 0a28 00000000 		.quad	.LVL97
 20166      00000000 
 20167 0a30 00000000 		.quad	.LFE2108
 20167      00000000 
 20168 0a38 0100     		.value	0x1
 20169 0a3a 56       		.byte	0x56
 20170 0a3b 00000000 		.quad	0
 20170      00000000 
 20171 0a43 00000000 		.quad	0
 20171      00000000 
 20172              	.LLST65:
 20173 0a4b 00000000 		.quad	.LVL44
 20173      00000000 
 20174 0a53 00000000 		.quad	.LVL45-1
 20174      00000000 
 20175 0a5b 0100     		.value	0x1
 20176 0a5d 50       		.byte	0x50
 20177 0a5e 00000000 		.quad	0
 20177      00000000 
 20178 0a66 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 486


 20178      00000000 
 20179              	.LLST66:
 20180 0a6e 00000000 		.quad	.LVL54
 20180      00000000 
 20181 0a76 00000000 		.quad	.LVL58
 20181      00000000 
 20182 0a7e 0400     		.value	0x4
 20183 0a80 91       		.byte	0x91
 20184 0a81 E07E     		.sleb128 -160
 20185 0a83 9F       		.byte	0x9f
 20186 0a84 00000000 		.quad	.LVL58
 20186      00000000 
 20187 0a8c 00000000 		.quad	.LVL59-1
 20187      00000000 
 20188 0a94 0100     		.value	0x1
 20189 0a96 54       		.byte	0x54
 20190 0a97 00000000 		.quad	.LVL59-1
 20190      00000000 
 20191 0a9f 00000000 		.quad	.LVL62
 20191      00000000 
 20192 0aa7 0400     		.value	0x4
 20193 0aa9 91       		.byte	0x91
 20194 0aaa E07E     		.sleb128 -160
 20195 0aac 9F       		.byte	0x9f
 20196 0aad 00000000 		.quad	.LVL62
 20196      00000000 
 20197 0ab5 00000000 		.quad	.LVL63-1
 20197      00000000 
 20198 0abd 0100     		.value	0x1
 20199 0abf 55       		.byte	0x55
 20200 0ac0 00000000 		.quad	.LVL63-1
 20200      00000000 
 20201 0ac8 00000000 		.quad	.LFE2108
 20201      00000000 
 20202 0ad0 0400     		.value	0x4
 20203 0ad2 91       		.byte	0x91
 20204 0ad3 E07E     		.sleb128 -160
 20205 0ad5 9F       		.byte	0x9f
 20206 0ad6 00000000 		.quad	0
 20206      00000000 
 20207 0ade 00000000 		.quad	0
 20207      00000000 
 20208              	.LLST67:
 20209 0ae6 00000000 		.quad	.LVL59
 20209      00000000 
 20210 0aee 00000000 		.quad	.LVL90
 20210      00000000 
 20211 0af6 0400     		.value	0x4
 20212 0af8 91       		.byte	0x91
 20213 0af9 D07E     		.sleb128 -176
 20214 0afb 9F       		.byte	0x9f
 20215 0afc 00000000 		.quad	.LVL90
 20215      00000000 
 20216 0b04 00000000 		.quad	.LVL91-1
 20216      00000000 
 20217 0b0c 0100     		.value	0x1
 20218 0b0e 54       		.byte	0x54
GAS LISTING /tmp/cceISX6N.s 			page 487


 20219 0b0f 00000000 		.quad	.LVL91-1
 20219      00000000 
 20220 0b17 00000000 		.quad	.LVL97
 20220      00000000 
 20221 0b1f 0400     		.value	0x4
 20222 0b21 91       		.byte	0x91
 20223 0b22 D07E     		.sleb128 -176
 20224 0b24 9F       		.byte	0x9f
 20225 0b25 00000000 		.quad	.LVL100
 20225      00000000 
 20226 0b2d 00000000 		.quad	.LVL102
 20226      00000000 
 20227 0b35 0400     		.value	0x4
 20228 0b37 91       		.byte	0x91
 20229 0b38 D07E     		.sleb128 -176
 20230 0b3a 9F       		.byte	0x9f
 20231 0b3b 00000000 		.quad	.LVL102
 20231      00000000 
 20232 0b43 00000000 		.quad	.LVL103-1
 20232      00000000 
 20233 0b4b 0100     		.value	0x1
 20234 0b4d 54       		.byte	0x54
 20235 0b4e 00000000 		.quad	.LVL103-1
 20235      00000000 
 20236 0b56 00000000 		.quad	.LFE2108
 20236      00000000 
 20237 0b5e 0400     		.value	0x4
 20238 0b60 91       		.byte	0x91
 20239 0b61 D07E     		.sleb128 -176
 20240 0b63 9F       		.byte	0x9f
 20241 0b64 00000000 		.quad	0
 20241      00000000 
 20242 0b6c 00000000 		.quad	0
 20242      00000000 
 20243              	.LLST68:
 20244 0b74 00000000 		.quad	.LVL63
 20244      00000000 
 20245 0b7c 00000000 		.quad	.LVL97
 20245      00000000 
 20246 0b84 0400     		.value	0x4
 20247 0b86 91       		.byte	0x91
 20248 0b87 E07E     		.sleb128 -160
 20249 0b89 9F       		.byte	0x9f
 20250 0b8a 00000000 		.quad	.LVL100
 20250      00000000 
 20251 0b92 00000000 		.quad	.LFE2108
 20251      00000000 
 20252 0b9a 0400     		.value	0x4
 20253 0b9c 91       		.byte	0x91
 20254 0b9d E07E     		.sleb128 -160
 20255 0b9f 9F       		.byte	0x9f
 20256 0ba0 00000000 		.quad	0
 20256      00000000 
 20257 0ba8 00000000 		.quad	0
 20257      00000000 
 20258              	.LLST69:
 20259 0bb0 00000000 		.quad	.LVL75
GAS LISTING /tmp/cceISX6N.s 			page 488


 20259      00000000 
 20260 0bb8 00000000 		.quad	.LVL96
 20260      00000000 
 20261 0bc0 0100     		.value	0x1
 20262 0bc2 5D       		.byte	0x5d
 20263 0bc3 00000000 		.quad	.LVL100
 20263      00000000 
 20264 0bcb 00000000 		.quad	.LFE2108
 20264      00000000 
 20265 0bd3 0100     		.value	0x1
 20266 0bd5 5D       		.byte	0x5d
 20267 0bd6 00000000 		.quad	0
 20267      00000000 
 20268 0bde 00000000 		.quad	0
 20268      00000000 
 20269              	.LLST70:
 20270 0be6 00000000 		.quad	.LVL65
 20270      00000000 
 20271 0bee 00000000 		.quad	.LVL72
 20271      00000000 
 20272 0bf6 0200     		.value	0x2
 20273 0bf8 30       		.byte	0x30
 20274 0bf9 9F       		.byte	0x9f
 20275 0bfa 00000000 		.quad	.LVL72
 20275      00000000 
 20276 0c02 00000000 		.quad	.LVL97
 20276      00000000 
 20277 0c0a 0200     		.value	0x2
 20278 0c0c 31       		.byte	0x31
 20279 0c0d 9F       		.byte	0x9f
 20280 0c0e 00000000 		.quad	.LVL100
 20280      00000000 
 20281 0c16 00000000 		.quad	.LFE2108
 20281      00000000 
 20282 0c1e 0200     		.value	0x2
 20283 0c20 31       		.byte	0x31
 20284 0c21 9F       		.byte	0x9f
 20285 0c22 00000000 		.quad	0
 20285      00000000 
 20286 0c2a 00000000 		.quad	0
 20286      00000000 
 20287              	.LLST71:
 20288 0c32 00000000 		.quad	.LVL65
 20288      00000000 
 20289 0c3a 00000000 		.quad	.LVL66
 20289      00000000 
 20290 0c42 0200     		.value	0x2
 20291 0c44 30       		.byte	0x30
 20292 0c45 9F       		.byte	0x9f
 20293 0c46 00000000 		.quad	0
 20293      00000000 
 20294 0c4e 00000000 		.quad	0
 20294      00000000 
 20295              	.LLST72:
 20296 0c56 00000000 		.quad	.LVL66
 20296      00000000 
 20297 0c5e 00000000 		.quad	.LVL94
GAS LISTING /tmp/cceISX6N.s 			page 489


 20297      00000000 
 20298 0c66 0100     		.value	0x1
 20299 0c68 56       		.byte	0x56
 20300 0c69 00000000 		.quad	.LVL94
 20300      00000000 
 20301 0c71 00000000 		.quad	.LVL97
 20301      00000000 
 20302 0c79 0400     		.value	0x4
 20303 0c7b 91       		.byte	0x91
 20304 0c7c 807F     		.sleb128 -128
 20305 0c7e 9F       		.byte	0x9f
 20306 0c7f 00000000 		.quad	.LVL100
 20306      00000000 
 20307 0c87 00000000 		.quad	.LFE2108
 20307      00000000 
 20308 0c8f 0100     		.value	0x1
 20309 0c91 56       		.byte	0x56
 20310 0c92 00000000 		.quad	0
 20310      00000000 
 20311 0c9a 00000000 		.quad	0
 20311      00000000 
 20312              	.LLST76:
 20313 0ca2 00000000 		.quad	.LVL66
 20313      00000000 
 20314 0caa 00000000 		.quad	.LVL94
 20314      00000000 
 20315 0cb2 0400     		.value	0x4
 20316 0cb4 76       		.byte	0x76
 20317 0cb5 C000     		.sleb128 64
 20318 0cb7 9F       		.byte	0x9f
 20319 0cb8 00000000 		.quad	.LVL94
 20319      00000000 
 20320 0cc0 00000000 		.quad	.LVL97
 20320      00000000 
 20321 0cc8 0300     		.value	0x3
 20322 0cca 91       		.byte	0x91
 20323 0ccb 40       		.sleb128 -64
 20324 0ccc 9F       		.byte	0x9f
 20325 0ccd 00000000 		.quad	.LVL100
 20325      00000000 
 20326 0cd5 00000000 		.quad	.LFE2108
 20326      00000000 
 20327 0cdd 0400     		.value	0x4
 20328 0cdf 76       		.byte	0x76
 20329 0ce0 C000     		.sleb128 64
 20330 0ce2 9F       		.byte	0x9f
 20331 0ce3 00000000 		.quad	0
 20331      00000000 
 20332 0ceb 00000000 		.quad	0
 20332      00000000 
 20333              	.LLST77:
 20334 0cf3 00000000 		.quad	.LVL66
 20334      00000000 
 20335 0cfb 00000000 		.quad	.LVL67-1
 20335      00000000 
 20336 0d03 0100     		.value	0x1
 20337 0d05 63       		.byte	0x63
GAS LISTING /tmp/cceISX6N.s 			page 490


 20338 0d06 00000000 		.quad	.LVL68
 20338      00000000 
 20339 0d0e 00000000 		.quad	.LVL69
 20339      00000000 
 20340 0d16 0100     		.value	0x1
 20341 0d18 61       		.byte	0x61
 20342 0d19 00000000 		.quad	.LVL69
 20342      00000000 
 20343 0d21 00000000 		.quad	.LVL72-1
 20343      00000000 
 20344 0d29 0100     		.value	0x1
 20345 0d2b 63       		.byte	0x63
 20346 0d2c 00000000 		.quad	0
 20346      00000000 
 20347 0d34 00000000 		.quad	0
 20347      00000000 
 20348              	.LLST78:
 20349 0d3c 00000000 		.quad	.LVL68
 20349      00000000 
 20350 0d44 00000000 		.quad	.LVL70
 20350      00000000 
 20351 0d4c 0D00     		.value	0xd
 20352 0d4e 91       		.byte	0x91
 20353 0d4f 887F     		.sleb128 -120
 20354 0d51 F6       		.byte	0xf6
 20355 0d52 08       		.byte	0x8
 20356 0d53 29       		.uleb128 0x29
 20357 0d54 71       		.byte	0x71
 20358 0d55 00       		.sleb128 0
 20359 0d56 F6       		.byte	0xf6
 20360 0d57 08       		.byte	0x8
 20361 0d58 29       		.uleb128 0x29
 20362 0d59 1E       		.byte	0x1e
 20363 0d5a 9F       		.byte	0x9f
 20364 0d5b 00000000 		.quad	0
 20364      00000000 
 20365 0d63 00000000 		.quad	0
 20365      00000000 
 20366              	.LLST79:
 20367 0d6b 00000000 		.quad	.LVL66
 20367      00000000 
 20368 0d73 00000000 		.quad	.LVL94
 20368      00000000 
 20369 0d7b 0300     		.value	0x3
 20370 0d7d 76       		.byte	0x76
 20371 0d7e 30       		.sleb128 48
 20372 0d7f 9F       		.byte	0x9f
 20373 0d80 00000000 		.quad	.LVL94
 20373      00000000 
 20374 0d88 00000000 		.quad	.LVL97
 20374      00000000 
 20375 0d90 0400     		.value	0x4
 20376 0d92 91       		.byte	0x91
 20377 0d93 B07F     		.sleb128 -80
 20378 0d95 9F       		.byte	0x9f
 20379 0d96 00000000 		.quad	.LVL100
 20379      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 491


 20380 0d9e 00000000 		.quad	.LFE2108
 20380      00000000 
 20381 0da6 0300     		.value	0x3
 20382 0da8 76       		.byte	0x76
 20383 0da9 30       		.sleb128 48
 20384 0daa 9F       		.byte	0x9f
 20385 0dab 00000000 		.quad	0
 20385      00000000 
 20386 0db3 00000000 		.quad	0
 20386      00000000 
 20387              	.LLST80:
 20388 0dbb 00000000 		.quad	.LVL66
 20388      00000000 
 20389 0dc3 00000000 		.quad	.LVL67-1
 20389      00000000 
 20390 0dcb 0100     		.value	0x1
 20391 0dcd 64       		.byte	0x64
 20392 0dce 00000000 		.quad	.LVL68
 20392      00000000 
 20393 0dd6 00000000 		.quad	.LVL72-1
 20393      00000000 
 20394 0dde 0100     		.value	0x1
 20395 0de0 64       		.byte	0x64
 20396 0de1 00000000 		.quad	0
 20396      00000000 
 20397 0de9 00000000 		.quad	0
 20397      00000000 
 20398              	.LLST81:
 20399 0df1 00000000 		.quad	.LVL68
 20399      00000000 
 20400 0df9 00000000 		.quad	.LVL69
 20400      00000000 
 20401 0e01 1100     		.value	0x11
 20402 0e03 91       		.byte	0x91
 20403 0e04 887F     		.sleb128 -120
 20404 0e06 F6       		.byte	0xf6
 20405 0e07 08       		.byte	0x8
 20406 0e08 29       		.uleb128 0x29
 20407 0e09 71       		.byte	0x71
 20408 0e0a 00       		.sleb128 0
 20409 0e0b F6       		.byte	0xf6
 20410 0e0c 08       		.byte	0x8
 20411 0e0d 29       		.uleb128 0x29
 20412 0e0e 1E       		.byte	0x1e
 20413 0e0f F5       		.byte	0xf5
 20414 0e10 11       		.uleb128 0x11
 20415 0e11 29       		.uleb128 0x29
 20416 0e12 22       		.byte	0x22
 20417 0e13 9F       		.byte	0x9f
 20418 0e14 00000000 		.quad	.LVL69
 20418      00000000 
 20419 0e1c 00000000 		.quad	.LVL70
 20419      00000000 
 20420 0e24 1100     		.value	0x11
 20421 0e26 91       		.byte	0x91
 20422 0e27 887F     		.sleb128 -120
 20423 0e29 F6       		.byte	0xf6
GAS LISTING /tmp/cceISX6N.s 			page 492


 20424 0e2a 08       		.byte	0x8
 20425 0e2b 29       		.uleb128 0x29
 20426 0e2c 71       		.byte	0x71
 20427 0e2d 00       		.sleb128 0
 20428 0e2e F6       		.byte	0xf6
 20429 0e2f 08       		.byte	0x8
 20430 0e30 29       		.uleb128 0x29
 20431 0e31 1E       		.byte	0x1e
 20432 0e32 F5       		.byte	0xf5
 20433 0e33 13       		.uleb128 0x13
 20434 0e34 29       		.uleb128 0x29
 20435 0e35 22       		.byte	0x22
 20436 0e36 9F       		.byte	0x9f
 20437 0e37 00000000 		.quad	0
 20437      00000000 
 20438 0e3f 00000000 		.quad	0
 20438      00000000 
 20439              	.LLST83:
 20440 0e47 00000000 		.quad	.LVL66
 20440      00000000 
 20441 0e4f 00000000 		.quad	.LVL67-1
 20441      00000000 
 20442 0e57 0100     		.value	0x1
 20443 0e59 65       		.byte	0x65
 20444 0e5a 00000000 		.quad	.LVL67
 20444      00000000 
 20445 0e62 00000000 		.quad	.LVL70
 20445      00000000 
 20446 0e6a 0300     		.value	0x3
 20447 0e6c 91       		.byte	0x91
 20448 0e6d B87F     		.sleb128 -72
 20449 0e6f 00000000 		.quad	.LVL70
 20449      00000000 
 20450 0e77 00000000 		.quad	.LVL72-1
 20450      00000000 
 20451 0e7f 0100     		.value	0x1
 20452 0e81 65       		.byte	0x65
 20453 0e82 00000000 		.quad	0
 20453      00000000 
 20454 0e8a 00000000 		.quad	0
 20454      00000000 
 20455              	.LLST84:
 20456 0e92 00000000 		.quad	.LVL68
 20456      00000000 
 20457 0e9a 00000000 		.quad	.LVL69
 20457      00000000 
 20458 0ea2 1500     		.value	0x15
 20459 0ea4 91       		.byte	0x91
 20460 0ea5 887F     		.sleb128 -120
 20461 0ea7 F6       		.byte	0xf6
 20462 0ea8 08       		.byte	0x8
 20463 0ea9 29       		.uleb128 0x29
 20464 0eaa 71       		.byte	0x71
 20465 0eab 00       		.sleb128 0
 20466 0eac F6       		.byte	0xf6
 20467 0ead 08       		.byte	0x8
 20468 0eae 29       		.uleb128 0x29
GAS LISTING /tmp/cceISX6N.s 			page 493


 20469 0eaf 1E       		.byte	0x1e
 20470 0eb0 F5       		.byte	0xf5
 20471 0eb1 11       		.uleb128 0x11
 20472 0eb2 29       		.uleb128 0x29
 20473 0eb3 22       		.byte	0x22
 20474 0eb4 F5       		.byte	0xf5
 20475 0eb5 14       		.uleb128 0x14
 20476 0eb6 29       		.uleb128 0x29
 20477 0eb7 1E       		.byte	0x1e
 20478 0eb8 9F       		.byte	0x9f
 20479 0eb9 00000000 		.quad	.LVL69
 20479      00000000 
 20480 0ec1 00000000 		.quad	.LVL70
 20480      00000000 
 20481 0ec9 1500     		.value	0x15
 20482 0ecb 91       		.byte	0x91
 20483 0ecc 887F     		.sleb128 -120
 20484 0ece F6       		.byte	0xf6
 20485 0ecf 08       		.byte	0x8
 20486 0ed0 29       		.uleb128 0x29
 20487 0ed1 71       		.byte	0x71
 20488 0ed2 00       		.sleb128 0
 20489 0ed3 F6       		.byte	0xf6
 20490 0ed4 08       		.byte	0x8
 20491 0ed5 29       		.uleb128 0x29
 20492 0ed6 1E       		.byte	0x1e
 20493 0ed7 F5       		.byte	0xf5
 20494 0ed8 13       		.uleb128 0x13
 20495 0ed9 29       		.uleb128 0x29
 20496 0eda 22       		.byte	0x22
 20497 0edb F5       		.byte	0xf5
 20498 0edc 14       		.uleb128 0x14
 20499 0edd 29       		.uleb128 0x29
 20500 0ede 1E       		.byte	0x1e
 20501 0edf 9F       		.byte	0x9f
 20502 0ee0 00000000 		.quad	0
 20502      00000000 
 20503 0ee8 00000000 		.quad	0
 20503      00000000 
 20504              	.LLST85:
 20505 0ef0 00000000 		.quad	.LVL66
 20505      00000000 
 20506 0ef8 00000000 		.quad	.LVL97
 20506      00000000 
 20507 0f00 0300     		.value	0x3
 20508 0f02 91       		.byte	0x91
 20509 0f03 48       		.sleb128 -56
 20510 0f04 9F       		.byte	0x9f
 20511 0f05 00000000 		.quad	.LVL100
 20511      00000000 
 20512 0f0d 00000000 		.quad	.LFE2108
 20512      00000000 
 20513 0f15 0300     		.value	0x3
 20514 0f17 91       		.byte	0x91
 20515 0f18 48       		.sleb128 -56
 20516 0f19 9F       		.byte	0x9f
 20517 0f1a 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 494


 20517      00000000 
 20518 0f22 00000000 		.quad	0
 20518      00000000 
 20519              	.LLST86:
 20520 0f2a 00000000 		.quad	.LVL68
 20520      00000000 
 20521 0f32 00000000 		.quad	.LVL69
 20521      00000000 
 20522 0f3a 1C00     		.value	0x1c
 20523 0f3c 91       		.byte	0x91
 20524 0f3d 887F     		.sleb128 -120
 20525 0f3f F6       		.byte	0xf6
 20526 0f40 08       		.byte	0x8
 20527 0f41 29       		.uleb128 0x29
 20528 0f42 71       		.byte	0x71
 20529 0f43 00       		.sleb128 0
 20530 0f44 F6       		.byte	0xf6
 20531 0f45 08       		.byte	0x8
 20532 0f46 29       		.uleb128 0x29
 20533 0f47 1E       		.byte	0x1e
 20534 0f48 F5       		.byte	0xf5
 20535 0f49 11       		.uleb128 0x11
 20536 0f4a 29       		.uleb128 0x29
 20537 0f4b 22       		.byte	0x22
 20538 0f4c F5       		.byte	0xf5
 20539 0f4d 14       		.uleb128 0x14
 20540 0f4e 29       		.uleb128 0x29
 20541 0f4f 1E       		.byte	0x1e
 20542 0f50 91       		.byte	0x91
 20543 0f51 B87F     		.sleb128 -72
 20544 0f53 F6       		.byte	0xf6
 20545 0f54 08       		.byte	0x8
 20546 0f55 29       		.uleb128 0x29
 20547 0f56 22       		.byte	0x22
 20548 0f57 9F       		.byte	0x9f
 20549 0f58 00000000 		.quad	.LVL69
 20549      00000000 
 20550 0f60 00000000 		.quad	.LVL70
 20550      00000000 
 20551 0f68 1C00     		.value	0x1c
 20552 0f6a 91       		.byte	0x91
 20553 0f6b 887F     		.sleb128 -120
 20554 0f6d F6       		.byte	0xf6
 20555 0f6e 08       		.byte	0x8
 20556 0f6f 29       		.uleb128 0x29
 20557 0f70 71       		.byte	0x71
 20558 0f71 00       		.sleb128 0
 20559 0f72 F6       		.byte	0xf6
 20560 0f73 08       		.byte	0x8
 20561 0f74 29       		.uleb128 0x29
 20562 0f75 1E       		.byte	0x1e
 20563 0f76 F5       		.byte	0xf5
 20564 0f77 13       		.uleb128 0x13
 20565 0f78 29       		.uleb128 0x29
 20566 0f79 22       		.byte	0x22
 20567 0f7a F5       		.byte	0xf5
 20568 0f7b 14       		.uleb128 0x14
GAS LISTING /tmp/cceISX6N.s 			page 495


 20569 0f7c 29       		.uleb128 0x29
 20570 0f7d 1E       		.byte	0x1e
 20571 0f7e 91       		.byte	0x91
 20572 0f7f B87F     		.sleb128 -72
 20573 0f81 F6       		.byte	0xf6
 20574 0f82 08       		.byte	0x8
 20575 0f83 29       		.uleb128 0x29
 20576 0f84 22       		.byte	0x22
 20577 0f85 9F       		.byte	0x9f
 20578 0f86 00000000 		.quad	0
 20578      00000000 
 20579 0f8e 00000000 		.quad	0
 20579      00000000 
 20580              	.LLST87:
 20581 0f96 00000000 		.quad	.LVL71
 20581      00000000 
 20582 0f9e 00000000 		.quad	.LVL94
 20582      00000000 
 20583 0fa6 0100     		.value	0x1
 20584 0fa8 56       		.byte	0x56
 20585 0fa9 00000000 		.quad	.LVL94
 20585      00000000 
 20586 0fb1 00000000 		.quad	.LVL97
 20586      00000000 
 20587 0fb9 0400     		.value	0x4
 20588 0fbb 91       		.byte	0x91
 20589 0fbc 807F     		.sleb128 -128
 20590 0fbe 9F       		.byte	0x9f
 20591 0fbf 00000000 		.quad	.LVL100
 20591      00000000 
 20592 0fc7 00000000 		.quad	.LFE2108
 20592      00000000 
 20593 0fcf 0100     		.value	0x1
 20594 0fd1 56       		.byte	0x56
 20595 0fd2 00000000 		.quad	0
 20595      00000000 
 20596 0fda 00000000 		.quad	0
 20596      00000000 
 20597              	.LLST88:
 20598 0fe2 00000000 		.quad	.LVL71
 20598      00000000 
 20599 0fea 00000000 		.quad	.LVL97
 20599      00000000 
 20600 0ff2 0300     		.value	0x3
 20601 0ff4 91       		.byte	0x91
 20602 0ff5 48       		.sleb128 -56
 20603 0ff6 9F       		.byte	0x9f
 20604 0ff7 00000000 		.quad	.LVL100
 20604      00000000 
 20605 0fff 00000000 		.quad	.LFE2108
 20605      00000000 
 20606 1007 0300     		.value	0x3
 20607 1009 91       		.byte	0x91
 20608 100a 48       		.sleb128 -56
 20609 100b 9F       		.byte	0x9f
 20610 100c 00000000 		.quad	0
 20610      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 496


 20611 1014 00000000 		.quad	0
 20611      00000000 
 20612              	.LLST89:
 20613 101c 00000000 		.quad	.LVL74
 20613      00000000 
 20614 1024 00000000 		.quad	.LVL97
 20614      00000000 
 20615 102c 0600     		.value	0x6
 20616 102e F2       		.byte	0xf2
 20617 102f 00000000 		.long	.Ldebug_info0+33621
 20618 1033 00       		.sleb128 0
 20619 1034 00000000 		.quad	.LVL100
 20619      00000000 
 20620 103c 00000000 		.quad	.LFE2108
 20620      00000000 
 20621 1044 0600     		.value	0x6
 20622 1046 F2       		.byte	0xf2
 20623 1047 00000000 		.long	.Ldebug_info0+33621
 20624 104b 00       		.sleb128 0
 20625 104c 00000000 		.quad	0
 20625      00000000 
 20626 1054 00000000 		.quad	0
 20626      00000000 
 20627              	.LLST90:
 20628 105c 00000000 		.quad	.LVL74
 20628      00000000 
 20629 1064 00000000 		.quad	.LVL97
 20629      00000000 
 20630 106c 0600     		.value	0x6
 20631 106e F2       		.byte	0xf2
 20632 106f 00000000 		.long	.Ldebug_info0+33631
 20633 1073 00       		.sleb128 0
 20634 1074 00000000 		.quad	.LVL100
 20634      00000000 
 20635 107c 00000000 		.quad	.LFE2108
 20635      00000000 
 20636 1084 0600     		.value	0x6
 20637 1086 F2       		.byte	0xf2
 20638 1087 00000000 		.long	.Ldebug_info0+33631
 20639 108b 00       		.sleb128 0
 20640 108c 00000000 		.quad	0
 20640      00000000 
 20641 1094 00000000 		.quad	0
 20641      00000000 
 20642              	.LLST91:
 20643 109c 00000000 		.quad	.LVL76
 20643      00000000 
 20644 10a4 00000000 		.quad	.LVL97
 20644      00000000 
 20645 10ac 0600     		.value	0x6
 20646 10ae F2       		.byte	0xf2
 20647 10af 00000000 		.long	.Ldebug_info0+33599
 20648 10b3 00       		.sleb128 0
 20649 10b4 00000000 		.quad	.LVL100
 20649      00000000 
 20650 10bc 00000000 		.quad	.LFE2108
 20650      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 497


 20651 10c4 0600     		.value	0x6
 20652 10c6 F2       		.byte	0xf2
 20653 10c7 00000000 		.long	.Ldebug_info0+33599
 20654 10cb 00       		.sleb128 0
 20655 10cc 00000000 		.quad	0
 20655      00000000 
 20656 10d4 00000000 		.quad	0
 20656      00000000 
 20657              	.LLST92:
 20658 10dc 00000000 		.quad	.LVL76
 20658      00000000 
 20659 10e4 00000000 		.quad	.LVL94
 20659      00000000 
 20660 10ec 0100     		.value	0x1
 20661 10ee 56       		.byte	0x56
 20662 10ef 00000000 		.quad	.LVL94
 20662      00000000 
 20663 10f7 00000000 		.quad	.LVL97
 20663      00000000 
 20664 10ff 0400     		.value	0x4
 20665 1101 91       		.byte	0x91
 20666 1102 807F     		.sleb128 -128
 20667 1104 9F       		.byte	0x9f
 20668 1105 00000000 		.quad	.LVL100
 20668      00000000 
 20669 110d 00000000 		.quad	.LFE2108
 20669      00000000 
 20670 1115 0100     		.value	0x1
 20671 1117 56       		.byte	0x56
 20672 1118 00000000 		.quad	0
 20672      00000000 
 20673 1120 00000000 		.quad	0
 20673      00000000 
 20674              	.LLST97:
 20675 1128 00000000 		.quad	.LVL76
 20675      00000000 
 20676 1130 00000000 		.quad	.LVL94
 20676      00000000 
 20677 1138 0300     		.value	0x3
 20678 113a 76       		.byte	0x76
 20679 113b 30       		.sleb128 48
 20680 113c 9F       		.byte	0x9f
 20681 113d 00000000 		.quad	.LVL94
 20681      00000000 
 20682 1145 00000000 		.quad	.LVL97
 20682      00000000 
 20683 114d 0400     		.value	0x4
 20684 114f 91       		.byte	0x91
 20685 1150 B07F     		.sleb128 -80
 20686 1152 9F       		.byte	0x9f
 20687 1153 00000000 		.quad	.LVL100
 20687      00000000 
 20688 115b 00000000 		.quad	.LFE2108
 20688      00000000 
 20689 1163 0300     		.value	0x3
 20690 1165 76       		.byte	0x76
 20691 1166 30       		.sleb128 48
GAS LISTING /tmp/cceISX6N.s 			page 498


 20692 1167 9F       		.byte	0x9f
 20693 1168 00000000 		.quad	0
 20693      00000000 
 20694 1170 00000000 		.quad	0
 20694      00000000 
 20695              	.LLST98:
 20696 1178 00000000 		.quad	.LVL76
 20696      00000000 
 20697 1180 00000000 		.quad	.LVL79-1
 20697      00000000 
 20698 1188 0300     		.value	0x3
 20699 118a 91       		.byte	0x91
 20700 118b 887F     		.sleb128 -120
 20701 118d 00000000 		.quad	0
 20701      00000000 
 20702 1195 00000000 		.quad	0
 20702      00000000 
 20703              	.LLST99:
 20704 119d 00000000 		.quad	.LVL76
 20704      00000000 
 20705 11a5 00000000 		.quad	.LVL79-1
 20705      00000000 
 20706 11ad 0300     		.value	0x3
 20707 11af 76       		.byte	0x76
 20708 11b0 00       		.sleb128 0
 20709 11b1 06       		.byte	0x6
 20710 11b2 00000000 		.quad	0
 20710      00000000 
 20711 11ba 00000000 		.quad	0
 20711      00000000 
 20712              	.LLST100:
 20713 11c2 00000000 		.quad	.LVL76
 20713      00000000 
 20714 11ca 00000000 		.quad	.LVL94
 20714      00000000 
 20715 11d2 0400     		.value	0x4
 20716 11d4 76       		.byte	0x76
 20717 11d5 C000     		.sleb128 64
 20718 11d7 9F       		.byte	0x9f
 20719 11d8 00000000 		.quad	.LVL94
 20719      00000000 
 20720 11e0 00000000 		.quad	.LVL97
 20720      00000000 
 20721 11e8 0300     		.value	0x3
 20722 11ea 91       		.byte	0x91
 20723 11eb 40       		.sleb128 -64
 20724 11ec 9F       		.byte	0x9f
 20725 11ed 00000000 		.quad	.LVL100
 20725      00000000 
 20726 11f5 00000000 		.quad	.LFE2108
 20726      00000000 
 20727 11fd 0400     		.value	0x4
 20728 11ff 76       		.byte	0x76
 20729 1200 C000     		.sleb128 64
 20730 1202 9F       		.byte	0x9f
 20731 1203 00000000 		.quad	0
 20731      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 499


 20732 120b 00000000 		.quad	0
 20732      00000000 
 20733              	.LLST101:
 20734 1213 00000000 		.quad	.LVL76
 20734      00000000 
 20735 121b 00000000 		.quad	.LVL79-1
 20735      00000000 
 20736 1223 0300     		.value	0x3
 20737 1225 91       		.byte	0x91
 20738 1226 987F     		.sleb128 -104
 20739 1228 00000000 		.quad	0
 20739      00000000 
 20740 1230 00000000 		.quad	0
 20740      00000000 
 20741              	.LLST102:
 20742 1238 00000000 		.quad	.LVL76
 20742      00000000 
 20743 1240 00000000 		.quad	.LVL77
 20743      00000000 
 20744 1248 0E00     		.value	0xe
 20745 124a 91       		.byte	0x91
 20746 124b 887F     		.sleb128 -120
 20747 124d F6       		.byte	0xf6
 20748 124e 08       		.byte	0x8
 20749 124f 29       		.uleb128 0x29
 20750 1250 76       		.byte	0x76
 20751 1251 00       		.sleb128 0
 20752 1252 06       		.byte	0x6
 20753 1253 F6       		.byte	0xf6
 20754 1254 08       		.byte	0x8
 20755 1255 29       		.uleb128 0x29
 20756 1256 1E       		.byte	0x1e
 20757 1257 9F       		.byte	0x9f
 20758 1258 00000000 		.quad	.LVL77
 20758      00000000 
 20759 1260 00000000 		.quad	.LVL78
 20759      00000000 
 20760 1268 0100     		.value	0x1
 20761 126a 61       		.byte	0x61
 20762 126b 00000000 		.quad	.LVL78
 20762      00000000 
 20763 1273 00000000 		.quad	.LVL79-1
 20763      00000000 
 20764 127b 0E00     		.value	0xe
 20765 127d 91       		.byte	0x91
 20766 127e 887F     		.sleb128 -120
 20767 1280 F6       		.byte	0xf6
 20768 1281 08       		.byte	0x8
 20769 1282 29       		.uleb128 0x29
 20770 1283 76       		.byte	0x76
 20771 1284 00       		.sleb128 0
 20772 1285 06       		.byte	0x6
 20773 1286 F6       		.byte	0xf6
 20774 1287 08       		.byte	0x8
 20775 1288 29       		.uleb128 0x29
 20776 1289 1E       		.byte	0x1e
 20777 128a 9F       		.byte	0x9f
GAS LISTING /tmp/cceISX6N.s 			page 500


 20778 128b 00000000 		.quad	0
 20778      00000000 
 20779 1293 00000000 		.quad	0
 20779      00000000 
 20780              	.LLST104:
 20781 129b 00000000 		.quad	.LVL76
 20781      00000000 
 20782 12a3 00000000 		.quad	.LVL79-1
 20782      00000000 
 20783 12ab 0300     		.value	0x3
 20784 12ad 91       		.byte	0x91
 20785 12ae A87F     		.sleb128 -88
 20786 12b0 00000000 		.quad	0
 20786      00000000 
 20787 12b8 00000000 		.quad	0
 20787      00000000 
 20788              	.LLST105:
 20789 12c0 00000000 		.quad	.LVL76
 20789      00000000 
 20790 12c8 00000000 		.quad	.LVL79-1
 20790      00000000 
 20791 12d0 1500     		.value	0x15
 20792 12d2 91       		.byte	0x91
 20793 12d3 887F     		.sleb128 -120
 20794 12d5 F6       		.byte	0xf6
 20795 12d6 08       		.byte	0x8
 20796 12d7 29       		.uleb128 0x29
 20797 12d8 76       		.byte	0x76
 20798 12d9 00       		.sleb128 0
 20799 12da 06       		.byte	0x6
 20800 12db F6       		.byte	0xf6
 20801 12dc 08       		.byte	0x8
 20802 12dd 29       		.uleb128 0x29
 20803 12de 1E       		.byte	0x1e
 20804 12df 91       		.byte	0x91
 20805 12e0 987F     		.sleb128 -104
 20806 12e2 F6       		.byte	0xf6
 20807 12e3 08       		.byte	0x8
 20808 12e4 29       		.uleb128 0x29
 20809 12e5 22       		.byte	0x22
 20810 12e6 9F       		.byte	0x9f
 20811 12e7 00000000 		.quad	0
 20811      00000000 
 20812 12ef 00000000 		.quad	0
 20812      00000000 
 20813              	.LLST107:
 20814 12f7 00000000 		.quad	.LVL76
 20814      00000000 
 20815 12ff 00000000 		.quad	.LVL79-1
 20815      00000000 
 20816 1307 0300     		.value	0x3
 20817 1309 91       		.byte	0x91
 20818 130a B87F     		.sleb128 -72
 20819 130c 00000000 		.quad	0
 20819      00000000 
 20820 1314 00000000 		.quad	0
 20820      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 501


 20821              	.LLST108:
 20822 131c 00000000 		.quad	.LVL76
 20822      00000000 
 20823 1324 00000000 		.quad	.LVL79-1
 20823      00000000 
 20824 132c 1C00     		.value	0x1c
 20825 132e 91       		.byte	0x91
 20826 132f 887F     		.sleb128 -120
 20827 1331 F6       		.byte	0xf6
 20828 1332 08       		.byte	0x8
 20829 1333 29       		.uleb128 0x29
 20830 1334 76       		.byte	0x76
 20831 1335 00       		.sleb128 0
 20832 1336 06       		.byte	0x6
 20833 1337 F6       		.byte	0xf6
 20834 1338 08       		.byte	0x8
 20835 1339 29       		.uleb128 0x29
 20836 133a 1E       		.byte	0x1e
 20837 133b 91       		.byte	0x91
 20838 133c 987F     		.sleb128 -104
 20839 133e F6       		.byte	0xf6
 20840 133f 08       		.byte	0x8
 20841 1340 29       		.uleb128 0x29
 20842 1341 22       		.byte	0x22
 20843 1342 91       		.byte	0x91
 20844 1343 A87F     		.sleb128 -88
 20845 1345 F6       		.byte	0xf6
 20846 1346 08       		.byte	0x8
 20847 1347 29       		.uleb128 0x29
 20848 1348 1E       		.byte	0x1e
 20849 1349 9F       		.byte	0x9f
 20850 134a 00000000 		.quad	0
 20850      00000000 
 20851 1352 00000000 		.quad	0
 20851      00000000 
 20852              	.LLST109:
 20853 135a 00000000 		.quad	.LVL76
 20853      00000000 
 20854 1362 00000000 		.quad	.LVL97
 20854      00000000 
 20855 136a 0300     		.value	0x3
 20856 136c 91       		.byte	0x91
 20857 136d 48       		.sleb128 -56
 20858 136e 9F       		.byte	0x9f
 20859 136f 00000000 		.quad	.LVL100
 20859      00000000 
 20860 1377 00000000 		.quad	.LFE2108
 20860      00000000 
 20861 137f 0300     		.value	0x3
 20862 1381 91       		.byte	0x91
 20863 1382 48       		.sleb128 -56
 20864 1383 9F       		.byte	0x9f
 20865 1384 00000000 		.quad	0
 20865      00000000 
 20866 138c 00000000 		.quad	0
 20866      00000000 
 20867              	.LLST110:
GAS LISTING /tmp/cceISX6N.s 			page 502


 20868 1394 00000000 		.quad	.LVL76
 20868      00000000 
 20869 139c 00000000 		.quad	.LVL79-1
 20869      00000000 
 20870 13a4 2300     		.value	0x23
 20871 13a6 91       		.byte	0x91
 20872 13a7 887F     		.sleb128 -120
 20873 13a9 F6       		.byte	0xf6
 20874 13aa 08       		.byte	0x8
 20875 13ab 29       		.uleb128 0x29
 20876 13ac 76       		.byte	0x76
 20877 13ad 00       		.sleb128 0
 20878 13ae 06       		.byte	0x6
 20879 13af F6       		.byte	0xf6
 20880 13b0 08       		.byte	0x8
 20881 13b1 29       		.uleb128 0x29
 20882 13b2 1E       		.byte	0x1e
 20883 13b3 91       		.byte	0x91
 20884 13b4 987F     		.sleb128 -104
 20885 13b6 F6       		.byte	0xf6
 20886 13b7 08       		.byte	0x8
 20887 13b8 29       		.uleb128 0x29
 20888 13b9 22       		.byte	0x22
 20889 13ba 91       		.byte	0x91
 20890 13bb A87F     		.sleb128 -88
 20891 13bd F6       		.byte	0xf6
 20892 13be 08       		.byte	0x8
 20893 13bf 29       		.uleb128 0x29
 20894 13c0 1E       		.byte	0x1e
 20895 13c1 91       		.byte	0x91
 20896 13c2 B87F     		.sleb128 -72
 20897 13c4 F6       		.byte	0xf6
 20898 13c5 08       		.byte	0x8
 20899 13c6 29       		.uleb128 0x29
 20900 13c7 22       		.byte	0x22
 20901 13c8 9F       		.byte	0x9f
 20902 13c9 00000000 		.quad	0
 20902      00000000 
 20903 13d1 00000000 		.quad	0
 20903      00000000 
 20904              	.LLST111:
 20905 13d9 00000000 		.quad	.LVL80
 20905      00000000 
 20906 13e1 00000000 		.quad	.LVL97
 20906      00000000 
 20907 13e9 0600     		.value	0x6
 20908 13eb F2       		.byte	0xf2
 20909 13ec 00000000 		.long	.Ldebug_info0+33637
 20910 13f0 00       		.sleb128 0
 20911 13f1 00000000 		.quad	.LVL100
 20911      00000000 
 20912 13f9 00000000 		.quad	.LFE2108
 20912      00000000 
 20913 1401 0600     		.value	0x6
 20914 1403 F2       		.byte	0xf2
 20915 1404 00000000 		.long	.Ldebug_info0+33637
 20916 1408 00       		.sleb128 0
GAS LISTING /tmp/cceISX6N.s 			page 503


 20917 1409 00000000 		.quad	0
 20917      00000000 
 20918 1411 00000000 		.quad	0
 20918      00000000 
 20919              	.LLST114:
 20920 1419 00000000 		.quad	.LVL80
 20920      00000000 
 20921 1421 00000000 		.quad	.LVL97
 20921      00000000 
 20922 1429 0400     		.value	0x4
 20923 142b 91       		.byte	0x91
 20924 142c E07E     		.sleb128 -160
 20925 142e 9F       		.byte	0x9f
 20926 142f 00000000 		.quad	.LVL100
 20926      00000000 
 20927 1437 00000000 		.quad	.LFE2108
 20927      00000000 
 20928 143f 0400     		.value	0x4
 20929 1441 91       		.byte	0x91
 20930 1442 E07E     		.sleb128 -160
 20931 1444 9F       		.byte	0x9f
 20932 1445 00000000 		.quad	0
 20932      00000000 
 20933 144d 00000000 		.quad	0
 20933      00000000 
 20934              	.LLST118:
 20935 1455 00000000 		.quad	.LVL83
 20935      00000000 
 20936 145d 00000000 		.quad	.LVL97
 20936      00000000 
 20937 1465 0A00     		.value	0xa
 20938 1467 03       		.byte	0x3
 20939 1468 00000000 		.quad	.LC2
 20939      00000000 
 20940 1470 9F       		.byte	0x9f
 20941 1471 00000000 		.quad	0
 20941      00000000 
 20942 1479 00000000 		.quad	0
 20942      00000000 
 20943              	.LLST119:
 20944 1481 00000000 		.quad	.LVL83
 20944      00000000 
 20945 1489 00000000 		.quad	.LVL84-1
 20945      00000000 
 20946 1491 0100     		.value	0x1
 20947 1493 50       		.byte	0x50
 20948 1494 00000000 		.quad	.LVL84-1
 20948      00000000 
 20949 149c 00000000 		.quad	.LVL86
 20949      00000000 
 20950 14a4 0100     		.value	0x1
 20951 14a6 53       		.byte	0x53
 20952 14a7 00000000 		.quad	0
 20952      00000000 
 20953 14af 00000000 		.quad	0
 20953      00000000 
 20954              	.LLST120:
GAS LISTING /tmp/cceISX6N.s 			page 504


 20955 14b7 00000000 		.quad	.LVL84
 20955      00000000 
 20956 14bf 00000000 		.quad	.LVL92
 20956      00000000 
 20957 14c7 0200     		.value	0x2
 20958 14c9 77       		.byte	0x77
 20959 14ca 00       		.sleb128 0
 20960 14cb 00000000 		.quad	.LVL92
 20960      00000000 
 20961 14d3 00000000 		.quad	.LVL97
 20961      00000000 
 20962 14db 0300     		.value	0x3
 20963 14dd 91       		.byte	0x91
 20964 14de B07E     		.sleb128 -208
 20965 14e0 00000000 		.quad	0
 20965      00000000 
 20966 14e8 00000000 		.quad	0
 20966      00000000 
 20967              	.LLST121:
 20968 14f0 00000000 		.quad	.LVL86
 20968      00000000 
 20969 14f8 00000000 		.quad	.LVL97
 20969      00000000 
 20970 1500 0A00     		.value	0xa
 20971 1502 03       		.byte	0x3
 20972 1503 00000000 		.quad	.LC4
 20972      00000000 
 20973 150b 9F       		.byte	0x9f
 20974 150c 00000000 		.quad	0
 20974      00000000 
 20975 1514 00000000 		.quad	0
 20975      00000000 
 20976              	.LLST122:
 20977 151c 00000000 		.quad	.LVL86
 20977      00000000 
 20978 1524 00000000 		.quad	.LVL87-1
 20978      00000000 
 20979 152c 0100     		.value	0x1
 20980 152e 50       		.byte	0x50
 20981 152f 00000000 		.quad	.LVL87-1
 20981      00000000 
 20982 1537 00000000 		.quad	.LVL93
 20982      00000000 
 20983 153f 0100     		.value	0x1
 20984 1541 53       		.byte	0x53
 20985 1542 00000000 		.quad	0
 20985      00000000 
 20986 154a 00000000 		.quad	0
 20986      00000000 
 20987              	.LLST123:
 20988 1552 00000000 		.quad	.LVL88
 20988      00000000 
 20989 155a 00000000 		.quad	.LVL89-1
 20989      00000000 
 20990 1562 0100     		.value	0x1
 20991 1564 50       		.byte	0x50
 20992 1565 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 505


 20992      00000000 
 20993 156d 00000000 		.quad	0
 20993      00000000 
 20994              	.LLST124:
 20995 1575 00000000 		.quad	.LVL89
 20995      00000000 
 20996 157d 00000000 		.quad	.LVL97
 20996      00000000 
 20997 1585 0400     		.value	0x4
 20998 1587 91       		.byte	0x91
 20999 1588 E07E     		.sleb128 -160
 21000 158a 9F       		.byte	0x9f
 21001 158b 00000000 		.quad	0
 21001      00000000 
 21002 1593 00000000 		.quad	0
 21002      00000000 
 21003              	.LLST125:
 21004 159b 00000000 		.quad	.LVL98
 21004      00000000 
 21005 15a3 00000000 		.quad	.LVL100
 21005      00000000 
 21006 15ab 0400     		.value	0x4
 21007 15ad 91       		.byte	0x91
 21008 15ae D07E     		.sleb128 -176
 21009 15b0 9F       		.byte	0x9f
 21010 15b1 00000000 		.quad	0
 21010      00000000 
 21011 15b9 00000000 		.quad	0
 21011      00000000 
 21012              		.section	.debug_aranges,"",@progbits
 21013 0000 6C000000 		.long	0x6c
 21014 0004 0200     		.value	0x2
 21015 0006 00000000 		.long	.Ldebug_info0
 21016 000a 08       		.byte	0x8
 21017 000b 00       		.byte	0
 21018 000c 0000     		.value	0
 21019 000e 0000     		.value	0
 21020 0010 00000000 		.quad	.LFB2182
 21020      00000000 
 21021 0018 49000000 		.quad	.LFE2182-.LFB2182
 21021      00000000 
 21022 0020 00000000 		.quad	.LFB2369
 21022      00000000 
 21023 0028 15000000 		.quad	.LFE2369-.LFB2369
 21023      00000000 
 21024 0030 00000000 		.quad	.LFB2219
 21024      00000000 
 21025 0038 27010000 		.quad	.LFE2219-.LFB2219
 21025      00000000 
 21026 0040 00000000 		.quad	.LFB2108
 21026      00000000 
 21027 0048 6F030000 		.quad	.LFE2108-.LFB2108
 21027      00000000 
 21028 0050 00000000 		.quad	.LFB2363
 21028      00000000 
 21029 0058 26000000 		.quad	.LFE2363-.LFB2363
 21029      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 506


 21030 0060 00000000 		.quad	0
 21030      00000000 
 21031 0068 00000000 		.quad	0
 21031      00000000 
 21032              		.section	.debug_ranges,"",@progbits
 21033              	.Ldebug_ranges0:
 21034 0000 00000000 		.quad	.LBB505
 21034      00000000 
 21035 0008 00000000 		.quad	.LBE505
 21035      00000000 
 21036 0010 00000000 		.quad	.LBB528
 21036      00000000 
 21037 0018 00000000 		.quad	.LBE528
 21037      00000000 
 21038 0020 00000000 		.quad	0
 21038      00000000 
 21039 0028 00000000 		.quad	0
 21039      00000000 
 21040 0030 00000000 		.quad	.LBB506
 21040      00000000 
 21041 0038 00000000 		.quad	.LBE506
 21041      00000000 
 21042 0040 00000000 		.quad	.LBB521
 21042      00000000 
 21043 0048 00000000 		.quad	.LBE521
 21043      00000000 
 21044 0050 00000000 		.quad	0
 21044      00000000 
 21045 0058 00000000 		.quad	0
 21045      00000000 
 21046 0060 00000000 		.quad	.LBB507
 21046      00000000 
 21047 0068 00000000 		.quad	.LBE507
 21047      00000000 
 21048 0070 00000000 		.quad	.LBB518
 21048      00000000 
 21049 0078 00000000 		.quad	.LBE518
 21049      00000000 
 21050 0080 00000000 		.quad	0
 21050      00000000 
 21051 0088 00000000 		.quad	0
 21051      00000000 
 21052 0090 00000000 		.quad	.LBB508
 21052      00000000 
 21053 0098 00000000 		.quad	.LBE508
 21053      00000000 
 21054 00a0 00000000 		.quad	.LBB515
 21054      00000000 
 21055 00a8 00000000 		.quad	.LBE515
 21055      00000000 
 21056 00b0 00000000 		.quad	0
 21056      00000000 
 21057 00b8 00000000 		.quad	0
 21057      00000000 
 21058 00c0 00000000 		.quad	.LBB511
 21058      00000000 
 21059 00c8 00000000 		.quad	.LBE511
GAS LISTING /tmp/cceISX6N.s 			page 507


 21059      00000000 
 21060 00d0 00000000 		.quad	.LBB514
 21060      00000000 
 21061 00d8 00000000 		.quad	.LBE514
 21061      00000000 
 21062 00e0 00000000 		.quad	0
 21062      00000000 
 21063 00e8 00000000 		.quad	0
 21063      00000000 
 21064 00f0 00000000 		.quad	.LBB524
 21064      00000000 
 21065 00f8 00000000 		.quad	.LBE524
 21065      00000000 
 21066 0100 00000000 		.quad	.LBB529
 21066      00000000 
 21067 0108 00000000 		.quad	.LBE529
 21067      00000000 
 21068 0110 00000000 		.quad	.LBB530
 21068      00000000 
 21069 0118 00000000 		.quad	.LBE530
 21069      00000000 
 21070 0120 00000000 		.quad	0
 21070      00000000 
 21071 0128 00000000 		.quad	0
 21071      00000000 
 21072 0130 00000000 		.quad	.LBB602
 21072      00000000 
 21073 0138 00000000 		.quad	.LBE602
 21073      00000000 
 21074 0140 00000000 		.quad	.LBB690
 21074      00000000 
 21075 0148 00000000 		.quad	.LBE690
 21075      00000000 
 21076 0150 00000000 		.quad	.LBB691
 21076      00000000 
 21077 0158 00000000 		.quad	.LBE691
 21077      00000000 
 21078 0160 00000000 		.quad	.LBB692
 21078      00000000 
 21079 0168 00000000 		.quad	.LBE692
 21079      00000000 
 21080 0170 00000000 		.quad	.LBB693
 21080      00000000 
 21081 0178 00000000 		.quad	.LBE693
 21081      00000000 
 21082 0180 00000000 		.quad	0
 21082      00000000 
 21083 0188 00000000 		.quad	0
 21083      00000000 
 21084 0190 00000000 		.quad	.LBB609
 21084      00000000 
 21085 0198 00000000 		.quad	.LBE609
 21085      00000000 
 21086 01a0 00000000 		.quad	.LBB625
 21086      00000000 
 21087 01a8 00000000 		.quad	.LBE625
 21087      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 508


 21088 01b0 00000000 		.quad	.LBB635
 21088      00000000 
 21089 01b8 00000000 		.quad	.LBE635
 21089      00000000 
 21090 01c0 00000000 		.quad	0
 21090      00000000 
 21091 01c8 00000000 		.quad	0
 21091      00000000 
 21092 01d0 00000000 		.quad	.LBB626
 21092      00000000 
 21093 01d8 00000000 		.quad	.LBE626
 21093      00000000 
 21094 01e0 00000000 		.quad	.LBB636
 21094      00000000 
 21095 01e8 00000000 		.quad	.LBE636
 21095      00000000 
 21096 01f0 00000000 		.quad	.LBB640
 21096      00000000 
 21097 01f8 00000000 		.quad	.LBE640
 21097      00000000 
 21098 0200 00000000 		.quad	0
 21098      00000000 
 21099 0208 00000000 		.quad	0
 21099      00000000 
 21100 0210 00000000 		.quad	.LBB637
 21100      00000000 
 21101 0218 00000000 		.quad	.LBE637
 21101      00000000 
 21102 0220 00000000 		.quad	.LBB641
 21102      00000000 
 21103 0228 00000000 		.quad	.LBE641
 21103      00000000 
 21104 0230 00000000 		.quad	0
 21104      00000000 
 21105 0238 00000000 		.quad	0
 21105      00000000 
 21106 0240 00000000 		.quad	.LBB642
 21106      00000000 
 21107 0248 00000000 		.quad	.LBE642
 21107      00000000 
 21108 0250 00000000 		.quad	.LBB655
 21108      00000000 
 21109 0258 00000000 		.quad	.LBE655
 21109      00000000 
 21110 0260 00000000 		.quad	0
 21110      00000000 
 21111 0268 00000000 		.quad	0
 21111      00000000 
 21112 0270 00000000 		.quad	.LBB651
 21112      00000000 
 21113 0278 00000000 		.quad	.LBE651
 21113      00000000 
 21114 0280 00000000 		.quad	.LBB656
 21114      00000000 
 21115 0288 00000000 		.quad	.LBE656
 21115      00000000 
 21116 0290 00000000 		.quad	.LBB660
GAS LISTING /tmp/cceISX6N.s 			page 509


 21116      00000000 
 21117 0298 00000000 		.quad	.LBE660
 21117      00000000 
 21118 02a0 00000000 		.quad	0
 21118      00000000 
 21119 02a8 00000000 		.quad	0
 21119      00000000 
 21120 02b0 00000000 		.quad	.LBB657
 21120      00000000 
 21121 02b8 00000000 		.quad	.LBE657
 21121      00000000 
 21122 02c0 00000000 		.quad	.LBB661
 21122      00000000 
 21123 02c8 00000000 		.quad	.LBE661
 21123      00000000 
 21124 02d0 00000000 		.quad	0
 21124      00000000 
 21125 02d8 00000000 		.quad	0
 21125      00000000 
 21126 02e0 00000000 		.quad	.LBB664
 21126      00000000 
 21127 02e8 00000000 		.quad	.LBE664
 21127      00000000 
 21128 02f0 00000000 		.quad	.LBB687
 21128      00000000 
 21129 02f8 00000000 		.quad	.LBE687
 21129      00000000 
 21130 0300 00000000 		.quad	.LBB688
 21130      00000000 
 21131 0308 00000000 		.quad	.LBE688
 21131      00000000 
 21132 0310 00000000 		.quad	.LBB689
 21132      00000000 
 21133 0318 00000000 		.quad	.LBE689
 21133      00000000 
 21134 0320 00000000 		.quad	0
 21134      00000000 
 21135 0328 00000000 		.quad	0
 21135      00000000 
 21136 0330 00000000 		.quad	.LBB667
 21136      00000000 
 21137 0338 00000000 		.quad	.LBE667
 21137      00000000 
 21138 0340 00000000 		.quad	.LBB680
 21138      00000000 
 21139 0348 00000000 		.quad	.LBE680
 21139      00000000 
 21140 0350 00000000 		.quad	0
 21140      00000000 
 21141 0358 00000000 		.quad	0
 21141      00000000 
 21142 0360 00000000 		.quad	.LBB668
 21142      00000000 
 21143 0368 00000000 		.quad	.LBE668
 21143      00000000 
 21144 0370 00000000 		.quad	.LBB675
 21144      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 510


 21145 0378 00000000 		.quad	.LBE675
 21145      00000000 
 21146 0380 00000000 		.quad	0
 21146      00000000 
 21147 0388 00000000 		.quad	0
 21147      00000000 
 21148 0390 00000000 		.quad	.LBB671
 21148      00000000 
 21149 0398 00000000 		.quad	.LBE671
 21149      00000000 
 21150 03a0 00000000 		.quad	.LBB674
 21150      00000000 
 21151 03a8 00000000 		.quad	.LBE674
 21151      00000000 
 21152 03b0 00000000 		.quad	0
 21152      00000000 
 21153 03b8 00000000 		.quad	0
 21153      00000000 
 21154 03c0 00000000 		.quad	.LBB676
 21154      00000000 
 21155 03c8 00000000 		.quad	.LBE676
 21155      00000000 
 21156 03d0 00000000 		.quad	.LBB679
 21156      00000000 
 21157 03d8 00000000 		.quad	.LBE679
 21157      00000000 
 21158 03e0 00000000 		.quad	0
 21158      00000000 
 21159 03e8 00000000 		.quad	0
 21159      00000000 
 21160 03f0 00000000 		.quad	.LBB864
 21160      00000000 
 21161 03f8 00000000 		.quad	.LBE864
 21161      00000000 
 21162 0400 00000000 		.quad	.LBB986
 21162      00000000 
 21163 0408 00000000 		.quad	.LBE986
 21163      00000000 
 21164 0410 00000000 		.quad	.LBB987
 21164      00000000 
 21165 0418 00000000 		.quad	.LBE987
 21165      00000000 
 21166 0420 00000000 		.quad	0
 21166      00000000 
 21167 0428 00000000 		.quad	0
 21167      00000000 
 21168 0430 00000000 		.quad	.LBB865
 21168      00000000 
 21169 0438 00000000 		.quad	.LBE865
 21169      00000000 
 21170 0440 00000000 		.quad	.LBB868
 21170      00000000 
 21171 0448 00000000 		.quad	.LBE868
 21171      00000000 
 21172 0450 00000000 		.quad	0
 21172      00000000 
 21173 0458 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 511


 21173      00000000 
 21174 0460 00000000 		.quad	.LBB869
 21174      00000000 
 21175 0468 00000000 		.quad	.LBE869
 21175      00000000 
 21176 0470 00000000 		.quad	.LBB872
 21176      00000000 
 21177 0478 00000000 		.quad	.LBE872
 21177      00000000 
 21178 0480 00000000 		.quad	0
 21178      00000000 
 21179 0488 00000000 		.quad	0
 21179      00000000 
 21180 0490 00000000 		.quad	.LBB889
 21180      00000000 
 21181 0498 00000000 		.quad	.LBE889
 21181      00000000 
 21182 04a0 00000000 		.quad	.LBB978
 21182      00000000 
 21183 04a8 00000000 		.quad	.LBE978
 21183      00000000 
 21184 04b0 00000000 		.quad	0
 21184      00000000 
 21185 04b8 00000000 		.quad	0
 21185      00000000 
 21186 04c0 00000000 		.quad	.LBB892
 21186      00000000 
 21187 04c8 00000000 		.quad	.LBE892
 21187      00000000 
 21188 04d0 00000000 		.quad	.LBB979
 21188      00000000 
 21189 04d8 00000000 		.quad	.LBE979
 21189      00000000 
 21190 04e0 00000000 		.quad	0
 21190      00000000 
 21191 04e8 00000000 		.quad	0
 21191      00000000 
 21192 04f0 00000000 		.quad	.LBB916
 21192      00000000 
 21193 04f8 00000000 		.quad	.LBE916
 21193      00000000 
 21194 0500 00000000 		.quad	.LBB956
 21194      00000000 
 21195 0508 00000000 		.quad	.LBE956
 21195      00000000 
 21196 0510 00000000 		.quad	0
 21196      00000000 
 21197 0518 00000000 		.quad	0
 21197      00000000 
 21198 0520 00000000 		.quad	.LBB937
 21198      00000000 
 21199 0528 00000000 		.quad	.LBE937
 21199      00000000 
 21200 0530 00000000 		.quad	.LBB958
 21200      00000000 
 21201 0538 00000000 		.quad	.LBE958
 21201      00000000 
GAS LISTING /tmp/cceISX6N.s 			page 512


 21202 0540 00000000 		.quad	0
 21202      00000000 
 21203 0548 00000000 		.quad	0
 21203      00000000 
 21204 0550 00000000 		.quad	.LBB946
 21204      00000000 
 21205 0558 00000000 		.quad	.LBE946
 21205      00000000 
 21206 0560 00000000 		.quad	.LBB957
 21206      00000000 
 21207 0568 00000000 		.quad	.LBE957
 21207      00000000 
 21208 0570 00000000 		.quad	.LBB959
 21208      00000000 
 21209 0578 00000000 		.quad	.LBE959
 21209      00000000 
 21210 0580 00000000 		.quad	.LBB963
 21210      00000000 
 21211 0588 00000000 		.quad	.LBE963
 21211      00000000 
 21212 0590 00000000 		.quad	0
 21212      00000000 
 21213 0598 00000000 		.quad	0
 21213      00000000 
 21214 05a0 00000000 		.quad	.LBB960
 21214      00000000 
 21215 05a8 00000000 		.quad	.LBE960
 21215      00000000 
 21216 05b0 00000000 		.quad	.LBB964
 21216      00000000 
 21217 05b8 00000000 		.quad	.LBE964
 21217      00000000 
 21218 05c0 00000000 		.quad	0
 21218      00000000 
 21219 05c8 00000000 		.quad	0
 21219      00000000 
 21220 05d0 00000000 		.quad	.LBB965
 21220      00000000 
 21221 05d8 00000000 		.quad	.LBE965
 21221      00000000 
 21222 05e0 00000000 		.quad	.LBB971
 21222      00000000 
 21223 05e8 00000000 		.quad	.LBE971
 21223      00000000 
 21224 05f0 00000000 		.quad	0
 21224      00000000 
 21225 05f8 00000000 		.quad	0
 21225      00000000 
 21226 0600 00000000 		.quad	.LBB968
 21226      00000000 
 21227 0608 00000000 		.quad	.LBE968
 21227      00000000 
 21228 0610 00000000 		.quad	.LBB972
 21228      00000000 
 21229 0618 00000000 		.quad	.LBE972
 21229      00000000 
 21230 0620 00000000 		.quad	0
GAS LISTING /tmp/cceISX6N.s 			page 513


 21230      00000000 
 21231 0628 00000000 		.quad	0
 21231      00000000 
 21232 0630 00000000 		.quad	.LBB990
 21232      00000000 
 21233 0638 00000000 		.quad	.LBE990
 21233      00000000 
 21234 0640 00000000 		.quad	.LBB993
 21234      00000000 
 21235 0648 00000000 		.quad	.LBE993
 21235      00000000 
 21236 0650 00000000 		.quad	0
 21236      00000000 
 21237 0658 00000000 		.quad	0
 21237      00000000 
 21238 0660 00000000 		.quad	.LFB2182
 21238      00000000 
 21239 0668 00000000 		.quad	.LFE2182
 21239      00000000 
 21240 0670 00000000 		.quad	.LFB2369
 21240      00000000 
 21241 0678 00000000 		.quad	.LFE2369
 21241      00000000 
 21242 0680 00000000 		.quad	.LFB2219
 21242      00000000 
 21243 0688 00000000 		.quad	.LFE2219
 21243      00000000 
 21244 0690 00000000 		.quad	.LFB2108
 21244      00000000 
 21245 0698 00000000 		.quad	.LFE2108
 21245      00000000 
 21246 06a0 00000000 		.quad	.LFB2363
 21246      00000000 
 21247 06a8 00000000 		.quad	.LFE2363
 21247      00000000 
 21248 06b0 00000000 		.quad	0
 21248      00000000 
 21249 06b8 00000000 		.quad	0
 21249      00000000 
 21250              		.section	.debug_line,"",@progbits
 21251              	.Ldebug_line0:
 21252 0000 45070000 		.section	.debug_str,"MS",@progbits,1
 21252      0200B004 
 21252      00000101 
 21252      FB0E0D00 
 21252      01010101 
 21253              	.LASF66:
 21254 0000 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEpLERKS3_"
 21254      74366368 
 21254      726F6E6F 
 21254      38647572 
 21254      6174696F 
 21255              	.LASF704:
 21256 0036 6C6F6E67 		.string	"long long int"
 21256      206C6F6E 
 21256      6720696E 
 21256      7400
GAS LISTING /tmp/cceISX6N.s 			page 514


 21257              	.LASF895:
 21258 0044 706F7369 		.string	"positive_sign"
 21258      74697665 
 21258      5F736967 
 21258      6E00
 21259              	.LASF511:
 21260 0052 5F4D656D 		.string	"_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant,
 21260      5F666E3C 
 21260      646F7562 
 21260      6C652028 
 21260      556E6172 
 21261              	.LASF779:
 21262 00ff 676D7469 		.string	"gmtime"
 21262      6D6500
 21263              	.LASF932:
 21264 0106 6D627374 		.string	"mbstowcs"
 21264      6F776373 
 21264      00
 21265              	.LASF226:
 21266 010f 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcPKcS1_"
 21266      7331335F 
 21266      535F636F 
 21266      70795F63 
 21266      68617273 
 21267              	.LASF506:
 21268 012d 5F5A4E4B 		.string	"_ZNKSt17integral_constantIiLi0EEcviEv"
 21268      53743137 
 21268      696E7465 
 21268      6772616C 
 21268      5F636F6E 
 21269              	.LASF1012:
 21270 0153 5F5F6D65 		.string	"__mem"
 21270      6D00
 21271              	.LASF806:
 21272 0159 5F5F7061 		.string	"__pad1"
 21272      643100
 21273              	.LASF807:
 21274 0160 5F5F7061 		.string	"__pad2"
 21274      643200
 21275              	.LASF808:
 21276 0167 5F5F7061 		.string	"__pad3"
 21276      643300
 21277              	.LASF809:
 21278 016e 5F5F7061 		.string	"__pad4"
 21278      643400
 21279              	.LASF810:
 21280 0175 5F5F7061 		.string	"__pad5"
 21280      643500
 21281              	.LASF940:
 21282 017c 73747274 		.string	"strtoul"
 21282      6F756C00 
 21283              	.LASF173:
 21284 0184 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_leakedEv"
 21284      5373345F 
 21284      52657031 
 21284      325F4D5F 
 21284      69735F6C 
GAS LISTING /tmp/cceISX6N.s 			page 515


 21285              	.LASF295:
 21286 01a0 5F5A4E53 		.string	"_ZNSs6appendERKSsmm"
 21286      73366170 
 21286      70656E64 
 21286      45524B53 
 21286      736D6D00 
 21287              	.LASF700:
 21288 01b4 6C6F6E67 		.string	"long unsigned int"
 21288      20756E73 
 21288      69676E65 
 21288      6420696E 
 21288      7400
 21289              	.LASF666:
 21290 01c6 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplERKl"
 21290      395F5F67 
 21290      6E755F63 
 21290      78783137 
 21290      5F5F6E6F 
 21291              	.LASF79:
 21292 01f4 5F546F44 		.string	"_ToDur"
 21292      757200
 21293              	.LASF280:
 21294 01fb 5F5A4E53 		.string	"_ZNSsixEm"
 21294      73697845 
 21294      6D00
 21295              	.LASF982:
 21296 0205 746D7066 		.string	"tmpfile"
 21296      696C6500 
 21297              	.LASF401:
 21298 020d 696E6974 		.string	"initializer_list"
 21298      69616C69 
 21298      7A65725F 
 21298      6C697374 
 21298      00
 21299              	.LASF651:
 21300 021e 5F56616C 		.string	"_Value"
 21300      756500
 21301              	.LASF365:
 21302 0225 5F5A4E4B 		.string	"_ZNKSs13find_first_ofERKSsm"
 21302      53733133 
 21302      66696E64 
 21302      5F666972 
 21302      73745F6F 
 21303              	.LASF268:
 21304 0241 73687269 		.string	"shrink_to_fit"
 21304      6E6B5F74 
 21304      6F5F6669 
 21304      7400
 21305              	.LASF402:
 21306 024f 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE4sizeEv"
 21306      53743136 
 21306      696E6974 
 21306      69616C69 
 21306      7A65725F 
 21307              	.LASF616:
 21308 0272 666C7573 		.string	"flush<char, std::char_traits<char> >"
 21308      683C6368 
GAS LISTING /tmp/cceISX6N.s 			page 516


 21308      61722C20 
 21308      7374643A 
 21308      3A636861 
 21309              	.LASF28:
 21310 0297 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEppEi"
 21310      74366368 
 21310      726F6E6F 
 21310      38647572 
 21310      6174696F 
 21311              	.LASF81:
 21312 02cf 5F44656E 		.string	"_DenIsOne"
 21312      49734F6E 
 21312      6500
 21313              	.LASF272:
 21314 02d9 72657365 		.string	"reserve"
 21314      72766500 
 21315              	.LASF27:
 21316 02e1 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEppEv"
 21316      74366368 
 21316      726F6E6F 
 21316      38647572 
 21316      6174696F 
 21317              	.LASF216:
 21318 0319 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 21318      74313163 
 21318      6861725F 
 21318      74726169 
 21318      74734963 
 21319              	.LASF529:
 21320 033b 5F526573 		.string	"_Result"
 21320      756C7400 
 21321              	.LASF505:
 21322 0343 6F706572 		.string	"operator std::integral_constant<int, 0>::value_type"
 21322      61746F72 
 21322      20737464 
 21322      3A3A696E 
 21322      74656772 
 21323              	.LASF889:
 21324 0377 67726F75 		.string	"grouping"
 21324      70696E67 
 21324      00
 21325              	.LASF256:
 21326 0380 63726265 		.string	"crbegin"
 21326      67696E00 
 21327              	.LASF520:
 21328 0388 5F42696E 		.ascii	"_Bind_helper<false, double (UnaryExpr<BinaryExpr<BinaryExpr<"
 21328      645F6865 
 21328      6C706572 
 21328      3C66616C 
 21328      73652C20 
 21329 03c4 42696E61 		.ascii	"BinaryExpr<Bina"
 21329      72794578 
 21329      70723C42 
 21329      696E61
 21330 03d3 72794578 		.string	"ryExpr<Variable, Constant, Product>, Constant, Sum>, Constant, Product>, Constant, Sum>, 
 21330      70723C56 
 21330      61726961 
GAS LISTING /tmp/cceISX6N.s 			page 517


 21330      626C652C 
 21330      20436F6E 
 21331              	.LASF461:
 21332 04d4 75707065 		.string	"uppercase"
 21332      72636173 
 21332      6500
 21333              	.LASF748:
 21334 04de 75696E74 		.string	"uintptr_t"
 21334      7074725F 
 21334      7400
 21335              	.LASF655:
 21336 04e8 5F5F6E6F 		.string	"__normal_iterator"
 21336      726D616C 
 21336      5F697465 
 21336      7261746F 
 21336      7200
 21337              	.LASF315:
 21338 04fa 5F5A4E53 		.string	"_ZNSs6insertEmPKc"
 21338      7336696E 
 21338      73657274 
 21338      456D504B 
 21338      6300
 21339              	.LASF278:
 21340 050c 6F706572 		.string	"operator[]"
 21340      61746F72 
 21340      5B5D00
 21341              	.LASF1097:
 21342 0517 636F6D70 		.string	"compiler.cpp"
 21342      696C6572 
 21342      2E637070 
 21342      00
 21343              	.LASF349:
 21344 0524 635F7374 		.string	"c_str"
 21344      7200
 21345              	.LASF887:
 21346 052a 64656369 		.string	"decimal_point"
 21346      6D616C5F 
 21346      706F696E 
 21346      7400
 21347              	.LASF695:
 21348 0538 5F5F6578 		.string	"__exchange_and_add"
 21348      6368616E 
 21348      67655F61 
 21348      6E645F61 
 21348      646400
 21349              	.LASF340:
 21350 054b 5F5A4E53 		.string	"_ZNSs14_M_replace_auxEmmmc"
 21350      7331345F 
 21350      4D5F7265 
 21350      706C6163 
 21350      655F6175 
 21351              	.LASF253:
 21352 0566 5F5A4E4B 		.string	"_ZNKSs6cbeginEv"
 21352      53733663 
 21352      62656769 
 21352      6E457600 
 21353              	.LASF379:
GAS LISTING /tmp/cceISX6N.s 			page 518


 21354 0576 66696E64 		.string	"find_last_not_of"
 21354      5F6C6173 
 21354      745F6E6F 
 21354      745F6F66 
 21354      00
 21355              	.LASF648:
 21356 0587 5F5F6D61 		.string	"__max"
 21356      7800
 21357              	.LASF647:
 21358 058d 5F5F6D69 		.string	"__min"
 21358      6E00
 21359              	.LASF1038:
 21360 0593 74696D65 		.ascii	"timeExec<10000, std::_Bind<std::_Mem_fn<double (UnaryExpr<Bi"
 21360      45786563 
 21360      3C313030 
 21360      30302C20 
 21360      7374643A 
 21361 05cf 6E617279 		.ascii	"naryExpr<BinaryExpr<BinaryExpr<BinaryE"
 21361      45787072 
 21361      3C42696E 
 21361      61727945 
 21361      7870723C 
 21362 05f5 7870723C 		.string	"xpr<Variable, Constant, Product>, Constant, Sum>, Constant, Product>, Constant, Sum>, Sig
 21362      56617269 
 21362      61626C65 
 21362      2C20436F 
 21362      6E737461 
 21363              	.LASF552:
 21364 06f6 5F496478 		.string	"_Idx"
 21364      00
 21365              	.LASF235:
 21366 06fb 7E626173 		.string	"~basic_string"
 21366      69635F73 
 21366      7472696E 
 21366      6700
 21367              	.LASF1065:
 21368 0709 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1000000000EE3numE"
 21368      74357261 
 21368      74696F49 
 21368      4C6C3145 
 21368      4C6C3130 
 21369              	.LASF526:
 21370 072d 5F42696E 		.string	"_Bind"
 21370      6400
 21371              	.LASF773:
 21372 0733 636C6F63 		.string	"clock"
 21372      6B00
 21373              	.LASF984:
 21374 0739 756E6765 		.string	"ungetc"
 21374      746300
 21375              	.LASF232:
 21376 0740 5F5A4E53 		.string	"_ZNSs12_M_leak_hardEv"
 21376      7331325F 
 21376      4D5F6C65 
 21376      616B5F68 
 21376      61726445 
 21377              	.LASF415:
GAS LISTING /tmp/cceISX6N.s 			page 519


 21378 0756 5F535F73 		.string	"_S_showpoint"
 21378      686F7770 
 21378      6F696E74 
 21378      00
 21379              	.LASF421:
 21380 0763 5F535F62 		.string	"_S_basefield"
 21380      61736566 
 21380      69656C64 
 21380      00
 21381              	.LASF426:
 21382 0770 5F535F61 		.string	"_S_app"
 21382      707000
 21383              	.LASF1007:
 21384 0777 5F5A4E4B 		.string	"_ZNK9UnaryExprI10BinaryExprIS0_IS0_IS0_I8Variable8Constant7ProductES2_3SumES2_S3_ES2_S5_E
 21384      39556E61 
 21384      72794578 
 21384      70724931 
 21384      3042696E 
 21385              	.LASF886:
 21386 07e1 6C636F6E 		.string	"lconv"
 21386      7600
 21387              	.LASF1054:
 21388 07e7 72657375 		.string	"result"
 21388      6C7400
 21389              	.LASF605:
 21390 07ee 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 21390      53743962 
 21390      61736963 
 21390      5F696F73 
 21390      49635374 
 21391              	.LASF1018:
 21392 081e 5F5F6C68 		.string	"__lhs"
 21392      7300
 21393              	.LASF239:
 21394 0824 5F5A4E53 		.string	"_ZNSsaSEOSs"
 21394      73615345 
 21394      4F537300 
 21395              	.LASF1090:
 21396 0830 5F5A4E53 		.string	"_ZNSt17integral_constantIlLl1000000EE5valueE"
 21396      74313769 
 21396      6E746567 
 21396      72616C5F 
 21396      636F6E73 
 21397              	.LASF245:
 21398 085d 5F5A4E4B 		.string	"_ZNKSs3endEv"
 21398      53733365 
 21398      6E644576 
 21398      00
 21399              	.LASF225:
 21400 086a 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcS_S_"
 21400      7331335F 
 21400      535F636F 
 21400      70795F63 
 21400      68617273 
 21401              	.LASF562:
 21402 0886 5F486561 		.string	"_Head"
 21402      6400
GAS LISTING /tmp/cceISX6N.s 			page 520


 21403              	.LASF185:
 21404 088c 5F5A4E53 		.string	"_ZNSs4_Rep7_M_grabERKSaIcES2_"
 21404      73345F52 
 21404      6570375F 
 21404      4D5F6772 
 21404      61624552 
 21405              	.LASF12:
 21406 08aa 5F5A4E4B 		.string	"_ZNKSt17integral_constantImLm0EEcvmEv"
 21406      53743137 
 21406      696E7465 
 21406      6772616C 
 21406      5F636F6E 
 21407              	.LASF438:
 21408 08d0 5F535F69 		.string	"_S_ios_iostate_end"
 21408      6F735F69 
 21408      6F737461 
 21408      74655F65 
 21408      6E6400
 21409              	.LASF665:
 21410 08e3 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEpLERKl"
 21410      5F5F676E 
 21410      755F6378 
 21410      7831375F 
 21410      5F6E6F72 
 21411              	.LASF1064:
 21412 0910 5F5A4E53 		.string	"_ZNSt17integral_constantImLm0EE5valueE"
 21412      74313769 
 21412      6E746567 
 21412      72616C5F 
 21412      636F6E73 
 21413              	.LASF356:
 21414 0937 5F5A4E4B 		.string	"_ZNKSs4findERKSsm"
 21414      53733466 
 21414      696E6445 
 21414      524B5373 
 21414      6D00
 21415              	.LASF400:
 21416 0949 5F4D5F6C 		.string	"_M_len"
 21416      656E00
 21417              	.LASF630:
 21418 0950 5F5F6F73 		.string	"__ostream_insert<char, std::char_traits<char> >"
 21418      74726561 
 21418      6D5F696E 
 21418      73657274 
 21418      3C636861 
 21419              	.LASF392:
 21420 0980 5F436861 		.string	"_CharT"
 21420      725400
 21421              	.LASF764:
 21422 0987 746D5F6D 		.string	"tm_mday"
 21422      64617900 
 21423              	.LASF90:
 21424 098f 5F5A4E4B 		.string	"_ZNKSt17integral_constantIlLl1EEcvlEv"
 21424      53743137 
 21424      696E7465 
 21424      6772616C 
 21424      5F636F6E 
GAS LISTING /tmp/cceISX6N.s 			page 521


 21425              	.LASF109:
 21426 09b5 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 21426      53743135 
 21426      5F5F6578 
 21426      63657074 
 21426      696F6E5F 
 21427              	.LASF974:
 21428 09e5 67657463 		.string	"getchar"
 21428      68617200 
 21429              	.LASF729:
 21430 09ed 75696E74 		.string	"uint32_t"
 21430      33325F74 
 21430      00
 21431              	.LASF149:
 21432 09f6 72656665 		.string	"reference"
 21432      72656E63 
 21432      6500
 21433              	.LASF707:
 21434 0a00 666C6F61 		.string	"float_t"
 21434      745F7400 
 21435              	.LASF132:
 21436 0a08 6D6F7665 		.string	"move"
 21436      00
 21437              	.LASF970:
 21438 0a0d 66736565 		.string	"fseek"
 21438      6B00
 21439              	.LASF771:
 21440 0a13 746D5F7A 		.string	"tm_zone"
 21440      6F6E6500 
 21441              	.LASF996:
 21442 0a1b 45787031 		.string	"Exp1"
 21442      00
 21443              	.LASF997:
 21444 0a20 45787032 		.string	"Exp2"
 21444      00
 21445              	.LASF425:
 21446 0a25 5F496F73 		.string	"_Ios_Openmode"
 21446      5F4F7065 
 21446      6E6D6F64 
 21446      6500
 21447              	.LASF672:
 21448 0a33 5F5F6E6F 		.string	"__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::alloc
 21448      726D616C 
 21448      5F697465 
 21448      7261746F 
 21448      723C6368 
 21449              	.LASF427:
 21450 0a9b 5F535F61 		.string	"_S_ate"
 21450      746500
 21451              	.LASF251:
 21452 0aa2 5F5A4E4B 		.string	"_ZNKSs4rendEv"
 21452      53733472 
 21452      656E6445 
 21452      7600
 21453              	.LASF859:
 21454 0ab0 7763736E 		.string	"wcsncat"
 21454      63617400 
GAS LISTING /tmp/cceISX6N.s 			page 522


 21455              	.LASF456:
 21456 0ab8 73686F77 		.string	"showbase"
 21456      62617365 
 21456      00
 21457              	.LASF166:
 21458 0ac1 5F4D5F63 		.string	"_M_capacity"
 21458      61706163 
 21458      69747900 
 21459              	.LASF512:
 21460 0acd 5F46756E 		.string	"_Functor"
 21460      63746F72 
 21460      00
 21461              	.LASF160:
 21462 0ad6 69746572 		.string	"iterator"
 21462      61746F72 
 21462      00
 21463              	.LASF422:
 21464 0adf 5F535F66 		.string	"_S_floatfield"
 21464      6C6F6174 
 21464      6669656C 
 21464      6400
 21465              	.LASF705:
 21466 0aed 6C6F6E67 		.string	"long double"
 21466      20646F75 
 21466      626C6500 
 21467              	.LASF35:
 21468 0af9 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEmIERKS3_"
 21468      74366368 
 21468      726F6E6F 
 21468      38647572 
 21468      6174696F 
 21469              	.LASF86:
 21470 0b35 5F447572 		.string	"_Dur1"
 21470      3100
 21471              	.LASF87:
 21472 0b3b 5F447572 		.string	"_Dur2"
 21472      3200
 21473              	.LASF308:
 21474 0b41 5F5A4E53 		.string	"_ZNSs6assignESt16initializer_listIcE"
 21474      73366173 
 21474      7369676E 
 21474      45537431 
 21474      36696E69 
 21475              	.LASF80:
 21476 0b66 5F4E756D 		.string	"_NumIsOne"
 21476      49734F6E 
 21476      6500
 21477              	.LASF420:
 21478 0b70 5F535F61 		.string	"_S_adjustfield"
 21478      646A7573 
 21478      74666965 
 21478      6C6400
 21479              	.LASF772:
 21480 0b7f 5F5F7468 		.string	"__throw_bad_cast"
 21480      726F775F 
 21480      6261645F 
 21480      63617374 
GAS LISTING /tmp/cceISX6N.s 			page 523


 21480      00
 21481              	.LASF684:
 21482 0b90 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv"
 21482      395F5F67 
 21482      6E755F63 
 21482      78783137 
 21482      5F5F6E6F 
 21483              	.LASF143:
 21484 0bc0 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 21484      74313163 
 21484      6861725F 
 21484      74726169 
 21484      74734963 
 21485              	.LASF452:
 21486 0bdc 696E7465 		.string	"internal"
 21486      726E616C 
 21486      00
 21487              	.LASF229:
 21488 0be5 5F4D5F6D 		.string	"_M_mutate"
 21488      75746174 
 21488      6500
 21489              	.LASF1066:
 21490 0bef 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1000000000EE3denE"
 21490      74357261 
 21490      74696F49 
 21490      4C6C3145 
 21490      4C6C3130 
 21491              	.LASF827:
 21492 0c13 66676574 		.string	"fgetwc"
 21492      776300
 21493              	.LASF828:
 21494 0c1a 66676574 		.string	"fgetws"
 21494      777300
 21495              	.LASF302:
 21496 0c21 5F5A4E53 		.string	"_ZNSs6assignERKSs"
 21496      73366173 
 21496      7369676E 
 21496      45524B53 
 21496      7300
 21497              	.LASF381:
 21498 0c33 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcmm"
 21498      53733136 
 21498      66696E64 
 21498      5F6C6173 
 21498      745F6E6F 
 21499              	.LASF1100:
 21500 0c52 5F5F6465 		.string	"__debug"
 21500      62756700 
 21501              	.LASF150:
 21502 0c5a 636F6E73 		.string	"const_reference"
 21502      745F7265 
 21502      66657265 
 21502      6E636500 
 21503              	.LASF607:
 21504 0c6a 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 21504      74396261 
 21504      7369635F 
GAS LISTING /tmp/cceISX6N.s 			page 524


 21504      696F7349 
 21504      63537431 
 21505              	.LASF431:
 21506 0ca9 5F535F74 		.string	"_S_trunc"
 21506      72756E63 
 21506      00
 21507              	.LASF418:
 21508 0cb2 5F535F75 		.string	"_S_unitbuf"
 21508      6E697462 
 21508      756600
 21509              	.LASF282:
 21510 0cbd 5F5A4E53 		.string	"_ZNSs2atEm"
 21510      73326174 
 21510      456D00
 21511              	.LASF745:
 21512 0cc8 75696E74 		.string	"uint_fast32_t"
 21512      5F666173 
 21512      7433325F 
 21512      7400
 21513              	.LASF915:
 21514 0cd6 35646976 		.string	"5div_t"
 21514      5F7400
 21515              	.LASF721:
 21516 0cdd 626F6F6C 		.string	"bool"
 21516      00
 21517              	.LASF416:
 21518 0ce2 5F535F73 		.string	"_S_showpos"
 21518      686F7770 
 21518      6F7300
 21519              	.LASF249:
 21520 0ced 72656E64 		.string	"rend"
 21520      00
 21521              	.LASF995:
 21522 0cf2 5F5A4E4B 		.string	"_ZNK10BinaryExprI8Variable8Constant7ProductE4evalEv"
 21522      31304269 
 21522      6E617279 
 21522      45787072 
 21522      49385661 
 21523              	.LASF992:
 21524 0d26 65787031 		.string	"exp1_"
 21524      5F00
 21525              	.LASF21:
 21526 0d2c 5F5A4E4B 		.string	"_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE5countEv"
 21526      53743663 
 21526      68726F6E 
 21526      6F386475 
 21526      72617469 
 21527              	.LASF628:
 21528 0d69 616C6C6F 		.string	"allocator_arg"
 21528      6361746F 
 21528      725F6172 
 21528      6700
 21529              	.LASF449:
 21530 0d77 666D7466 		.string	"fmtflags"
 21530      6C616773 
 21530      00
 21531              	.LASF42:
GAS LISTING /tmp/cceISX6N.s 			page 525


 21532 0d80 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE3minEv"
 21532      74366368 
 21532      726F6E6F 
 21532      38647572 
 21532      6174696F 
 21533              	.LASF277:
 21534 0dba 5F5A4E4B 		.string	"_ZNKSs5emptyEv"
 21534      53733565 
 21534      6D707479 
 21534      457600
 21535              	.LASF404:
 21536 0dc9 73747269 		.string	"string"
 21536      6E6700
 21537              	.LASF260:
 21538 0dd0 73697A65 		.string	"size"
 21538      00
 21539              	.LASF318:
 21540 0dd5 65726173 		.string	"erase"
 21540      6500
 21541              	.LASF472:
 21542 0ddb 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 21542      635F6F73 
 21542      74726561 
 21542      6D3C6368 
 21542      61722C20 
 21543              	.LASF993:
 21544 0e08 65787032 		.string	"exp2_"
 21544      5F00
 21545              	.LASF550:
 21546 0e0e 5F4D5F73 		.string	"_M_swap"
 21546      77617000 
 21547              	.LASF320:
 21548 0e16 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE"
 21548      73356572 
 21548      61736545 
 21548      4E395F5F 
 21548      676E755F 
 21549              	.LASF1074:
 21550 0e48 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE"
 21550      5F5F676E 
 21550      755F6378 
 21550      7832345F 
 21550      5F6E756D 
 21551              	.LASF445:
 21552 0e7a 5F535F73 		.string	"_S_synced_with_stdio"
 21552      796E6365 
 21552      645F7769 
 21552      74685F73 
 21552      7464696F 
 21553              	.LASF1041:
 21554 0e8f 6E616D65 		.string	"name"
 21554      00
 21555              	.LASF969:
 21556 0e94 6672656F 		.string	"freopen"
 21556      70656E00 
 21557              	.LASF227:
 21558 0e9c 5F535F63 		.string	"_S_compare"
GAS LISTING /tmp/cceISX6N.s 			page 526


 21558      6F6D7061 
 21558      726500
 21559              	.LASF935:
 21560 0ea7 71756963 		.string	"quick_exit"
 21560      6B5F6578 
 21560      697400
 21561              	.LASF762:
 21562 0eb2 746D5F6D 		.string	"tm_min"
 21562      696E00
 21563              	.LASF344:
 21564 0eb9 5F5A4E53 		.string	"_ZNSs18_S_construct_aux_2EmcRKSaIcE"
 21564      7331385F 
 21564      535F636F 
 21564      6E737472 
 21564      7563745F 
 21565              	.LASF498:
 21566 0edd 6F706572 		.string	"operator-<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1l, 
 21566      61746F72 
 21566      2D3C7374 
 21566      643A3A63 
 21566      68726F6E 
 21567              	.LASF891:
 21568 0f86 63757272 		.string	"currency_symbol"
 21568      656E6379 
 21568      5F73796D 
 21568      626F6C00 
 21569              	.LASF362:
 21570 0f96 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcm"
 21570      53733572 
 21570      66696E64 
 21570      45504B63 
 21570      6D00
 21571              	.LASF831:
 21572 0fa8 66776964 		.string	"fwide"
 21572      6500
 21573              	.LASF925:
 21574 0fae 61746F66 		.string	"atof"
 21574      00
 21575              	.LASF926:
 21576 0fb3 61746F69 		.string	"atoi"
 21576      00
 21577              	.LASF927:
 21578 0fb8 61746F6C 		.string	"atol"
 21578      00
 21579              	.LASF674:
 21580 0fbd 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEptEv"
 21580      395F5F67 
 21580      6E755F63 
 21580      78783137 
 21580      5F5F6E6F 
 21581              	.LASF373:
 21582 0fea 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEcm"
 21582      53733132 
 21582      66696E64 
 21582      5F6C6173 
 21582      745F6F66 
 21583              	.LASF544:
GAS LISTING /tmp/cceISX6N.s 			page 527


 21584 1002 5F576561 		.string	"_Weak_result_type_impl"
 21584      6B5F7265 
 21584      73756C74 
 21584      5F747970 
 21584      655F696D 
 21585              	.LASF812:
 21586 1019 5F756E75 		.string	"_unused2"
 21586      73656432 
 21586      00
 21587              	.LASF273:
 21588 1022 5F5A4E53 		.string	"_ZNSs7reserveEm"
 21588      73377265 
 21588      73657276 
 21588      65456D00 
 21589              	.LASF500:
 21590 1032 7E5F416C 		.string	"~_Alloc_hider"
 21590      6C6F635F 
 21590      68696465 
 21590      7200
 21591              	.LASF98:
 21592 1040 72617469 		.string	"ratio<1000000000l, 1l>"
 21592      6F3C3130 
 21592      30303030 
 21592      30303030 
 21592      6C2C2031 
 21593              	.LASF317:
 21594 1057 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc"
 21594      7336696E 
 21594      73657274 
 21594      454E395F 
 21594      5F676E75 
 21595              	.LASF145:
 21596 108b 73697A65 		.string	"size_t"
 21596      5F7400
 21597              	.LASF1068:
 21598 1092 5F5A4E53 		.string	"_ZNSt17integral_constantIlLl1000000000EE5valueE"
 21598      74313769 
 21598      6E746567 
 21598      72616C5F 
 21598      636F6E73 
 21599              	.LASF582:
 21600 10c2 5F55456C 		.string	"_UElements"
 21600      656D656E 
 21600      747300
 21601              	.LASF410:
 21602 10cd 5F535F6C 		.string	"_S_left"
 21602      65667400 
 21603              	.LASF479:
 21604 10d5 5F56616C 		.string	"_ValueT"
 21604      75655400 
 21605              	.LASF115:
 21606 10dd 6F706572 		.string	"operator bool"
 21606      61746F72 
 21606      20626F6F 
 21606      6C00
 21607              	.LASF364:
 21608 10eb 66696E64 		.string	"find_first_of"
GAS LISTING /tmp/cceISX6N.s 			page 528


 21608      5F666972 
 21608      73745F6F 
 21608      6600
 21609              	.LASF723:
 21610 10f9 696E7438 		.string	"int8_t"
 21610      5F7400
 21611              	.LASF119:
 21612 1100 6E756C6C 		.string	"nullptr_t"
 21612      7074725F 
 21612      7400
 21613              	.LASF322:
 21614 110a 706F705F 		.string	"pop_back"
 21614      6261636B 
 21614      00
 21615              	.LASF1069:
 21616 1113 5F5A4E53 		.string	"_ZNSt5ratioILl1000000000ELl1EE3numE"
 21616      74357261 
 21616      74696F49 
 21616      4C6C3130 
 21616      30303030 
 21617              	.LASF760:
 21618 1137 74696D65 		.string	"time_t"
 21618      5F7400
 21619              	.LASF91:
 21620 113e 696E7465 		.string	"integral_constant<long int, 1000000000l>"
 21620      6772616C 
 21620      5F636F6E 
 21620      7374616E 
 21620      743C6C6F 
 21621              	.LASF737:
 21622 1167 75696E74 		.string	"uint_least32_t"
 21622      5F6C6561 
 21622      73743332 
 21622      5F7400
 21623              	.LASF1093:
 21624 1176 5F5F7072 		.string	"__printf_chk"
 21624      696E7466 
 21624      5F63686B 
 21624      00
 21625              	.LASF1002:
 21626 1183 42696E61 		.string	"BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>, Constant, Sum>,
 21626      72794578 
 21626      70723C42 
 21626      696E6172 
 21626      79457870 
 21627              	.LASF250:
 21628 1200 5F5A4E53 		.string	"_ZNSs4rendEv"
 21628      73347265 
 21628      6E644576 
 21628      00
 21629              	.LASF811:
 21630 120d 5F6D6F64 		.string	"_mode"
 21630      6500
 21631              	.LASF1010:
 21632 1213 74686973 		.string	"this"
 21632      00
 21633              	.LASF483:
GAS LISTING /tmp/cceISX6N.s 			page 529


 21634 1218 5F5A4E53 		.string	"_ZNSo3putEc"
 21634      6F337075 
 21634      74456300 
 21635              	.LASF248:
 21636 1224 5F5A4E4B 		.string	"_ZNKSs6rbeginEv"
 21636      53733672 
 21636      62656769 
 21636      6E457600 
 21637              	.LASF116:
 21638 1234 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 21638      53743135 
 21638      5F5F6578 
 21638      63657074 
 21638      696F6E5F 
 21639              	.LASF247:
 21640 1260 5F5A4E53 		.string	"_ZNSs6rbeginEv"
 21640      73367262 
 21640      6567696E 
 21640      457600
 21641              	.LASF8:
 21642 126f 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb0EEcvbEv"
 21642      53743137 
 21642      696E7465 
 21642      6772616C 
 21642      5F636F6E 
 21643              	.LASF1011:
 21644 1295 5F5F6774 		.string	"__gthread_active_p"
 21644      68726561 
 21644      645F6163 
 21644      74697665 
 21644      5F7000
 21645              	.LASF509:
 21646 12a8 5F5F646F 		.string	"__do_wrap"
 21646      5F777261 
 21646      7000
 21647              	.LASF69:
 21648 12b2 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEdVERKd"
 21648      74366368 
 21648      726F6E6F 
 21648      38647572 
 21648      6174696F 
 21649              	.LASF909:
 21650 12e6 696E745F 		.string	"int_p_sign_posn"
 21650      705F7369 
 21650      676E5F70 
 21650      6F736E00 
 21651              	.LASF916:
 21652 12f6 71756F74 		.string	"quot"
 21652      00
 21653              	.LASF821:
 21654 12fb 5F5F7763 		.string	"__wchb"
 21654      686200
 21655              	.LASF135:
 21656 1302 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 21656      74313163 
 21656      6861725F 
 21656      74726169 
GAS LISTING /tmp/cceISX6N.s 			page 530


 21656      74734963 
 21657              	.LASF1108:
 21658 1324 5F5F7374 		.string	"__static_initialization_and_destruction_0"
 21658      61746963 
 21658      5F696E69 
 21658      7469616C 
 21658      697A6174 
 21659              	.LASF372:
 21660 134e 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcm"
 21660      53733132 
 21660      66696E64 
 21660      5F6C6173 
 21660      745F6F66 
 21661              	.LASF203:
 21662 1368 5F4D5F69 		.string	"_M_iend"
 21662      656E6400 
 21663              	.LASF781:
 21664 1370 73747266 		.string	"strftime"
 21664      74696D65 
 21664      00
 21665              	.LASF765:
 21666 1379 746D5F6D 		.string	"tm_mon"
 21666      6F6E00
 21667              	.LASF942:
 21668 1380 77637374 		.string	"wcstombs"
 21668      6F6D6273 
 21668      00
 21669              	.LASF988:
 21670 1389 746F7763 		.string	"towctrans"
 21670      7472616E 
 21670      7300
 21671              	.LASF261:
 21672 1393 5F5A4E4B 		.string	"_ZNKSs4sizeEv"
 21672      53733473 
 21672      697A6545 
 21672      7600
 21673              	.LASF680:
 21674 13a1 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEpLERKl"
 21674      5F5F676E 
 21674      755F6378 
 21674      7831375F 
 21674      5F6E6F72 
 21675              	.LASF441:
 21676 13cf 5F535F63 		.string	"_S_cur"
 21676      757200
 21677              	.LASF1044:
 21678 13d6 64696666 		.string	"diff"
 21678      00
 21679              	.LASF294:
 21680 13db 5F5A4E53 		.string	"_ZNSs6appendERKSs"
 21680      73366170 
 21680      70656E64 
 21680      45524B53 
 21680      7300
 21681              	.LASF357:
 21682 13ed 5F5A4E4B 		.string	"_ZNKSs4findEPKcm"
 21682      53733466 
GAS LISTING /tmp/cceISX6N.s 			page 531


 21682      696E6445 
 21682      504B636D 
 21682      00
 21683              	.LASF1022:
 21684 13fe 5F5F6F73 		.string	"__os"
 21684      00
 21685              	.LASF551:
 21686 1403 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm1EIEE7_M_swapERS0_"
 21686      7431315F 
 21686      5475706C 
 21686      655F696D 
 21686      706C494C 
 21687              	.LASF499:
 21688 142b 5F4D5F61 		.string	"_M_a"
 21688      00
 21689              	.LASF524:
 21690 1430 5F4D5F66 		.string	"_M_f"
 21690      00
 21691              	.LASF399:
 21692 1435 5F4D5F61 		.string	"_M_array"
 21692      72726179 
 21692      00
 21693              	.LASF156:
 21694 143e 5F4D5F70 		.string	"_M_p"
 21694      00
 21695              	.LASF435:
 21696 1443 5F535F62 		.string	"_S_badbit"
 21696      61646269 
 21696      7400
 21697              	.LASF744:
 21698 144d 75696E74 		.string	"uint_fast16_t"
 21698      5F666173 
 21698      7431365F 
 21698      7400
 21699              	.LASF478:
 21700 145b 5F5A4E53 		.string	"_ZNSo9_M_insertIdEERSoT_"
 21700      6F395F4D 
 21700      5F696E73 
 21700      65727449 
 21700      64454552 
 21701              	.LASF908:
 21702 1474 696E745F 		.string	"int_n_sep_by_space"
 21702      6E5F7365 
 21702      705F6279 
 21702      5F737061 
 21702      636500
 21703              	.LASF548:
 21704 1487 5F547570 		.string	"_Tuple_impl<1ul>"
 21704      6C655F69 
 21704      6D706C3C 
 21704      31756C3E 
 21704      00
 21705              	.LASF763:
 21706 1498 746D5F68 		.string	"tm_hour"
 21706      6F757200 
 21707              	.LASF167:
 21708 14a0 5F4D5F72 		.string	"_M_refcount"
GAS LISTING /tmp/cceISX6N.s 			page 532


 21708      6566636F 
 21708      756E7400 
 21709              	.LASF1081:
 21710 14ac 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__maxE"
 21710      5F5F676E 
 21710      755F6378 
 21710      7832345F 
 21710      5F6E756D 
 21711              	.LASF692:
 21712 14de 5F5F6E75 		.string	"__numeric_traits_integer<char>"
 21712      6D657269 
 21712      635F7472 
 21712      61697473 
 21712      5F696E74 
 21713              	.LASF133:
 21714 14fd 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 21714      74313163 
 21714      6861725F 
 21714      74726169 
 21714      74734963 
 21715              	.LASF1031:
 21716 151f 65787031 		.string	"exp1"
 21716      00
 21717              	.LASF1032:
 21718 1524 65787032 		.string	"exp2"
 21718      00
 21719              	.LASF587:
 21720 1529 5F547570 		.string	"_Tuple"
 21720      6C6500
 21721              	.LASF207:
 21722 1530 5F4D5F63 		.string	"_M_check"
 21722      6865636B 
 21722      00
 21723              	.LASF750:
 21724 1539 75696E74 		.string	"uintmax_t"
 21724      6D61785F 
 21724      7400
 21725              	.LASF482:
 21726 1543 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE3endEv"
 21726      53743136 
 21726      696E6974 
 21726      69616C69 
 21726      7A65725F 
 21727              	.LASF802:
 21728 1565 5F767461 		.string	"_vtable_offset"
 21728      626C655F 
 21728      6F666673 
 21728      657400
 21729              	.LASF517:
 21730 1574 5F417267 		.string	"_Args"
 21730      7300
 21731              	.LASF1005:
 21732 157a 6578705F 		.string	"exp_"
 21732      00
 21733              	.LASF88:
 21734 157f 696E7465 		.string	"integral_constant<long int, 1l>"
 21734      6772616C 
GAS LISTING /tmp/cceISX6N.s 			page 533


 21734      5F636F6E 
 21734      7374616E 
 21734      743C6C6F 
 21735              	.LASF531:
 21736 159f 5F536967 		.string	"_Signature"
 21736      6E617475 
 21736      726500
 21737              	.LASF1056:
 21738 15aa 5F5F6C61 		.string	"__lambda0"
 21738      6D626461 
 21738      3000
 21739              	.LASF1057:
 21740 15b4 3C6C616D 		.string	"<lambda>"
 21740      6264613E 
 21740      00
 21741              	.LASF576:
 21742 15bd 7475706C 		.string	"tuple<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>,
 21742      653C556E 
 21742      61727945 
 21742      7870723C 
 21742      42696E61 
 21743              	.LASF646:
 21744 1656 5F5F6E75 		.string	"__numeric_traits_integer<int>"
 21744      6D657269 
 21744      635F7472 
 21744      61697473 
 21744      5F696E74 
 21745              	.LASF31:
 21746 1674 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEmmEi"
 21746      74366368 
 21746      726F6E6F 
 21746      38647572 
 21746      6174696F 
 21747              	.LASF335:
 21748 16ac 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_"
 21748      73377265 
 21748      706C6163 
 21748      65454E39 
 21748      5F5F676E 
 21749              	.LASF30:
 21750 16e9 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEmmEv"
 21750      74366368 
 21750      726F6E6F 
 21750      38647572 
 21750      6174696F 
 21751              	.LASF172:
 21752 1721 5F4D5F69 		.string	"_M_is_leaked"
 21752      735F6C65 
 21752      616B6564 
 21752      00
 21753              	.LASF933:
 21754 172e 6D62746F 		.string	"mbtowc"
 21754      776300
 21755              	.LASF930:
 21756 1735 6C646976 		.string	"ldiv"
 21756      00
 21757              	.LASF570:
GAS LISTING /tmp/cceISX6N.s 			page 534


 21758 173a 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 21758      7431315F 
 21758      5475706C 
 21758      655F696D 
 21758      706C494C 
 21759              	.LASF442:
 21760 17c2 5F535F65 		.string	"_S_end"
 21760      6E6400
 21761              	.LASF5:
 21762 17c9 76616C75 		.string	"value_type"
 21762      655F7479 
 21762      706500
 21763              	.LASF768:
 21764 17d4 746D5F79 		.string	"tm_yday"
 21764      64617900 
 21765              	.LASF694:
 21766 17dc 5F5F6E75 		.string	"__numeric_traits_integer<long int>"
 21766      6D657269 
 21766      635F7472 
 21766      61697473 
 21766      5F696E74 
 21767              	.LASF465:
 21768 17ff 62616462 		.string	"badbit"
 21768      697400
 21769              	.LASF454:
 21770 1806 72696768 		.string	"right"
 21770      7400
 21771              	.LASF967:
 21772 180c 666F7065 		.string	"fopen"
 21772      6E00
 21773              	.LASF105:
 21774 1812 5F4D5F72 		.string	"_M_release"
 21774      656C6561 
 21774      736500
 21775              	.LASF726:
 21776 181d 696E7436 		.string	"int64_t"
 21776      345F7400 
 21777              	.LASF501:
 21778 1825 7475706C 		.string	"tuple<>"
 21778      653C3E00 
 21779              	.LASF205:
 21780 182d 5F4D5F6C 		.string	"_M_leak"
 21780      65616B00 
 21781              	.LASF854:
 21782 1835 77637363 		.string	"wcscoll"
 21782      6F6C6C00 
 21783              	.LASF606:
 21784 183d 73657473 		.string	"setstate"
 21784      74617465 
 21784      00
 21785              	.LASF71:
 21786 1846 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEE4zeroEv"
 21786      74366368 
 21786      726F6E6F 
 21786      38647572 
 21786      6174696F 
 21787              	.LASF1017:
GAS LISTING /tmp/cceISX6N.s 			page 535


 21788 187b 5F5F6F75 		.string	"__out"
 21788      7400
 21789              	.LASF327:
 21790 1881 5F5A4E53 		.string	"_ZNSs7replaceEmmPKcm"
 21790      73377265 
 21790      706C6163 
 21790      65456D6D 
 21790      504B636D 
 21791              	.LASF347:
 21792 1896 5F5A4E4B 		.string	"_ZNKSs4copyEPcmm"
 21792      53733463 
 21792      6F707945 
 21792      50636D6D 
 21792      00
 21793              	.LASF1034:
 21794 18a7 5F5F666D 		.string	"__fmt"
 21794      7400
 21795              	.LASF991:
 21796 18ad 42696E61 		.string	"BinaryExpr<Variable, Constant, Product>"
 21796      72794578 
 21796      70723C56 
 21796      61726961 
 21796      626C652C 
 21797              	.LASF396:
 21798 18d5 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::c
 21798      7273655F 
 21798      69746572 
 21798      61746F72 
 21798      3C5F5F67 
 21799              	.LASF784:
 21800 195b 5F666C61 		.string	"_flags"
 21800      677300
 21801              	.LASF898:
 21802 1962 66726163 		.string	"frac_digits"
 21802      5F646967 
 21802      69747300 
 21803              	.LASF532:
 21804 196e 756E6172 		.string	"unary_function<const UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Cons
 21804      795F6675 
 21804      6E637469 
 21804      6F6E3C63 
 21804      6F6E7374 
 21805              	.LASF863:
 21806 1a1e 77637373 		.string	"wcsspn"
 21806      706E00
 21807              	.LASF844:
 21808 1a25 756E6765 		.string	"ungetwc"
 21808      74776300 
 21809              	.LASF596:
 21810 1a2d 656E6162 		.string	"enable_if<true, std::chrono::duration<double, std::ratio<1l, 1000l> > >"
 21810      6C655F69 
 21810      663C7472 
 21810      75652C20 
 21810      7374643A 
 21811              	.LASF0:
 21812 1a75 646F7562 		.string	"double"
 21812      6C6500
GAS LISTING /tmp/cceISX6N.s 			page 536


 21813              	.LASF527:
 21814 1a7c 5F42696E 		.string	"_Bind<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>,
 21814      643C556E 
 21814      61727945 
 21814      7870723C 
 21814      42696E61 
 21815              	.LASF990:
 21816 1b15 77637479 		.string	"wctype"
 21816      706500
 21817              	.LASF469:
 21818 1b1c 6F70656E 		.string	"openmode"
 21818      6D6F6465 
 21818      00
 21819              	.LASF794:
 21820 1b25 5F494F5F 		.string	"_IO_backup_base"
 21820      6261636B 
 21820      75705F62 
 21820      61736500 
 21821              	.LASF924:
 21822 1b35 61745F71 		.string	"at_quick_exit"
 21822      7569636B 
 21822      5F657869 
 21822      7400
 21823              	.LASF637:
 21824 1b43 7E6E6577 		.string	"~new_allocator"
 21824      5F616C6C 
 21824      6F636174 
 21824      6F7200
 21825              	.LASF824:
 21826 1b52 5F5F6D62 		.string	"__mbstate_t"
 21826      73746174 
 21826      655F7400 
 21827              	.LASF914:
 21828 1b5e 31315F5F 		.string	"11__mbstate_t"
 21828      6D627374 
 21828      6174655F 
 21828      7400
 21829              	.LASF334:
 21830 1b6c 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_"
 21830      73377265 
 21830      706C6163 
 21830      65454E39 
 21830      5F5F676E 
 21831              	.LASF833:
 21832 1ba9 66777363 		.string	"fwscanf"
 21832      616E6600 
 21833              	.LASF530:
 21834 1bb1 6F706572 		.string	"operator()<, double>"
 21834      61746F72 
 21834      28293C2C 
 21834      20646F75 
 21834      626C653E 
 21835              	.LASF121:
 21836 1bc6 63686172 		.string	"char_type"
 21836      5F747970 
 21836      6500
 21837              	.LASF153:
GAS LISTING /tmp/cceISX6N.s 			page 537


 21838 1bd0 62617369 		.string	"basic_string<char, std::char_traits<char>, std::allocator<char> >"
 21838      635F7374 
 21838      72696E67 
 21838      3C636861 
 21838      722C2073 
 21839              	.LASF377:
 21840 1c12 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcm"
 21840      53733137 
 21840      66696E64 
 21840      5F666972 
 21840      73745F6E 
 21841              	.LASF1086:
 21842 1c31 5F5A4E53 		.string	"_ZNSt17integral_constantIlLl1000EE5valueE"
 21842      74313769 
 21842      6E746567 
 21842      72616C5F 
 21842      636F6E73 
 21843              	.LASF178:
 21844 1c5b 5F4D5F73 		.string	"_M_set_sharable"
 21844      65745F73 
 21844      68617261 
 21844      626C6500 
 21845              	.LASF710:
 21846 1c6b 56617269 		.string	"Variable"
 21846      61626C65 
 21846      00
 21847              	.LASF975:
 21848 1c74 67657473 		.string	"gets"
 21848      00
 21849              	.LASF490:
 21850 1c79 6F706572 		.string	"operator std::integral_constant<long int, 1000l>::value_type"
 21850      61746F72 
 21850      20737464 
 21850      3A3A696E 
 21850      74656772 
 21851              	.LASF713:
 21852 1cb6 436F6E73 		.string	"Constant"
 21852      74616E74 
 21852      00
 21853              	.LASF450:
 21854 1cbf 626F6F6C 		.string	"boolalpha"
 21854      616C7068 
 21854      6100
 21855              	.LASF626:
 21856 1cc9 6F737472 		.string	"ostream"
 21856      65616D00 
 21857              	.LASF525:
 21858 1cd1 5F4D5F62 		.string	"_M_bound_args"
 21858      6F756E64 
 21858      5F617267 
 21858      7300
 21859              	.LASF1059:
 21860 1cdf 73746469 		.string	"stdin"
 21860      6E00
 21861              	.LASF234:
 21862 1ce5 62617369 		.string	"basic_string"
 21862      635F7374 
GAS LISTING /tmp/cceISX6N.s 			page 538


 21862      72696E67 
 21862      00
 21863              	.LASF786:
 21864 1cf2 5F494F5F 		.string	"_IO_read_end"
 21864      72656164 
 21864      5F656E64 
 21864      00
 21865              	.LASF300:
 21866 1cff 70757368 		.string	"push_back"
 21866      5F626163 
 21866      6B00
 21867              	.LASF686:
 21868 1d09 5F5F6D61 		.string	"__max_digits10"
 21868      785F6469 
 21868      67697473 
 21868      313000
 21869              	.LASF880:
 21870 1d18 77637373 		.string	"wcsstr"
 21870      747200
 21871              	.LASF919:
 21872 1d1f 6C646976 		.string	"ldiv_t"
 21872      5F7400
 21873              	.LASF58:
 21874 1d26 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEaSERKS3_"
 21874      74366368 
 21874      726F6E6F 
 21874      38647572 
 21874      6174696F 
 21875              	.LASF793:
 21876 1d5c 5F494F5F 		.string	"_IO_save_base"
 21876      73617665 
 21876      5F626173 
 21876      6500
 21877              	.LASF157:
 21878 1d6a 6E706F73 		.string	"npos"
 21878      00
 21879              	.LASF462:
 21880 1d6f 61646A75 		.string	"adjustfield"
 21880      73746669 
 21880      656C6400 
 21881              	.LASF1053:
 21882 1d7b 616C6D6F 		.string	"almost"
 21882      737400
 21883              	.LASF673:
 21884 1d82 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv"
 21884      395F5F67 
 21884      6E755F63 
 21884      78783137 
 21884      5F5F6E6F 
 21885              	.LASF123:
 21886 1daf 61737369 		.string	"assign"
 21886      676E00
 21887              	.LASF1087:
 21888 1db6 5F5A4E53 		.string	"_ZNSt17integral_constantIiLi0EE5valueE"
 21888      74313769 
 21888      6E746567 
 21888      72616C5F 
GAS LISTING /tmp/cceISX6N.s 			page 539


 21888      636F6E73 
 21889              	.LASF1025:
 21890 1ddd 5F5F7066 		.string	"__pf"
 21890      00
 21891              	.LASF1023:
 21892 1de2 5F5F706D 		.string	"__pm"
 21892      00
 21893              	.LASF130:
 21894 1de7 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 21894      74313163 
 21894      6861725F 
 21894      74726169 
 21894      74734963 
 21895              	.LASF407:
 21896 1e08 5F535F66 		.string	"_S_fixed"
 21896      69786564 
 21896      00
 21897              	.LASF471:
 21898 1e11 696F735F 		.string	"ios_base"
 21898      62617365 
 21898      00
 21899              	.LASF299:
 21900 1e1a 5F5A4E53 		.string	"_ZNSs6appendESt16initializer_listIcE"
 21900      73366170 
 21900      70656E64 
 21900      45537431 
 21900      36696E69 
 21901              	.LASF893:
 21902 1e3f 6D6F6E5F 		.string	"mon_thousands_sep"
 21902      74686F75 
 21902      73616E64 
 21902      735F7365 
 21902      7000
 21903              	.LASF579:
 21904 1e51 5F5A4E53 		.string	"_ZNSt5tupleIIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES3_3SumES3_S
 21904      74357475 
 21904      706C6549 
 21904      49503955 
 21904      6E617279 
 21905              	.LASF204:
 21906 1ec7 5F5A4E4B 		.string	"_ZNKSs7_M_iendEv"
 21906      5373375F 
 21906      4D5F6965 
 21906      6E644576 
 21906      00
 21907              	.LASF790:
 21908 1ed8 5F494F5F 		.string	"_IO_write_end"
 21908      77726974 
 21908      655F656E 
 21908      6400
 21909              	.LASF693:
 21910 1ee6 5F5F6E75 		.string	"__numeric_traits_integer<short int>"
 21910      6D657269 
 21910      635F7472 
 21910      61697473 
 21910      5F696E74 
 21911              	.LASF168:
GAS LISTING /tmp/cceISX6N.s 			page 540


 21912 1f0a 5F535F6D 		.string	"_S_max_size"
 21912      61785F73 
 21912      697A6500 
 21913              	.LASF468:
 21914 1f16 676F6F64 		.string	"goodbit"
 21914      62697400 
 21915              	.LASF599:
 21916 1f1e 64696666 		.string	"difference_type"
 21916      6572656E 
 21916      63655F74 
 21916      79706500 
 21917              	.LASF54:
 21918 1f2e 5F5A4E53 		.string	"_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEE
 21918      74366368 
 21918      726F6E6F 
 21918      31307469 
 21918      6D655F70 
 21919              	.LASF165:
 21920 1f90 5F4D5F6C 		.string	"_M_length"
 21920      656E6774 
 21920      6800
 21921              	.LASF622:
 21922 1f9a 6765743C 		.string	"get<0ul, UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Produc
 21922      30756C2C 
 21922      20556E61 
 21922      72794578 
 21922      70723C42 
 21923              	.LASF851:
 21924 2036 77637274 		.string	"wcrtomb"
 21924      6F6D6200 
 21925              	.LASF342:
 21926 203e 5F5A4E53 		.string	"_ZNSs15_M_replace_safeEmmPKcm"
 21926      7331355F 
 21926      4D5F7265 
 21926      706C6163 
 21926      655F7361 
 21927              	.LASF48:
 21928 205c 64757261 		.string	"duration<long int, void>"
 21928      74696F6E 
 21928      3C6C6F6E 
 21928      6720696E 
 21928      742C2076 
 21929              	.LASF386:
 21930 2075 5F5A4E4B 		.string	"_ZNKSs7compareERKSs"
 21930      53733763 
 21930      6F6D7061 
 21930      72654552 
 21930      4B537300 
 21931              	.LASF137:
 21932 2089 746F5F63 		.string	"to_char_type"
 21932      6861725F 
 21932      74797065 
 21932      00
 21933              	.LASF563:
 21934 2096 5F497345 		.string	"_IsEmptyNotFinal"
 21934      6D707479 
 21934      4E6F7446 
GAS LISTING /tmp/cceISX6N.s 			page 541


 21934      696E616C 
 21934      00
 21935              	.LASF97:
 21936 20a7 5F44656E 		.string	"_Den"
 21936      00
 21937              	.LASF540:
 21938 20ac 5F4D6179 		.string	"_Maybe_get_result_type<true, std::_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryE
 21938      62655F67 
 21938      65745F72 
 21938      6573756C 
 21938      745F7479 
 21939              	.LASF623:
 21940 217d 666F7277 		.string	"forward_as_tuple<>"
 21940      6172645F 
 21940      61735F74 
 21940      75706C65 
 21940      3C3E00
 21941              	.LASF791:
 21942 2190 5F494F5F 		.string	"_IO_buf_base"
 21942      6275665F 
 21942      62617365 
 21942      00
 21943              	.LASF171:
 21944 219d 5F535F65 		.string	"_S_empty_rep"
 21944      6D707479 
 21944      5F726570 
 21944      00
 21945              	.LASF555:
 21946 21aa 5F4D5F68 		.string	"_M_head_impl"
 21946      6561645F 
 21946      696D706C 
 21946      00
 21947              	.LASF805:
 21948 21b7 5F6F6666 		.string	"_offset"
 21948      73657400 
 21949              	.LASF971:
 21950 21bf 66736574 		.string	"fsetpos"
 21950      706F7300 
 21951              	.LASF685:
 21952 21c7 5F5F6E75 		.string	"__numeric_traits_floating<float>"
 21952      6D657269 
 21952      635F7472 
 21952      61697473 
 21952      5F666C6F 
 21953              	.LASF84:
 21954 21e8 5F506572 		.string	"_Period1"
 21954      696F6431 
 21954      00
 21955              	.LASF76:
 21956 21f1 5F506572 		.string	"_Period2"
 21956      696F6432 
 21956      00
 21957              	.LASF968:
 21958 21fa 66726561 		.string	"fread"
 21958      6400
 21959              	.LASF631:
 21960 2200 5F5A5374 		.string	"_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l"
GAS LISTING /tmp/cceISX6N.s 			page 542


 21960      31365F5F 
 21960      6F737472 
 21960      65616D5F 
 21960      696E7365 
 21961              	.LASF159:
 21962 224e 616C6C6F 		.string	"allocator_type"
 21962      6361746F 
 21962      725F7479 
 21962      706500
 21963              	.LASF73:
 21964 225d 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEE3maxEv"
 21964      74366368 
 21964      726F6E6F 
 21964      38647572 
 21964      6174696F 
 21965              	.LASF108:
 21966 2291 5F4D5F67 		.string	"_M_get"
 21966      657400
 21967              	.LASF730:
 21968 2298 75696E74 		.string	"uint64_t"
 21968      36345F74 
 21968      00
 21969              	.LASF188:
 21970 22a1 5F4D5F64 		.string	"_M_dispose"
 21970      6973706F 
 21970      736500
 21971              	.LASF354:
 21972 22ac 5F5A4E4B 		.string	"_ZNKSs13get_allocatorEv"
 21972      53733133 
 21972      6765745F 
 21972      616C6C6F 
 21972      6361746F 
 21973              	.LASF244:
 21974 22c4 5F5A4E53 		.string	"_ZNSs3endEv"
 21974      7333656E 
 21974      64457600 
 21975              	.LASF918:
 21976 22d0 366C6469 		.string	"6ldiv_t"
 21976      765F7400 
 21977              	.LASF580:
 21978 22d8 5F5A4E53 		.string	"_ZNSt5tupleIIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES3_3SumES3_S
 21978      74357475 
 21978      706C6549 
 21978      49503955 
 21978      6E617279 
 21979              	.LASF240:
 21980 2351 5F5A4E53 		.string	"_ZNSsaSESt16initializer_listIcE"
 21980      73615345 
 21980      53743136 
 21980      696E6974 
 21980      69616C69 
 21981              	.LASF1042:
 21982 2371 5F5F696F 		.string	"__ioinit"
 21982      696E6974 
 21982      00
 21983              	.LASF876:
 21984 237a 77736361 		.string	"wscanf"
GAS LISTING /tmp/cceISX6N.s 			page 543


 21984      6E6600
 21985              	.LASF270:
 21986 2381 63617061 		.string	"capacity"
 21986      63697479 
 21986      00
 21987              	.LASF360:
 21988 238a 5F5A4E4B 		.string	"_ZNKSs5rfindERKSsm"
 21988      53733572 
 21988      66696E64 
 21988      45524B53 
 21988      736D00
 21989              	.LASF1104:
 21990 239d 5F5A5374 		.string	"_ZSt4cout"
 21990      34636F75 
 21990      7400
 21991              	.LASF849:
 21992 23a7 76777072 		.string	"vwprintf"
 21992      696E7466 
 21992      00
 21993              	.LASF201:
 21994 23b0 5F4D5F69 		.string	"_M_ibegin"
 21994      62656769 
 21994      6E00
 21995              	.LASF954:
 21996 23ba 5F494F5F 		.string	"_IO_marker"
 21996      6D61726B 
 21996      657200
 21997              	.LASF180:
 21998 23c5 5F4D5F73 		.string	"_M_set_length_and_sharable"
 21998      65745F6C 
 21998      656E6774 
 21998      685F616E 
 21998      645F7368 
 21999              	.LASF523:
 22000 23e0 5F42696E 		.ascii	"_Bind<std::_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<B"
 22000      643C7374 
 22000      643A3A5F 
 22000      4D656D5F 
 22000      666E3C64 
 22001 241c 696E6172 		.ascii	"inaryExpr<Binar"
 22001      79457870 
 22001      723C4269 
 22001      6E6172
 22002 242b 79457870 		.string	"yExpr<Variable, Constant, Product>, Constant, Sum>, Constant, Product>, Constant, Sum>, S
 22002      723C5661 
 22002      72696162 
 22002      6C652C20 
 22002      436F6E73 
 22003              	.LASF276:
 22004 252c 656D7074 		.string	"empty"
 22004      7900
 22005              	.LASF259:
 22006 2532 5F5A4E4B 		.string	"_ZNKSs5crendEv"
 22006      53733563 
 22006      72656E64 
 22006      457600
 22007              	.LASF254:
GAS LISTING /tmp/cceISX6N.s 			page 544


 22008 2541 63656E64 		.string	"cend"
 22008      00
 22009              	.LASF535:
 22010 2546 5F4D6179 		.string	"_Maybe_unary_or_binary_function<double, const UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<
 22010      62655F75 
 22010      6E617279 
 22010      5F6F725F 
 22010      62696E61 
 22011              	.LASF1099:
 22012 2607 73746561 		.string	"steady_clock"
 22012      64795F63 
 22012      6C6F636B 
 22012      00
 22013              	.LASF162:
 22014 2614 636F6E73 		.string	"const_reverse_iterator"
 22014      745F7265 
 22014      76657273 
 22014      655F6974 
 22014      65726174 
 22015              	.LASF934:
 22016 262b 71736F72 		.string	"qsort"
 22016      7400
 22017              	.LASF624:
 22018 2631 62696E64 		.ascii	"bind<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Bina"
 22018      3C646F75 
 22018      626C6520 
 22018      28556E61 
 22018      72794578 
 22019 266d 72794578 		.string	"ryExpr<Variable, Constant, Product>, Constant, Sum>, Constant, Product>, Constant, Sum>, 
 22019      70723C56 
 22019      61726961 
 22019      626C652C 
 22019      20436F6E 
 22020              	.LASF1083:
 22021 276e 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__maxE"
 22021      5F5F676E 
 22021      755F6378 
 22021      7832345F 
 22021      5F6E756D 
 22022              	.LASF346:
 22023 27a0 5F5A4E53 		.string	"_ZNSs12_S_constructEmcRKSaIcE"
 22023      7331325F 
 22023      535F636F 
 22023      6E737472 
 22023      75637445 
 22024              	.LASF3:
 22025 27be 696E7465 		.string	"integral_constant<bool, true>"
 22025      6772616C 
 22025      5F636F6E 
 22025      7374616E 
 22025      743C626F 
 22026              	.LASF608:
 22027 27dc 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE5widenEc"
 22027      53743962 
 22027      61736963 
 22027      5F696F73 
 22027      49635374 
GAS LISTING /tmp/cceISX6N.s 			page 545


 22028              	.LASF199:
 22029 280a 5F4D5F72 		.string	"_M_rep"
 22029      657000
 22030              	.LASF10:
 22031 2811 696E7465 		.string	"integral_constant<long unsigned int, 0ul>"
 22031      6772616C 
 22031      5F636F6E 
 22031      7374616E 
 22031      743C6C6F 
 22032              	.LASF510:
 22033 283b 5F5A4E53 		.string	"_ZNSt26_Maybe_wrap_member_pointerIM9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant
 22033      7432365F 
 22033      4D617962 
 22033      655F7772 
 22033      61705F6D 
 22034              	.LASF557:
 22035 28d1 5F4D5F68 		.string	"_M_head"
 22035      65616400 
 22036              	.LASF641:
 22037 28d9 616C6C6F 		.string	"allocate"
 22037      63617465 
 22037      00
 22038              	.LASF57:
 22039 28e2 64757261 		.string	"duration<double, std::ratio<1l, 1000l> >"
 22039      74696F6E 
 22039      3C646F75 
 22039      626C652C 
 22039      20737464 
 22040              	.LASF521:
 22041 290b 5F536F63 		.string	"_SocketLike"
 22041      6B65744C 
 22041      696B6500 
 22042              	.LASF852:
 22043 2917 77637363 		.string	"wcscat"
 22043      617400
 22044              	.LASF1107:
 22045 291e 5F494F5F 		.string	"_IO_lock_t"
 22045      6C6F636B 
 22045      5F7400
 22046              	.LASF643:
 22047 2929 6465616C 		.string	"deallocate"
 22047      6C6F6361 
 22047      746500
 22048              	.LASF609:
 22049 2934 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate"
 22049      74396261 
 22049      7369635F 
 22049      696F7349 
 22049      63537431 
 22050              	.LASF210:
 22051 2970 5F5A4E4B 		.string	"_ZNKSs15_M_check_lengthEmmPKc"
 22051      53733135 
 22051      5F4D5F63 
 22051      6865636B 
 22051      5F6C656E 
 22052              	.LASF785:
 22053 298e 5F494F5F 		.string	"_IO_read_ptr"
GAS LISTING /tmp/cceISX6N.s 			page 546


 22053      72656164 
 22053      5F707472 
 22053      00
 22054              	.LASF59:
 22055 299b 5F5A4E4B 		.string	"_ZNKSt6chrono8durationIdSt5ratioILl1ELl1000EEE5countEv"
 22055      53743663 
 22055      68726F6E 
 22055      6F386475 
 22055      72617469 
 22056              	.LASF618:
 22057 29d2 5F5F6765 		.string	"__get_helper<0ul, UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constan
 22057      745F6865 
 22057      6C706572 
 22057      3C30756C 
 22057      2C20556E 
 22058              	.LASF83:
 22059 2a77 5F526570 		.string	"_Rep1"
 22059      3100
 22060              	.LASF44:
 22061 2a7d 5F526570 		.string	"_Rep2"
 22061      3200
 22062              	.LASF326:
 22063 2a83 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSsmm"
 22063      73377265 
 22063      706C6163 
 22063      65456D6D 
 22063      524B5373 
 22064              	.LASF1088:
 22065 2a9a 5F5A4E53 		.string	"_ZNSt5ratioILl1000ELl1EE3numE"
 22065      74357261 
 22065      74696F49 
 22065      4C6C3130 
 22065      3030454C 
 22066              	.LASF799:
 22067 2ab8 5F666C61 		.string	"_flags2"
 22067      67733200 
 22068              	.LASF215:
 22069 2ac0 5F4D5F63 		.string	"_M_copy"
 22069      6F707900 
 22070              	.LASF546:
 22071 2ac8 5F576561 		.string	"_Weak_result_type"
 22071      6B5F7265 
 22071      73756C74 
 22071      5F747970 
 22071      6500
 22072              	.LASF979:
 22073 2ada 72657769 		.string	"rewind"
 22073      6E6400
 22074              	.LASF307:
 22075 2ae1 5F5A4E53 		.string	"_ZNSs6assignEmc"
 22075      73366173 
 22075      7369676E 
 22075      456D6300 
 22076              	.LASF901:
 22077 2af1 6E5F6373 		.string	"n_cs_precedes"
 22077      5F707265 
 22077      63656465 
GAS LISTING /tmp/cceISX6N.s 			page 547


 22077      7300
 22078              	.LASF343:
 22079 2aff 5F535F63 		.string	"_S_construct_aux_2"
 22079      6F6E7374 
 22079      72756374 
 22079      5F617578 
 22079      5F3200
 22080              	.LASF117:
 22081 2b12 5F5F6378 		.string	"__cxa_exception_type"
 22081      615F6578 
 22081      63657074 
 22081      696F6E5F 
 22081      74797065 
 22082              	.LASF154:
 22083 2b27 5F416C6C 		.string	"_Alloc_hider"
 22083      6F635F68 
 22083      69646572 
 22083      00
 22084              	.LASF789:
 22085 2b34 5F494F5F 		.string	"_IO_write_ptr"
 22085      77726974 
 22085      655F7074 
 22085      7200
 22086              	.LASF110:
 22087 2b42 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 22087      7431355F 
 22087      5F657863 
 22087      65707469 
 22087      6F6E5F70 
 22088              	.LASF423:
 22089 2b70 5F535F69 		.string	"_S_ios_fmtflags_end"
 22089      6F735F66 
 22089      6D74666C 
 22089      6167735F 
 22089      656E6400 
 22090              	.LASF466:
 22091 2b84 656F6662 		.string	"eofbit"
 22091      697400
 22092              	.LASF455:
 22093 2b8b 73636965 		.string	"scientific"
 22093      6E746966 
 22093      696300
 22094              	.LASF186:
 22095 2b96 5F535F63 		.string	"_S_create"
 22095      72656174 
 22095      6500
 22096              	.LASF761:
 22097 2ba0 746D5F73 		.string	"tm_sec"
 22097      656300
 22098              	.LASF585:
 22099 2ba7 6F706572 		.string	"operator()<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Prod
 22099      61746F72 
 22099      28293C55 
 22099      6E617279 
 22099      45787072 
 22100              	.LASF457:
 22101 2c55 73686F77 		.string	"showpoint"
GAS LISTING /tmp/cceISX6N.s 			page 548


 22101      706F696E 
 22101      7400
 22102              	.LASF642:
 22103 2c5f 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv"
 22103      5F5F676E 
 22103      755F6378 
 22103      7831336E 
 22103      65775F61 
 22104              	.LASF1070:
 22105 2c8d 5F5A4E53 		.string	"_ZNSt5ratioILl1000000000ELl1EE3denE"
 22105      74357261 
 22105      74696F49 
 22105      4C6C3130 
 22105      30303030 
 22106              	.LASF125:
 22107 2cb1 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 22107      74313163 
 22107      6861725F 
 22107      74726169 
 22107      74734963 
 22108              	.LASF683:
 22109 2cd1 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiERKl"
 22109      395F5F67 
 22109      6E755F63 
 22109      78783137 
 22109      5F5F6E6F 
 22110              	.LASF575:
 22111 2d00 5F555461 		.string	"_UTail"
 22111      696C00
 22112              	.LASF285:
 22113 2d07 5F5A4E4B 		.string	"_ZNKSs5frontEv"
 22113      53733566 
 22113      726F6E74 
 22113      457600
 22114              	.LASF706:
 22115 2d16 666C6F61 		.string	"float"
 22115      7400
 22116              	.LASF595:
 22117 2d1c 72617469 		.string	"ratio<1l, 1000000l>"
 22117      6F3C316C 
 22117      2C203130 
 22117      30303030 
 22117      306C3E00 
 22118              	.LASF264:
 22119 2d30 5F5A4E4B 		.string	"_ZNKSs8max_sizeEv"
 22119      5373386D 
 22119      61785F73 
 22119      697A6545 
 22119      7600
 22120              	.LASF319:
 22121 2d42 5F5A4E53 		.string	"_ZNSs5eraseEmm"
 22121      73356572 
 22121      61736545 
 22121      6D6D00
 22122              	.LASF443:
 22123 2d51 5F535F69 		.string	"_S_ios_seekdir_end"
 22123      6F735F73 
GAS LISTING /tmp/cceISX6N.s 			page 549


 22123      65656B64 
 22123      69725F65 
 22123      6E6400
 22124              	.LASF51:
 22125 2d64 5F5A4E53 		.string	"_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEE
 22125      74366368 
 22125      726F6E6F 
 22125      31307469 
 22125      6D655F70 
 22126              	.LASF1077:
 22127 2dc8 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E"
 22127      5F5F676E 
 22127      755F6378 
 22127      7832355F 
 22127      5F6E756D 
 22128              	.LASF578:
 22129 2e07 5F5A4E53 		.string	"_ZNSt5tupleIIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES3_3SumES3_S
 22129      74357475 
 22129      706C6549 
 22129      49503955 
 22129      6E617279 
 22130              	.LASF255:
 22131 2e7e 5F5A4E4B 		.string	"_ZNKSs4cendEv"
 22131      53733463 
 22131      656E6445 
 22131      7600
 22132              	.LASF1000:
 22133 2e8c 42696E61 		.string	"BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>, Constant, Sum>, Constant, 
 22133      72794578 
 22133      70723C42 
 22133      696E6172 
 22133      79457870 
 22134              	.LASF747:
 22135 2eee 696E7470 		.string	"intptr_t"
 22135      74725F74 
 22135      00
 22136              	.LASF1106:
 22137 2ef7 6465636C 		.string	"decltype(nullptr)"
 22137      74797065 
 22137      286E756C 
 22137      6C707472 
 22137      2900
 22138              	.LASF569:
 22139 2f09 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 22139      7431315F 
 22139      5475706C 
 22139      655F696D 
 22139      706C494C 
 22140              	.LASF738:
 22141 2f90 75696E74 		.string	"uint_least64_t"
 22141      5F6C6561 
 22141      73743634 
 22141      5F7400
 22142              	.LASF553:
 22143 2f9f 5F456C65 		.string	"_Elements"
 22143      6D656E74 
 22143      7300
GAS LISTING /tmp/cceISX6N.s 			page 550


 22144              	.LASF902:
 22145 2fa9 6E5F7365 		.string	"n_sep_by_space"
 22145      705F6279 
 22145      5F737061 
 22145      636500
 22146              	.LASF439:
 22147 2fb8 5F496F73 		.string	"_Ios_Seekdir"
 22147      5F536565 
 22147      6B646972 
 22147      00
 22148              	.LASF403:
 22149 2fc5 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE5beginEv"
 22149      53743136 
 22149      696E6974 
 22149      69616C69 
 22149      7A65725F 
 22150              	.LASF233:
 22151 2fe9 5F5A4E53 		.string	"_ZNSs12_S_empty_repEv"
 22151      7331325F 
 22151      535F656D 
 22151      7074795F 
 22151      72657045 
 22152              	.LASF888:
 22153 2fff 74686F75 		.string	"thousands_sep"
 22153      73616E64 
 22153      735F7365 
 22153      7000
 22154              	.LASF877:
 22155 300d 77637363 		.string	"wcschr"
 22155      687200
 22156              	.LASF584:
 22157 3014 5F4D753C 		.string	"_Mu<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>, C
 22157      556E6172 
 22157      79457870 
 22157      723C4269 
 22157      6E617279 
 22158              	.LASF1089:
 22159 30b9 5F5A4E53 		.string	"_ZNSt5ratioILl1000ELl1EE3denE"
 22159      74357261 
 22159      74696F49 
 22159      4C6C3130 
 22159      3030454C 
 22160              	.LASF281:
 22161 30d7 5F5A4E4B 		.string	"_ZNKSs2atEm"
 22161      53733261 
 22161      74456D00 
 22162              	.LASF345:
 22163 30e3 5F535F63 		.string	"_S_construct"
 22163      6F6E7374 
 22163      72756374 
 22163      00
 22164              	.LASF840:
 22165 30f0 70757477 		.string	"putwc"
 22165      6300
 22166              	.LASF297:
 22167 30f6 5F5A4E53 		.string	"_ZNSs6appendEPKc"
 22167      73366170 
GAS LISTING /tmp/cceISX6N.s 			page 551


 22167      70656E64 
 22167      45504B63 
 22167      00
 22168              	.LASF635:
 22169 3107 636F6E73 		.string	"const_pointer"
 22169      745F706F 
 22169      696E7465 
 22169      7200
 22170              	.LASF95:
 22171 3115 69735F73 		.string	"is_steady"
 22171      74656164 
 22171      7900
 22172              	.LASF284:
 22173 311f 5F5A4E53 		.string	"_ZNSs5frontEv"
 22173      73356672 
 22173      6F6E7445 
 22173      7600
 22174              	.LASF549:
 22175 312d 5F547570 		.string	"_Tuple_impl"
 22175      6C655F69 
 22175      6D706C00 
 22176              	.LASF417:
 22177 3139 5F535F73 		.string	"_S_skipws"
 22177      6B697077 
 22177      7300
 22178              	.LASF336:
 22179 3143 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_"
 22179      73377265 
 22179      706C6163 
 22179      65454E39 
 22179      5F5F676E 
 22180              	.LASF104:
 22181 3180 5F4D5F61 		.string	"_M_addref"
 22181      64647265 
 22181      6600
 22182              	.LASF366:
 22183 318a 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcmm"
 22183      53733133 
 22183      66696E64 
 22183      5F666972 
 22183      73745F6F 
 22184              	.LASF743:
 22185 31a6 75696E74 		.string	"uint_fast8_t"
 22185      5F666173 
 22185      74385F74 
 22185      00
 22186              	.LASF804:
 22187 31b3 5F6C6F63 		.string	"_lock"
 22187      6B00
 22188              	.LASF1073:
 22189 31b9 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE"
 22189      5F5F676E 
 22189      755F6378 
 22189      7832345F 
 22189      5F6E756D 
 22190              	.LASF528:
 22191 31eb 5F5F6361 		.string	"__call<double, 0ul>"
GAS LISTING /tmp/cceISX6N.s 			page 552


 22191      6C6C3C64 
 22191      6F75626C 
 22191      652C2030 
 22191      756C3E00 
 22192              	.LASF368:
 22193 31ff 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEcm"
 22193      53733133 
 22193      66696E64 
 22193      5F666972 
 22193      73745F6F 
 22194              	.LASF1020:
 22195 3218 5F5F6865 		.string	"__head"
 22195      616400
 22196              	.LASF731:
 22197 321f 696E745F 		.string	"int_least8_t"
 22197      6C656173 
 22197      74385F74 
 22197      00
 22198              	.LASF67:
 22199 322c 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEmIERKS3_"
 22199      74366368 
 22199      726F6E6F 
 22199      38647572 
 22199      6174696F 
 22200              	.LASF948:
 22201 3262 73747274 		.string	"strtof"
 22201      6F6600
 22202              	.LASF939:
 22203 3269 73747274 		.string	"strtol"
 22203      6F6C00
 22204              	.LASF127:
 22205 3270 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 22205      74313163 
 22205      6861725F 
 22205      74726169 
 22205      74734963 
 22206              	.LASF676:
 22207 3296 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEi"
 22207      5F5F676E 
 22207      755F6378 
 22207      7831375F 
 22207      5F6E6F72 
 22208              	.LASF9:
 22209 32c2 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb1EEcvbEv"
 22209      53743137 
 22209      696E7465 
 22209      6772616C 
 22209      5F636F6E 
 22210              	.LASF68:
 22211 32e8 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEmLERKd"
 22211      74366368 
 22211      726F6E6F 
 22211      38647572 
 22211      6174696F 
 22212              	.LASF56:
 22213 331c 5F447572 		.string	"_Dur"
 22213      00
GAS LISTING /tmp/cceISX6N.s 			page 553


 22214              	.LASF675:
 22215 3321 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv"
 22215      5F5F676E 
 22215      755F6378 
 22215      7831375F 
 22215      5F6E6F72 
 22216              	.LASF102:
 22217 334d 5F5F6578 		.string	"__exception_ptr"
 22217      63657074 
 22217      696F6E5F 
 22217      70747200 
 22218              	.LASF869:
 22219 335d 77637378 		.string	"wcsxfrm"
 22219      66726D00 
 22220              	.LASF196:
 22221 3365 5F4D5F64 		.string	"_M_data"
 22221      61746100 
 22222              	.LASF298:
 22223 336d 5F5A4E53 		.string	"_ZNSs6appendEmc"
 22223      73366170 
 22223      70656E64 
 22223      456D6300 
 22224              	.LASF792:
 22225 337d 5F494F5F 		.string	"_IO_buf_end"
 22225      6275665F 
 22225      656E6400 
 22226              	.LASF433:
 22227 3389 5F496F73 		.string	"_Ios_Iostate"
 22227      5F496F73 
 22227      74617465 
 22227      00
 22228              	.LASF698:
 22229 3396 73686F72 		.string	"short unsigned int"
 22229      7420756E 
 22229      7369676E 
 22229      65642069 
 22229      6E7400
 22230              	.LASF290:
 22231 33a9 5F5A4E53 		.string	"_ZNSspLEPKc"
 22231      73704C45 
 22231      504B6300 
 22232              	.LASF904:
 22233 33b5 6E5F7369 		.string	"n_sign_posn"
 22233      676E5F70 
 22233      6F736E00 
 22234              	.LASF882:
 22235 33c1 77637374 		.string	"wcstold"
 22235      6F6C6400 
 22236              	.LASF732:
 22237 33c9 696E745F 		.string	"int_least16_t"
 22237      6C656173 
 22237      7431365F 
 22237      7400
 22238              	.LASF883:
 22239 33d7 77637374 		.string	"wcstoll"
 22239      6F6C6C00 
 22240              	.LASF378:
GAS LISTING /tmp/cceISX6N.s 			page 554


 22241 33df 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEcm"
 22241      53733137 
 22241      66696E64 
 22241      5F666972 
 22241      73745F6E 
 22242              	.LASF100:
 22243 33fc 5F5F7375 		.string	"__success_type<std::chrono::duration<long int, std::ratio<1l, 1000000000l> > >"
 22243      63636573 
 22243      735F7479 
 22243      70653C73 
 22243      74643A3A 
 22244              	.LASF862:
 22245 344b 77637372 		.string	"wcsrtombs"
 22245      746F6D62 
 22245      7300
 22246              	.LASF944:
 22247 3455 6C6C6469 		.string	"lldiv"
 22247      7600
 22248              	.LASF103:
 22249 345b 65786365 		.string	"exception_ptr"
 22249      7074696F 
 22249      6E5F7074 
 22249      7200
 22250              	.LASF950:
 22251 3469 395F475F 		.string	"9_G_fpos_t"
 22251      66706F73 
 22251      5F7400
 22252              	.LASF853:
 22253 3474 77637363 		.string	"wcscmp"
 22253      6D7000
 22254              	.LASF459:
 22255 347b 736B6970 		.string	"skipws"
 22255      777300
 22256              	.LASF659:
 22257 3482 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEptEv"
 22257      395F5F67 
 22257      6E755F63 
 22257      78783137 
 22257      5F5F6E6F 
 22258              	.LASF358:
 22259 34ae 5F5A4E4B 		.string	"_ZNKSs4findEcm"
 22259      53733466 
 22259      696E6445 
 22259      636D00
 22260              	.LASF856:
 22261 34bd 77637363 		.string	"wcscspn"
 22261      73706E00 
 22262              	.LASF460:
 22263 34c5 756E6974 		.string	"unitbuf"
 22263      62756600 
 22264              	.LASF787:
 22265 34cd 5F494F5F 		.string	"_IO_read_base"
 22265      72656164 
 22265      5F626173 
 22265      6500
 22266              	.LASF679:
 22267 34db 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEixERKl"
GAS LISTING /tmp/cceISX6N.s 			page 555


 22267      395F5F67 
 22267      6E755F63 
 22267      78783137 
 22267      5F5F6E6F 
 22268              	.LASF458:
 22269 350a 73686F77 		.string	"showpos"
 22269      706F7300 
 22270              	.LASF311:
 22271 3512 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE"
 22271      7336696E 
 22271      73657274 
 22271      454E395F 
 22271      5F676E75 
 22272              	.LASF1063:
 22273 355c 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb1EE5valueE"
 22273      74313769 
 22273      6E746567 
 22273      72616C5F 
 22273      636F6E73 
 22274              	.LASF74:
 22275 3583 64757261 		.string	"duration<double, void>"
 22275      74696F6E 
 22275      3C646F75 
 22275      626C652C 
 22275      20766F69 
 22276              	.LASF820:
 22277 359a 5F5F7763 		.string	"__wch"
 22277      6800
 22278              	.LASF669:
 22279 35a0 62617365 		.string	"base"
 22279      00
 22280              	.LASF638:
 22281 35a5 61646472 		.string	"address"
 22281      65737300 
 22282              	.LASF306:
 22283 35ad 5F5A4E53 		.string	"_ZNSs6assignEPKc"
 22283      73366173 
 22283      7369676E 
 22283      45504B63 
 22283      00
 22284              	.LASF999:
 22285 35be 5F5A4E4B 		.string	"_ZNK10BinaryExprIS_I8Variable8Constant7ProductES1_3SumE4evalEv"
 22285      31304269 
 22285      6E617279 
 22285      45787072 
 22285      49535F49 
 22286              	.LASF324:
 22287 35fd 7265706C 		.string	"replace"
 22287      61636500 
 22288              	.LASF903:
 22289 3605 705F7369 		.string	"p_sign_posn"
 22289      676E5F70 
 22289      6F736E00 
 22290              	.LASF727:
 22291 3611 75696E74 		.string	"uint8_t"
 22291      385F7400 
 22292              	.LASF355:
GAS LISTING /tmp/cceISX6N.s 			page 556


 22293 3619 5F5A4E4B 		.string	"_ZNKSs4findEPKcmm"
 22293      53733466 
 22293      696E6445 
 22293      504B636D 
 22293      6D00
 22294              	.LASF1033:
 22295 362b 7072696E 		.string	"printf"
 22295      746600
 22296              	.LASF287:
 22297 3632 5F5A4E53 		.string	"_ZNSs4backEv"
 22297      73346261 
 22297      636B4576 
 22297      00
 22298              	.LASF1084:
 22299 363f 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1000EE3numE"
 22299      74357261 
 22299      74696F49 
 22299      4C6C3145 
 22299      4C6C3130 
 22300              	.LASF813:
 22301 365d 5F5F4649 		.string	"__FILE"
 22301      4C4500
 22302              	.LASF126:
 22303 3664 636F6D70 		.string	"compare"
 22303      61726500 
 22304              	.LASF545:
 22305 366c 5F576561 		.string	"_Weak_result_type<std::_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryE
 22305      6B5F7265 
 22305      73756C74 
 22305      5F747970 
 22305      653C7374 
 22306              	.LASF998:
 22307 3732 42696E61 		.string	"BinaryExpr<BinaryExpr<Variable, Constant, Product>, Constant, Sum>"
 22307      72794578 
 22307      70723C42 
 22307      696E6172 
 22307      79457870 
 22308              	.LASF855:
 22309 3775 77637363 		.string	"wcscpy"
 22309      707900
 22310              	.LASF823:
 22311 377c 5F5F7661 		.string	"__value"
 22311      6C756500 
 22312              	.LASF712:
 22313 3784 5F5A4E4B 		.string	"_ZNK8Variable4evalEv"
 22313      38566172 
 22313      6961626C 
 22313      65346576 
 22313      616C4576 
 22314              	.LASF661:
 22315 3799 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEi"
 22315      5F5F676E 
 22315      755F6378 
 22315      7831375F 
 22315      5F6E6F72 
 22316              	.LASF1071:
 22317 37c4 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1EE3numE"
GAS LISTING /tmp/cceISX6N.s 			page 557


 22317      74357261 
 22317      74696F49 
 22317      4C6C3145 
 22317      4C6C3145 
 22318              	.LASF1105:
 22319 37df 5F5A5374 		.string	"_ZSt16__throw_bad_castv"
 22319      31365F5F 
 22319      7468726F 
 22319      775F6261 
 22319      645F6361 
 22320              	.LASF956:
 22321 37f7 5F736275 		.string	"_sbuf"
 22321      6600
 22322              	.LASF660:
 22323 37fd 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEv"
 22323      5F5F676E 
 22323      755F6378 
 22323      7831375F 
 22323      5F6E6F72 
 22324              	.LASF155:
 22325 3828 5F4D5F65 		.string	"_M_exception_object"
 22325      78636570 
 22325      74696F6E 
 22325      5F6F626A 
 22325      65637400 
 22326              	.LASF870:
 22327 383c 7763746F 		.string	"wctob"
 22327      6200
 22328              	.LASF63:
 22329 3842 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEppEi"
 22329      74366368 
 22329      726F6E6F 
 22329      38647572 
 22329      6174696F 
 22330              	.LASF994:
 22331 3874 42696E61 		.string	"BinaryExpr"
 22331      72794578 
 22331      707200
 22332              	.LASF437:
 22333 387f 5F535F66 		.string	"_S_failbit"
 22333      61696C62 
 22333      697400
 22334              	.LASF62:
 22335 388a 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEppEv"
 22335      74366368 
 22335      726F6E6F 
 22335      38647572 
 22335      6174696F 
 22336              	.LASF691:
 22337 38bc 5F5F6E75 		.string	"__numeric_traits_integer<long unsigned int>"
 22337      6D657269 
 22337      635F7472 
 22337      61697473 
 22337      5F696E74 
 22338              	.LASF1094:
 22339 38e8 5F5F6275 		.string	"__builtin_unwind_resume"
 22339      696C7469 
GAS LISTING /tmp/cceISX6N.s 			page 558


 22339      6E5F756E 
 22339      77696E64 
 22339      5F726573 
 22340              	.LASF464:
 22341 3900 666C6F61 		.string	"floatfield"
 22341      74666965 
 22341      6C6400
 22342              	.LASF719:
 22343 390b 5369676D 		.string	"Sigmoid"
 22343      6F696400 
 22344              	.LASF615:
 22345 3913 5F466163 		.string	"_Facet"
 22345      657400
 22346              	.LASF822:
 22347 391a 5F5F636F 		.string	"__count"
 22347      756E7400 
 22348              	.LASF697:
 22349 3922 756E7369 		.string	"unsigned char"
 22349      676E6564 
 22349      20636861 
 22349      7200
 22350              	.LASF55:
 22351 3930 5F436C6F 		.string	"_Clock"
 22351      636B00
 22352              	.LASF522:
 22353 3937 5F46756E 		.string	"_Func"
 22353      6300
 22354              	.LASF976:
 22355 393d 70657272 		.string	"perror"
 22355      6F7200
 22356              	.LASF878:
 22357 3944 77637370 		.string	"wcspbrk"
 22357      62726B00 
 22358              	.LASF310:
 22359 394c 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEmc"
 22359      7336696E 
 22359      73657274 
 22359      454E395F 
 22359      5F676E75 
 22360              	.LASF331:
 22361 3981 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcm"
 22361      73377265 
 22361      706C6163 
 22361      65454E39 
 22361      5F5F676E 
 22362              	.LASF543:
 22363 39bc 5F576561 		.string	"_Weak_result_type_impl<std::_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Bi
 22363      6B5F7265 
 22363      73756C74 
 22363      5F747970 
 22363      655F696D 
 22364              	.LASF1109:
 22365 3a87 5F474C4F 		.string	"_GLOBAL__sub_I_main"
 22365      42414C5F 
 22365      5F737562 
 22365      5F495F6D 
 22365      61696E00 
GAS LISTING /tmp/cceISX6N.s 			page 559


 22366              	.LASF89:
 22367 3a9b 6F706572 		.string	"operator std::integral_constant<long int, 1l>::value_type"
 22367      61746F72 
 22367      20737464 
 22367      3A3A696E 
 22367      74656772 
 22368              	.LASF906:
 22369 3ad5 696E745F 		.string	"int_p_sep_by_space"
 22369      705F7365 
 22369      705F6279 
 22369      5F737061 
 22369      636500
 22370              	.LASF1080:
 22371 3ae8 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__minE"
 22371      5F5F676E 
 22371      755F6378 
 22371      7832345F 
 22371      5F6E756D 
 22372              	.LASF395:
 22373 3b1a 74797065 		.string	"type_info"
 22373      5F696E66 
 22373      6F00
 22374              	.LASF973:
 22375 3b24 67657463 		.string	"getc"
 22375      00
 22376              	.LASF99:
 22377 3b29 72617469 		.string	"ratio<1l, 1l>"
 22377      6F3C316C 
 22377      2C20316C 
 22377      3E00
 22378              	.LASF749:
 22379 3b37 696E746D 		.string	"intmax_t"
 22379      61785F74 
 22379      00
 22380              	.LASF957:
 22381 3b40 5F706F73 		.string	"_pos"
 22381      00
 22382              	.LASF961:
 22383 3b45 66656F66 		.string	"feof"
 22383      00
 22384              	.LASF978:
 22385 3b4a 72656E61 		.string	"rename"
 22385      6D6500
 22386              	.LASF440:
 22387 3b51 5F535F62 		.string	"_S_beg"
 22387      656700
 22388              	.LASF890:
 22389 3b58 696E745F 		.string	"int_curr_symbol"
 22389      63757272 
 22389      5F73796D 
 22389      626F6C00 
 22390              	.LASF838:
 22391 3b68 6D627369 		.string	"mbsinit"
 22391      6E697400 
 22392              	.LASF842:
 22393 3b70 73777072 		.string	"swprintf"
 22393      696E7466 
GAS LISTING /tmp/cceISX6N.s 			page 560


 22393      00
 22394              	.LASF989:
 22395 3b79 77637472 		.string	"wctrans"
 22395      616E7300 
 22396              	.LASF169:
 22397 3b81 5F535F74 		.string	"_S_terminal"
 22397      65726D69 
 22397      6E616C00 
 22398              	.LASF367:
 22399 3b8d 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcm"
 22399      53733133 
 22399      66696E64 
 22399      5F666972 
 22399      73745F6F 
 22400              	.LASF874:
 22401 3ba8 776D656D 		.string	"wmemset"
 22401      73657400 
 22402              	.LASF612:
 22403 3bb0 666F7277 		.string	"forward<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product
 22403      6172643C 
 22403      556E6172 
 22403      79457870 
 22403      723C4269 
 22404              	.LASF857:
 22405 3c4b 77637366 		.string	"wcsftime"
 22405      74696D65 
 22405      00
 22406              	.LASF375:
 22407 3c54 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofERKSsm"
 22407      53733137 
 22407      66696E64 
 22407      5F666972 
 22407      73745F6E 
 22408              	.LASF1014:
 22409 3c74 5F5F6774 		.string	"__gthread_active_ptr"
 22409      68726561 
 22409      645F6163 
 22409      74697665 
 22409      5F707472 
 22410              	.LASF463:
 22411 3c89 62617365 		.string	"basefield"
 22411      6669656C 
 22411      6400
 22412              	.LASF161:
 22413 3c93 636F6E73 		.string	"const_iterator"
 22413      745F6974 
 22413      65726174 
 22413      6F7200
 22414              	.LASF644:
 22415 3ca2 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm"
 22415      5F5F676E 
 22415      755F6378 
 22415      7831336E 
 22415      65775F61 
 22416              	.LASF192:
 22417 3cd2 5F4D5F72 		.string	"_M_refcopy"
 22417      6566636F 
GAS LISTING /tmp/cceISX6N.s 			page 561


 22417      707900
 22418              	.LASF911:
 22419 3cdd 7365746C 		.string	"setlocale"
 22419      6F63616C 
 22419      6500
 22420              	.LASF627:
 22421 3ce7 70696563 		.string	"piecewise_construct"
 22421      65776973 
 22421      655F636F 
 22421      6E737472 
 22421      75637400 
 22422              	.LASF370:
 22423 3cfb 5F5A4E4B 		.string	"_ZNKSs12find_last_ofERKSsm"
 22423      53733132 
 22423      66696E64 
 22423      5F6C6173 
 22423      745F6F66 
 22424              	.LASF179:
 22425 3d16 5F5A4E53 		.string	"_ZNSs4_Rep15_M_set_sharableEv"
 22425      73345F52 
 22425      65703135 
 22425      5F4D5F73 
 22425      65745F73 
 22426              	.LASF959:
 22427 3d34 636C6561 		.string	"clearerr"
 22427      72657272 
 22427      00
 22428              	.LASF868:
 22429 3d3d 77637374 		.string	"wcstoul"
 22429      6F756C00 
 22430              	.LASF241:
 22431 3d45 62656769 		.string	"begin"
 22431      6E00
 22432              	.LASF1085:
 22433 3d4b 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1000EE3denE"
 22433      74357261 
 22433      74696F49 
 22433      4C6C3145 
 22433      4C6C3130 
 22434              	.LASF101:
 22435 3d69 74797065 		.string	"type"
 22435      00
 22436              	.LASF848:
 22437 3d6e 76737773 		.string	"vswscanf"
 22437      63616E66 
 22437      00
 22438              	.LASF755:
 22439 3d77 5F5F6F66 		.string	"__off_t"
 22439      665F7400 
 22440              	.LASF213:
 22441 3d7f 5F4D5F64 		.string	"_M_disjunct"
 22441      69736A75 
 22441      6E637400 
 22442              	.LASF385:
 22443 3d8b 5F5A4E4B 		.string	"_ZNKSs6substrEmm"
 22443      53733673 
 22443      75627374 
GAS LISTING /tmp/cceISX6N.s 			page 562


 22443      72456D6D 
 22443      00
 22444              	.LASF866:
 22445 3d9c 77637374 		.string	"wcstok"
 22445      6F6B00
 22446              	.LASF767:
 22447 3da3 746D5F77 		.string	"tm_wday"
 22447      64617900 
 22448              	.LASF834:
 22449 3dab 67657477 		.string	"getwc"
 22449      6300
 22450              	.LASF977:
 22451 3db1 72656D6F 		.string	"remove"
 22451      766500
 22452              	.LASF289:
 22453 3db8 5F5A4E53 		.string	"_ZNSspLERKSs"
 22453      73704C45 
 22453      524B5373 
 22453      00
 22454              	.LASF1072:
 22455 3dc5 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1EE3denE"
 22455      74357261 
 22455      74696F49 
 22455      4C6C3145 
 22455      4C6C3145 
 22456              	.LASF293:
 22457 3de0 61707065 		.string	"append"
 22457      6E6400
 22458              	.LASF1026:
 22459 3de7 5F5F6172 		.string	"__arg"
 22459      6700
 22460              	.LASF237:
 22461 3ded 5F5A4E53 		.string	"_ZNSsaSEPKc"
 22461      73615345 
 22461      504B6300 
 22462              	.LASF428:
 22463 3df9 5F535F62 		.string	"_S_bin"
 22463      696E00
 22464              	.LASF843:
 22465 3e00 73777363 		.string	"swscanf"
 22465      616E6600 
 22466              	.LASF702:
 22467 3e08 7369676E 		.string	"signed char"
 22467      65642063 
 22467      68617200 
 22468              	.LASF447:
 22469 3e14 7E496E69 		.string	"~Init"
 22469      7400
 22470              	.LASF325:
 22471 3e1a 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSs"
 22471      73377265 
 22471      706C6163 
 22471      65456D6D 
 22471      524B5373 
 22472              	.LASF339:
 22473 3e2f 5F4D5F72 		.string	"_M_replace_aux"
 22473      65706C61 
GAS LISTING /tmp/cceISX6N.s 			page 563


 22473      63655F61 
 22473      757800
 22474              	.LASF847:
 22475 3e3e 76737770 		.string	"vswprintf"
 22475      72696E74 
 22475      6600
 22476              	.LASF446:
 22477 3e48 496E6974 		.string	"Init"
 22477      00
 22478              	.LASF714:
 22479 3e4d 5F5A4E4B 		.string	"_ZNK8Constant4evalEv"
 22479      38436F6E 
 22479      7374616E 
 22479      74346576 
 22479      616C4576 
 22480              	.LASF274:
 22481 3e62 636C6561 		.string	"clear"
 22481      7200
 22482              	.LASF391:
 22483 3e68 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKcm"
 22483      53733763 
 22483      6F6D7061 
 22483      7265456D 
 22483      6D504B63 
 22484              	.LASF350:
 22485 3e7e 5F5A4E4B 		.string	"_ZNKSs5c_strEv"
 22485      53733563 
 22485      5F737472 
 22485      457600
 22486              	.LASF611:
 22487 3e8d 6F706572 		.string	"operator<< <std::char_traits<char> >"
 22487      61746F72 
 22487      3C3C203C 
 22487      7374643A 
 22487      3A636861 
 22488              	.LASF910:
 22489 3eb2 696E745F 		.string	"int_n_sign_posn"
 22489      6E5F7369 
 22489      676E5F70 
 22489      6F736E00 
 22490              	.LASF757:
 22491 3ec2 5F5F636C 		.string	"__clock_t"
 22491      6F636B5F 
 22491      7400
 22492              	.LASF816:
 22493 3ecc 66705F6F 		.string	"fp_offset"
 22493      66667365 
 22493      7400
 22494              	.LASF619:
 22495 3ed6 5F546169 		.string	"_Tail"
 22495      6C00
 22496              	.LASF717:
 22497 3edc 50726F64 		.string	"Product"
 22497      75637400 
 22498              	.LASF4:
 22499 3ee4 76616C75 		.string	"value"
 22499      6500
GAS LISTING /tmp/cceISX6N.s 			page 564


 22500              	.LASF955:
 22501 3eea 5F6E6578 		.string	"_next"
 22501      7400
 22502              	.LASF164:
 22503 3ef0 5F526570 		.string	"_Rep_base"
 22503      5F626173 
 22503      6500
 22504              	.LASF688:
 22505 3efa 5F5F6D61 		.string	"__max_exponent10"
 22505      785F6578 
 22505      706F6E65 
 22505      6E743130 
 22505      00
 22506              	.LASF945:
 22507 3f0b 61746F6C 		.string	"atoll"
 22507      6C00
 22508              	.LASF541:
 22509 3f11 5F4D6179 		.string	"_Maybe_get_result_type"
 22509      62655F67 
 22509      65745F72 
 22509      6573756C 
 22509      745F7479 
 22510              	.LASF243:
 22511 3f28 5F5A4E4B 		.string	"_ZNKSs5beginEv"
 22511      53733562 
 22511      6567696E 
 22511      457600
 22512              	.LASF144:
 22513 3f37 6E6F745F 		.string	"not_eof"
 22513      656F6600 
 22514              	.LASF965:
 22515 3f3f 66676574 		.string	"fgetpos"
 22515      706F7300 
 22516              	.LASF589:
 22517 3f47 5F497350 		.string	"_IsPlaceholder"
 22517      6C616365 
 22517      686F6C64 
 22517      657200
 22518              	.LASF414:
 22519 3f56 5F535F73 		.string	"_S_showbase"
 22519      686F7762 
 22519      61736500 
 22520              	.LASF323:
 22521 3f62 5F5A4E53 		.string	"_ZNSs8pop_backEv"
 22521      7338706F 
 22521      705F6261 
 22521      636B4576 
 22521      00
 22522              	.LASF53:
 22523 3f73 5F5A4E53 		.string	"_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEE
 22523      74366368 
 22523      726F6E6F 
 22523      31307469 
 22523      6D655F70 
 22524              	.LASF419:
 22525 3fd5 5F535F75 		.string	"_S_uppercase"
 22525      70706572 
GAS LISTING /tmp/cceISX6N.s 			page 565


 22525      63617365 
 22525      00
 22526              	.LASF313:
 22527 3fe2 5F5A4E53 		.string	"_ZNSs6insertEmRKSsmm"
 22527      7336696E 
 22527      73657274 
 22527      456D524B 
 22527      53736D6D 
 22528              	.LASF860:
 22529 3ff7 7763736E 		.string	"wcsncmp"
 22529      636D7000 
 22530              	.LASF775:
 22531 3fff 6D6B7469 		.string	"mktime"
 22531      6D6500
 22532              	.LASF649:
 22533 4006 5F5F6973 		.string	"__is_signed"
 22533      5F736967 
 22533      6E656400 
 22534              	.LASF494:
 22535 4012 616C6C6F 		.string	"allocator_arg_t"
 22535      6361746F 
 22535      725F6172 
 22535      675F7400 
 22536              	.LASF508:
 22537 4022 5F4D6179 		.string	"_Maybe_wrap_member_pointer<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<
 22537      62655F77 
 22537      7261705F 
 22537      6D656D62 
 22537      65725F70 
 22538              	.LASF507:
 22539 40e2 72656D6F 		.string	"remove_reference<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, 
 22539      76655F72 
 22539      65666572 
 22539      656E6365 
 22539      3C646F75 
 22540              	.LASF964:
 22541 4198 66676574 		.string	"fgetc"
 22541      6300
 22542              	.LASF190:
 22543 419e 5F4D5F64 		.string	"_M_destroy"
 22543      65737472 
 22543      6F7900
 22544              	.LASF208:
 22545 41a9 5F5A4E4B 		.string	"_ZNKSs8_M_checkEmPKc"
 22545      5373385F 
 22545      4D5F6368 
 22545      65636B45 
 22545      6D504B63 
 22546              	.LASF558:
 22547 41be 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES3_
 22547      7431305F 
 22547      48656164 
 22547      5F626173 
 22547      65494C6D 
 22548              	.LASF966:
 22549 4246 66676574 		.string	"fgets"
 22549      7300
GAS LISTING /tmp/cceISX6N.s 			page 566


 22550              	.LASF985:
 22551 424c 77637479 		.string	"wctype_t"
 22551      70655F74 
 22551      00
 22552              	.LASF1009:
 22553 4255 5F5F6465 		.string	"__delta"
 22553      6C746100 
 22554              	.LASF1003:
 22555 425d 5F5A4E4B 		.string	"_ZNK10BinaryExprIS_IS_IS_I8Variable8Constant7ProductES1_3SumES1_S2_ES1_S4_E4evalEv"
 22555      31304269 
 22555      6E617279 
 22555      45787072 
 22555      49535F49 
 22556              	.LASF777:
 22557 42b0 61736374 		.string	"asctime"
 22557      696D6500 
 22558              	.LASF114:
 22559 42b8 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 22559      7431355F 
 22559      5F657863 
 22559      65707469 
 22559      6F6E5F70 
 22560              	.LASF1030:
 22561 42e8 5F5F6172 		.string	"__args"
 22561      677300
 22562              	.LASF1078:
 22563 42ef 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerImE8__digitsE"
 22563      5F5F676E 
 22563      755F6378 
 22563      7832345F 
 22563      5F6E756D 
 22564              	.LASF409:
 22565 4324 5F535F69 		.string	"_S_internal"
 22565      6E746572 
 22565      6E616C00 
 22566              	.LASF604:
 22567 4330 72647374 		.string	"rdstate"
 22567      61746500 
 22568              	.LASF653:
 22569 4338 5F5F6E6F 		.string	"__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<c
 22569      726D616C 
 22569      5F697465 
 22569      7261746F 
 22569      723C6368 
 22570              	.LASF19:
 22571 439a 636F756E 		.string	"count"
 22571      7400
 22572              	.LASF1091:
 22573 43a0 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1000000EE3numE"
 22573      74357261 
 22573      74696F49 
 22573      4C6C3145 
 22573      4C6C3130 
 22574              	.LASF502:
 22575 43c1 5F5A4E53 		.string	"_ZNSt5tupleIIEE4swapERS0_"
 22575      74357475 
 22575      706C6549 
GAS LISTING /tmp/cceISX6N.s 			page 567


 22575      49454534 
 22575      73776170 
 22576              	.LASF384:
 22577 43db 73756273 		.string	"substr"
 22577      747200
 22578              	.LASF292:
 22579 43e2 5F5A4E53 		.string	"_ZNSspLESt16initializer_listIcE"
 22579      73704C45 
 22579      53743136 
 22579      696E6974 
 22579      69616C69 
 22580              	.LASF896:
 22581 4402 6E656761 		.string	"negative_sign"
 22581      74697665 
 22581      5F736967 
 22581      6E00
 22582              	.LASF778:
 22583 4410 6374696D 		.string	"ctime"
 22583      6500
 22584              	.LASF780:
 22585 4416 6C6F6361 		.string	"localtime"
 22585      6C74696D 
 22585      6500
 22586              	.LASF242:
 22587 4420 5F5A4E53 		.string	"_ZNSs5beginEv"
 22587      73356265 
 22587      67696E45 
 22587      7600
 22588              	.LASF265:
 22589 442e 72657369 		.string	"resize"
 22589      7A6500
 22590              	.LASF800:
 22591 4435 5F6F6C64 		.string	"_old_offset"
 22591      5F6F6666 
 22591      73657400 
 22592              	.LASF929:
 22593 4441 67657465 		.string	"getenv"
 22593      6E7600
 22594              	.LASF839:
 22595 4448 6D627372 		.string	"mbsrtowcs"
 22595      746F7763 
 22595      7300
 22596              	.LASF113:
 22597 4452 73776170 		.string	"swap"
 22597      00
 22598              	.LASF72:
 22599 4457 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEE3minEv"
 22599      74366368 
 22599      726F6E6F 
 22599      38647572 
 22599      6174696F 
 22600              	.LASF221:
 22601 448b 5F5A4E53 		.string	"_ZNSs9_M_assignEPcmc"
 22601      73395F4D 
 22601      5F617373 
 22601      69676E45 
 22601      50636D63 
GAS LISTING /tmp/cceISX6N.s 			page 568


 22602              	.LASF953:
 22603 44a0 5F475F66 		.string	"_G_fpos_t"
 22603      706F735F 
 22603      7400
 22604              	.LASF861:
 22605 44aa 7763736E 		.string	"wcsncpy"
 22605      63707900 
 22606              	.LASF182:
 22607 44b2 5F4D5F72 		.string	"_M_refdata"
 22607      65666461 
 22607      746100
 22608              	.LASF586:
 22609 44bd 5F435641 		.string	"_CVArg"
 22609      726700
 22610              	.LASF444:
 22611 44c4 5F535F72 		.string	"_S_refcount"
 22611      6566636F 
 22611      756E7400 
 22612              	.LASF75:
 22613 44d0 64757261 		.string	"duration<long int, std::ratio<1l, 1000000000l>, void>"
 22613      74696F6E 
 22613      3C6C6F6E 
 22613      6720696E 
 22613      742C2073 
 22614              	.LASF78:
 22615 4506 5F5F6361 		.string	"__cast<long int, std::ratio<1l, 1000000000l> >"
 22615      73743C6C 
 22615      6F6E6720 
 22615      696E742C 
 22615      20737464 
 22616              	.LASF218:
 22617 4535 5F4D5F6D 		.string	"_M_move"
 22617      6F766500 
 22618              	.LASF493:
 22619 453d 70696563 		.string	"piecewise_construct_t"
 22619      65776973 
 22619      655F636F 
 22619      6E737472 
 22619      7563745F 
 22620              	.LASF885:
 22621 4553 5F5F676E 		.string	"__gnu_debug"
 22621      755F6465 
 22621      62756700 
 22622              	.LASF406:
 22623 455f 5F535F64 		.string	"_S_dec"
 22623      656300
 22624              	.LASF495:
 22625 4566 5F5F7573 		.string	"__uses_alloc_base"
 22625      65735F61 
 22625      6C6C6F63 
 22625      5F626173 
 22625      6500
 22626              	.LASF220:
 22627 4578 5F4D5F61 		.string	"_M_assign"
 22627      73736967 
 22627      6E00
 22628              	.LASF515:
GAS LISTING /tmp/cceISX6N.s 			page 569


 22629 4582 6F706572 		.string	"operator()<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Prod
 22629      61746F72 
 22629      28293C55 
 22629      6E617279 
 22629      45787072 
 22630              	.LASF158:
 22631 4627 5F4D5F64 		.string	"_M_dataplus"
 22631      61746170 
 22631      6C757300 
 22632              	.LASF574:
 22633 4633 5F547570 		.string	"_Tuple_impl<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Pro
 22633      6C655F69 
 22633      6D706C3C 
 22633      556E6172 
 22633      79457870 
 22634              	.LASF1001:
 22635 46d8 5F5A4E4B 		.string	"_ZNK10BinaryExprIS_IS_I8Variable8Constant7ProductES1_3SumES1_S2_E4evalEv"
 22635      31304269 
 22635      6E617279 
 22635      45787072 
 22635      49535F49 
 22636              	.LASF752:
 22637 4721 63686172 		.string	"char16_t"
 22637      31365F74 
 22637      00
 22638              	.LASF397:
 22639 472a 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_tr
 22639      7273655F 
 22639      69746572 
 22639      61746F72 
 22639      3C5F5F67 
 22640              	.LASF795:
 22641 47aa 5F494F5F 		.string	"_IO_save_end"
 22641      73617665 
 22641      5F656E64 
 22641      00
 22642              	.LASF657:
 22643 47b7 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv"
 22643      395F5F67 
 22643      6E755F63 
 22643      78783137 
 22643      5F5F6E6F 
 22644              	.LASF286:
 22645 47e3 6261636B 		.string	"back"
 22645      00
 22646              	.LASF519:
 22647 47e8 72656D6F 		.string	"remove_reference<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant
 22647      76655F72 
 22647      65666572 
 22647      656E6365 
 22647      3C556E61 
 22648              	.LASF632:
 22649 488c 73747265 		.string	"streamsize"
 22649      616D7369 
 22649      7A6500
 22650              	.LASF1028:
 22651 4897 5F5F6F62 		.string	"__object"
GAS LISTING /tmp/cceISX6N.s 			page 570


 22651      6A656374 
 22651      00
 22652              	.LASF288:
 22653 48a0 5F5A4E4B 		.string	"_ZNKSs4backEv"
 22653      53733462 
 22653      61636B45 
 22653      7600
 22654              	.LASF491:
 22655 48ae 5F5A4E4B 		.string	"_ZNKSt17integral_constantIlLl1000EEcvlEv"
 22655      53743137 
 22655      696E7465 
 22655      6772616C 
 22655      5F636F6E 
 22656              	.LASF668:
 22657 48d7 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiERKl"
 22657      395F5F67 
 22657      6E755F63 
 22657      78783137 
 22657      5F5F6E6F 
 22658              	.LASF316:
 22659 4905 5F5A4E53 		.string	"_ZNSs6insertEmmc"
 22659      7336696E 
 22659      73657274 
 22659      456D6D63 
 22659      00
 22660              	.LASF718:
 22661 4916 5F5A4E4B 		.string	"_ZNK7ProductclEdd"
 22661      3750726F 
 22661      64756374 
 22661      636C4564 
 22661      6400
 22662              	.LASF923:
 22663 4928 61746578 		.string	"atexit"
 22663      697400
 22664              	.LASF600:
 22665 492f 706F696E 		.string	"pointer"
 22665      74657200 
 22666              	.LASF514:
 22667 4937 5F4D656D 		.string	"_Mem_fn"
 22667      5F666E00 
 22668              	.LASF147:
 22669 493f 616C6C6F 		.string	"allocator<char>"
 22669      6361746F 
 22669      723C6368 
 22669      61723E00 
 22670              	.LASF841:
 22671 494f 70757477 		.string	"putwchar"
 22671      63686172 
 22671      00
 22672              	.LASF36:
 22673 4958 6F706572 		.string	"operator*="
 22673      61746F72 
 22673      2A3D00
 22674              	.LASF181:
 22675 4963 5F5A4E53 		.string	"_ZNSs4_Rep26_M_set_length_and_sharableEm"
 22675      73345F52 
 22675      65703236 
GAS LISTING /tmp/cceISX6N.s 			page 571


 22675      5F4D5F73 
 22675      65745F6C 
 22676              	.LASF152:
 22677 498c 7E616C6C 		.string	"~allocator"
 22677      6F636174 
 22677      6F7200
 22678              	.LASF1092:
 22679 4997 5F5A4E53 		.string	"_ZNSt5ratioILl1ELl1000000EE3denE"
 22679      74357261 
 22679      74696F49 
 22679      4C6C3145 
 22679      4C6C3130 
 22680              	.LASF26:
 22681 49b8 6F706572 		.string	"operator++"
 22681      61746F72 
 22681      2B2B00
 22682              	.LASF338:
 22683 49c3 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE"
 22683      73377265 
 22683      706C6163 
 22683      65454E39 
 22683      5F5F676E 
 22684              	.LASF484:
 22685 4a11 63747970 		.string	"ctype<char>"
 22685      653C6368 
 22685      61723E00 
 22686              	.LASF32:
 22687 4a1d 6F706572 		.string	"operator+="
 22687      61746F72 
 22687      2B3D00
 22688              	.LASF952:
 22689 4a28 5F5F7374 		.string	"__state"
 22689      61746500 
 22690              	.LASF678:
 22691 4a30 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEi"
 22691      5F5F676E 
 22691      755F6378 
 22691      7831375F 
 22691      5F6E6F72 
 22692              	.LASF751:
 22693 4a5c 77636861 		.string	"wchar_t"
 22693      725F7400 
 22694              	.LASF900:
 22695 4a64 705F7365 		.string	"p_sep_by_space"
 22695      705F6279 
 22695      5F737061 
 22695      636500
 22696              	.LASF677:
 22697 4a73 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEv"
 22697      5F5F676E 
 22697      755F6378 
 22697      7831375F 
 22697      5F6E6F72 
 22698              	.LASF394:
 22699 4a9f 5F416C6C 		.string	"_Alloc"
 22699      6F6300
 22700              	.LASF846:
GAS LISTING /tmp/cceISX6N.s 			page 572


 22701 4aa6 76667773 		.string	"vfwscanf"
 22701      63616E66 
 22701      00
 22702              	.LASF572:
 22703 4aaf 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 22703      7431315F 
 22703      5475706C 
 22703      655F696D 
 22703      706C494C 
 22704              	.LASF617:
 22705 4b30 666F7277 		.string	"forward<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant,
 22705      6172643C 
 22705      646F7562 
 22705      6C652028 
 22705      556E6172 
 22706              	.LASF1015:
 22707 4bdd 5F5F7265 		.string	"__result"
 22707      73756C74 
 22707      00
 22708              	.LASF690:
 22709 4be6 5F5F6E75 		.string	"__numeric_traits_floating<long double>"
 22709      6D657269 
 22709      635F7472 
 22709      61697473 
 22709      5F666C6F 
 22710              	.LASF884:
 22711 4c0d 77637374 		.string	"wcstoull"
 22711      6F756C6C 
 22711      00
 22712              	.LASF769:
 22713 4c16 746D5F69 		.string	"tm_isdst"
 22713      73647374 
 22713      00
 22714              	.LASF194:
 22715 4c1f 5F4D5F63 		.string	"_M_clone"
 22715      6C6F6E65 
 22715      00
 22716              	.LASF899:
 22717 4c28 705F6373 		.string	"p_cs_precedes"
 22717      5F707265 
 22717      63656465 
 22717      7300
 22718              	.LASF1110:
 22719 4c36 5F556E77 		.string	"_Unwind_Resume"
 22719      696E645F 
 22719      52657375 
 22719      6D6500
 22720              	.LASF33:
 22721 4c45 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEpLERKS3_"
 22721      74366368 
 22721      726F6E6F 
 22721      38647572 
 22721      6174696F 
 22722              	.LASF1029:
 22723 4c81 5F496E64 		.string	"_Indexes"
 22723      65786573 
 22723      00
GAS LISTING /tmp/cceISX6N.s 			page 573


 22724              	.LASF29:
 22725 4c8a 6F706572 		.string	"operator--"
 22725      61746F72 
 22725      2D2D00
 22726              	.LASF1082:
 22727 4c95 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__minE"
 22727      5F5F676E 
 22727      755F6378 
 22727      7832345F 
 22727      5F6E756D 
 22728              	.LASF82:
 22729 4cc7 6F706572 		.string	"operator-<long int, std::ratio<1l, 1000000000l>, long int, std::ratio<1l, 1000000000l> >"
 22729      61746F72 
 22729      2D3C6C6F 
 22729      6E672069 
 22729      6E742C20 
 22730              	.LASF34:
 22731 4d20 6F706572 		.string	"operator-="
 22731      61746F72 
 22731      2D3D00
 22732              	.LASF658:
 22733 4d2b 6F706572 		.string	"operator->"
 22733      61746F72 
 22733      2D3E00
 22734              	.LASF573:
 22735 4d36 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 22735      7431315F 
 22735      5475706C 
 22735      655F696D 
 22735      706C494C 
 22736              	.LASF195:
 22737 4dbd 5F5A4E53 		.string	"_ZNSs4_Rep8_M_cloneERKSaIcEm"
 22737      73345F52 
 22737      6570385F 
 22737      4D5F636C 
 22737      6F6E6545 
 22738              	.LASF621:
 22739 4dda 6F706572 		.string	"operator<< <char, std::char_traits<char>, std::allocator<char> >"
 22739      61746F72 
 22739      3C3C203C 
 22739      63686172 
 22739      2C207374 
 22740              	.LASF503:
 22741 4e1b 5F537761 		.string	"_Swallow_assign"
 22741      6C6C6F77 
 22741      5F617373 
 22741      69676E00 
 22742              	.LASF61:
 22743 4e2b 5F5A4E4B 		.string	"_ZNKSt6chrono8durationIdSt5ratioILl1ELl1000EEEngEv"
 22743      53743663 
 22743      68726F6E 
 22743      6F386475 
 22743      72617469 
 22744              	.LASF740:
 22745 4e5e 696E745F 		.string	"int_fast16_t"
 22745      66617374 
 22745      31365F74 
GAS LISTING /tmp/cceISX6N.s 			page 574


 22745      00
 22746              	.LASF716:
 22747 4e6b 5F5A4E4B 		.string	"_ZNK3SumclEdd"
 22747      3353756D 
 22747      636C4564 
 22747      6400
 22748              	.LASF383:
 22749 4e79 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEcm"
 22749      53733136 
 22749      66696E64 
 22749      5F6C6173 
 22749      745F6E6F 
 22750              	.LASF559:
 22751 4e95 5F5A4E53 		.string	"_ZNSt10_Head_baseILm0EP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES3_
 22751      7431305F 
 22751      48656164 
 22751      5F626173 
 22751      65494C6D 
 22752              	.LASF389:
 22753 4f1e 5F5A4E4B 		.string	"_ZNKSs7compareEPKc"
 22753      53733763 
 22753      6F6D7061 
 22753      72654550 
 22753      4B6300
 22754              	.LASF50:
 22755 4f31 5F5A4E4B 		.string	"_ZNKSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EE
 22755      53743663 
 22755      68726F6E 
 22755      6F313074 
 22755      696D655F 
 22756              	.LASF1008:
 22757 4fa2 5F5F7066 		.string	"__pfn"
 22757      6E00
 22758              	.LASF703:
 22759 4fa8 73686F72 		.string	"short int"
 22759      7420696E 
 22759      7400
 22760              	.LASF640:
 22761 4fb2 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc"
 22761      395F5F67 
 22761      6E755F63 
 22761      78783133 
 22761      6E65775F 
 22762              	.LASF667:
 22763 4fdf 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmIERKl"
 22763      5F5F676E 
 22763      755F6378 
 22763      7831375F 
 22763      5F6E6F72 
 22764              	.LASF1052:
 22765 500c 5832706C 		.string	"X2plus3o25"
 22765      7573336F 
 22765      323500
 22766              	.LASF183:
 22767 5017 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refdataEv"
 22767      73345F52 
 22767      65703130 
GAS LISTING /tmp/cceISX6N.s 			page 575


 22767      5F4D5F72 
 22767      65666461 
 22768              	.LASF202:
 22769 5030 5F5A4E4B 		.string	"_ZNKSs9_M_ibeginEv"
 22769      5373395F 
 22769      4D5F6962 
 22769      6567696E 
 22769      457600
 22770              	.LASF60:
 22771 5043 5F5A4E4B 		.string	"_ZNKSt6chrono8durationIdSt5ratioILl1ELl1000EEEpsEv"
 22771      53743663 
 22771      68726F6E 
 22771      6F386475 
 22771      72617469 
 22772              	.LASF38:
 22773 5076 6F706572 		.string	"operator/="
 22773      61746F72 
 22773      2F3D00
 22774              	.LASF937:
 22775 5081 7372616E 		.string	"srand"
 22775      6400
 22776              	.LASF176:
 22777 5087 5F4D5F73 		.string	"_M_set_leaked"
 22777      65745F6C 
 22777      65616B65 
 22777      6400
 22778              	.LASF77:
 22779 5095 5F5F6475 		.string	"__duration_cast_impl<std::chrono::duration<double, std::ratio<1l, 1000l> >, std::ratio<1l
 22779      72617469 
 22779      6F6E5F63 
 22779      6173745F 
 22779      696D706C 
 22780              	.LASF487:
 22781 5110 5F4D5F77 		.string	"_M_widen_init"
 22781      6964656E 
 22781      5F696E69 
 22781      7400
 22782              	.LASF664:
 22783 511e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEixERKl"
 22783      395F5F67 
 22783      6E755F63 
 22783      78783137 
 22783      5F5F6E6F 
 22784              	.LASF1076:
 22785 514c 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E"
 22785      5F5F676E 
 22785      755F6378 
 22785      7832355F 
 22785      5F6E756D 
 22786              	.LASF565:
 22787 518b 5F496E68 		.string	"_Inherited"
 22787      65726974 
 22787      656400
 22788              	.LASF912:
 22789 5196 6C6F6361 		.string	"localeconv"
 22789      6C65636F 
 22789      6E7600
GAS LISTING /tmp/cceISX6N.s 			page 576


 22790              	.LASF720:
 22791 51a1 5F5A4E4B 		.string	"_ZNK7SigmoidclEd"
 22791      37536967 
 22791      6D6F6964 
 22791      636C4564 
 22791      00
 22792              	.LASF191:
 22793 51b2 5F5A4E53 		.string	"_ZNSs4_Rep10_M_destroyERKSaIcE"
 22793      73345F52 
 22793      65703130 
 22793      5F4D5F64 
 22793      65737472 
 22794              	.LASF796:
 22795 51d1 5F6D6172 		.string	"_markers"
 22795      6B657273 
 22795      00
 22796              	.LASF1004:
 22797 51da 556E6172 		.string	"UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>, Const
 22797      79457870 
 22797      723C4269 
 22797      6E617279 
 22797      45787072 
 22798              	.LASF332:
 22799 526b 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc"
 22799      73377265 
 22799      706C6163 
 22799      65454E39 
 22799      5F5F676E 
 22800              	.LASF798:
 22801 52a5 5F66696C 		.string	"_fileno"
 22801      656E6F00 
 22802              	.LASF6:
 22803 52ad 6F706572 		.string	"operator std::integral_constant<bool, false>::value_type"
 22803      61746F72 
 22803      20737464 
 22803      3A3A696E 
 22803      74656772 
 22804              	.LASF583:
 22805 52e6 72656D6F 		.string	"remove_reference<std::_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryEx
 22805      76655F72 
 22805      65666572 
 22805      656E6365 
 22805      3C737464 
 22806              	.LASF663:
 22807 53ab 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEi"
 22807      5F5F676E 
 22807      755F6378 
 22807      7831375F 
 22807      5F6E6F72 
 22808              	.LASF1036:
 22809 53d6 5F5F7072 		.string	"__priority"
 22809      696F7269 
 22809      747900
 22810              	.LASF262:
 22811 53e1 5F5A4E4B 		.string	"_ZNKSs6lengthEv"
 22811      5373366C 
 22811      656E6774 
GAS LISTING /tmp/cceISX6N.s 			page 577


 22811      68457600 
 22812              	.LASF1060:
 22813 53f1 7374646F 		.string	"stdout"
 22813      757400
 22814              	.LASF662:
 22815 53f8 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEv"
 22815      5F5F676E 
 22815      755F6378 
 22815      7831375F 
 22815      5F6E6F72 
 22816              	.LASF1079:
 22817 5423 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIcE5__maxE"
 22817      5F5F676E 
 22817      755F6378 
 22817      7832345F 
 22817      5F6E756D 
 22818              	.LASF489:
 22819 5455 696E7465 		.string	"integral_constant<long int, 1000l>"
 22819      6772616C 
 22819      5F636F6E 
 22819      7374616E 
 22819      743C6C6F 
 22820              	.LASF907:
 22821 5478 696E745F 		.string	"int_n_cs_precedes"
 22821      6E5F6373 
 22821      5F707265 
 22821      63656465 
 22821      7300
 22822              	.LASF594:
 22823 548a 5F5A4E4B 		.string	"_ZNKSt17integral_constantIlLl1000000EEcvlEv"
 22823      53743137 
 22823      696E7465 
 22823      6772616C 
 22823      5F636F6E 
 22824              	.LASF65:
 22825 54b6 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEmmEi"
 22825      74366368 
 22825      726F6E6F 
 22825      38647572 
 22825      6174696F 
 22826              	.LASF64:
 22827 54e8 5F5A4E53 		.string	"_ZNSt6chrono8durationIdSt5ratioILl1ELl1000EEEmmEv"
 22827      74366368 
 22827      726F6E6F 
 22827      38647572 
 22827      6174696F 
 22828              	.LASF645:
 22829 551a 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv"
 22829      395F5F67 
 22829      6E755F63 
 22829      78783133 
 22829      6E65775F 
 22830              	.LASF1058:
 22831 5546 5F5F636C 		.string	"__closure"
 22831      6F737572 
 22831      6500
 22832              	.LASF129:
GAS LISTING /tmp/cceISX6N.s 			page 578


 22833 5550 66696E64 		.string	"find"
 22833      00
 22834              	.LASF321:
 22835 5555 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_"
 22835      73356572 
 22835      61736545 
 22835      4E395F5F 
 22835      676E755F 
 22836              	.LASF388:
 22837 558a 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSsmm"
 22837      53733763 
 22837      6F6D7061 
 22837      7265456D 
 22837      6D524B53 
 22838              	.LASF746:
 22839 55a2 75696E74 		.string	"uint_fast64_t"
 22839      5F666173 
 22839      7436345F 
 22839      7400
 22840              	.LASF733:
 22841 55b0 696E745F 		.string	"int_least32_t"
 22841      6C656173 
 22841      7433325F 
 22841      7400
 22842              	.LASF554:
 22843 55be 5F486561 		.string	"_Head_base<0ul, UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant,
 22843      645F6261 
 22843      73653C30 
 22843      756C2C20 
 22843      556E6172 
 22844              	.LASF1035:
 22845 5668 5F5F696E 		.string	"__initialize_p"
 22845      69746961 
 22845      6C697A65 
 22845      5F7000
 22846              	.LASF16:
 22847 5677 64757261 		.string	"duration"
 22847      74696F6E 
 22847      00
 22848              	.LASF214:
 22849 5680 5F5A4E4B 		.string	"_ZNKSs11_M_disjunctEPKc"
 22849      53733131 
 22849      5F4D5F64 
 22849      69736A75 
 22849      6E637445 
 22850              	.LASF369:
 22851 5698 66696E64 		.string	"find_last_of"
 22851      5F6C6173 
 22851      745F6F66 
 22851      00
 22852              	.LASF1:
 22853 56a5 6C6F6E67 		.string	"long int"
 22853      20696E74 
 22853      00
 22854              	.LASF1055:
 22855 56ae 54494D45 		.string	"TIMES"
 22855      5300
GAS LISTING /tmp/cceISX6N.s 			page 579


 22856              	.LASF754:
 22857 56b4 5F5F696E 		.string	"__int32_t"
 22857      7433325F 
 22857      7400
 22858              	.LASF873:
 22859 56be 776D656D 		.string	"wmemmove"
 22859      6D6F7665 
 22859      00
 22860              	.LASF504:
 22861 56c7 696E7465 		.string	"integral_constant<int, 0>"
 22861      6772616C 
 22861      5F636F6E 
 22861      7374616E 
 22861      743C696E 
 22862              	.LASF1043:
 22863 56e1 73746172 		.string	"start"
 22863      7400
 22864              	.LASF1101:
 22865 56e7 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 22865      74313163 
 22865      6861725F 
 22865      74726169 
 22865      74734963 
 22866              	.LASF758:
 22867 570a 5F5F7469 		.string	"__time_t"
 22867      6D655F74 
 22867      00
 22868              	.LASF592:
 22869 5713 696E7465 		.string	"integral_constant<long int, 1000000l>"
 22869      6772616C 
 22869      5F636F6E 
 22869      7374616E 
 22869      743C6C6F 
 22870              	.LASF174:
 22871 5739 5F4D5F69 		.string	"_M_is_shared"
 22871      735F7368 
 22871      61726564 
 22871      00
 22872              	.LASF633:
 22873 5746 5F5F676E 		.string	"__gnu_cxx"
 22873      755F6378 
 22873      7800
 22874              	.LASF39:
 22875 5750 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEdVERKl"
 22875      74366368 
 22875      726F6E6F 
 22875      38647572 
 22875      6174696F 
 22876              	.LASF921:
 22877 578a 6C6C6469 		.string	"lldiv_t"
 22877      765F7400 
 22878              	.LASF46:
 22879 5792 5F506572 		.string	"_Period"
 22879      696F6400 
 22880              	.LASF492:
 22881 579a 72617469 		.string	"ratio<1l, 1000l>"
 22881      6F3C316C 
GAS LISTING /tmp/cceISX6N.s 			page 580


 22881      2C203130 
 22881      30306C3E 
 22881      00
 22882              	.LASF1021:
 22883 57ab 5F5F696E 		.string	"__in_chrg"
 22883      5F636872 
 22883      6700
 22884              	.LASF715:
 22885 57b5 6F706572 		.string	"operator()"
 22885      61746F72 
 22885      282900
 22886              	.LASF513:
 22887 57c0 5F5F706D 		.string	"__pmf"
 22887      6600
 22888              	.LASF564:
 22889 57c6 5F547570 		.string	"_Tuple_impl<0ul, UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant
 22889      6C655F69 
 22889      6D706C3C 
 22889      30756C2C 
 22889      20556E61 
 22890              	.LASF602:
 22891 586a 69746572 		.string	"iterator_traits<char const*>"
 22891      61746F72 
 22891      5F747261 
 22891      6974733C 
 22891      63686172 
 22892              	.LASF629:
 22893 5887 69676E6F 		.string	"ignore"
 22893      726500
 22894              	.LASF788:
 22895 588e 5F494F5F 		.string	"_IO_write_base"
 22895      77726974 
 22895      655F6261 
 22895      736500
 22896              	.LASF436:
 22897 589d 5F535F65 		.string	"_S_eofbit"
 22897      6F666269 
 22897      7400
 22898              	.LASF131:
 22899 58a7 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 22899      74313163 
 22899      6861725F 
 22899      74726169 
 22899      74734963 
 22900              	.LASF597:
 22901 58cb 5F5F6164 		.string	"__add_ref<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Produ
 22901      645F7265 
 22901      663C556E 
 22901      61727945 
 22901      7870723C 
 22902              	.LASF774:
 22903 5968 64696666 		.string	"difftime"
 22903      74696D65 
 22903      00
 22904              	.LASF613:
 22905 5971 6D6F7665 		.string	"move<std::_Mem_fn<double (UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable,
 22905      3C737464 
GAS LISTING /tmp/cceISX6N.s 			page 581


 22905      3A3A5F4D 
 22905      656D5F66 
 22905      6E3C646F 
 22906              	.LASF858:
 22907 5a2a 7763736C 		.string	"wcslen"
 22907      656E00
 22908              	.LASF2:
 22909 5a31 696E7465 		.string	"integral_constant<bool, false>"
 22909      6772616C 
 22909      5F636F6E 
 22909      7374616E 
 22909      743C626F 
 22910              	.LASF722:
 22911 5a50 73697A65 		.string	"sizetype"
 22911      74797065 
 22911      00
 22912              	.LASF588:
 22913 5a59 5F497342 		.string	"_IsBindExp"
 22913      696E6445 
 22913      787000
 22914              	.LASF141:
 22915 5a64 65715F69 		.string	"eq_int_type"
 22915      6E745F74 
 22915      79706500 
 22916              	.LASF639:
 22917 5a70 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERc"
 22917      395F5F67 
 22917      6E755F63 
 22917      78783133 
 22917      6E65775F 
 22918              	.LASF724:
 22919 5a9c 696E7431 		.string	"int16_t"
 22919      365F7400 
 22920              	.LASF951:
 22921 5aa4 5F5F706F 		.string	"__pos"
 22921      7300
 22922              	.LASF475:
 22923 5aaa 5F5F6F73 		.string	"__ostream_type"
 22923      74726561 
 22923      6D5F7479 
 22923      706500
 22924              	.LASF470:
 22925 5ab9 7365656B 		.string	"seekdir"
 22925      64697200 
 22926              	.LASF776:
 22927 5ac1 74696D65 		.string	"time"
 22927      00
 22928              	.LASF47:
 22929 5ac6 74696D65 		.string	"time_point<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1l,
 22929      5F706F69 
 22929      6E743C73 
 22929      74643A3A 
 22929      6368726F 
 22930              	.LASF476:
 22931 5b31 5F5A4E53 		.string	"_ZNSolsEPFRSoS_E"
 22931      6F6C7345 
 22931      50465253 
GAS LISTING /tmp/cceISX6N.s 			page 582


 22931      6F535F45 
 22931      00
 22932              	.LASF960:
 22933 5b42 66636C6F 		.string	"fclose"
 22933      736500
 22934              	.LASF211:
 22935 5b49 5F4D5F6C 		.string	"_M_limit"
 22935      696D6974 
 22935      00
 22936              	.LASF301:
 22937 5b52 5F5A4E53 		.string	"_ZNSs9push_backEc"
 22937      73397075 
 22937      73685F62 
 22937      61636B45 
 22937      6300
 22938              	.LASF429:
 22939 5b64 5F535F69 		.string	"_S_in"
 22939      6E00
 22940              	.LASF577:
 22941 5b6a 7475706C 		.string	"tuple"
 22941      6500
 22942              	.LASF361:
 22943 5b70 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcmm"
 22943      53733572 
 22943      66696E64 
 22943      45504B63 
 22943      6D6D00
 22944              	.LASF1075:
 22945 5b83 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E"
 22945      5F5F676E 
 22945      755F6378 
 22945      7832355F 
 22945      5F6E756D 
 22946              	.LASF453:
 22947 5bc2 6C656674 		.string	"left"
 22947      00
 22948              	.LASF980:
 22949 5bc7 73657462 		.string	"setbuf"
 22949      756600
 22950              	.LASF742:
 22951 5bce 696E745F 		.string	"int_fast64_t"
 22951      66617374 
 22951      36345F74 
 22951      00
 22952              	.LASF1016:
 22953 5bdb 5F5F7265 		.string	"__rep"
 22953      7000
 22954              	.LASF943:
 22955 5be1 7763746F 		.string	"wctomb"
 22955      6D6200
 22956              	.LASF836:
 22957 5be8 6D62726C 		.string	"mbrlen"
 22957      656E00
 22958              	.LASF279:
 22959 5bef 5F5A4E4B 		.string	"_ZNKSsixEm"
 22959      53736978 
 22959      456D00
GAS LISTING /tmp/cceISX6N.s 			page 583


 22960              	.LASF1102:
 22961 5bfa 5F5A4E53 		.string	"_ZNSs4_Rep12_S_empty_repEv"
 22961      73345F52 
 22961      65703132 
 22961      5F535F65 
 22961      6D707479 
 22962              	.LASF1046:
 22963 5c15 74696D65 		.string	"timeExec<1, main(int, char**)::__lambda0>"
 22963      45786563 
 22963      3C312C20 
 22963      6D61696E 
 22963      28696E74 
 22964              	.LASF432:
 22965 5c3f 5F535F69 		.string	"_S_ios_openmode_end"
 22965      6F735F6F 
 22965      70656E6D 
 22965      6F64655F 
 22965      656E6400 
 22966              	.LASF963:
 22967 5c53 66666C75 		.string	"fflush"
 22967      736800
 22968              	.LASF175:
 22969 5c5a 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_sharedEv"
 22969      5373345F 
 22969      52657031 
 22969      325F4D5F 
 22969      69735F73 
 22970              	.LASF801:
 22971 5c76 5F637572 		.string	"_cur_column"
 22971      5F636F6C 
 22971      756D6E00 
 22972              	.LASF122:
 22973 5c82 696E745F 		.string	"int_type"
 22973      74797065 
 22973      00
 22974              	.LASF650:
 22975 5c8b 5F5F6469 		.string	"__digits"
 22975      67697473 
 22975      00
 22976              	.LASF312:
 22977 5c94 5F5A4E53 		.string	"_ZNSs6insertEmRKSs"
 22977      7336696E 
 22977      73657274 
 22977      456D524B 
 22977      537300
 22978              	.LASF184:
 22979 5ca7 5F4D5F67 		.string	"_M_grab"
 22979      72616200 
 22980              	.LASF111:
 22981 5caf 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 22981      7431355F 
 22981      5F657863 
 22981      65707469 
 22981      6F6E5F70 
 22982              	.LASF189:
 22983 5cdc 5F5A4E53 		.string	"_ZNSs4_Rep10_M_disposeERKSaIcE"
 22983      73345F52 
GAS LISTING /tmp/cceISX6N.s 			page 584


 22983      65703130 
 22983      5F4D5F64 
 22983      6973706F 
 22984              	.LASF516:
 22985 5cfb 5F4D5F63 		.string	"_M_call<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product
 22985      616C6C3C 
 22985      556E6172 
 22985      79457870 
 22985      723C4269 
 22986              	.LASF536:
 22987 5d97 5F4D6179 		.string	"_Maybe_unary_or_binary_function"
 22987      62655F75 
 22987      6E617279 
 22987      5F6F725F 
 22987      62696E61 
 22988              	.LASF430:
 22989 5db7 5F535F6F 		.string	"_S_out"
 22989      757400
 22990              	.LASF671:
 22991 5dbe 5F436F6E 		.string	"_Container"
 22991      7461696E 
 22991      657200
 22992              	.LASF894:
 22993 5dc9 6D6F6E5F 		.string	"mon_grouping"
 22993      67726F75 
 22993      70696E67 
 22993      00
 22994              	.LASF1050:
 22995 5dd6 74687265 		.string	"three"
 22995      6500
 22996              	.LASF636:
 22997 5ddc 6E65775F 		.string	"new_allocator"
 22997      616C6C6F 
 22997      6361746F 
 22997      7200
 22998              	.LASF881:
 22999 5dea 776D656D 		.string	"wmemchr"
 22999      63687200 
 23000              	.LASF534:
 23001 5df2 5F417267 		.string	"_Arg"
 23001      00
 23002              	.LASF200:
 23003 5df7 5F5A4E4B 		.string	"_ZNKSs6_M_repEv"
 23003      5373365F 
 23003      4D5F7265 
 23003      70457600 
 23004              	.LASF931:
 23005 5e07 6D626C65 		.string	"mblen"
 23005      6E00
 23006              	.LASF1045:
 23007 5e0d 5F5F6578 		.string	"__exchange_and_add_dispatch"
 23007      6368616E 
 23007      67655F61 
 23007      6E645F61 
 23007      64645F64 
 23008              	.LASF766:
 23009 5e29 746D5F79 		.string	"tm_year"
GAS LISTING /tmp/cceISX6N.s 			page 585


 23009      65617200 
 23010              	.LASF1019:
 23011 5e31 5F5F7268 		.string	"__rhs"
 23011      7300
 23012              	.LASF920:
 23013 5e37 376C6C64 		.string	"7lldiv_t"
 23013      69765F74 
 23013      00
 23014              	.LASF390:
 23015 5e40 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKc"
 23015      53733763 
 23015      6F6D7061 
 23015      7265456D 
 23015      6D504B63 
 23016              	.LASF1037:
 23017 5e55 5F5F7074 		.string	"__ptr"
 23017      7200
 23018              	.LASF257:
 23019 5e5b 5F5A4E4B 		.string	"_ZNKSs7crbeginEv"
 23019      53733763 
 23019      72626567 
 23019      696E4576 
 23019      00
 23020              	.LASF139:
 23021 5e6c 746F5F69 		.string	"to_int_type"
 23021      6E745F74 
 23021      79706500 
 23022              	.LASF473:
 23023 5e78 6F706572 		.string	"operator<<"
 23023      61746F72 
 23023      3C3C00
 23024              	.LASF803:
 23025 5e83 5F73686F 		.string	"_shortbuf"
 23025      72746275 
 23025      6600
 23026              	.LASF670:
 23027 5e8d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv"
 23027      395F5F67 
 23027      6E755F63 
 23027      78783137 
 23027      5F5F6E6F 
 23028              	.LASF230:
 23029 5ebc 5F5A4E53 		.string	"_ZNSs9_M_mutateEmmm"
 23029      73395F4D 
 23029      5F6D7574 
 23029      61746545 
 23029      6D6D6D00 
 23030              	.LASF15:
 23031 5ed0 64757261 		.string	"duration<long int, std::ratio<1l, 1000000000l> >"
 23031      74696F6E 
 23031      3C6C6F6E 
 23031      6720696E 
 23031      742C2073 
 23032              	.LASF448:
 23033 5f01 696F7374 		.string	"iostate"
 23033      61746500 
 23034              	.LASF197:
GAS LISTING /tmp/cceISX6N.s 			page 586


 23035 5f09 5F5A4E4B 		.string	"_ZNKSs7_M_dataEv"
 23035      5373375F 
 23035      4D5F6461 
 23035      74614576 
 23035      00
 23036              	.LASF947:
 23037 5f1a 73747274 		.string	"strtoull"
 23037      6F756C6C 
 23037      00
 23038              	.LASF393:
 23039 5f23 5F547261 		.string	"_Traits"
 23039      69747300 
 23040              	.LASF756:
 23041 5f2b 5F5F6F66 		.string	"__off64_t"
 23041      6636345F 
 23041      7400
 23042              	.LASF864:
 23043 5f35 77637374 		.string	"wcstod"
 23043      6F6400
 23044              	.LASF865:
 23045 5f3c 77637374 		.string	"wcstof"
 23045      6F6600
 23046              	.LASF1096:
 23047 5f43 474E5520 		.string	"GNU C++ 4.8.1 -masm=intel -mtune=generic -march=x86-64 -g -O3 -std=c++11 -fstack-protecto
 23047      432B2B20 
 23047      342E382E 
 23047      31202D6D 
 23047      61736D3D 
 23048              	.LASF314:
 23049 5f9e 5F5A4E53 		.string	"_ZNSs6insertEmPKcm"
 23049      7336696E 
 23049      73657274 
 23049      456D504B 
 23049      636D00
 23050              	.LASF867:
 23051 5fb1 77637374 		.string	"wcstol"
 23051      6F6C00
 23052              	.LASF682:
 23053 5fb8 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmIERKl"
 23053      5F5F676E 
 23053      755F6378 
 23053      7831375F 
 23053      5F6E6F72 
 23054              	.LASF222:
 23055 5fe6 5F535F63 		.string	"_S_copy_chars"
 23055      6F70795F 
 23055      63686172 
 23055      7300
 23056              	.LASF681:
 23057 5ff4 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEplERKl"
 23057      395F5F67 
 23057      6E755F63 
 23057      78783137 
 23057      5F5F6E6F 
 23058              	.LASF107:
 23059 6023 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 23059      7431355F 
GAS LISTING /tmp/cceISX6N.s 			page 587


 23059      5F657863 
 23059      65707469 
 23059      6F6E5F70 
 23060              	.LASF305:
 23061 6057 5F5A4E53 		.string	"_ZNSs6assignEPKcm"
 23061      73366173 
 23061      7369676E 
 23061      45504B63 
 23061      6D00
 23062              	.LASF193:
 23063 6069 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refcopyEv"
 23063      73345F52 
 23063      65703130 
 23063      5F4D5F72 
 23063      6566636F 
 23064              	.LASF70:
 23065 6082 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE4zeroEv"
 23065      74366368 
 23065      726F6E6F 
 23065      38647572 
 23065      6174696F 
 23066              	.LASF328:
 23067 60bd 5F5A4E53 		.string	"_ZNSs7replaceEmmPKc"
 23067      73377265 
 23067      706C6163 
 23067      65456D6D 
 23067      504B6300 
 23068              	.LASF477:
 23069 60d1 5F4D5F69 		.string	"_M_insert<double>"
 23069      6E736572 
 23069      743C646F 
 23069      75626C65 
 23069      3E00
 23070              	.LASF408:
 23071 60e3 5F535F68 		.string	"_S_hex"
 23071      657800
 23072              	.LASF271:
 23073 60ea 5F5A4E4B 		.string	"_ZNKSs8capacityEv"
 23073      53733863 
 23073      61706163 
 23073      69747945 
 23073      7600
 23074              	.LASF337:
 23075 60fc 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_"
 23075      73377265 
 23075      706C6163 
 23075      65454E39 
 23075      5F5F676E 
 23076              	.LASF826:
 23077 6142 62746F77 		.string	"btowc"
 23077      6300
 23078              	.LASF566:
 23079 6148 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 23079      7431315F 
 23079      5475706C 
 23079      655F696D 
 23079      706C494C 
GAS LISTING /tmp/cceISX6N.s 			page 588


 23080              	.LASF411:
 23081 61cf 5F535F6F 		.string	"_S_oct"
 23081      637400
 23082              	.LASF614:
 23083 61d6 5F5F6368 		.string	"__check_facet<std::ctype<char> >"
 23083      65636B5F 
 23083      66616365 
 23083      743C7374 
 23083      643A3A63 
 23084              	.LASF330:
 23085 61f7 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs"
 23085      73377265 
 23085      706C6163 
 23085      65454E39 
 23085      5F5F676E 
 23086              	.LASF177:
 23087 6232 5F5A4E53 		.string	"_ZNSs4_Rep13_M_set_leakedEv"
 23087      73345F52 
 23087      65703133 
 23087      5F4D5F73 
 23087      65745F6C 
 23088              	.LASF405:
 23089 624e 5F535F62 		.string	"_S_boolalpha"
 23089      6F6F6C61 
 23089      6C706861 
 23089      00
 23090              	.LASF333:
 23091 625b 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_mc"
 23091      73377265 
 23091      706C6163 
 23091      65454E39 
 23091      5F5F676E 
 23092              	.LASF106:
 23093 6294 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 23093      7431355F 
 23093      5F657863 
 23093      65707469 
 23093      6F6E5F70 
 23094              	.LASF871:
 23095 62c6 776D656D 		.string	"wmemcmp"
 23095      636D7000 
 23096              	.LASF263:
 23097 62ce 6D61785F 		.string	"max_size"
 23097      73697A65 
 23097      00
 23098              	.LASF474:
 23099 62d7 5F5A4E53 		.string	"_ZNSolsEd"
 23099      6F6C7345 
 23099      6400
 23100              	.LASF533:
 23101 62e1 756E6172 		.string	"unary_function"
 23101      795F6675 
 23101      6E637469 
 23101      6F6E00
 23102              	.LASF120:
 23103 62f0 63686172 		.string	"char_traits<char>"
 23103      5F747261 
GAS LISTING /tmp/cceISX6N.s 			page 589


 23103      6974733C 
 23103      63686172 
 23103      3E00
 23104              	.LASF94:
 23105 6302 72617469 		.string	"ratio<1l, 1000000000l>"
 23105      6F3C316C 
 23105      2C203130 
 23105      30303030 
 23105      30303030 
 23106              	.LASF209:
 23107 6319 5F4D5F63 		.string	"_M_check_length"
 23107      6865636B 
 23107      5F6C656E 
 23107      67746800 
 23108              	.LASF497:
 23109 6329 5F416E79 		.string	"_Anything"
 23109      7468696E 
 23109      6700
 23110              	.LASF217:
 23111 6333 5F5A4E53 		.string	"_ZNSs7_M_copyEPcPKcm"
 23111      73375F4D 
 23111      5F636F70 
 23111      79455063 
 23111      504B636D 
 23112              	.LASF275:
 23113 6348 5F5A4E53 		.string	"_ZNSs5clearEv"
 23113      7335636C 
 23113      65617245 
 23113      7600
 23114              	.LASF52:
 23115 6356 5F5A4E53 		.string	"_ZNSt6chrono10time_pointINS_3_V212steady_clockENS_8durationIlSt5ratioILl1ELl1000000000EEE
 23115      74366368 
 23115      726F6E6F 
 23115      31307469 
 23115      6D655F70 
 23116              	.LASF223:
 23117 63ba 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_"
 23117      7331335F 
 23117      535F636F 
 23117      70795F63 
 23117      68617273 
 23118              	.LASF304:
 23119 63fa 5F5A4E53 		.string	"_ZNSs6assignERKSsmm"
 23119      73366173 
 23119      7369676E 
 23119      45524B53 
 23119      736D6D00 
 23120              	.LASF728:
 23121 640e 75696E74 		.string	"uint16_t"
 23121      31365F74 
 23121      00
 23122              	.LASF556:
 23123 6417 5F486561 		.string	"_Head_base"
 23123      645F6261 
 23123      736500
 23124              	.LASF829:
 23125 6422 66707574 		.string	"fputwc"
GAS LISTING /tmp/cceISX6N.s 			page 590


 23125      776300
 23126              	.LASF983:
 23127 6429 746D706E 		.string	"tmpnam"
 23127      616D00
 23128              	.LASF412:
 23129 6430 5F535F72 		.string	"_S_right"
 23129      69676874 
 23129      00
 23130              	.LASF246:
 23131 6439 72626567 		.string	"rbegin"
 23131      696E00
 23132              	.LASF759:
 23133 6440 636C6F63 		.string	"clock_t"
 23133      6B5F7400 
 23134              	.LASF701:
 23135 6448 6C6F6E67 		.string	"long long unsigned int"
 23135      206C6F6E 
 23135      6720756E 
 23135      7369676E 
 23135      65642069 
 23136              	.LASF467:
 23137 645f 6661696C 		.string	"failbit"
 23137      62697400 
 23138              	.LASF872:
 23139 6467 776D656D 		.string	"wmemcpy"
 23139      63707900 
 23140              	.LASF359:
 23141 646f 7266696E 		.string	"rfind"
 23141      6400
 23142              	.LASF329:
 23143 6475 5F5A4E53 		.string	"_ZNSs7replaceEmmmc"
 23143      73377265 
 23143      706C6163 
 23143      65456D6D 
 23143      6D6300
 23144              	.LASF25:
 23145 6488 5F5A4E4B 		.string	"_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEngEv"
 23145      53743663 
 23145      68726F6E 
 23145      6F386475 
 23145      72617469 
 23146              	.LASF590:
 23147 64c1 72656D6F 		.string	"remove_reference<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant
 23147      76655F72 
 23147      65666572 
 23147      656E6365 
 23147      3C556E61 
 23148              	.LASF382:
 23149 6566 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcm"
 23149      53733136 
 23149      66696E64 
 23149      5F6C6173 
 23149      745F6E6F 
 23150              	.LASF134:
 23151 6584 636F7079 		.string	"copy"
 23151      00
 23152              	.LASF269:
GAS LISTING /tmp/cceISX6N.s 			page 591


 23153 6589 5F5A4E53 		.string	"_ZNSs13shrink_to_fitEv"
 23153      73313373 
 23153      6872696E 
 23153      6B5F746F 
 23153      5F666974 
 23154              	.LASF941:
 23155 65a0 73797374 		.string	"system"
 23155      656D00
 23156              	.LASF212:
 23157 65a7 5F5A4E4B 		.string	"_ZNKSs8_M_limitEmm"
 23157      5373385F 
 23157      4D5F6C69 
 23157      6D697445 
 23157      6D6D00
 23158              	.LASF13:
 23159 65ba 6368726F 		.string	"chrono"
 23159      6E6F00
 23160              	.LASF136:
 23161 65c1 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 23161      74313163 
 23161      6861725F 
 23161      74726169 
 23161      74734963 
 23162              	.LASF1039:
 23163 65e3 5F5A3874 		.string	"_Z8timeExecILi10000ESt5_BindIFSt7_Mem_fnIM9UnaryExprI10BinaryExprIS3_IS3_IS3_I8Variable8C
 23163      696D6545 
 23163      78656349 
 23163      4C693130 
 23163      30303045 
 23164              	.LASF656:
 23165 6686 6F706572 		.string	"operator*"
 23165      61746F72 
 23165      2A00
 23166              	.LASF22:
 23167 6690 6F706572 		.string	"operator+"
 23167      61746F72 
 23167      2B00
 23168              	.LASF24:
 23169 669a 6F706572 		.string	"operator-"
 23169      61746F72 
 23169      2D00
 23170              	.LASF219:
 23171 66a4 5F5A4E53 		.string	"_ZNSs7_M_moveEPcPKcm"
 23171      73375F4D 
 23171      5F6D6F76 
 23171      65455063 
 23171      504B636D 
 23172              	.LASF917:
 23173 66b9 6469765F 		.string	"div_t"
 23173      7400
 23174              	.LASF231:
 23175 66bf 5F4D5F6C 		.string	"_M_leak_hard"
 23175      65616B5F 
 23175      68617264 
 23175      00
 23176              	.LASF18:
 23177 66cc 6F706572 		.string	"operator="
GAS LISTING /tmp/cceISX6N.s 			page 592


 23177      61746F72 
 23177      3D00
 23178              	.LASF972:
 23179 66d6 6674656C 		.string	"ftell"
 23179      6C00
 23180              	.LASF43:
 23181 66dc 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEE3maxEv"
 23181      74366368 
 23181      726F6E6F 
 23181      38647572 
 23181      6174696F 
 23182              	.LASF23:
 23183 6716 5F5A4E4B 		.string	"_ZNKSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEpsEv"
 23183      53743663 
 23183      68726F6E 
 23183      6F386475 
 23183      72617469 
 23184              	.LASF7:
 23185 674f 6F706572 		.string	"operator std::integral_constant<bool, true>::value_type"
 23185      61746F72 
 23185      20737464 
 23185      3A3A696E 
 23185      74656772 
 23186              	.LASF753:
 23187 6787 63686172 		.string	"char32_t"
 23187      33325F74 
 23187      00
 23188              	.LASF936:
 23189 6790 72616E64 		.string	"rand"
 23189      00
 23190              	.LASF568:
 23191 6795 5F4D5F74 		.string	"_M_tail"
 23191      61696C00 
 23192              	.LASF198:
 23193 679d 5F5A4E53 		.string	"_ZNSs7_M_dataEPc"
 23193      73375F4D 
 23193      5F646174 
 23193      61455063 
 23193      00
 23194              	.LASF380:
 23195 67ae 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofERKSsm"
 23195      53733136 
 23195      66696E64 
 23195      5F6C6173 
 23195      745F6E6F 
 23196              	.LASF610:
 23197 67cd 6F706572 		.string	"operator|"
 23197      61746F72 
 23197      7C00
 23198              	.LASF387:
 23199 67d7 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSs"
 23199      53733763 
 23199      6F6D7061 
 23199      7265456D 
 23199      6D524B53 
 23200              	.LASF591:
 23201 67ed 72617469 		.string	"ratio<1000l, 1l>"
GAS LISTING /tmp/cceISX6N.s 			page 593


 23201      6F3C3130 
 23201      30306C2C 
 23201      20316C3E 
 23201      00
 23202              	.LASF348:
 23203 67fe 5F5A4E53 		.string	"_ZNSs4swapERSs"
 23203      73347377 
 23203      61704552 
 23203      537300
 23204              	.LASF481:
 23205 680d 5F5A4E53 		.string	"_ZNSo5flushEv"
 23205      6F35666C 
 23205      75736845 
 23205      7600
 23206              	.LASF634:
 23207 681b 6E65775F 		.string	"new_allocator<char>"
 23207      616C6C6F 
 23207      6361746F 
 23207      723C6368 
 23207      61723E00 
 23208              	.LASF85:
 23209 682f 64757261 		.string	"duration_cast<std::chrono::duration<double, std::ratio<1l, 1000l> >, long int, std::ratio
 23209      74696F6E 
 23209      5F636173 
 23209      743C7374 
 23209      643A3A63 
 23210              	.LASF267:
 23211 689c 5F5A4E53 		.string	"_ZNSs6resizeEm"
 23211      73367265 
 23211      73697A65 
 23211      456D00
 23212              	.LASF148:
 23213 68ab 73697A65 		.string	"size_type"
 23213      5F747970 
 23213      6500
 23214              	.LASF518:
 23215 68b5 5F4D656D 		.string	"_MemberPointer"
 23215      62657250 
 23215      6F696E74 
 23215      657200
 23216              	.LASF689:
 23217 68c4 5F5F6E75 		.string	"__numeric_traits_floating<double>"
 23217      6D657269 
 23217      635F7472 
 23217      61697473 
 23217      5F666C6F 
 23218              	.LASF782:
 23219 68e6 46494C45 		.string	"FILE"
 23219      00
 23220              	.LASF187:
 23221 68eb 5F5A4E53 		.string	"_ZNSs4_Rep9_S_createEmmRKSaIcE"
 23221      73345F52 
 23221      6570395F 
 23221      535F6372 
 23221      65617465 
 23222              	.LASF1061:
 23223 690a 5F5F6473 		.string	"__dso_handle"
GAS LISTING /tmp/cceISX6N.s 			page 594


 23223      6F5F6861 
 23223      6E646C65 
 23223      00
 23224              	.LASF296:
 23225 6917 5F5A4E53 		.string	"_ZNSs6appendEPKcm"
 23225      73366170 
 23225      70656E64 
 23225      45504B63 
 23225      6D00
 23226              	.LASF709:
 23227 6929 63686172 		.string	"char"
 23227      00
 23228              	.LASF1103:
 23229 692e 636F7574 		.string	"cout"
 23229      00
 23230              	.LASF652:
 23231 6933 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 23231      5F5F676E 
 23231      755F6378 
 23231      78336469 
 23231      76457878 
 23232              	.LASF1062:
 23233 6948 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb0EE5valueE"
 23233      74313769 
 23233      6E746567 
 23233      72616C5F 
 23233      636F6E73 
 23234              	.LASF567:
 23235 696f 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 23235      7431315F 
 23235      5475706C 
 23235      655F696D 
 23235      706C494C 
 23236              	.LASF1006:
 23237 69f7 556E6172 		.string	"UnaryExpr"
 23237      79457870 
 23237      7200
 23238              	.LASF987:
 23239 6a01 69737763 		.string	"iswctype"
 23239      74797065 
 23239      00
 23240              	.LASF151:
 23241 6a0a 616C6C6F 		.string	"allocator"
 23241      6361746F 
 23241      7200
 23242              	.LASF770:
 23243 6a14 746D5F67 		.string	"tm_gmtoff"
 23243      6D746F66 
 23243      6600
 23244              	.LASF561:
 23245 6a1e 5F554865 		.string	"_UHead"
 23245      616400
 23246              	.LASF93:
 23247 6a25 5F5A4E4B 		.string	"_ZNKSt17integral_constantIlLl1000000000EEcvlEv"
 23247      53743137 
 23247      696E7465 
 23247      6772616C 
GAS LISTING /tmp/cceISX6N.s 			page 595


 23247      5F636F6E 
 23248              	.LASF913:
 23249 6a54 5F41746F 		.string	"_Atomic_word"
 23249      6D69635F 
 23249      776F7264 
 23249      00
 23250              	.LASF850:
 23251 6a61 76777363 		.string	"vwscanf"
 23251      616E6600 
 23252              	.LASF206:
 23253 6a69 5F5A4E53 		.string	"_ZNSs7_M_leakEv"
 23253      73375F4D 
 23253      5F6C6561 
 23253      6B457600 
 23254              	.LASF142:
 23255 6a79 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
 23255      74313163 
 23255      6861725F 
 23255      74726169 
 23255      74734963 
 23256              	.LASF138:
 23257 6aa3 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 23257      74313163 
 23257      6861725F 
 23257      74726169 
 23257      74734963 
 23258              	.LASF40:
 23259 6acb 7A65726F 		.string	"zero"
 23259      00
 23260              	.LASF353:
 23261 6ad0 6765745F 		.string	"get_allocator"
 23261      616C6C6F 
 23261      6361746F 
 23261      7200
 23262              	.LASF741:
 23263 6ade 696E745F 		.string	"int_fast32_t"
 23263      66617374 
 23263      33325F74 
 23263      00
 23264              	.LASF1013:
 23265 6aeb 5F5F7661 		.string	"__val"
 23265      6C00
 23266              	.LASF266:
 23267 6af1 5F5A4E53 		.string	"_ZNSs6resizeEmc"
 23267      73367265 
 23267      73697A65 
 23267      456D6300 
 23268              	.LASF252:
 23269 6b01 63626567 		.string	"cbegin"
 23269      696E00
 23270              	.LASF736:
 23271 6b08 75696E74 		.string	"uint_least16_t"
 23271      5F6C6561 
 23271      73743136 
 23271      5F7400
 23272              	.LASF1067:
 23273 6b17 5F5A4E53 		.string	"_ZNSt17integral_constantIlLl1EE5valueE"
GAS LISTING /tmp/cceISX6N.s 			page 596


 23273      74313769 
 23273      6E746567 
 23273      72616C5F 
 23273      636F6E73 
 23274              	.LASF620:
 23275 6b3e 666F7277 		.string	"forward<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product
 23275      6172643C 
 23275      556E6172 
 23275      79457870 
 23275      723C4269 
 23276              	.LASF283:
 23277 6bda 66726F6E 		.string	"front"
 23277      7400
 23278              	.LASF363:
 23279 6be0 5F5A4E4B 		.string	"_ZNKSs5rfindEcm"
 23279      53733572 
 23279      66696E64 
 23279      45636D00 
 23280              	.LASF309:
 23281 6bf0 696E7365 		.string	"insert"
 23281      727400
 23282              	.LASF538:
 23283 6bf7 5F426F75 		.string	"_BoundArgs"
 23283      6E644172 
 23283      677300
 23284              	.LASF539:
 23285 6c02 5F417267 		.string	"_ArgTypes"
 23285      54797065 
 23285      7300
 23286              	.LASF351:
 23287 6c0c 64617461 		.string	"data"
 23287      00
 23288              	.LASF11:
 23289 6c11 6F706572 		.string	"operator std::integral_constant<long unsigned int, 0ul>::value_type"
 23289      61746F72 
 23289      20737464 
 23289      3A3A696E 
 23289      74656772 
 23290              	.LASF118:
 23291 6c55 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 23291      53743135 
 23291      5F5F6578 
 23291      63657074 
 23291      696F6E5F 
 23292              	.LASF547:
 23293 6c94 5F496E64 		.string	"_Index_tuple<0ul>"
 23293      65785F74 
 23293      75706C65 
 23293      3C30756C 
 23293      3E00
 23294              	.LASF14:
 23295 6ca6 74696D65 		.string	"time_point"
 23295      5F706F69 
 23295      6E7400
 23296              	.LASF837:
 23297 6cb1 6D627274 		.string	"mbrtowc"
 23297      6F776300 
GAS LISTING /tmp/cceISX6N.s 			page 597


 23298              	.LASF374:
 23299 6cb9 66696E64 		.string	"find_first_not_of"
 23299      5F666972 
 23299      73745F6E 
 23299      6F745F6F 
 23299      6600
 23300              	.LASF96:
 23301 6ccb 5F4E756D 		.string	"_Num"
 23301      00
 23302              	.LASF892:
 23303 6cd0 6D6F6E5F 		.string	"mon_decimal_point"
 23303      64656369 
 23303      6D616C5F 
 23303      706F696E 
 23303      7400
 23304              	.LASF224:
 23305 6ce2 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_"
 23305      7331335F 
 23305      535F636F 
 23305      70795F63 
 23305      68617273 
 23306              	.LASF488:
 23307 6d23 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE13_M_widen_initEv"
 23307      53743563 
 23307      74797065 
 23307      49634531 
 23307      335F4D5F 
 23308              	.LASF124:
 23309 6d44 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 23309      74313163 
 23309      6861725F 
 23309      74726169 
 23309      74734963 
 23310              	.LASF797:
 23311 6d64 5F636861 		.string	"_chain"
 23311      696E00
 23312              	.LASF814:
 23313 6d6b 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 23313      64656620 
 23313      5F5F7661 
 23313      5F6C6973 
 23313      745F7461 
 23314              	.LASF922:
 23315 6d8f 5F5F636F 		.string	"__compar_fn_t"
 23315      6D706172 
 23315      5F666E5F 
 23315      7400
 23316              	.LASF1024:
 23317 6d9d 5F5F7374 		.string	"__str"
 23317      7200
 23318              	.LASF593:
 23319 6da3 6F706572 		.string	"operator std::integral_constant<long int, 1000000l>::value_type"
 23319      61746F72 
 23319      20737464 
 23319      3A3A696E 
 23319      74656772 
 23320              	.LASF480:
GAS LISTING /tmp/cceISX6N.s 			page 598


 23321 6de3 666C7573 		.string	"flush"
 23321      6800
 23322              	.LASF958:
 23323 6de9 66706F73 		.string	"fpos_t"
 23323      5F7400
 23324              	.LASF654:
 23325 6df0 5F4D5F63 		.string	"_M_current"
 23325      75727265 
 23325      6E7400
 23326              	.LASF1051:
 23327 6dfb 5832706C 		.string	"X2plus3"
 23327      75733300 
 23328              	.LASF20:
 23329 6e03 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEaSERKS3_"
 23329      74366368 
 23329      726F6E6F 
 23329      38647572 
 23329      6174696F 
 23330              	.LASF376:
 23331 6e3f 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcmm"
 23331      53733137 
 23331      66696E64 
 23331      5F666972 
 23331      73745F6E 
 23332              	.LASF49:
 23333 6e5f 74696D65 		.string	"time_since_epoch"
 23333      5F73696E 
 23333      63655F65 
 23333      706F6368 
 23333      00
 23334              	.LASF291:
 23335 6e70 5F5A4E53 		.string	"_ZNSspLEc"
 23335      73704C45 
 23335      6300
 23336              	.LASF817:
 23337 6e7a 6F766572 		.string	"overflow_arg_area"
 23337      666C6F77 
 23337      5F617267 
 23337      5F617265 
 23337      6100
 23338              	.LASF818:
 23339 6e8c 7265675F 		.string	"reg_save_area"
 23339      73617665 
 23339      5F617265 
 23339      6100
 23340              	.LASF371:
 23341 6e9a 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcmm"
 23341      53733132 
 23341      66696E64 
 23341      5F6C6173 
 23341      745F6F66 
 23342              	.LASF352:
 23343 6eb5 5F5A4E4B 		.string	"_ZNKSs4dataEv"
 23343      53733464 
 23343      61746145 
 23343      7600
 23344              	.LASF341:
GAS LISTING /tmp/cceISX6N.s 			page 599


 23345 6ec3 5F4D5F72 		.string	"_M_replace_safe"
 23345      65706C61 
 23345      63655F73 
 23345      61666500 
 23346              	.LASF949:
 23347 6ed3 73747274 		.string	"strtold"
 23347      6F6C6400 
 23348              	.LASF946:
 23349 6edb 73747274 		.string	"strtoll"
 23349      6F6C6C00 
 23350              	.LASF832:
 23351 6ee3 66777072 		.string	"fwprintf"
 23351      696E7466 
 23351      00
 23352              	.LASF434:
 23353 6eec 5F535F67 		.string	"_S_goodbit"
 23353      6F6F6462 
 23353      697400
 23354              	.LASF1047:
 23355 6ef7 6D61696E 		.string	"main"
 23355      00
 23356              	.LASF112:
 23357 6efc 7E657863 		.string	"~exception_ptr"
 23357      65707469 
 23357      6F6E5F70 
 23357      747200
 23358              	.LASF734:
 23359 6f0b 696E745F 		.string	"int_least64_t"
 23359      6C656173 
 23359      7436345F 
 23359      7400
 23360              	.LASF897:
 23361 6f19 696E745F 		.string	"int_frac_digits"
 23361      66726163 
 23361      5F646967 
 23361      69747300 
 23362              	.LASF41:
 23363 6f29 5F5A4E53 		.string	"_ZNSt6chrono3_V212steady_clock3nowEv"
 23363      74366368 
 23363      726F6E6F 
 23363      335F5632 
 23363      31327374 
 23364              	.LASF625:
 23365 6f4e 656E646C 		.string	"endl<char, std::char_traits<char> >"
 23365      3C636861 
 23365      722C2073 
 23365      74643A3A 
 23365      63686172 
 23366              	.LASF485:
 23367 6f72 77696465 		.string	"widen"
 23367      6E00
 23368              	.LASF398:
 23369 6f78 696E6974 		.string	"initializer_list<char>"
 23369      69616C69 
 23369      7A65725F 
 23369      6C697374 
 23369      3C636861 
GAS LISTING /tmp/cceISX6N.s 			page 600


 23370              	.LASF981:
 23371 6f8f 73657476 		.string	"setvbuf"
 23371      62756600 
 23372              	.LASF424:
 23373 6f97 5F496F73 		.string	"_Ios_Fmtflags"
 23373      5F466D74 
 23373      666C6167 
 23373      7300
 23374              	.LASF486:
 23375 6fa5 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE5widenEc"
 23375      53743563 
 23375      74797065 
 23375      49634535 
 23375      77696465 
 23376              	.LASF905:
 23377 6fbd 696E745F 		.string	"int_p_cs_precedes"
 23377      705F6373 
 23377      5F707265 
 23377      63656465 
 23377      7300
 23378              	.LASF938:
 23379 6fcf 73747274 		.string	"strtod"
 23379      6F6400
 23380              	.LASF170:
 23381 6fd6 5F535F65 		.string	"_S_empty_rep_storage"
 23381      6D707479 
 23381      5F726570 
 23381      5F73746F 
 23381      72616765 
 23382              	.LASF875:
 23383 6feb 77707269 		.string	"wprintf"
 23383      6E746600 
 23384              	.LASF783:
 23385 6ff3 5F494F5F 		.string	"_IO_FILE"
 23385      46494C45 
 23385      00
 23386              	.LASF560:
 23387 6ffc 5F486561 		.string	"_Head_base<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Prod
 23387      645F6261 
 23387      73653C55 
 23387      6E617279 
 23387      45787072 
 23388              	.LASF146:
 23389 70a0 70747264 		.string	"ptrdiff_t"
 23389      6966665F 
 23389      7400
 23390              	.LASF687:
 23391 70aa 5F5F6469 		.string	"__digits10"
 23391      67697473 
 23391      313000
 23392              	.LASF601:
 23393 70b5 5F497465 		.string	"_Iterator"
 23393      7261746F 
 23393      7200
 23394              	.LASF835:
 23395 70bf 67657477 		.string	"getwchar"
 23395      63686172 
GAS LISTING /tmp/cceISX6N.s 			page 601


 23395      00
 23396              	.LASF815:
 23397 70c8 67705F6F 		.string	"gp_offset"
 23397      66667365 
 23397      7400
 23398              	.LASF258:
 23399 70d2 6372656E 		.string	"crend"
 23399      6400
 23400              	.LASF696:
 23401 70d8 5F5F6578 		.string	"__exchange_and_add_single"
 23401      6368616E 
 23401      67655F61 
 23401      6E645F61 
 23401      64645F73 
 23402              	.LASF496:
 23403 70f2 5F5F7573 		.string	"__uses_alloc0"
 23403      65735F61 
 23403      6C6C6F63 
 23403      3000
 23404              	.LASF1048:
 23405 7100 61726763 		.string	"argc"
 23405      00
 23406              	.LASF962:
 23407 7105 66657272 		.string	"ferror"
 23407      6F7200
 23408              	.LASF571:
 23409 710c 5F5A4E53 		.string	"_ZNSt11_Tuple_implILm0EIP9UnaryExprI10BinaryExprIS1_IS1_IS1_I8Variable8Constant7ProductES
 23409      7431315F 
 23409      5475706C 
 23409      655F696D 
 23409      706C494C 
 23410              	.LASF1049:
 23411 718e 61726776 		.string	"argv"
 23411      00
 23412              	.LASF1040:
 23413 7193 41726773 		.string	"Args"
 23413      00
 23414              	.LASF140:
 23415 7198 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 23415      74313163 
 23415      6861725F 
 23415      74726169 
 23415      74734963 
 23416              	.LASF37:
 23417 71bf 5F5A4E53 		.string	"_ZNSt6chrono8durationIlSt5ratioILl1ELl1000000000EEEmLERKl"
 23417      74366368 
 23417      726F6E6F 
 23417      38647572 
 23417      6174696F 
 23418              	.LASF92:
 23419 71f9 6F706572 		.string	"operator std::integral_constant<long int, 1000000000l>::value_type"
 23419      61746F72 
 23419      20737464 
 23419      3A3A696E 
 23419      74656772 
 23420              	.LASF845:
 23421 723c 76667770 		.string	"vfwprintf"
GAS LISTING /tmp/cceISX6N.s 			page 602


 23421      72696E74 
 23421      6600
 23422              	.LASF413:
 23423 7246 5F535F73 		.string	"_S_scientific"
 23423      6369656E 
 23423      74696669 
 23423      6300
 23424              	.LASF725:
 23425 7254 696E7433 		.string	"int32_t"
 23425      325F7400 
 23426              	.LASF542:
 23427 725c 5F486173 		.string	"_Has_result_type"
 23427      5F726573 
 23427      756C745F 
 23427      74797065 
 23427      00
 23428              	.LASF603:
 23429 726d 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 23429      635F696F 
 23429      733C6368 
 23429      61722C20 
 23429      7374643A 
 23430              	.LASF228:
 23431 7296 5F5A4E53 		.string	"_ZNSs10_S_compareEmm"
 23431      7331305F 
 23431      535F636F 
 23431      6D706172 
 23431      65456D6D 
 23432              	.LASF128:
 23433 72ab 6C656E67 		.string	"length"
 23433      746800
 23434              	.LASF739:
 23435 72b2 696E745F 		.string	"int_fast8_t"
 23435      66617374 
 23435      385F7400 
 23436              	.LASF708:
 23437 72be 646F7562 		.string	"double_t"
 23437      6C655F74 
 23437      00
 23438              	.LASF879:
 23439 72c7 77637372 		.string	"wcsrchr"
 23439      63687200 
 23440              	.LASF735:
 23441 72cf 75696E74 		.string	"uint_least8_t"
 23441      5F6C6561 
 23441      7374385F 
 23441      7400
 23442              	.LASF45:
 23443 72dd 5F526570 		.string	"_Rep"
 23443      00
 23444              	.LASF1027:
 23445 72e2 5F526571 		.string	"_Req"
 23445      00
 23446              	.LASF537:
 23447 72e7 5F526573 		.string	"_Res"
 23447      00
 23448              	.LASF451:
GAS LISTING /tmp/cceISX6N.s 			page 603


 23449 72ec 66697865 		.string	"fixed"
 23449      6400
 23450              	.LASF830:
 23451 72f2 66707574 		.string	"fputws"
 23451      777300
 23452              	.LASF1095:
 23453 72f9 5F5F6378 		.string	"__cxa_atexit"
 23453      615F6174 
 23453      65786974 
 23453      00
 23454              	.LASF598:
 23455 7306 69746572 		.string	"iterator_traits<char*>"
 23455      61746F72 
 23455      5F747261 
 23455      6974733C 
 23455      63686172 
 23456              	.LASF238:
 23457 731d 5F5A4E53 		.string	"_ZNSsaSEc"
 23457      73615345 
 23457      6300
 23458              	.LASF825:
 23459 7327 6D627374 		.string	"mbstate_t"
 23459      6174655F 
 23459      7400
 23460              	.LASF819:
 23461 7331 77696E74 		.string	"wint_t"
 23461      5F7400
 23462              	.LASF986:
 23463 7338 77637472 		.string	"wctrans_t"
 23463      616E735F 
 23463      7400
 23464              	.LASF1098:
 23465 7342 2F686F6D 		.string	"/home/adam/workspace/aisdi/src/exp_templates"
 23465      652F6164 
 23465      616D2F77 
 23465      6F726B73 
 23465      70616365 
 23466              	.LASF711:
 23467 736f 6576616C 		.string	"eval"
 23467      00
 23468              	.LASF17:
 23469 7374 7E647572 		.string	"~duration"
 23469      6174696F 
 23469      6E00
 23470              	.LASF303:
 23471 737e 5F5A4E53 		.string	"_ZNSs6assignEOSs"
 23471      73366173 
 23471      7369676E 
 23471      454F5373 
 23471      00
 23472              	.LASF699:
 23473 738f 756E7369 		.string	"unsigned int"
 23473      676E6564 
 23473      20696E74 
 23473      00
 23474              	.LASF163:
 23475 739c 72657665 		.string	"reverse_iterator"
GAS LISTING /tmp/cceISX6N.s 			page 604


 23475      7273655F 
 23475      69746572 
 23475      61746F72 
 23475      00
 23476              	.LASF928:
 23477 73ad 62736561 		.string	"bsearch"
 23477      72636800 
 23478              	.LASF236:
 23479 73b5 5F5A4E53 		.string	"_ZNSsaSERKSs"
 23479      73615345 
 23479      524B5373 
 23479      00
 23480              	.LASF581:
 23481 73c2 7475706C 		.string	"tuple<UnaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<BinaryExpr<Variable, Constant, Product>,
 23481      653C556E 
 23481      61727945 
 23481      7870723C 
 23481      42696E61 
 23482              		.hidden	__dso_handle
 23483              		.ident	"GCC: (Ubuntu/Linaro 4.8.1-10ubuntu9) 4.8.1"
 23484              		.section	.note.GNU-stack,"",@progbits
